{"version":3,"sources":["asserts/logo_white copy.png","components/Tabs/tabs.module.css","redux/features/sidebarSlice.js","components/Dashboard/Admin/DashboardLayout/DashboardContent.jsx","components/Dashboard/Admin/Charts.jsx","components/Dashboard/Admin/Cards/RevenueIn.jsx","components/Dashboard/Admin/Cards/RevenueOut.jsx","components/Dashboard/Admin/Cards/NewCustomer.jsx","components/Dashboard/Admin/Cards/LostCustomer.jsx","components/Dashboard/Admin/Map.jsx","components/Dashboard/Admin/NewAccounts.jsx","components/Dashboard/Admin/EmpOversite.jsx","components/Dashboard/Admin/DashboardLayout/Widget.jsx","asserts/login_light.png","asserts/signup_light.png","reducers/profile.js","reducers/errors.js","reducers/messages.js","reducers/auth.js","reducers/data.js","redux/features/tabSlice.js","redux/features/searchTabSlice.js","redux/features/favoriteSlice.js","reducers/index.js","actions/types.js","store.js","actions/messages.js","actions/auth.js","context/useToggle.jsx","styles/styles.jsx","actions/data.js","components/Navbars/NavbarResponsive.jsx","components/Navbars/Navbar.jsx","components/Chat/Chat.jsx","components/Dashboard/Calender.jsx","components/Tasks/ViewTasks.jsx","components/Favorite/Favorites.jsx","components/Navbars/DrawerComp.jsx","components/Navbars/NavbarSec.jsx","components/Sidebar/TestingSidebar.jsx","components/Sidebar/Sidebar.jsx","components/Footer/Footer.jsx","hocs/Layout.js","utils/PrivateRoute.js","context/User/reducer.js","context/User/index.js","hocs/Theme.js","components/Dashboard/Admin/DashBoard.jsx","components/Tabs/Tabs.jsx","components/Invoice/CreateInvoice.jsx","components/Invoice/Payment.jsx","components/Invoice/Filters.jsx","components/Invoice/InvoiceList.jsx","components/Invoice/index.jsx","api/MatterApi.js","utils/ActionAlerts.js","components/Matter/MatterList.jsx","components/Matter/Cards.jsx","components/Matter/Calendar.jsx","components/Matter/Filters.jsx","components/Matter/MatterCards.jsx","components/Matter/MatterListLong.jsx","components/Matter/NewMatter.jsx","components/Matter/MatterDetail.jsx","components/Matter/index.jsx","components/Ledger/LedgerActivity.jsx","components/Ledger/Fillters.jsx","components/Ledger/LedgerCards.jsx","components/Ledger/LedgerTImeList.jsx","components/Ledger/LedgerDashbard.jsx","components/Ledger/LedgerDoc.jsx","components/Ledger/Time.jsx","components/Ledger/index.jsx","components/Category/SubCategory.jsx","components/Category/Category.jsx","components/Category/Classification.jsx","components/Category/ManageCategory.jsx","components/Contact/Contact.jsx","components/Profile/Profile.js","components/Tasks/CreateTask.jsx","components/Tasks/index.jsx","components/Dashboard/UserRoles/AdminDashboard.jsx","components/Dashboard/ProgressBar.jsx","components/Dashboard/Tasks.jsx","components/Dashboard/Cards.jsx","components/Dashboard/Client/DashBoard.jsx","components/Template/Templates.jsx","components/Dashboard/UserRoles/ClientDashboard.jsx","components/Dashboard/Lawyer/Chart.jsx","components/Dashboard/Lawyer/DashBoard.jsx","components/Dashboard/UserRoles/LawyerDashboard.jsx","components/Dashboard/Firm/Charts.jsx","components/Dashboard/Firm/DashBoard.jsx","components/Dashboard/UserRoles/FirmDashboard.jsx","containers/Home.js","containers/Auth/Login.js","containers/Auth/Signup.js","components/Profile/Company.jsx","containers/Matters/Matters.jsx","components/User/ManageUser.jsx","components/User/ManageUserGroup.jsx","components/User/RoleFuncions.jsx","components/User/UserRole.jsx","components/User/index.jsx","components/Ledger/TimeList.jsx","components/Employee/Search.jsx","components/Employee/Result.jsx","components/Employee/Saved.jsx","components/Employee/index.jsx","App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","tabs","current","content","d","__webpack_exports__","hideSidebar","showSidebar","revenueInActive","revenueOutActive","newCustomerActive","lostCustomerActive","newAccountActive","appointmentActive","marketingActive","empOversiteActive","emailsActive","callsActive","mapActive","_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__","sidebarSlice","createSlice","name","initialState","revenueIn","revenueOut","newCustomer","lostCustomer","newAccount","appointment","marketing","empOversite","emails","calls","map","display","reducers","isDisplay","state","actions","originalItems","initialLayouts","lg","i","x","y","w","h","md","sm","xs","xxs","withSize","refreshMode","refreshRate","_ref","width","size","sidebar","useSelector","dispatch","useDispatch","components","a","b","c","e","f","g","j","k","fnCall","_useState","useState","_useState2","Object","_home_supersis03_Projects_Dextera_Phase_3_dextera_project_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","items","_useState3","key","ls","global","localStorage","JSON","parse","getItem","getFromLS","_useState4","layouts","setLayouts","onRemoveItem","itemId","displayItemList","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","data-grid","Infinity","style","_Widget__WEBPACK_IMPORTED_MODULE_8__","id","backgroundColor","useEffect","Fragment","react_grid_layout__WEBPACK_IMPORTED_MODULE_4__","breakpoints","cols","rowHeight","onLayoutChange","_","allLayouts","Appointments","options","chart","type","height","series","data","fillColor","strokeColor","plotOptions","bar","barHeight","borderRadius","horizontal","dataLabels","position","enabled","title","text","fontSize","fontWeight","color","xaxis","react_default","react","Box","react_apexcharts_min_default","Marketing","config","toolbar","show","legend","horizontalAlign","onItemHover","highlightDataSeries","labels","colors","useSeriesColors","stroke","curve","align","categories","yaxis","Calls","radialBar","lable","value","total","formatter","floating","onItemClick","toggleDataSeries","seriesName","opts","globals","seriesIndex","Email","connect","isWeekly","Grid","container","item","Typography","sx","gutterBottom","variant","mt","component","react_number_format_es","amount","displayType","thousandSeparator","prefix","slicedToArray","dateValue","setDateValue","listStyleType","LocalizationProvider","dateAdapter","AdapterDateFns","DateRangePicker","startText","endText","onChange","newValue","renderInput","startProps","endProps","TextField","assign","mx","mapboxgl","workerClass","MapboxWorker","Map","latitude","longitude","zoom","viewport","setViewport","esm","mapStyle","MAP_STYLE","onViewportChange","mapboxApiAccessToken","zIndex","offsetLeft","offsetTop","Circle","NewAccounts","TableContainer","Table","fullWidth","TableHead","TableRow","TableCell","TableBody","EmpOversite","Widget","widgetNames","RevenueIn","RevenueOut","NewCustomer","LostCustomer","Admin_NewAccounts","Admin_Map","Admin_EmpOversite","Charts_Calls","Charts_Appointments","Charts_Marketing","Charts_Email","Card","paddingTop","padding","CardActions","IconButton","aria-label","onClick","right","Close_default","profile","msg","status","token","isAuthenticated","isLoading","user","tabSlice","addTab","action","newTask","payload","tab","push","removeTab","filter","reset","newTabSlice","addNewTab","removeNewTab","removeLastNewTab","pop","resetNewTab","favoriteSlice","addFav","newFav","page","favorite","length","isAvailable","removeFav","combineReducers","auth","arguments","undefined","objectSpread","setItem","removeItem","errors","messages","newTabs","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","persistor","persistStore","returnErrors","logout","getState","axios","post","concat","process","tokenConfig","then","res","headers","Content-Type","useToggle","isToggled","setIsToggled","useCallback","SideBarBtn","styled","Button","theme","textTransform","textAlign","margin","borderColor","&:hover","palette","primary","main","&:visited","SecNavbar","_ref2","boxShadow","overflow","FooterBar","_ref3","bottom","left","alignContent","FooterLink","Link","_ref4","fontFamily","textDecoration","marginTop","FooterButton","_ref5","marginX","paddingX","LinkButton","_ref6","cursor","Search","_ref7","marginRight","spacing","marginLeft","SearchIconWrapper","_ref8","pointerEvents","alignItems","justifyContent","StyledInputBase","InputBase","_ref9","& .MuiInputBase-input","defineProperty","paddingLeft","transition","transitions","create","up","MainSearch","_ref10","MainSearchIconWrapper","_ref12","StyledMainInputBase","_ref13","updateIsWeekly","NavbarResponsive","Intl","DateTimeFormat","resolvedOptions","timeZone","Date","currentTime","_useState5","_useState6","timeFormater","checked","toLocaleTimeString","hour","minute","hour12","_useToggle","_useToggle2","_useState7","_useState8","settingAcnchorEl","_useState9","Boolean","_useState10","_React$useState","React","_React$useState2","anchorEl","_React$useState3","_React$useState4","setChecked","handleChange","event","target","handleOnChage","_useState11","_useState12","openDrawer","setOpenDrawer","noWrap","react_router_dom","to","src","Logo","alt","Switch","defaultChecked","inputProps","transform","float","Menu_default","Drawer","anchor","open","onClose","List","ListItemButton","ListItemIcon","Search_default","placeholder","Select","labelId","label","MenuItem","Navbar","isTabletOrMobile","useMediaQuery","query","redirect","flexGrow","AppBar","border","Toolbar","Navbars_NavbarResponsive","ml","mr","react_router","ChatHistory","Chip","avatar","Avatar","Chatting","Chat_ChatHistory","& .MuiTextField-root","m","endIcon","Send_default","Calender","setValue","tasks","Paper","StaticDatePicker","orientation","openTo","shouldDisableDate","isWeekend","params","task","ViewTasks","Divider","my","Favorites","ListItem","disablePadding","Star","ListItemText","NavBarSecResponsive","openFav","setOpenFav","handleCloseFav","openCal","setOpenCal","handleCloseCal","openChat","setOpenChat","handleCloseChat","useHistory","username","is_firm","is_lawyer","is_client","setLocalUser","setRedirect","_useState13","_useState14","setSettingAcnchorEl","_useState15","_useState16","settingAcnchorEl2","setSettingAcnchorEl2","openSetting2","openSetting","handleClose2","handleClose","_useState17","_useState18","anchorOrigin","vertical","Message","Dialog","Validate","aria-labelledby","aria-describedby","DialogTitle","DialogContent","Chat","DialogActions","pathname","EmailRounded","CalendarToday","maxWidth","Dashboard_Calender","aria-controls","aria-expanded","aria-haspopup","currentTarget","CheckBox","Menu_Menu","MenuListProps","TransitionComponent","Fade","Favorite_Favorites","autoFocus","Settings","console","log","NotificationAdd","NavbarSec","localuser","handleLogout","handleClick","DrawerComp_NavBarSecResponsive","Person","Controls","px","AddCircle","Receipt","FileCopy","MoneyOff","esm_Task","Work","AssignmentTurnedIn","Mail","HumanResources","Group","RevenueControls","AccountControls","EmployeeOversite","Phone","accordionData","tiles","TestingSidebar_Controls","TestingSidebar_HumanResources","TestingSidebar_RevenueControls","TestingSidebar_AccountControls","TestingSidebar_Marketing","TestingSidebar_EmployeeOversite","TestingSidebar","accordions","updateAccordions","react_beautiful_dnd_esm","onDragEnd","result","destination","Array","from","_items$splice","splice","source","index","reorderedItem","droppableId","provided","droppableProps","ref","innerRef","draggableId","Accordion","draggableProps","dragHandleProps","AccordionSummary","expandIcon","ExpandMore_default","AccordionDetails","Stack","elevation","overflowY","Sidebar_TestingSidebar","Footer","setOpen","handleClickOpen","children","isDesktopOrLaptop","useTheme","isBigScreen","sidebarToggle","drawerOpen","setDrawerOpen","openPopover","handleSidebarToggle","descriptionElementRef","useRef","descriptionElement","focus","contianer","rowSpacing","columnSpacing","Navbars_NavbarSec","Navbars_Navbar","direction","wrap","components_Sidebar_Sidebar","top","components_Footer_Footer","Fab","Report","esm_Chat","Popover","transformOrigin","rest","objectWithoutProperties","active","UserContext","createContext","UserProvider","_React$useReducer","useReducer","_React$useReducer2","Provider","createTheme","mode","error","warning","success","contrastThreshold","tonalOffset","typography","htmlFontSize","DashBoard","DashboardContent","Tabs","props","activeTab","setActiveTab","styles","startIcon","MoreVert","newActiveTab","preventDefault","one","CreateInvoice","approvel","setApprovel","matter","contact","billable","date_range","create_date","due_date","template","invoice_no","discount","submit","invoiceData","setInvoiceData","dateRange","setDateRange","onSubmit","autoComplete","FormControlLabel","control","Checkbox","varient","LocalizationProvider_LocalizationProvider","DateRangePicker_DateRangePicker","calendars","InputLabelProps","shrink","PaymentPlan","payment_no","due","late_fee","total_due","payment","posted","method","paymentData","mb","paddingInline","InvoicePayment","tax","interest","time","hard","soft","Payment","isPlan","setIsPlan","payment_type","date","retainer","menu","bank_account","payment_method","FormControl","RadioGroup","row","defaultValue","Radio","InputLabel","Payment_PaymentPlan","Payment_InvoicePayment","Filters","invoiceToggle","setInvoiceToggle","_useToggle3","_useToggle4","paymentToggle","setPaymentToggle","_useToggle5","_useToggle6","paid","setPaid","age","setAge","& .MuiFormControl-root","DialogContentText","Invoice_CreateInvoice","Invoice_Payment","styles_Search","styles_SearchIconWrapper","styles_StyledInputBase","InvoiceList","Invoice_Filters","Index","Invoice_InvoiceList","CONFIG","Accept","ActionAlerts","Alert","severity","TotalDays","date1","date2","dt1","dt2","Math","floor","UTC","getFullYear","getMonth","getDate","GetDate","MatterList","setTasks","setStatus","setLoading","redTask","setRedTask","greenTask","setGreenTask","yellowTask","setYellowTask","myTask","setMyTask","get","statusText","catch","err","FormGroup","Cards","minWidth","CardContent","Calendar","Box_Box","MatterCards","bgcolor","MatterListLong","setMatters","NewMatter","mask","openDate","setOpenDate","whenDate","setWhenDate","closeDate","setCloseDate","totalDays","setTotalDays","matter_name","matter_type","matter_source","matter_status","assign_to","assign_by","billing_rate","alerts","jurisdiction","status_limitaion","opposing_counsel","where","involved","witnesses","narrative","matterData","setMatterData","days","open_date","close_date","when","total_days","body","stringify","ActionAlerts_ActionAlerts","message","min","disabled","step","DatePicker","inputFormat","multiline","rows","Save_default","MatterTask","Activities","MatterDetail","MatterDetail_Activities","MatterDetail_MatterTask","MatterDetail_Cards","Matters","Matter_Filters","Matter_MatterCards","Matter_MatterListLong","MatterDashboard","Matter_MatterList","Matter_Calendar","Matter_Cards","components_Tabs_Tabs","Matter_MatterDashboard","Matter_Matters","Matter_NewMatter","Matter_MatterDetail","LedgerActivity","setActivityData","bgColor","Fillters","billedby","setBilledby","setFilter","LedgerCards","decimalScale","fixedDecimalScale","LedgerTImeList","setLedgerData","LegderDashbard","Ledger_LedgerCards","Ledger_Fillters","Ledger_LedgerTImeList","LedgerDoc","minHeight","Time","pickDate","setPickDate","timeToggle","setTimeToggle","setBillable","setTime","category","sub_category","unit","qty","rate","file","detail","bill_by","note","timeData","setTimeData","labelPlacement","FormLabel","format","customInput","onValueChange","LedgerDashbard","Ledger_LedgerActivity","Ledger_LedgerDoc","Ledger_Time","SubCategory","subCategory","setSubCategory","loading","formData","setFormData","FetchData","handleSubmit","required","delete","Clear_default","Category","setCategory","setError","Classification","classification","setClassification","ManageCategory","components_Category_Category","Category_SubCategory","Category_Classification","Contact","_React$createElement","_React$createElement2","_React$createElement3","_React$createElement4","clientNo","setClientNo","dob","setDob","ssn","setSsn","mobileNo","setMobileNo","homeNo","setHomeNo","officeNo","setOfficeNo","faxNo","setFaxNo","otherNo","setOtherNo","zip","setZip","_useState19","_useState20","plus4","setPlus4","_useState21","_useState22","zip2","setZip2","_useState23","_useState24","plus42","setPlus42","_useState25","company_name","website","ger_email","billing_email","street","suite","city","f_name","l_name","email_1","email_2","email_3","street2","suite2","city2","state2","office","team","member","relation","_useState26","contactData","setContactData","persist","thousandsGroupStyle","autoWidth","gradYear","setGradYear","barDate","setBarDate","underGradYear","setUnderGradYear","phoneNo","setPhoneNo","barNo","setBarNo","practiceTime","setPracticeTime","longestTenure","setLongestTenure","averageTenure","setAverageTenure","currentTenure","setCurrentTenure","email","mobile","phone","language","locate","search_active","law_school","grad_year","bar_admit_date","undergrad_school","undergrad_area","undergrad_year","bar_no","admitted_practice","practice_time","longest_tenure","average_tenure","current_tenure","past_bar_companies_no","primary_area","TabContext","patch","borderBottom","TabList","Tab","TabPanel","KeyboardArrowRight_default","CreateTask","dueDate","setDueDate","bill","setBill","isPrivate","setIsPrivate","setFile","matter_id","matter_contact","filename","taskData","setTaskData","& .MuiSelect-root","due_at","is_billable","is_private","Tasks_ViewTasks","Tasks_CreateTask","Invoice","Matter","Ledger","Category_ManageCategory","components_Contact_Contact","components_Profile_Profile","Tasks","invoice","ledger","AdminDashboard","tabList","newTabList","wordEntered","setWordEntered","handleChangeSearch","addSearchTab","setTimeout","displayNewTabsName","handleRemoveNewTab","displayTabsName","handleRemoveTab","displaySearchTabs","noValidate"," & .MuiOutlinedInput-notchedOutline","renderTabs","Tabs_Tabs","scrollButtons","allowScrollButtonsMobilearia-label","icon","iconPosition","Add_default","Admin_DashBoard","ProgressBar","progress","paddingRight","LinearProgress","randomDate","start","end","getDateTime","getTime","random","toLocaleDateString","getHours","getMinutes","Task","LawyerCards","postfix","FirmCards","CustomerCards","Cards_CustomerCards","Dashboard_Tasks","Dashboard_ProgressBar","Templates","ClientDashboard","Client_DashBoard","Template_Templates","PieChart","pie","donut","val","dropShadow","Chart2","startAngle","endAngle","track","background","hollow","fill","gradient","shade","gradientToColors","stops","BarChart","stacked","tooltip","opacity","offsetX","Cards_LawyerCards","Chart_PieChart","Chart_Chart2","Chart_BarChart","LawyerDashboard","Lawyer_DashBoard","Chart","BarChart2","columnWidth","distributed","BarChart3","textAnchor","opt","dataPointIndex","Cards_FirmCards","Charts_Chart2","Charts_Chart","Charts_BarChart","Charts_BarChart2","Charts_BarChart3","FirmDashboard","Firm_DashBoard","UserRoles_AdminDashboard","UserRoles_FirmDashboard","UserRoles_LawyerDashboard","UserRoles_ClientDashboard","dashboardRedirect","login","password","response","LoginSuccess","backgroundImage","BackgroundImage","backgroundRepeat","t","grey","backgroundSize","backgroundPosition","square","flexDirection","LockOutlined_default","minLength","register","accountCreated","setAccountCreated","isFirm","setIsFirm","first_name","last_name","re_password","Company","m_name","c_email","role","time_zone","group","job_title","ext","home","work_no","phone_ext","userData","setUserData","p_email","& .MuiButton-root","ManageUser","isActive","setIsActive","roles","setRoles","setRole","setGroup","groups","setGroups","loading2","setLoading2","rate_type","select","ManageUserGroup","setLoadingUser","RoleFuncions","overflowX","UserRole","User_RoleFuncions","User_ManageUser","User_ManageUserGroup","User_UserRole","TimeList","practice_area","undergrad_study","lamguages","admitted_state","relocate","searchData","setSearchData","Result","Saved","pickTime","setPickTime","bar_adm_year","mail_add","link","notes","jobData","setJobData","TimePicker","Employee_Search","Employee_Result","Employee_Saved","App","es","integration_react","User_UserProvider","ThemeProvider","react_alert","AlertTemplate","timeout","Layout","path","Login","Signup","PrivateRoute","exact","Home","Profile","User","Employee","ReactDOM","render","StrictMode","CssBaseline","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e65af9ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white copy.aa470428.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"tabs_tabs__2iP2q\",\"current\":\"tabs_current__UH0Eq\",\"content\":\"tabs_content__Vh0J0\"};","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  revenueIn: true,\n  revenueOut: true,\n  newCustomer: true,\n  lostCustomer: true,\n  newAccount: true,\n  appointment: true,\n  marketing: true,\n  empOversite: true,\n  emails: true,\n  calls: true,\n  map: true,\n  display: true,\n};\n\nconst sidebarSlice = createSlice({\n  name: \"sidebar\",\n  initialState,\n  reducers: {\n    isDisplay: (state) => {\n      state.display = !state.display;\n    },\n    hideSidebar: (state) => {\n      state.display = false;\n    },\n    showSidebar: (state) => {\n      state.display = true;\n    },\n    // manageRoleActive: (state) => {\n    //   state.manageRole = !state.manageRole;\n    // },\n    // manageUserActive: (state) => {\n    //   state.manageUser = !state.manageUser;\n    // },\n    // manageGroupActive: (state) => {\n    //   state.manageGroup = !state.manageGroup;\n    // },\n    revenueInActive: (state) => {\n      state.revenueIn = !state.revenueIn;\n    },\n    revenueOutActive: (state) => {\n      state.revenueOut = !state.revenueOut;\n    },\n    newCustomerActive: (state) => {\n      state.newCustomer = !state.newCustomer;\n    },\n    lostCustomerActive: (state) => {\n      state.lostCustomer = !state.lostCustomer;\n    },\n    newAccountActive: (state) => {\n      state.newAccount = !state.newAccount;\n    },\n    appointmentActive: (state) => {\n      state.appointment = !state.appointment;\n    },\n    marketingActive: (state) => {\n      state.marketing = !state.marketing;\n    },\n    empOversiteActive: (state) => {\n      state.empOversite = !state.empOversite;\n    },\n    emailsActive: (state) => {\n      state.emails = !state.emails;\n    },\n    callsActive: (state) => {\n      state.calls = !state.calls;\n    },\n    mapActive: (state) => {\n      state.map = !state.map;\n    },\n  },\n});\n\nexport const {\n  isDisplay,\n  // manageRoleActive,\n  // manageGroupActive,\n  // manageUserActive,\n  hideSidebar,\n  showSidebar,\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} = sidebarSlice.actions;\nexport default sidebarSlice.reducer;\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { Responsive as ResponsiveGridLayout } from \"react-grid-layout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withSize } from \"react-sizeme\";\n\nimport {\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} from \"../../../../redux/features/sidebarSlice\";\n\nimport Widget from \"./Widget\";\n\nconst originalItems = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\"];\n\nconst initialLayouts = {\n  lg: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  md: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  sm: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  xs: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 3 },\n    { i: \"b\", x: 0, y: 4, w: 2, h: 3 },\n    { i: \"c\", x: 0, y: 8, w: 4, h: 6 },\n    { i: \"d\", x: 0, y: 12, w: 4, h: 6 },\n\n    { i: \"e\", x: 0, y: 18, w: 5, h: 6 },\n    { i: \"f\", x: 0, y: 24, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 30, w: 3, h: 4 },\n    { i: \"h\", x: 0, y: 36, w: 3, h: 4 },\n    { i: \"i\", x: 0, y: 42, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 48, w: 8, h: 5 },\n    { i: \"k\", x: 0, y: 53, w: 4, h: 5 },\n  ],\n  xxs: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 3 },\n    { i: \"b\", x: 0, y: 4, w: 2, h: 3 },\n    { i: \"c\", x: 0, y: 8, w: 4, h: 6 },\n    { i: \"d\", x: 0, y: 12, w: 4, h: 6 },\n\n    { i: \"e\", x: 0, y: 18, w: 5, h: 6 },\n    { i: \"f\", x: 0, y: 24, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 30, w: 3, h: 4 },\n    { i: \"h\", x: 0, y: 36, w: 3, h: 4 },\n    { i: \"i\", x: 0, y: 42, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 48, w: 8, h: 5 },\n    { i: \"k\", x: 0, y: 53, w: 4, h: 4 },\n  ],\n};\n\nfunction Content({ size: { width } }) {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  const components = {\n    a: sidebar.revenueIn,\n    b: sidebar.revenueOut,\n    c: sidebar.newCustomer,\n    d: sidebar.lostCustomer,\n    e: sidebar.newAccount,\n    f: sidebar.map,\n    g: sidebar.empOversite,\n    h: sidebar.calls,\n    i: sidebar.appointment,\n    j: sidebar.marketing,\n    k: sidebar.emails,\n  };\n  const fnCall = {\n    a: revenueInActive(),\n    b: revenueOutActive(),\n    c: newCustomerActive(),\n    d: lostCustomerActive(),\n    e: newAccountActive(),\n    f: mapActive(),\n    g: empOversiteActive(),\n    h: callsActive(),\n    i: appointmentActive(),\n    j: marketingActive(),\n    k: emailsActive(),\n  };\n  const [items, setItems] = useState(originalItems);\n  const [layouts, setLayouts] = useState(\n    getFromLS(\"layouts\") || initialLayouts,\n  );\n  const onLayoutChange = (_, allLayouts) => {\n    setLayouts(allLayouts);\n  };\n  const onLayoutSave = () => {\n    saveToLS(\"layouts\", layouts);\n  };\n  const onRemoveItem = (itemId) => {\n    // setItems(items.filter((i) => i !== itemId));\n    dispatch(fnCall[itemId]);\n  };\n  const onAddItem = (itemId) => {\n    setItems([...items, itemId]);\n    dispatch(fnCall[itemId]);\n  };\n  const displayItemList = () => {\n    return items.map((key) => (\n      <div\n        key={key}\n        className=\"widget\"\n        data-grid={{ w: 3, h: 2, x: 0, y: Infinity }}\n        style={components[key] ? { display: \"block\" } : { display: \"none\" }}\n      >\n        <Widget\n          id={key}\n          onRemoveItem={onRemoveItem}\n          backgroundColor=\"#867ae9\"\n        />\n      </div>\n    ));\n  };\n  useEffect(() => {\n    displayItemList();\n  }, [sidebar]);\n\n  return (\n    <>\n      <ResponsiveGridLayout\n        className=\"layout\"\n        layouts={layouts}\n        breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n        cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n        rowHeight={60}\n        width={width}\n        onLayoutChange={onLayoutChange}\n      >\n        {displayItemList()}\n      </ResponsiveGridLayout>\n    </>\n  );\n}\n\nexport default withSize({ refreshMode: \"debounce\", refreshRate: 60 })(Content);\n\nfunction getFromLS(key) {\n  let ls = {};\n  if (global.localStorage) {\n    try {\n      ls = JSON.parse(global.localStorage.getItem(\"rgl-8\")) || {};\n    } catch (e) {}\n  }\n  return ls[key];\n}\n\nfunction saveToLS(key, value) {\n  if (global.localStorage) {\n    global.localStorage.setItem(\n      \"rgl-8\",\n      JSON.stringify({\n        [key]: value,\n      }),\n    );\n  }\n}\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { Box } from \"@mui/material\";\n// import NumberFormat from \"react-number-format\";\n\nexport const Appointments = () => {\n  const options = {\n    chart: {\n      type: \"bar\",\n      height: 500,\n    },\n    series: [\n      {\n        data: [\n          {\n            x: \"Zoom\",\n            y: 150,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Phone\",\n            y: 250,\n            fillColor: \"#546E7A\",\n            strokeColor: \"#546E7A\",\n          },\n          {\n            x: \"In Person\",\n            y: 500,\n            fillColor: \"#f48024\",\n            strokeColor: \"#f48024\",\n          },\n          {\n            x: \"Met\",\n            y: 300,\n            fillColor: \"#13d8aa\",\n            strokeColor: \"#13d8aa\",\n          },\n          {\n            x: \"Rescheduled\",\n            y: 125,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Canceled\",\n            y: 30,\n            fillColor: \"#A5978B\",\n            strokeColor: \"#A5978B\",\n          },\n        ],\n      },\n    ],\n\n    options: {\n      plotOptions: {\n        bar: {\n          barHeight: \"50%\",\n          borderRadius: 4,\n\n          horizontal: true,\n          dataLabels: {\n            position: \"bottom\",\n          },\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      title: {\n        text: \"Appointments\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n    },\n    xaxis: {\n      style: {\n        fontSize: \"20px\",\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={options.options}\n          series={options.series}\n          height=\"300\"\n          type=\"bar\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\nexport const Marketing = () => {\n  const config = {\n    series: [\n      {\n        name: \"Google\",\n        data: [10, 51, 35, 41, 29, 62, 99, 41, 18],\n      },\n      {\n        name: \"Youtube\",\n        data: [10, 80, 35, 41, 99, 62, 79, 21, 68],\n      },\n      {\n        name: \"Website\",\n        data: [60, 21, 45, 41, 89, 62, 59, 71, 98],\n      },\n    ],\n    options: {\n      chart: {\n        height: 250,\n        toolbar: {\n          show: false,\n        },\n      },\n\n      legend: {\n        position: \"top\",\n        horizontalAlign: \"right\",\n        onItemHover: {\n          highlightDataSeries: true,\n        },\n        labels: {\n          colors: \"#dddddd\",\n          useSeriesColors: true,\n        },\n      },\n\n      dataLabels: {\n        enabled: false,\n      },\n\n      stroke: {\n        curve: \"smooth\",\n        width: 2,\n      },\n\n      title: {\n        text: \"Marketing\",\n        align: \"left\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      xaxis: {\n        categories: [\n          \"31/01\",\n          \"01/02\",\n          \"02/03\",\n          \"03/04\",\n          \"31/05\",\n          \"04/06\",\n          \"06/07\",\n          \"02/08\",\n          \"09/09\",\n        ],\n        style: {\n          fontSize: \"20px\",\n        },\n      },\n\n      yaxis: {},\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={config.options}\n        series={config.series}\n        height=\"250\"\n        type=\"line\"\n      />\n    </Fragment>\n  );\n};\nexport const Calls = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 300,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Calls\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Inbound\", \"Outbound\", \"Sales\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const Email = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total Emails\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Email\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Send\", \"Open\", \"Delete\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueInActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueInCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 460;\n      case \"weekly\":\n        return 3254;\n      case \"monthly\":\n        return 32564;\n      case \"quarterly\":\n        return 130256;\n      case \"yearly\":\n        return 521024;\n      case \"range\":\n        return 1500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue In\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueInCards);\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueOutActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueOutCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 35;\n      case \"weekly\":\n        return 240;\n      case \"monthly\":\n        return 4520;\n      case \"quarterly\":\n        return 18080;\n      case \"yearly\":\n        return 72320;\n      case \"range\":\n        return 500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue out\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueOutCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { newCustomerActive } from \"../../../../redux/features/sidebarSlice\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const NewCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 2;\n      case \"weekly\":\n        return 23;\n      case \"monthly\":\n        return 69;\n      case \"quarterly\":\n        return 200;\n      case \"yearly\":\n        return 610;\n      case \"range\":\n        return 10;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              New Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 23 : 69}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={23}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={69}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={15}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={50}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={200}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(newCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </IconButton>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(NewCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Button,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { lostCustomerActive } from \"../../../../redux/features/sidebarSlice\";\n\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const LostCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 0;\n      case \"weekly\":\n        return 0;\n      case \"monthly\":\n        return 3;\n      case \"quarterly\":\n        return 6;\n      case \"yearly\":\n        return 15;\n      case \"range\":\n        return 3;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              Lost Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 0 : 3}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={3}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={1}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={6}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <Button\n                  component={IconButton}\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(lostCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </Button>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(LostCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport { Circle } from \"@mui/icons-material\";\nimport MAP_STYLE from \"../../../utils/style.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapboxWorker from \"mapbox-gl/dist/mapbox-gl-csp-worker\";\nmapboxgl.workerClass = MapboxWorker;\n\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\";\n\nconst Map = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 38.7577,\n    longitude: -95.4376,\n    zoom: 3,\n  });\n\n  return (\n    <Fragment>\n      <ReactMapGL\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle={MAP_STYLE}\n        onViewportChange={setViewport}\n        mapboxApiAccessToken={\n          \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\"\n        }\n        style={{ zIndex: 200 }}\n      >\n        <Marker\n          latitude={40.7128}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={47.6062}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={41.8781}\n          longitude={-87.6298}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n      </ReactMapGL>\n    </Fragment>\n  );\n};\n\nexport default Map;\n","/** @format */\n\nimport {\n  Paper,\n  Box,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  TableCell,\n} from \"@mui/material\";\nimport React, { Fragment } from \"react\";\n\nconst NewAccounts = () => {\n  return (\n    <Fragment>\n      <Box p={1}>\n        <Typography color=\"blue\">New Accounts</Typography>\n        <TableContainer>\n          <Table fullWidth>\n            <TableHead color=\"blue\">\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"blue\">Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewAccounts;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Box, Grid, Typography } from \"@mui/material\";\n\nimport NumberFormat from \"react-number-format\";\n\nconst EmpOversite = () => {\n  return (\n    <Fragment>\n      <Typography color=\"blue\" sx={{ fontSize: \"1.1rem\" }}>\n        Employee Oversite\n      </Typography>\n      <Typography variant=\"h3\" component=\"h3\" sx={{ fontSize: \"1.8rem\" }}>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.1rem\" }}>\n        Employees logged in\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"purple\" }}> Total ticket issued:</span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"seagreen\" }}>Trouble ticket Resolved: </span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n    </Fragment>\n  );\n};\n\nexport default EmpOversite;\n","/** @format */\n\nimport React from \"react\";\n\nimport {\n  IconButton,\n  Typography,\n  Card,\n  CardContent,\n  CardActions,\n} from \"@mui/material\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { Appointments, Calls, Marketing, Email } from \"../Charts\";\n\nimport RevenueInCards from \"../Cards/RevenueIn\";\nimport RevenueOutCards from \"../Cards/RevenueOut\";\nimport NewCustomerCards from \"../Cards/NewCustomer\";\nimport LostCustomerCards from \"../Cards/LostCustomer\";\n\nimport Map from \"../Map\";\n\nimport NewAccounts from \"../NewAccounts\";\nimport EmpOversite from \"../EmpOversite\";\n\nconst widgetNames = {\n  a: <RevenueInCards />,\n  b: <RevenueOutCards />,\n  c: <NewCustomerCards />,\n  d: <LostCustomerCards />,\n  e: <NewAccounts />,\n  f: <Map />,\n  g: <EmpOversite />,\n  h: <Calls />,\n  i: <Appointments />,\n  j: <Marketing />,\n  k: <Email />,\n};\n\nexport default function Widget({ id, onRemoveItem }) {\n  return (\n    <Card\n      sx={{\n        width: \"100%\",\n        height: \"100%\",\n        paddingTop: \"0.5rem\",\n        padding: \"1rem\",\n      }}\n    >\n      <CardActions>\n        <IconButton\n          aria-label=\"delete\"\n          onClick={() => onRemoveItem(id)}\n          sx={{ position: \"fixed\", right: \"16px\" }}\n        >\n          <CloseIcon fontSize=\"small\" />\n        </IconButton>\n      </CardActions>\n      {widgetNames[id]}\n    </Card>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/login_light.a12d3677.png\";","module.exports = __webpack_public_path__ + \"static/media/signup_light.181ee8a6.png\";","/** @format */\n\nimport { GET_PROFILE } from \"../actions/types\";\n\nconst initialState = {\n  profile: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {\n  msg: {},\n  status: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { CREATE_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case CREATE_MESSAGE:\n      return (state = action.payload);\n\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload,\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport {\n  GET_IS_WEEKLY,\n  MONTLY_REVENUE,\n  WEEKLY_REVENUE,\n} from \"../actions/types\";\n\nconst initialState = {\n  isWeekly: \"daily\",\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_IS_WEEKLY:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case MONTLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case WEEKLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst tabSlice = createSlice({\n  name: \"tab\",\n  initialState: initialState,\n  reducers: {\n    addTab: (state, action) => {\n      const newTask = {\n        id: action.payload.id,\n        name: action.payload.tab,\n      };\n      state.push(newTask);\n    },\n    removeTab: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n    reset: (state) => initialState,\n  },\n});\n\nexport const { addTab, removeTab, reset } = tabSlice.actions;\nexport default tabSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst newTabSlice = createSlice({\n  name: \"tab\",\n  initialState: initialState,\n  reducers: {\n    addNewTab: (state, action) => {\n      state.push({\n        id: action.payload.id,\n        name: action.payload.name,\n      });\n    },\n    removeNewTab: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n\n    removeLastNewTab: (state) => {\n      state.pop();\n    },\n    resetNewTab: (state) => initialState,\n  },\n});\n\nexport const {\n  addNewTab,\n  removeNewTab,\n  resetNewTab,\n  removeLastNewTab,\n} = newTabSlice.actions;\nexport default newTabSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  favorite: {},\n  isAvailable: true,\n};\n\nconst favoriteSlice = createSlice({\n  name: \"favorite\",\n  initialState: [],\n  reducers: {\n    addFav: (state, action) => {\n      const newFav = {\n        id: action.payload.id,\n        name: action.payload.name,\n        page: action.payload.page,\n      };\n      if (state.favorite.length < 10) {\n        state.favorite.push(newFav);\n      } else state.isAvailable = false;\n    },\n\n    removeFav: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n  },\n});\n\nexport const { addFav, removeFav } = favoriteSlice.actions;\nexport default favoriteSlice.reducer;\n","/** @format */\n\nimport { combineReducers } from \"redux\";\n// import leads from \"./leads\";\nimport profile from \"./profile\";\nimport errors from \"./errors\";\nimport messages from \"./messages\";\nimport auth from \"./auth\";\nimport data from \"./data\";\nimport sidebar from \"../redux/features/sidebarSlice\";\nimport tabs from \"../redux/features/tabSlice\";\nimport newTabs from \"../redux/features/searchTabSlice\";\nimport favorite from \"../redux/features/favoriteSlice\";\n\nexport default combineReducers({\n  auth,\n  profile,\n  errors,\n  messages,\n  data,\n  sidebar,\n  favorite,\n  tabs,\n  newTabs,\n});\n","/** @format */\n\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const DELETE_PROFILE = \"DELETE_PROFILE\";\nexport const ADD_PROFILE = \"ADD_PROFILE\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const CLEAR_PROFILES = \"CLEAR_PROFILES\";\nexport const MONTLY_REVENUE = \"GET_MONTLY_REVENUE\";\nexport const WEEKLY_REVENUE = \"GET_WEEKLY_REVENUE\";\nexport const GET_IS_WEEKLY = \"GET_IS_WEEKLY\";\nexport const UPDATE_IS_WEEKLY = \"UPDATE_IS_WEEKLY\";\n\nexport const CREATE_MEMBER_SUCCESS = \"CREATE_MEMBER_SUCCESS\";\nexport const CREATE_MEMBER_FAIL = \"CREATE_MEMBER_FAIL\";\n\nexport const GET_MEMBER_SUCCESS = \"GET_MEMBER_SUCCESS\";\nexport const GET_MEMBER_FAIL = \"GET_MEMBER_FAIL\";\n\nexport const GET_TIMEZONE_SUCCESS = \"GET_TIMEZONE_SUCCESS\";\nexport const GET_TIMEZONE_FAIL = \"GET_TIMEZONE_FAIL\";\nexport const GET_CURRENT_TIME_SCUSSESS = \"GET_CURRENT_TIME_SCUSSESS\";\nexport const GET_CURRENT_TIME_FAIL = \"GET_CURRENT_TIME_FAIL\";\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\n// export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\n// export const SIGNUP_FAIL = 'SIGNUP_FAIL';\n// export const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\n// export const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\n// export const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\n// export const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\n// export const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\n// export const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\n// export const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\n// export const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\n// export const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\n// export const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\n// export const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\n// export const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\n// export const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\n// export const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\n// export const LOGOUT = 'LOGOUT';\n\n// export const PROFILE_CREATED_SUCCESS = 'PROFILE_CREATED_SUCCESS';\n// export const PROFILE_CREATED_FAIL = 'PROFILE_CREATED_FAIL';\n\n// export const PROFILE_LOADED_SUCCESS = 'PROFILE_LOADED_SUCCESS';\n// export const PROFILE_LOADED_FAIL = 'PROFILE_LOADED_FAIL';\n\n// export const PROFILE_UPDATE_SUCCESS = 'PROFILE_UPDATE_SUCCESS';\n// export const PROFILE_UPDATE_FAIL = 'PROFILE_UPDATE_FAIL';\n","/** @format */\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./reducers\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({ reducer: persistedReducer });\n\nexport const persistor = persistStore(store);\n\nexport default store;\n","/** @format */\n\nimport { CREATE_MESSAGE, GET_ERRORS } from \"./types\";\n\n// CREATE MESSAGE\nexport const createMessage = (msg) => {\n  return {\n    type: CREATE_MESSAGE,\n    payload: msg,\n  };\n};\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status },\n  };\n};\n","/** @format */\n\nimport axios from \"axios\";\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from \"./types\";\nimport { createMessage, returnErrors } from \"./messages\";\nimport { useSelector } from \"react-redux\";\nimport { reset } from \"../redux/features/tabSlice\";\nimport { resetNewTab } from \"../redux/features/searchTabSlice\";\n\n// CHECK TOKEN & LOAD USER\nexport const loadUser = () => (dispatch, getState) => {\n  // User Loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get(\n      `${process.env.REACT_APP_API_URL}/user/auth/user`,\n      tokenConfig(getState),\n    )\n    .then((res) => {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data.message, err.response.status));\n      dispatch({\n        type: AUTH_ERROR,\n      });\n    });\n};\n\n// LOGIN USER\nexport const login = (username, email, password) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ username, password });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/user/auth/login`, body, config)\n    .then(function(response) {\n      console.log(response);\n      dispatch(createMessage({ LoginSuccess: \"Login Successful\" }));\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: response.data,\n      });\n    })\n    .catch(function(error) {\n      dispatch(returnErrors(error.response.data, error.response.status));\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n      console.log(error);\n    });\n};\n\n// REGISTER USER\nexport const register = ({ username, email, password }) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ username, email, password });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/user/auth/register`, body, config)\n    .then((res) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n    });\n};\n\n// LOGOUT USER\nexport const logout = () => (dispatch, getState) => {\n  axios\n    .post(\n      `${process.env.REACT_APP_API_URL}/user/auth/logout`,\n      null,\n      tokenConfig(getState),\n    )\n    .then((res) => {\n      localStorage.removeItem(\"token\");\n      dispatch(reset());\n      dispatch(resetNewTab());\n      dispatch({\n        type: LOGOUT_SUCCESS,\n      });\n    });\n};\n\n// Setup config with token - helper function\nexport const tokenConfig = (getState) => {\n  // const token = useSelector((state) => state.auth.token);\n  // Get token from state\n  const token = getState().auth.token;\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // If token, add to headers config\n  if (token) {\n    config.headers[\"Authorization\"] = `Token ${token}`;\n  }\n\n  return config;\n};\n","/** @format */\n\nimport { useState, useCallback } from \"react\";\n\nexport const useToggle = (initialState) => {\n  const [isToggled, setIsToggled] = useState(initialState);\n\n  // put [setIsToggled] into the useCallback's dependencies array\n  // this value never changes so the callback is not going to be ever re-created\n  const toggle = useCallback(\n    () => setIsToggled((state) => !state),\n    [setIsToggled],\n  );\n\n  return [isToggled, toggle];\n};\n","/** @format */\n\n// import * as React from 'react';\nimport { styled } from \"@mui/material/styles\";\nimport { Link } from \"react-router-dom\";\nimport { Button, InputBase } from \"@mui/material\";\n\nexport const SideBarBtn = styled(Button)(({ theme }) => ({\n  fontSize: \"0.6em\",\n  textTransform: \"none\",\n  // color: theme.palette.primary.main,\n  color: \"#eee\",\n  textAlign: \"center\",\n  width: \"8em\",\n  height: \"8em\",\n  margin: \"0.7em\",\n  borderColor: \"#eee\",\n  padding: \"1em\",\n  \"&:hover\": {\n    backgroundColor: \"white\",\n    color: theme.palette.primary.main,\n  },\n  \"&:visited\": {\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport const SecNavbar = styled(\"nav\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  overflow: \"hidden\",\n  color: \"#eee\",\n  position: \"reletive\",\n  padding: \"0\",\n  margin: \"0\",\n  height: \"3.5rem\",\n  width: \"100%\",\n}));\n\nexport const FooterBar = styled(\"footer\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  color: \"#eee\",\n  position: \"fixed\",\n  bottom: \"0\",\n  left: \"0\",\n\n  margin: \"0\",\n  height: \"2.5rem\",\n  textAlign: \"center\",\n  alignContent: \"center\",\n  width: \"100%\",\n}));\n\nexport const FooterLink = styled(Link)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  fontSize: \"1rem\",\n  textTransform: \"uppercase\",\n  fontWeight: 500,\n  textDecoration: \"none\",\n  marginTop: \"0.7rem\",\n  padding: \" 2rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\nexport const FooterButton = styled(Button)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  fontSize: \"1rem\",\n  fontWeight: 500,\n  marginX: \"2rem\",\n  paddingX: \"3rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\n\nexport const LinkButton = styled(Link)(({ theme }) => ({\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  margin: \"0.7em\",\n  backgroundColor: theme.palette.primary.main,\n  borderColor: \"#2979ff\",\n  color: \"white\",\n  padding: \"0.65rem 1.2rem\",\n  borderRadius: \"0.5rem\",\n  \"&:hover\": {\n    backgroundColor: \"#1c54b2\",\n    cursor: \"pointer\",\n    color: \"white\",\n  },\n}));\n\nexport const Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#ddd\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"40%\",\n}));\n\nexport const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\nexport const MainSearch = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#eee\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(3),\n    width: \"auto\",\n  },\n}));\n\nexport const MainSearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledMainInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n","/** @format */\n\n/** @format */ // import axios from \"axios\";\n\nimport { GET_IS_WEEKLY, MONTLY_REVENUE, WEEKLY_REVENUE } from \"./types\";\n// GET LEADS\nexport const updateIsWeekly = (data) => (dispatch) => {\n  if (data) {\n    dispatch({\n      type: WEEKLY_REVENUE,\n      payload: data,\n    });\n  } else {\n    dispatch({\n      type: MONTLY_REVENUE,\n    });\n  }\n};\n\nexport const getIsWeekly = () => (dispatch) =>\n  dispatch({\n    type: GET_IS_WEEKLY,\n    // payload: this.state,\n  });\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport NumberFormat from \"react-number-format\";\nimport { useToggle } from \"../../context/useToggle\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  ListSubheader,\n  TextField,\n} from \"@mui/material\";\nimport {\n  MainSearch,\n  MainSearchIconWrapper,\n  StyledMainInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Logo from \"../../asserts/logo_white copy.png\";\nimport { updateIsWeekly } from \"../../actions/data\";\nimport {\n  IconButton,\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\n\nconst NavbarResponsive = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const [today, setToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [dateValue, setDateValue] = useState([null, null]);\n\n  const timeFormater = () => {\n    if (checked) {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n    } else {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: false,\n      });\n    }\n  };\n  const [isChecked, setIsChecked] = useToggle(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOnChage = (e) => {\n    dispatch(updateIsWeekly(e.target.value));\n  };\n\n  const logout_user = () => {\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Typography variant=\"h5\" component=\"h5\">\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          color=\"primary\"\n          style={{ marginRight: \"0.5rem\" }}\n        >\n          Expected Balance :\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">\n              Expected Balance\n            </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={isWeekly}\n              label=\"Expected Balance\"\n              onChange={handleOnChage}\n            >\n              <MenuItem value=\"daily\">Daily</MenuItem>\n              <MenuItem value=\"weekly\">Weekly</MenuItem>\n              <MenuItem value=\"monthly\">Monthly</MenuItem>\n              <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n              <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n              <MenuItem value=\"range\">Custom Range</MenuItem>\n              {isWeekly === \"range\" ? (\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              ) : null}\n            </Select>\n          </FormControl>\n        </Typography>\n        <NumberFormat\n          value={isWeekly ? 3254 : 32564}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix=\"$\"\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" ml={1} mr={1}>\n        {\" \"}\n        |{\" \"}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h5\">\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          defaultChecked\n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n    </Fragment>\n  );\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <Typography noWrap component=\"div\" sx={{ display: \"block\" }}>\n        <Link to=\"/\">\n          <img\n            src={Logo}\n            alt=\"logo\"\n            style={{ height: \"2rem\", width: \"auto\" }}\n          />\n        </Link>\n      </Typography>\n      {isAuthenticated ? (\n        <>\n          <Typography variant=\"h5\" component=\"h5\" sx={{ marginLeft: \"1rem\" }}>\n            {timeFormater()}\n            <Switch\n              size=\"small\"\n              defaultChecked\n              checked={checked}\n              onChange={handleChange}\n              inputProps={{ \"aria-label\": \"controlled\" }}\n              sx={{ transform: \"rotate(90deg)\" }}\n            />\n          </Typography>\n          <IconButton\n            sx={{ color: \"#7a4ebf\", float: \"right\" }}\n            onClick={() => setOpenDrawer(!openDrawer)}\n          >\n            <MenuIcon color=\"#7a4ebf\" />\n          </IconButton>\n        </>\n      ) : (\n        guestLinks()\n      )}\n\n      <Drawer\n        anchor=\"right\"\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <MainSearch>\n                <MainSearchIconWrapper>\n                  <SearchIcon />\n                </MainSearchIconWrapper>\n                <StyledMainInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </MainSearch>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <Typography variant=\"h5\" component=\"h5\">\n                <Typography\n                  component=\"span\"\n                  variant=\"h5\"\n                  color=\"primary\"\n                  style={{ marginRight: \"0.5rem\" }}\n                >\n                  Set Interval :\n                  <Select\n                    size=\"small\"\n                    sx={{ marginX: \"1rem\" }}\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={isWeekly}\n                    label=\"Expected Balance\"\n                    onChange={handleOnChage}\n                  >\n                    <MenuItem value=\"daily\">Daily</MenuItem>\n                    <MenuItem value=\"weekly\">Weekly</MenuItem>\n                    <MenuItem value=\"monthly\">Monthly</MenuItem>\n                    <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n                    <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n                    <MenuItem value=\"range\">Custom Range</MenuItem>\n                    {isWeekly === \"range\" ? (\n                      <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DateRangePicker\n                          startText=\"Start Date\"\n                          endText=\"End Date\"\n                          value={dateValue}\n                          onChange={(newValue) => {\n                            setDateValue(newValue);\n                          }}\n                          renderInput={(startProps, endProps) => (\n                            <Fragment>\n                              <TextField {...startProps} />\n                              <Box sx={{ mx: 2 }}> to </Box>\n                              <TextField {...endProps} />\n                            </Fragment>\n                          )}\n                        />\n                      </LocalizationProvider>\n                    ) : null}\n                  </Select>\n                </Typography>\n              </Typography>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              {\" \"}\n              <Typography variant=\"h5\" component=\"h5\">\n                Expected Balance :{\" \"}\n                <NumberFormat\n                  value={isWeekly ? 3254 : 32564}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon></ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon></ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <MainSearch>\n                <MainSearchIconWrapper>\n                  <SearchIcon />\n                </MainSearchIconWrapper>\n                <StyledMainInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </MainSearch>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n      </Drawer>\n    </Fragment>\n  );\n};\n\nexport default NavbarResponsive;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport NumberFormat from \"react-number-format\";\nimport { useToggle } from \"../../context/useToggle\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  ListSubheader,\n  TextField,\n} from \"@mui/material\";\nimport {\n  MainSearch,\n  MainSearchIconWrapper,\n  StyledMainInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Logo from \"../../asserts/logo_white copy.png\";\nimport { updateIsWeekly } from \"../../actions/data\";\nimport { useMediaQuery } from \"react-responsive\";\nimport NavbarResponsive from \"./NavbarResponsive\";\n\nconst Navbar = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const [today, setToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [dateValue, setDateValue] = useState([null, null]);\n\n  const timeFormater = () => {\n    if (checked) {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n    } else {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: false,\n      });\n    }\n  };\n  const [isChecked, setIsChecked] = useToggle(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOnChage = (e) => {\n    dispatch(updateIsWeekly(e.target.value));\n  };\n\n  const logout_user = () => {\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Typography variant=\"h5\" component=\"h5\">\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          color=\"primary\"\n          style={{ marginRight: \"0.8rem\" }}\n        >\n          Expected Balance :\n          <Select\n            sx={{ marginX: \"1rem\" }}\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={isWeekly}\n            label=\"Expected Balance\"\n            onChange={handleOnChage}\n          >\n            <MenuItem value=\"daily\">Daily</MenuItem>\n            <MenuItem value=\"weekly\">Weekly</MenuItem>\n            <MenuItem value=\"monthly\">Monthly</MenuItem>\n            <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n            <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n            <MenuItem value=\"range\">Custom Range</MenuItem>\n            {isWeekly === \"range\" ? (\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateRangePicker\n                  startText=\"Start Date\"\n                  endText=\"End Date\"\n                  value={dateValue}\n                  onChange={(newValue) => {\n                    setDateValue(newValue);\n                  }}\n                  renderInput={(startProps, endProps) => (\n                    <Fragment>\n                      <TextField {...startProps} />\n                      <Box sx={{ mx: 2 }}> to </Box>\n                      <TextField {...endProps} />\n                    </Fragment>\n                  )}\n                />\n              </LocalizationProvider>\n            ) : null}\n          </Select>\n        </Typography>\n        <NumberFormat\n          value={isWeekly ? 3254 : 32564}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix=\"$\"\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" ml={1} mr={1}>\n        {\" \"}\n        |{\" \"}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h5\">\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          defaultChecked\n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n    </Fragment>\n  );\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <Box sx={{ flexGrow: 1, backgroundColor: \"white\" }} component=\"nav\">\n        <AppBar position=\"static\" color=\"transparent\" sx={{ border: \"none\" }}>\n          <Toolbar>\n            {isTabletOrMobile ? (\n              <>\n                <NavbarResponsive />\n              </>\n            ) : (\n              <>\n                <Typography\n                  noWrap\n                  component=\"div\"\n                  sx={{ display: { xs: \"none\", sm: \"block\" } }}\n                >\n                  <Link to=\"/\">\n                    <img\n                      src={Logo}\n                      alt=\"logo\"\n                      style={{ height: \"2rem\", width: \"auto\" }}\n                    />\n                  </Link>\n                </Typography>\n                <MainSearch>\n                  <MainSearchIconWrapper>\n                    <SearchIcon />\n                  </MainSearchIconWrapper>\n                  <StyledMainInputBase\n                    placeholder=\"Search…\"\n                    inputProps={{ \"aria-label\": \"search\" }}\n                  />\n                </MainSearch>\n                <Box sx={{ flexGrow: 1 }} />\n                <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\n                  {isAuthenticated ? authLinks() : guestLinks()}\n                </Box>\n              </>\n            )}\n          </Toolbar>\n        </AppBar>\n      </Box>\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\n\nexport default Navbar;\n","/** @format */\n\nimport { Box, Typography, Button, TextField, Chip } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport React, { Fragment } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\n\nconst ChatHistory = () => {\n  return (\n    <Typography>\n      <Box\n        p={2}\n        sx={{\n          border: \"1px solid lightgray\",\n          borderRadius: \"1rem\",\n        }}\n      >\n        <Chip\n          label=\"Hi\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          size=\"large\"\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip label=\"Hello\" variant=\"outlined\" avatar={<Avatar>M</Avatar>} />\n        <br />\n        <Chip\n          label=\"Message by M\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"Message by D\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"this is just a ui design\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{ marginTop: \"1rem\" }}\n        />\n        <br />\n        <Chip\n          label=\"the chat feature is not working at backend\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n\n        <br />\n      </Box>\n    </Typography>\n  );\n};\n\nconst Chatting = () => {\n  return (\n    <Fragment>\n      <ChatHistory />\n      <br />\n      <Box\n        component=\"form\"\n        sx={{\n          //   border: \"1px solid lightgray\",\n          //   borderRadius: \"1rem\",\n          \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n        }}\n      >\n        <TextField type=\"text\" size=\"small\" variant=\"outlined\" />\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          endIcon={<SendIcon />}\n          type=\"submit\"\n          sx={{\n            m: 1,\n          }}\n        >\n          Send\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Chatting;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport isWeekend from \"date-fns/isWeekend\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { StaticDatePicker } from \"@mui/x-date-pickers/StaticDatePicker\";\nimport { TextField, Box, Paper, Grid } from \"@mui/material\";\n\nconst Calender = () => {\n  const [value, setValue] = useState(new Date());\n  const [tasks, setTasks] = useState([]);\n\n  return (\n    <Box component={Paper} m={2}>\n      <Grid container>\n        {\" \"}\n        <Grid item lg={6} xs={12}>\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <StaticDatePicker\n              orientation=\"landscape\"\n              openTo=\"day\"\n              value={value}\n              shouldDisableDate={isWeekend}\n              onChange={(newValue) => {\n                setValue(newValue);\n              }}\n              renderInput={(params) => <TextField {...params} />}\n            />\n          </LocalizationProvider>\n        </Grid>{\" \"}\n        <Grid item lg={6} xs={12}>\n          {tasks.length !== 0 ? (\n            tasks.map((task) => (\n              <li>\n                {task.id} - {task.name}\n              </li>\n            ))\n          ) : (\n            <h4> No record found</h4>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Calender;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Menu, MenuItem, Divider } from \"@mui/material\";\n\nconst ViewTasks = () => {\n  return (\n    <Fragment>\n      <MenuItem>Profile</MenuItem>\n      <MenuItem>Account</MenuItem>\n      <MenuItem>Setting</MenuItem>\n      <Divider sx={{ my: 0.5 }} />\n      <MenuItem>Logout</MenuItem>\n    </Fragment>\n  );\n};\n\nexport default ViewTasks;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nimport { Star } from \"@mui/icons-material\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Favorites = () => {\n  const favList = useSelector((state) => state.favorite.favorite);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <List>\n        <ListItem disablePadding>\n          <ListItemButton>\n            <ListItemIcon>\n              <Star sx={{ color: \"orange\" }} />\n            </ListItemIcon>\n          </ListItemButton>\n          <ListItemText primary=\"Favorite 1\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Favorites;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport Chatting from \"../Chat/Chat\";\n\n// styling imports\nimport {\n  Box,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  Fade,\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { SecNavbar } from \"../../styles/styles\";\n\nimport {\n  Message,\n  EmailRounded,\n  CalendarToday,\n  CheckBox,\n  Person,\n  NotificationAdd,\n  Settings,\n  Star,\n  StarBorder,\n} from \"@mui/icons-material/\";\nimport { useToggle } from \"../../context/useToggle\";\nimport Calender from \"../Dashboard/Calender\";\nimport ViewTasks from \"../Tasks/ViewTasks\";\nimport Favorites from \"../Favorite/Favorites\";\nimport serverTime from \"../../utils/ServerTime\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { useMediaQuery } from \"react-responsive\";\nimport {\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nexport const NavBarSecResponsive = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  const [openFav, setOpenFav] = useState(false);\n\n  const handleClickOpenFav = () => {\n    setOpenFav(true);\n  };\n\n  const handleCloseFav = () => {\n    setOpenFav(false);\n  };\n  const [openTask, setOpenTask] = useState(false);\n\n  const handleClickOpenTask = () => {\n    setOpenTask(true);\n  };\n\n  const handleCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const [openCal, setOpenCal] = useState(false);\n\n  const handleClickOpenCal = () => {\n    setOpenCal(true);\n  };\n\n  const handleCloseCal = () => {\n    setOpenCal(false);\n  };\n\n  const [openChat, setOpenChat] = useState(false);\n\n  const handleClickOpenChat = () => {\n    setOpenChat(true);\n  };\n\n  const handleCloseChat = () => {\n    setOpenChat(false);\n  };\n\n  const history = useHistory();\n  const [isLogout, setIsLogout] = useToggle(false);\n  const today = new Date();\n  const time = today.toLocaleTimeString();\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n  const [redirect, setRedirect] = useState(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [settingAcnchorEl2, setSettingAcnchorEl2] = useState(null);\n\n  const [anchorEl2, setAnchorEl2] = React.useState(null);\n\n  const handleLogout = () => {\n    console.log(\"logout button just clicked\");\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const open = Boolean(anchorEl);\n  const open2 = Boolean(anchorEl);\n\n  const userRoleChecker = () => {\n    switch (user.username) {\n      case \"admin\":\n        return \"Admin\";\n      case \"firm\":\n        return \"Firm\";\n      case \"lawyer\":\n        return \"Lawyer\";\n      default:\n        return \"Client\";\n    }\n  };\n\n  const openSetting2 = Boolean(settingAcnchorEl2);\n\n  const handleClick2 = (event) => {\n    setSettingAcnchorEl2(event.currentTarget);\n  };\n  const openSetting = Boolean(settingAcnchorEl);\n  const handleClose2 = () => {\n    setSettingAcnchorEl2(null);\n  };\n\n  const handleClick = (event) => {\n    setSettingAcnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setSettingAcnchorEl(null);\n  };\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <IconButton\n        sx={{ color: \"white\" }}\n        onClick={() => setOpenDrawer(!openDrawer)}\n      >\n        <MenuIcon color=\"white\" />\n      </IconButton>\n      <Drawer\n        anchor=\"left\"\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                className=\"nav-items\"\n                size=\"large\"\n                onClick={handleClickOpenChat}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"#fff\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n              >\n                <Message />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          className=\"nav-items\"\n          Validate\n          open={openChat}\n          onClose={handleCloseChat}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          sx={{\n            position: \"absolute\",\n            right: \"20px\",\n            bottom: \"150px\",\n          }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Chatting Application\"}\n          </DialogTitle>\n          <DialogContent>\n            <Chatting />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseChat}>Close</Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                size=\"large\"\n                className=\"nav-items\"\n                component={Link}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n                to={{\n                  pathname:\n                    \"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=someone@gmail.com\",\n                }}\n                target=\"_blank\"\n              >\n                <EmailRounded />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                size=\"large\"\n                className=\"nav-items\"\n                onClick={handleClickOpenCal}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <CalendarToday />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          Validate\n          open={openCal}\n          maxWidth=\"lg\"\n          fullWidth\n          onClose={handleCloseCal}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          sx={{\n            position: \"absolute\",\n            right: \"20px\",\n            bottom: \"150px\",\n          }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Calender\"}</DialogTitle>\n          <DialogContent>\n            <Calender />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseCal}>Close</Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                aria-label=\"more\"\n                className=\"nav-items\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting2 ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick2}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <CheckBox />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Menu\n          id=\"fade-menu\"\n          MenuListProps={{\n            \"aria-labelledby\": \"fade-button\",\n          }}\n          className=\"nav-items\"\n          anchorEl={settingAcnchorEl2}\n          open={openSetting2}\n          onClose={handleClose2}\n          TransitionComponent={Fade}\n        >\n          <MenuItem onClick={handleClose2}>Task 1: This is task one</MenuItem>\n          <MenuItem onClick={handleClose2}>Task 2: This is task two</MenuItem>\n          <MenuItem onClick={handleClose2}>Task 3: This is task three</MenuItem>\n          <Divider sx={{ my: 0.5 }} />\n          <MenuItem onClick={handleClose2}>Task 4: This is task four</MenuItem>\n        </Menu>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                className=\"nav-items\"\n                aria-expanded={openSetting2 ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClickOpenFav}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <Star />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          open={openFav}\n          onClose={handleCloseFav}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n          <DialogContent>\n            <Favorites />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseFav} autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                className=\"nav-items\"\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                <MenuItem component={Link} to=\"/profile\">\n                  Profile\n                </MenuItem>\n                {/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n              </Menu>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                sx={{\n                  color: \"#7a4ebf\",\n                }}\n              >\n                <Settings />\n              </IconButton>\n              <Menu\n                id=\"fade-menu\"\n                MenuListProps={{\n                  \"aria-labelledby\": \"fade-button\",\n                }}\n                anchorEl={settingAcnchorEl}\n                open={openSetting}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Account</MenuItem>\n                <MenuItem onClick={handleClose}>Setting</MenuItem>\n                <Divider sx={{ my: 0.5 }} />\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n              </Menu>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n      </Drawer>\n\n      <NotificationAdd mr={2} />\n    </Fragment>\n  );\n};\n","/** @format */\n/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport Chatting from \"../Chat/Chat\";\n\n// styling imports\nimport {\n  Box,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  Fade,\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { SecNavbar } from \"../../styles/styles\";\n\nimport {\n  Message,\n  EmailRounded,\n  CalendarToday,\n  CheckBox,\n  Person,\n  NotificationAdd,\n  Settings,\n  Star,\n  StarBorder,\n} from \"@mui/icons-material/\";\nimport { useToggle } from \"../../context/useToggle\";\nimport Calender from \"../Dashboard/Calender\";\nimport ViewTasks from \"../Tasks/ViewTasks\";\nimport Favorites from \"../Favorite/Favorites\";\nimport serverTime from \"../../utils/ServerTime\";\n\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { NavBarSecResponsive } from \"./DrawerComp\";\n\nconst NavbarSec = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  const [openFav, setOpenFav] = useState(false);\n\n  const handleClickOpenFav = () => {\n    setOpenFav(true);\n  };\n\n  const handleCloseFav = () => {\n    setOpenFav(false);\n  };\n  const [openTask, setOpenTask] = useState(false);\n\n  const handleClickOpenTask = () => {\n    setOpenTask(true);\n  };\n\n  const handleCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const [openCal, setOpenCal] = useState(false);\n\n  const handleClickOpenCal = () => {\n    setOpenCal(true);\n  };\n\n  const handleCloseCal = () => {\n    setOpenCal(false);\n  };\n\n  const [openChat, setOpenChat] = useState(false);\n\n  const handleClickOpenChat = () => {\n    setOpenChat(true);\n  };\n\n  const handleCloseChat = () => {\n    setOpenChat(false);\n  };\n\n  const history = useHistory();\n  const [isLogout, setIsLogout] = useToggle(false);\n  const today = new Date();\n  const time = today.toLocaleTimeString();\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n  const [redirect, setRedirect] = useState(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [settingAcnchorEl2, setSettingAcnchorEl2] = useState(null);\n\n  const [anchorEl2, setAnchorEl2] = React.useState(null);\n\n  const handleLogout = () => {\n    console.log(\"logout button just clicked\");\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const open = Boolean(anchorEl);\n  const open2 = Boolean(anchorEl);\n\n  const userRoleChecker = () => {\n    switch (user.username) {\n      case \"admin\":\n        return \"Admin\";\n      case \"firm\":\n        return \"Firm\";\n      case \"lawyer\":\n        return \"Lawyer\";\n      default:\n        return \"Client\";\n    }\n  };\n\n  const openSetting2 = Boolean(settingAcnchorEl2);\n\n  const handleClick2 = (event) => {\n    setSettingAcnchorEl2(event.currentTarget);\n  };\n  const openSetting = Boolean(settingAcnchorEl);\n  const handleClose2 = () => {\n    setSettingAcnchorEl2(null);\n  };\n\n  const handleClick = (event) => {\n    setSettingAcnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setSettingAcnchorEl(null);\n  };\n\n  return (\n    <Fragment>\n      <SecNavbar>\n        <Toolbar>\n          {isTabletOrMobile ? (\n            <>\n              <NavBarSecResponsive />\n            </>\n          ) : (\n            <>\n              <Box component=\"div\" sx={{ flexGrow: 1 }}>\n                <IconButton\n                  className=\"nav-items\"\n                  size=\"large\"\n                  onClick={handleClickOpenChat}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"#eee\",\n                    \"&:hover\": {\n                      color: \"#fff\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                  anchorOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"left\",\n                  }}\n                >\n                  <Message />\n                </IconButton>\n                <Dialog\n                  className=\"nav-items\"\n                  Validate\n                  open={openChat}\n                  onClose={handleCloseChat}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                  sx={{\n                    position: \"absolute\",\n                    right: \"20px\",\n                    bottom: \"150px\",\n                  }}\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    {\"Chatting Application\"}\n                  </DialogTitle>\n                  <DialogContent>\n                    <Chatting />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleCloseChat}>Close</Button>\n                  </DialogActions>\n                </Dialog>\n\n                <IconButton\n                  size=\"large\"\n                  className=\"nav-items\"\n                  component={Link}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"white\",\n                    \"&:hover\": {\n                      color: \"white\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                  to={{\n                    pathname:\n                      \"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=someone@gmail.com\",\n                  }}\n                  target=\"_blank\"\n                >\n                  <EmailRounded />\n                </IconButton>\n\n                <IconButton\n                  size=\"large\"\n                  className=\"nav-items\"\n                  onClick={handleClickOpenCal}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"white\",\n                    \"&:hover\": {\n                      color: \"white\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                >\n                  <CalendarToday />\n                </IconButton>\n                <Dialog\n                  Validate\n                  open={openCal}\n                  maxWidth=\"lg\"\n                  fullWidth\n                  onClose={handleCloseCal}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                  sx={{\n                    position: \"absolute\",\n                    right: \"20px\",\n                    bottom: \"150px\",\n                  }}\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    {\"Calender\"}\n                  </DialogTitle>\n                  <DialogContent>\n                    <Calender />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleCloseCal}>Close</Button>\n                  </DialogActions>\n                </Dialog>\n                <IconButton\n                  aria-label=\"more\"\n                  className=\"nav-items\"\n                  id=\"long-button\"\n                  aria-controls=\"long-menu\"\n                  aria-expanded={openSetting2 ? \"true\" : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={handleClick2}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"white\",\n                    \"&:hover\": {\n                      color: \"white\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                >\n                  <CheckBox />\n                </IconButton>\n                <Menu\n                  id=\"fade-menu\"\n                  MenuListProps={{\n                    \"aria-labelledby\": \"fade-button\",\n                  }}\n                  className=\"nav-items\"\n                  anchorEl={settingAcnchorEl2}\n                  open={openSetting2}\n                  onClose={handleClose2}\n                  TransitionComponent={Fade}\n                >\n                  <MenuItem onClick={handleClose2}>\n                    Task 1: This is task one\n                  </MenuItem>\n                  <MenuItem onClick={handleClose2}>\n                    Task 2: This is task two\n                  </MenuItem>\n                  <MenuItem onClick={handleClose2}>\n                    Task 3: This is task three\n                  </MenuItem>\n                  <Divider sx={{ my: 0.5 }} />\n                  <MenuItem onClick={handleClose2}>\n                    Task 4: This is task four\n                  </MenuItem>\n                </Menu>\n                <IconButton\n                  aria-label=\"more\"\n                  id=\"long-button\"\n                  aria-controls=\"long-menu\"\n                  className=\"nav-items\"\n                  aria-expanded={openSetting2 ? \"true\" : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={handleClickOpenFav}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"white\",\n                    \"&:hover\": {\n                      color: \"white\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                >\n                  <Star />\n                </IconButton>\n                <Dialog\n                  open={openFav}\n                  onClose={handleCloseFav}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    {\"Favorites\"}\n                  </DialogTitle>\n                  <DialogContent>\n                    <Favorites />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleCloseFav} autoFocus>\n                      Close\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </Box>\n              <NotificationAdd mr={2} />\n              <Typography component=\"h5\" variant=\"h6\" ml={2} mr={2}>\n                |\n              </Typography>\n\n              <Button\n                color=\"inherit\"\n                aria-controls=\"basic-menu\"\n                aria-haspopup=\"true\"\n                className=\"nav-items\"\n                aria-expanded={open ? \"true\" : undefined}\n                onClick={handleClick}\n              >\n                <Person /> {localuser.username} - ({localuser.username} )\n              </Button>\n              <Button\n                color=\"inherit\"\n                className=\"nav-items\"\n                onClick={handleLogout}\n              >\n                Logout\n              </Button>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                className=\"nav-items\"\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                <MenuItem component={Link} to=\"/profile\">\n                  Profile\n                </MenuItem>\n                {/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n              </Menu>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                sx={{\n                  color: \"white\",\n                }}\n              >\n                <Settings />\n              </IconButton>\n              <Menu\n                id=\"fade-menu\"\n                MenuListProps={{\n                  \"aria-labelledby\": \"fade-button\",\n                }}\n                anchorEl={settingAcnchorEl}\n                open={openSetting}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Account</MenuItem>\n                <MenuItem onClick={handleClose}>Setting</MenuItem>\n                <Divider sx={{ my: 0.5 }} />\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n              </Menu>\n            </>\n          )}\n        </Toolbar>\n      </SecNavbar>\n\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\n\nexport default NavbarSec;\n","/** @format */\n\nimport React, { useState, Fragment } from \"react\";\nimport {\n  Box,\n  Accordion,\n  AccordionSummary,\n  Typography,\n  AccordionDetails,\n  Grid,\n} from \"@mui/material\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  Mail,\n  Phone,\n  Group,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  marketingActive,\n  appointmentActive,\n  empOversiteActive,\n  emailsActive,\n  mapActive,\n  callsActive,\n} from \"../../redux/features/sidebarSlice\";\n\nimport \"./style.css\";\n\nconst Controls = () => {\n  return (\n    <Fragment>\n      <Box px={3} sx={{ color: \"#796ef0\" }}>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/\">\n              <Grid item>\n                <AddCircle fontSize=\"medium\" />\n              </Grid>\n              <Grid item>DashBoard</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/invoices\">\n              <Grid item>\n                <Receipt fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Invoices</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/manage-categories\">\n              <Grid item>\n                <FileCopy fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Categories</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/ledgers\">\n              <Grid item>\n                <MoneyOff fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Ledger</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/create-task\">\n              <Grid item>\n                <Task fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Task</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/employee-search\">\n              <Grid item>\n                <Work fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Search</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/matter-dashboard\">\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Matters</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/contact\">\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Contact</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Marketing = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(marketingActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.marketing ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Marketing</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(emailsActive())}>\n          <Grid>\n            <Box sx={sidebar.emails ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Email</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst HumanResources = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageUserActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/users\">\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage User</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageRoleActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/user-roles\">\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Role</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageGroupActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/user-groups\">\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Group</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst RevenueControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueInActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueIn ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue In</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueOutActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueOut ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue Out</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst AccountControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.newCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Customers</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(lostCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.lostCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Lost Customer</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newAccountActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.newAccount ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Accounts</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(mapActive())}>\n          <Grid>\n            <Box sx={sidebar.map ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Trouble Ticket Map</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\nconst EmployeeOversite = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(empOversiteActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.empOversite ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Oversite</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(callsActive())}>\n          <Grid>\n            <Box sx={sidebar.calls ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Phone fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Calls</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(appointmentActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.appointment ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Appointments</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const accordionData = [\n  {\n    name: \"Controls\",\n    id: \"controls\",\n    tiles: <Controls />,\n  },\n\n  {\n    name: \"Human Resources\",\n    id: \"human_resource\",\n    tiles: <HumanResources />,\n  },\n  {\n    name: \"Revenue\",\n    id: \"revenue\",\n    tiles: <RevenueControls />,\n  },\n  {\n    name: \"Customers\",\n    id: \"customers\",\n    tiles: <AccountControls />,\n  },\n  {\n    name: \"Marketing\",\n    id: \"marketing\",\n    tiles: <Marketing />,\n  },\n  {\n    name: \"Employee Oversite\",\n    id: \"empOversite\",\n    tiles: <EmployeeOversite />,\n  },\n];\n\nconst TestingSidebar = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n\n  const [accordions, updateAccordions] = useState(accordionData);\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n\n    const items = Array.from(accordions);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    updateAccordions(items);\n  }\n\n  return (\n    <Fragment>\n      <Box mt={5}>\n        <DragDropContext onDragEnd={handleOnDragEnd}>\n          <Droppable droppableId=\"accordions\">\n            {(provided) => (\n              <Box\n                className=\"accordions\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {accordions.map((item, index) => {\n                  return (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <Accordion\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          <AccordionSummary\n                            expandIcon={<ExpandMoreIcon color=\"primary\" />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                          >\n                            <Typography\n                              align=\"center\"\n                              color=\"primary\"\n                              sx={{ textTransform: \"uppercase\" }}\n                            >\n                              {item.name}\n                            </Typography>\n                          </AccordionSummary>\n                          <AccordionDetails>{item.tiles}</AccordionDetails>\n                        </Accordion>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </Box>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TestingSidebar;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  Box,\n  Paper,\n  Link,\n  Grid,\n  Container,\n  Stack,\n} from \"@mui/material\";\n\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\n\nimport { useToggle } from \"../../context/useToggle\";\nimport AdminSidebar from \"./AdminSidebar\";\nimport LawyerSidebar from \"./LawyerSidebar\";\nimport FirmSidebar from \"./FirmSidebar\";\nimport CustomerSidebar from \"./CutomerSidebar\";\nimport \"./style.css\";\nimport TestingSidebar from \"./TestingSidebar\";\n\nconst Sidebar = ({ user }) => {\n  const [controlToggle, setControlToggle] = useToggle(true);\n\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: true,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const SidebarRedirect = () => {\n    switch (user.username) {\n      case \"admin\":\n        return <AdminSidebar />;\n      case \"firm\":\n        return <FirmSidebar />;\n      case \"lawyer\":\n        return <LawyerSidebar />;\n      default:\n        return <CustomerSidebar />;\n    }\n  };\n\n  // const [state, dispatch] = useContext(UserContext);\n  return (\n    <Fragment>\n      <Paper component={Stack} elevation={3} spacing={1}>\n        <Box\n          sx={{\n            height: \"calc(83vh - 40px)\",\n            overflowY: \"scroll\",\n          }}\n        >\n          {/* {SidebarRedirect()} */}\n          <TestingSidebar />\n        </Box>\n        {/* <Box p={2}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"error\"\n            style={{\n              padding: \"1rem\",\n              \"&:hover\": {\n                color: \"#fff\",\n              },\n            }}\n          >\n            Report\n          </Button>\n        </Box> */}\n      </Paper>\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Sidebar);\n\n// export default Sidebar;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  BottomNavigation,\n  BottomNavigationAction,\n  Link,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@mui/material\";\nimport { FooterBar, FooterLink, FooterButton } from \"../../styles/styles\";\nimport {\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport Favorites from \"../Favorite/Favorites\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst Footer = () => {\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <Box mt={3}>\n        {isTabletOrMobile ? (\n          <Box sx={{ color: \"#eee\", backgroundColor: \"#7a4ebf\" }}>\n            <List>\n              <FooterLink to={\"/ledgers\"}>Accounting</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}> Calendar</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}>Contacts</FooterLink>\n            </List>\n            <List>\n              <FooterButton\n                sx={{\n                  color: \"#eee\",\n                  marginLeft: \"1.2rem\",\n                  textTransform: \"uppercase\",\n                  textDecoration: \"none\",\n                  \"&:visited\": {\n                    color: \"#eee\",\n                  },\n                }}\n                variant=\"text\"\n                onClick={handleClickOpen}\n              >\n                Favorites\n              </FooterButton>\n            </List>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n              <DialogContent>\n                <Favorites />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} autoFocus>\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n            <List>\n              <FooterLink to={\"/matters\"}>Matters</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/tasks\"}>Tasks</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}>Workflow</FooterLink>\n            </List>\n          </Box>\n        ) : (\n          <FooterBar>\n            <FooterLink to={\"/ledgers\"}>Accounting</FooterLink> |\n            <FooterLink to={\"/\"}> Calendar</FooterLink> |\n            <FooterLink to={\"/\"}>Contacts</FooterLink> |\n            <FooterButton\n              sx={{\n                color: \"#eee\",\n                textTransform: \"uppercase\",\n                textDecoration: \"none\",\n                \"&:visited\": {\n                  color: \"#eee\",\n                },\n              }}\n              variant=\"text\"\n              onClick={handleClickOpen}\n            >\n              Favorites\n            </FooterButton>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n              <DialogContent>\n                <Favorites />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} autoFocus>\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n            |<FooterLink to={\"/matters\"}>Matters</FooterLink> |\n            <FooterLink to={\"/tasks\"}>Tasks</FooterLink> |\n            <FooterLink to={\"/\"}>Workflow</FooterLink>\n          </FooterBar>\n        )}\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Footer;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Navbar from \"../components/Navbars/Navbar\";\nimport NavbarSec from \"../components/Navbars/NavbarSec\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport { connect } from \"react-redux\";\nimport Chatting from \"../components/Chat/Chat\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  isDisplay,\n  hideSidebar,\n  showSidebar,\n} from \"../redux/features/sidebarSlice\";\n\nimport { Paper, Fab, Popover } from \"@mui/material\";\nimport { Grid, Box, Button } from \"@mui/material\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { Chat, Report } from \"@mui/icons-material\";\n\nimport Footer from \"../components/Footer/Footer\";\n\nconst InnerLayout = ({ isAuthenticated, children }) => {\n  const theme = useTheme();\n\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  const sidebarToggle = useSelector((state) => state.sidebar.display);\n  const dispatch = useDispatch();\n\n  const [drawerOpen, setDrawerOpen] = React.useState(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setDrawerOpen(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setDrawerOpen(null);\n  };\n\n  const openPopover = Boolean(drawerOpen);\n  const id = openPopover ? \"simple-popover\" : undefined;\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleSidebarToggle = () => {\n    if (sidebarToggle) {\n      dispatch(hideSidebar());\n    } else {\n      dispatch(showSidebar());\n    }\n  };\n  const descriptionElementRef = React.useRef(null);\n\n  useEffect(() => {\n    if (isBigScreen) {\n      dispatch(showSidebar());\n    } else if (isTabletOrMobile) {\n      dispatch(hideSidebar());\n    }\n  }, []);\n  useEffect(() => {\n    if (drawerOpen) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [drawerOpen]);\n\n  return (\n    <Paper style={{ margin: \"0\" }}>\n      <Grid contianer rowSpacing={2} columnSpacing={2}>\n        <Grid item lg={12} md={12}>\n          {isAuthenticated ? (\n            <Fragment>\n              <NavbarSec />\n            </Fragment>\n          ) : (\n            <Navbar />\n          )}\n        </Grid>\n\n        {isAuthenticated ? (\n          <Fragment>\n            <Grid item lg={12}>\n              <Navbar />\n            </Grid>\n            <Grid container direction=\"row\" wrap=\"nowrap\">\n              {sidebarToggle ? (\n                <Fragment>\n                  <Grid item lg={2} xs={12} m={3}>\n                    <Sidebar />\n                  </Grid>\n                  <Grid item lg={10} xs={12} p={1}>\n                    <Box>\n                      <Button\n                        onClick={handleSidebarToggle}\n                        p={5}\n                        sx={{\n                          left: \"-8rem\",\n                          top: \"2rem\",\n                        }}\n                      >\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <Grid item lg={12} xs={12} p={1}>\n                    <Box>\n                      <Button onClick={handleSidebarToggle}>\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              )}\n            </Grid>\n            <Grid item lg={12}>\n              <Footer />\n            </Grid>\n          </Fragment>\n        ) : (\n          <Grid item lg={12} xs={12}>\n            {children}\n          </Grid>\n        )}\n        <Fab\n          size=\"large\"\n          sx={\n            isDesktopOrLaptop\n              ? {\n                  borderRadius: \"50%\",\n                  backgroundColor: \"#edb4b6\",\n                  position: \"fixed\",\n                  bottom: \"16px\",\n                  left: \"16px\",\n                  color: \"red\",\n                  zIndex: \"200\",\n                  \"&:hover\": {\n                    color: \"red\",\n                  },\n                }\n              : { display: \"none\" }\n          }\n          aria-label=\"report\"\n        >\n          <Report />\n        </Fab>\n        <Fab\n          size=\"large\"\n          onClick={handlePopoverOpen}\n          sx={\n            isDesktopOrLaptop\n              ? {\n                  borderRadius: \"50%\",\n                  backgroundColor: \"#eee\",\n                  position: \"fixed\",\n                  bottom: \"16px\",\n                  right: \"16px\",\n                  color: \"#461594\",\n                  zIndex: \"200\",\n                  \"&:hover\": {\n                    color: \"#7a4ebf\",\n                  },\n                }\n              : { display: \"none\" }\n          }\n          aria-label=\"chat\"\n        >\n          <Chat />\n        </Fab>\n        <Popover\n          open={openPopover}\n          anchorEl={drawerOpen}\n          onClose={handlePopoverClose}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          sx={{ margin: \"-2rem\" }}\n        >\n          <Chatting />\n        </Popover>\n      </Grid>\n    </Paper>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps)(InnerLayout);\n","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nconst PrivateRoutes = ({ isAuthenticated, children, ...rest}) => {\n    \n\n    return (\n        <Route {...rest}>\n            {isAuthenticated ? children: <Redirect to=\"/login\"/>}\n        </Route>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(PrivateRoutes);","/** @format */\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'toggle_button':\n      return {\n        ...state,\n        active: !state.active,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initialState = {\n  active: false,\n};\n","/** @format */\n\nimport React from 'react';\nimport { reducer, initialState } from './reducer';\n\nexport const UserContext = React.createContext({\n  state: initialState,\n  dispatch: () => null,\n});\n\nexport const UserProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <UserContext.Provider value={[state, dispatch]}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","/** @format */\n\n// import styled from \"styled-components\";\nimport { createTheme } from \"@mui/material/styles\";\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    mode: \"light\",\n    primary: {\n      main: \"#796ef0\", //blueish purple\n    },\n    // secondary: {\n    //   main: \"\",\n    // },\n    error: {\n      main: \"#e85355\", //red\n    },\n    warning: {\n      main: \"#fd9905\", // orange\n    },\n    success: {\n      main: \"#28c570\", //green\n    },\n\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n  typography: {\n    htmlFontSize: 14,\n    fontSize: 12,\n    color: \"#333\",\n  },\n});\n\nexport default theme;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport \"./DashboardLayout/style.css\";\n\nimport DashboardContent from \"./DashboardLayout/DashboardContent\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <DashboardContent />\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\nimport { Button, Stack, IconButton } from \"@mui/material\";\nimport styles from \"./tabs.module.css\";\n\nconst Tabs = ({ children }) => {\n  const [activeTab, setActiveTab] = useState(children[0].props.label);\n  const handleClick = (e, newActiveTab) => {\n    e.preventDefault();\n    setActiveTab(newActiveTab);\n  };\n  return (\n    <Fragment>\n      <Stack direction=\"row\" spacing={1}>\n        <ul className={styles.tabs}>\n          {children.map((tab) => (\n            <li\n              className={tab.props.label === activeTab ? styles.current : \"\"}\n              key={tab.props.label}\n            >\n              <Button\n                variant=\"text\"\n                size=\"small\"\n                startIcon={<MoreVert />}\n                onClick={(e) => handleClick(e, tab.props.label)}\n              >\n                {tab.props.label}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      </Stack>\n\n      {children.map((one) =>\n        one.props.label === activeTab ? (\n          <div className={styles.content} key={one.props.label}>\n            {one.props.children}\n          </div>\n        ) : (\n          \"\"\n        ),\n      )}\n    </Fragment>\n  );\n};\n\nexport default Tabs;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  FormControlLabel,\n  Switch,\n  Button,\n  Stack,\n} from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst CreateInvoice = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    matter: \"\",\n    contact: \"\",\n    billable: false,\n    date_range: \"\",\n    create_date: \"\",\n    due_date: \"\",\n    template: \"\",\n    invoice_no: \"\",\n    discount: \"\",\n    submit: false,\n  });\n\n  // const {\n  //   matter,\n  //   contact,\n  //   billable,\n  //   date_range,\n  //   create_date,\n  //   due_date,\n  //   template,\n  //   invoice_no,\n  //   discount,\n  //   submit,\n  // } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  const [invoice, setInvoice] = useState(null);\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoice`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  const [dateRange, setDateRange] = React.useState([null, null]);\n  return (\n    <Fragment>\n      {/* <Typography component=\"h3\" variant=\"h4\">\n        Create New Invoice\n      </Typography>\n      <Box p={3}>\n        <LinkButton to=\"/invoices\" sx={{ float: \"right\" }}>\n          Invoice Dashboard\n        </LinkButton>\n      </Box> */}\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Grid\n          spacing={3}\n          container\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"Matter\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n              autoComplete=\"matter\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"Contact\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              autoComplete=\"contact\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <FormControlLabel\n              sx={{ fontSize: \"12px\", marginLeft: \"1rem\" }}\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Unbillable\"\n            />\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Stack direction=\"row\">\n              <Typography varient=\"caption\" sx={{ marginTop: \"0.7rem\" }}>\n                Range:\n              </Typography>\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateRangePicker\n                  calendars={1}\n                  value={dateRange}\n                  onChange={(newValue) => {\n                    setDateRange(newValue);\n                  }}\n                  renderInput={(startProps, endProps) => (\n                    <Fragment>\n                      <TextField size=\"small\" {...startProps} />\n                      <Box sx={{ mx: 2 }}> to </Box>\n                      <TextField size=\"small\" {...endProps} />\n                    </Fragment>\n                  )}\n                />\n              </LocalizationProvider>\n            </Stack>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          spacing={3}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"create_date\"\n              label=\"Create Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"due_date\"\n              label=\"Due Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"template\"\n              label=\"Template\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"template\"\n              autoComplete=\"template\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"invoice_no\"\n              label=\"Invoice #\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"invoice_no\"\n              autoComplete=\"invoice_no\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"discount\"\n              label=\"Discount\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"discount\"\n              autoComplete=\"discount\"\n            />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <FormControlLabel\n              label=\"Submit For Approvel\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n            />\n          </Grid>\n        </Grid>\n\n        <Grid item lg={12} mt={2}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Sub-Category</TableCell>\n                  <TableCell>Description</TableCell>\n                  <TableCell>Date</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Rate</TableCell>\n                  <TableCell>Sub</TableCell>\n                  <TableCell>Tax</TableCell>\n                  <TableCell>int</TableCell>\n                  <TableCell>Disc.</TableCell>\n                  <TableCell>Total</TableCell>\n                  <TableCell>Biller</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                {/* {invoice?.map((invoice) => (\n                  <TableRow id={invoice.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n\n                    <TableCell>{invoice.sub_cat}</TableCell>\n                    <TableCell>{invoice.discription}</TableCell>\n                    <TableCell>{invoice.date}</TableCell>\n                    <TableCell>{invoice.hours}</TableCell>\n                    <TableCell>{invoice.rate}</TableCell>\n                    <TableCell>{invoice.sub}</TableCell>\n                    <TableCell>{invoice.tax}</TableCell>\n                    <TableCell>{invoice.int}</TableCell>\n                    <TableCell>{invoice.dics}</TableCell>\n                    <TableCell>{invoice.total}</TableCell>\n                    <TableCell>{invoice.biller}</TableCell>\n                  </TableRow>\n                ))} */}\n              </TableHead>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item mt={3} direction=\"row\">\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Notes\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"Accept Online Payment\"\n              />\n            }\n            label=\"Accept Online Payment\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Accept Payments for Less\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (Compound / Simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Terms and Conditions\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (compund/ simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Use Trust Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add all unpaid invoices\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"use Operating Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Send Reminders Every\"\n          />\n          <TextField size=\"small\" sx={{ width: \"5rem\" }} />\n          <Typography\n            varient=\"caption\"\n            component=\"span\"\n            sx={{ marginLeft: \"0.5rem \" }}\n          >\n            day(s)/week(s)\n          </Typography>\n\n          {/* <Button\n            variant=\"contained\"\n            sx={{ float: \"right\" }}\n            endIcon={<SaveIcon />}\n          >\n            Send\n          </Button> */}\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateInvoice;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Grid,\n  Box,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormControl,\n  Checkbox,\n  Typography,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  MenuItem,\n  InputLabel,\n  Select,\n  Button,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst PaymentPlan = () => {\n  const [paymentData, setPaymentData] = useState({\n    payment_no: \"File# - 001\",\n    due: \"2020/07/01\",\n    amount: \"$ 750.00\",\n    late_fee: \"$22.00\",\n    total_due: \"$ 775.00\",\n    payment: \"$775.00\",\n    posted: \"$2020/07/05\",\n    method: \"Check\",\n  });\n\n  return (\n    <Fragment>\n      <Grid container mt={3} mb={3}>\n        <Grid item lg={4}>\n          <Typography>Start Balance:</Typography>\n          <Typography>Start Date:</Typography>\n          <Typography>Interest Rate:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Amout:</Typography>\n          <Typography>Payment Date:</Typography>\n          <Typography>No Payments:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Remaining:</Typography>\n          <Typography>Last Payment:</Typography>\n          <Typography>Last Payment $:</Typography>\n        </Grid>\n      </Grid>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Payment #</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Amout</TableCell>\n            <TableCell>Late Fee</TableCell>\n            <TableCell>Total Due</TableCell>\n            <TableCell>Payment</TableCell>\n            <TableCell>Posted</TableCell>\n            <TableCell>Method</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{paymentData.payment_no}</TableCell>\n          <TableCell>{paymentData.due}</TableCell>\n          <TableCell>{paymentData.amount} </TableCell>\n          <TableCell>{paymentData.late_fee}</TableCell>\n          <TableCell>{paymentData.total_due}</TableCell>\n          <TableCell>{paymentData.payment}</TableCell>\n          <TableCell>{paymentData.posted}</TableCell>\n          <TableCell>{paymentData.method}</TableCell>\n        </TableBody>\n      </Table>\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Close\n      </Button>\n      <Grid container>\n        <Grid item lg={6}>\n          <Typography>Post agreement Balance:</Typography>\n        </Grid>\n        <Grid item lg={6}>\n          <Typography>Start Date:</Typography>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst InvoicePayment = () => {\n  const [invoiceData, setInvoiceData] = useState({\n    invoice_no: \"i-2106-0004542\",\n    due: \"2020/07/01\",\n    tax: \"$ 15.00\",\n    interest: \"$2.35\",\n    time: \"$ 1,234.50\",\n    hard: \"$457.00\",\n    soft: \"$45.00\",\n    total: \"$ 1,753.85\",\n  });\n\n  return (\n    <Fragment>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Invoice</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Tax</TableCell>\n            <TableCell>Interest</TableCell>\n            <TableCell>Time</TableCell>\n            <TableCell>Hard</TableCell>\n            <TableCell>Soft</TableCell>\n            <TableCell>Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{invoiceData.invoice_no}</TableCell>\n          <TableCell>{invoiceData.due}</TableCell>\n          <TableCell>{invoiceData.tax} </TableCell>\n          <TableCell>{invoiceData.interest}</TableCell>\n          <TableCell>{invoiceData.time}</TableCell>\n          <TableCell>{invoiceData.hard}</TableCell>\n          <TableCell>{invoiceData.soft}</TableCell>\n          <TableCell>{invoiceData.total}</TableCell>\n        </TableBody>\n      </Table>{\" \"}\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Pay\n      </Button>{\" \"}\n    </Fragment>\n  );\n};\n\nconst Payment = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [isPlan, setIsPlan] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    payment_type: \"\",\n    date: \"\",\n    retainer: \"\",\n    payment: \"\",\n    date_range: \"\",\n    menu: \"\",\n    bank_account: \"\",\n    payment_method: \"\",\n  });\n\n  const {\n    payment_type,\n    date,\n    retainer,\n    payment,\n    date_range,\n    menu,\n    bank_account,\n    payment_method,\n  } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{\n              \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n            }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"payment_type\"\n                defaultValue=\"cash\"\n                name=\"payment_type\"\n                onChange={(e) => onChange(e)}\n                id=\"payment_type\"\n                autoComplete=\"payment_type\"\n              >\n                <FormControlLabel\n                  value=\"cash\"\n                  control={<Radio />}\n                  label=\"Cash\"\n                />\n                <FormControlLabel value=\"cc\" control={<Radio />} label=\"CC\" />\n                <FormControlLabel\n                  value=\"wire\"\n                  control={<Radio />}\n                  label=\"Wire\"\n                />\n                <FormControlLabel\n                  value=\"check\"\n                  control={<Radio />}\n                  label=\"Check\"\n                />\n              </RadioGroup>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              id=\"date\"\n              label=\"date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <FormControlLabel\n              value=\"retainer\"\n              control={<Checkbox />}\n              label=\"Retainer\"\n            />\n            <FormControlLabel\n              value=\"payment\"\n              control={<Checkbox />}\n              label=\"Payment\"\n            />\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n              <DateRangePicker\n                calendars={1}\n                value={dateRange}\n                onChange={(newValue) => {\n                  setDateRange(newValue);\n                }}\n                renderInput={(startProps, endProps) => (\n                  <Fragment>\n                    <TextField size=\"small\" {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField size=\"small\" {...endProps} />\n                  </Fragment>\n                )}\n              />\n            </LocalizationProvider> */}\n            <FormControl sx={{ width: \"12rem\" }}>\n              <InputLabel id=\"demo-simple-select-label\">Date Range</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={date_range}\n                label=\"Age\"\n                onChange={(e) => onChange(e)}\n              >\n                <MenuItem value={10}>Ten</MenuItem>\n                <MenuItem value={20}>Twenty</MenuItem>\n                <MenuItem value={30}>Thirty</MenuItem>\n              </Select>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"menu\"\n              label=\"menu\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"menu\"\n              autoComplete=\"menu\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bank_account\"\n              label=\"bank_account\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"bank_account\"\n              autoComplete=\"bank_account\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"payment_method\"\n              label=\"payment_method\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"payment_method\"\n              autoComplete=\"payment_method\"\n            />\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"isPlan\"\n                defaultValue={isPlan}\n                name=\"isPlan\"\n                onChange={(e) => setIsPlan(e)}\n                id=\"isPlan\"\n                autoComplete=\"isPlan\"\n              >\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Invoice Payment\"\n                />\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Payment Plan\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Box>\n        </Grid>\n        <Grid item lg={12}>\n          <TableContainer>\n            {isPlan ? <PaymentPlan /> : <InvoicePayment />}\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Payment;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  FormControlLabel,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  Button,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport { styled } from \"@mui/material/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\nimport CreateInvoice from \"./CreateInvoice\";\nimport Payment from \"./Payment\";\n\nconst Filters = () => {\n  const [invoiceToggle, setInvoiceToggle] = useToggle(false);\n  const [paymentToggle, setPaymentToggle] = useToggle(false);\n  const [paid, setPaid] = useToggle(false);\n\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid\n          spacing={2}\n          item\n          lg={12}\n          direction=\"Row\"\n          sx={{\n            \"& .MuiTextField-root\": { m: 1 },\n            \"& .MuiFormControl-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            onClick={() => setInvoiceToggle(invoiceToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Create Invoice\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={invoiceToggle}\n            onClose={() => setInvoiceToggle(invoiceToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {\"Create Invoice\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <CreateInvoice />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <Button\n            variant=\"contained\"\n            onClick={() => setPaymentToggle(paymentToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Receive Money\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={paymentToggle}\n            onClose={() => setPaymentToggle(paymentToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Receive Money\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <Payment />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <FormControlLabel\n            label=\" Paid/ Unpaid\"\n            control={<Switch checked={paid} onChange={() => setPaid(paid)} />}\n          />\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Invoice</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Bill Date</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Times</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <Typography\n            component=\"span\"\n            variant=\"caption\"\n            sx={{ width: \"8rem\", m: 2, fontSize: \"1.2rem\" }}\n          >\n            Status:\n          </Typography>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Any </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Dropd-own</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n} from \"@mui/material\";\nimport Filters from \"./Filters\";\n\nconst InvoiceList = () => {\n  const [invoice, setInvoice] = useState(null);\n\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoices`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  return (\n    <Fragment>\n      <Filters />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Invoice</TableCell>\n              <TableCell>Created</TableCell>\n              <TableCell>Due</TableCell>\n              <TableCell>Tax</TableCell>\n              <TableCell>Interest</TableCell>\n              <TableCell>Discount</TableCell>\n              <TableCell>Total</TableCell>\n              <TableCell>Balance</TableCell>\n              <TableCell>Last Payment</TableCell>\n              <TableCell>Approval Date</TableCell>\n              <TableCell>Approval by</TableCell>\n              <TableCell>Created by</TableCell>\n            </TableRow>\n            {/* {invoice?.map((invoice) => (\n              <TableRow id={invoice.id}>\n                <TableCell>\n                  <Checkbox />\n                </TableCell>\n                <TableCell>{invoice.id}</TableCell>\n                <TableCell>{invoice.created}</TableCell>\n                <TableCell>{invoice.due}</TableCell>\n                <TableCell>{invoice.tax}</TableCell>\n                <TableCell>{invoice.interest}</TableCell>\n                <TableCell>{invoice.discount}</TableCell>\n                <TableCell>{invoice.total}</TableCell>\n                <TableCell>{invoice.balance}</TableCell>\n                <TableCell>{invoice.last_payment}</TableCell>\n                <TableCell>{invoice.approvel_date}</TableCell>\n                <TableCell>{invoice.approvel.by}</TableCell>\n                <TableCell>{invoice.created_by}</TableCell>\n              </TableRow>\n            ))} */}\n          </TableHead>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default InvoiceList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport InvoiceList from \"./InvoiceList\";\nimport Payment from \"./Payment\";\nimport CreateInvoice from \"./CreateInvoice\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <InvoiceList />\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\n// import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport const CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nexport const CreateMatter = (\n  contact,\n  matter_name,\n  matter_type,\n  matter_source,\n  matter_status,\n  assign_to,\n  assign_by,\n  billing_rate,\n  alerts,\n  open_date,\n  close_date,\n  total_days,\n  jurisdiction,\n  status_limitaion,\n  opposing_counsel,\n  where,\n  when,\n  involved,\n  witnesses,\n  narrative,\n) => {\n  let status = \"\";\n  const body = JSON.stringify({\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n    open_date,\n    close_date,\n    total_days,\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    when,\n    involved,\n    witnesses,\n    narrative,\n  });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n    .then((res) => {\n      status = res.statusText;\n    })\n    .catch((err) => {\n      status = err.message;\n    });\n\n  return status;\n};\n\nexport const retrive_matter = () => {};\n","/** @format */\n\nimport React from \"react\";\nimport { Alert } from \"@mui/material\";\n\nexport const ActionAlerts = (status) => {\n  return <Alert severity=\"error\">{status}</Alert>;\n};\n\nexport const TotalDays = (date1, date2) => {\n  let dt1 = new Date(date1);\n  let dt2 = new Date(date2);\n  return Math.floor(\n    (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) -\n      Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) /\n      (1000 * 60 * 60 * 24),\n  );\n};\n\nexport const GetDate = (date) => {\n  let newDate =\n    date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n  return newDate;\n};\n\nexport const GetTime = (time) => {\n  let newTime =\n    time.getHours() + \":\" + time.getMinutes() + \":\" + time.getSeconds();\n  return newTime;\n};\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Box,\n  containerClasses,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\n\nconst MatterList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const [redTask, setRedTask] = useState(false);\n  const [greenTask, setGreenTask] = useState(false);\n  const [yellowTask, setYellowTask] = useState(false);\n  const [myTask, setMyTask] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/tasks/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTasks(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Box component={Paper} p={2}>\n      <FormGroup aria-label=\"position\" row>\n        <FormControlLabel\n          control={\n            <Checkbox value={myTask} onChange={() => setMyTask(!myTask)} />\n          }\n          label=\"My Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox value={redTask} onChange={() => setRedTask(!redTask)} />\n          }\n          label=\"Red Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={greenTask}\n              onChange={() => setGreenTask(!greenTask)}\n            />\n          }\n          label=\"Green Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={yellowTask}\n              onChange={() => setYellowTask(!yellowTask)}\n            />\n          }\n          label=\"Yellow Tasks\"\n        />\n      </FormGroup>\n      <Typography component=\"h3\">All Matters Task's List</Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assign To</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : tasks?.map((data) => {\n                  return (\n                    <TableRow id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        {data.task_nature === \"urgent\" ? (\n                          <CircleIcon color=\"error\" />\n                        ) : (\n                          <CircleIcon color=\"success\" />\n                        )}\n                      </TableCell>\n                      <TableCell>{data.matter}</TableCell>\n                      <TableCell>\n                        {data.last_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>\n                        {data.next_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default MatterList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, CardContent, Typography } from \"@mui/material\";\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Tasks cleared Last day\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Goal Today\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Personal Best\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Company Record\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Link, Typography, List, ListItem, Paper } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nconst Calendar = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography variant=\"h6\" component=\"h7\">\n          My Calendar at a Glance\n        </Typography>\n        <List>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Start motion for trail</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Calendar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  Typography,\n} from \"@mui/material\";\n\nconst Filters = () => {\n  // const [user, setUser] = useState(\"Any user\");\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item>\n          <Typography>Assign To</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Organized By</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Status</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, Button, Typography } from \"@mui/material\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst MatterCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2} mt={1.5}>\n        <Grid item lg={9}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"error.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Urgent\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"warning.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Concern\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"success.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Start\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"white\",\n                  color: \"black\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      New\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3}>\n          <Button\n            variant=\"outlined\"\n            sx={{\n              minWidth: 100,\n              height: 40,\n              borderRadius: \"0.5rem\",\n              bgcolor: \"white\",\n              color: \"black\",\n            }}\n          >\n            Import\n          </Button>\n          <LinkButton to=\"/create-matter\"> + New </LinkButton>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterCards;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  TableBody,\n} from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst MatterListLong = () => {\n  const [matters, setMatters] = useState([]);\n\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/new-matter/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setMatters(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Matter Contact</TableCell>\n              <TableCell>Matter Type</TableCell>\n              <TableCell>Bill Rate</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assigned to</TableCell>\n              <TableCell>Billable</TableCell>\n              <TableCell>Open Invoice</TableCell>\n              <TableCell>Trust Account</TableCell>\n              <TableCell>Last Payment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : matters?.map((data, index) => {\n                  return (\n                    <TableRow id={index}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        <CircleIcon color=\"error\" />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n                      <TableCell>{data.contact}</TableCell>\n                      <TableCell>{data.matter_type}</TableCell>\n                      <TableCell>{data.billing_rate}</TableCell>\n                      <TableCell>{data.open_date}</TableCell>\n                      <TableCell>{data.close_date}</TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 100)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {\" \"}\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />{\" \"}\n                        - {data.close_date}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default MatterListLong;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Button, Typography } from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\n\nimport { LocalizationProvider, DateRangePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { CreateMatter, CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, TotalDays, GetDate } from \"../../utils/ActionAlerts\";\n\nconst NewMatter = () => {\n  // const matter_number = Math.floor(Math.random() * 10000000);\n  const mask = \"____-__-__\";\n  const matter_number = 23568;\n  const [openDate, setOpenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [whenDate, setWhenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [closeDate, setCloseDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [totalDays, setTotalDays] = useState(0);\n  const [matterData, setMatterData] = useState({\n    contact: 0,\n    matter_name: \"\",\n    matter_type: \"\",\n    matter_source: \"\",\n    matter_status: \"\",\n    assign_to: 0,\n    assign_by: 0,\n    billing_rate: 0,\n    alerts: \"\",\n\n    jurisdiction: \"\",\n    status_limitaion: null,\n    opposing_counsel: \"\",\n    where: \"\",\n    involved: \"\",\n    witnesses: \"\",\n    narrative: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    involved,\n    witnesses,\n    narrative,\n  } = matterData;\n\n  const onChange = (e) =>\n    setMatterData({ ...matterData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let open_date = GetDate(openDate);\n    let close_date = GetDate(closeDate);\n    let when = GetDate(whenDate);\n    let total_days = totalDays;\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      matter_type,\n      matter_source,\n      matter_status,\n      assign_to,\n      assign_by,\n      billing_rate,\n      alerts,\n      open_date,\n      close_date,\n      total_days,\n      jurisdiction,\n      status_limitaion,\n      opposing_counsel,\n      where,\n      when,\n      involved,\n      witnesses,\n      narrative,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  useEffect(() => {\n    let days = TotalDays(openDate, closeDate);\n    setTotalDays(days);\n  }, [openDate, closeDate]);\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Matter\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item lg={8}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"contact\"\n              type=\"number\"\n              min=\"0\"\n              value={contact}\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_number\"\n              label=\"matter_number\"\n              type=\"text\"\n              value={matter_number}\n              // onChange={(e) => onChange(e)}\n              id=\"matter_number\"\n              disabled\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_name\"\n              label=\"matter_name\"\n              type=\"text\"\n              value={matter_name}\n              onChange={(e) => onChange(e)}\n              id=\"matter_name\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"alerts\"\n              label=\"alerts\"\n              type=\"text\"\n              value={alerts}\n              onChange={(e) => onChange(e)}\n              id=\"alerts\"\n              autoComplete=\"alerts\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_type\"\n              label=\"matter_type\"\n              type=\"text\"\n              value={matter_type}\n              onChange={(e) => onChange(e)}\n              id=\"matter_type\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_source\"\n              label=\"matter_source\"\n              type=\"text\"\n              value={matter_source}\n              onChange={(e) => onChange(e)}\n              id=\"matter_source\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_status\"\n              label=\"matter_status\"\n              type=\"text\"\n              value={matter_status}\n              onChange={(e) => onChange(e)}\n              id=\"matter_status\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"assign_to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_rate\"\n              label=\"billing_rate\"\n              step=\"0.01\"\n              type=\"number\"\n              value={billing_rate}\n              onChange={(e) => onChange(e)}\n              id=\"billing_rate\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Open Date\"\n                value={openDate}\n                name=\"open\"\n                id=\"open\"\n                onChange={(e) => setOpenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Close Date\"\n                value={closeDate}\n                name=\"closed\"\n                id=\"closed\"\n                onChange={(e) => setCloseDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"total_days\"\n              label=\"total_days\"\n              type=\"number\"\n              value={totalDays}\n              onChange={(e) => setTotalDays(TotalDays(openDate, closeDate))}\n              id=\"total_days\"\n              disabled\n            />\n          </Grid>\n\n          <Grid item lg={4}>\n            <br />\n            <Typography component=\"h5\" variant=\"h6\">\n              Legal Concerns\n            </Typography>\n            <br />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"jurisdiction\"\n              label=\"jurisdiction\"\n              type=\"text\"\n              value={jurisdiction}\n              onChange={(e) => onChange(e)}\n              id=\"jurisdiction\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"status_limitaion\"\n              label=\"status_limitaion\"\n              type=\"text\"\n              value={status_limitaion}\n              onChange={(e) => onChange(e)}\n              id=\"status_limitaion\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"opposing_counsel\"\n              label=\"opposing_counsel\"\n              type=\"text\"\n              value={opposing_counsel}\n              onChange={(e) => onChange(e)}\n              id=\"opposing_counsel\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <Typography component=\"h5\" variant=\"h6\" sx={{ fontSize: \"1rem\" }}>\n              Event Detail\n            </Typography>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"where\"\n              label=\"where\"\n              type=\"text\"\n              value={where}\n              onChange={(e) => onChange(e)}\n              id=\"where\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"When\"\n                value={whenDate}\n                name=\"when\"\n                id=\"when\"\n                onChange={(e) => setWhenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"involved\"\n              label=\"Who was involved\"\n              type=\"text\"\n              value={involved}\n              onChange={(e) => onChange(e)}\n              id=\"involved\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"witnesses\"\n              label=\"witnesses\"\n              type=\"text\"\n              value={witnesses}\n              onChange={(e) => onChange(e)}\n              id=\"witnesses\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              label=\"Customer Narrative of the Event\"\n              multiline\n              type=\"text\"\n              rows={10}\n              value={narrative}\n              onChange={(e) => onChange(e)}\n              defaultValue=\"Narrative\"\n              name=\"narrative\"\n              id=\"narrative\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewMatter;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { styled } from \"@mui/material/styles\";\n\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  CardContent,\n  Typography,\n  Card,\n  Grid,\n  Box,\n  List,\n  ListItem,\n  Paper,\n  InputBase,\n} from \"@mui/material\";\n\nconst MatterTask = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components=\"p\">\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components=\"p\">\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components=\"p\">YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Activities = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components={Typography}>\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components={Typography}>\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components={Typography}>YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Classification\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                % time spent\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Matter Completion\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst MatterDetail = () => {\n  const Search = styled(\"div\")(({ theme }) => ({\n    position: \"relative\",\n    borderRadius: \"1.5rem\",\n    backgroundColor: \"#eee\",\n    \"&:hover\": {\n      backgroundColor: \"#ddd\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"40%\",\n  }));\n\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }));\n\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: \"inherit\",\n    \"& .MuiInputBase-input\": {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"md\")]: {\n        width: \"20ch\",\n      },\n    },\n  }));\n  // const [matters, setMatters] = useState(null);\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n        </Grid>\n        <Grid item lg={12}>\n          <Grid container spacing={2}>\n            <Grid item mt={2} lg={7}>\n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Recent Document</TableCell>\n                      <TableCell>Version</TableCell>\n                      <TableCell>Last Open</TableCell>\n                      <TableCell>User</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>1</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>2</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>3</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableContainer>\n              <Grid container spacing={3}>\n                <Grid item>\n                  <Activities />\n                </Grid>\n                <Grid item>\n                  <MatterTask />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item mt={2} lg={5}>\n              <Cards />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterDetail;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport MatterList from \"./MatterList\";\nimport { Grid, Box } from \"@mui/material\";\nimport Cards from \"./Cards\";\nimport Calendar from \"./Calendar\";\nimport Filters from \"./Filters\";\nimport MatterCards from \"./MatterCards\";\nimport MatterListLong from \"./MatterListLong\";\nimport NewMatter from \"./NewMatter\";\nimport MatterDetail from \"./MatterDetail\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item lg={12}>\n            <Filters />\n          </Grid>\n          <Grid item lg={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item lg={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst MatterDashboard = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container spacing={2}>\n          <Grid item lg={7}>\n            <MatterList />\n            <Calendar />\n          </Grid>\n          <Grid item lg={5}>\n            <Cards />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashboard\">\n          <MatterDashboard />\n        </div>\n        <div label=\"Matter\">\n          <Matters />\n        </div>\n        <div label=\"New Matter\">\n          <NewMatter />\n        </div>\n        <div label=\"Smith vs. Jhon\">\n          <MatterDetail />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerActivity = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setActivityData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow bgColor=\"#796ef0\">\n              <TableCell>\n                <Typography color=\"white\">Date</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Files</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Sub-Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Notes</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Source</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">User</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">In/Out</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          {/* {loading\n            ? null\n            : activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })} */}\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default LedgerActivity;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  TextField,\n  FormControlLabel,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Fillters = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [billedby, setBilledby] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Filter By</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={filter}\n            label=\"Filter By\"\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Billed by</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={billedby}\n            label=\"Billed By\"\n            onChange={(e) => setBilledby(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={status}\n            label=\"Age\"\n            onChange={(e) => setStatus(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n          <DateRangePicker\n            calendars={1}\n            value={dateRange}\n            onChange={(newValue) => {\n              setDateRange(newValue);\n            }}\n            renderInput={(startProps, endProps) => (\n              <Fragment>\n                <TextField size=\"small\" {...startProps} />\n                <Box sx={{ mx: 2 }}> to </Box>\n                <TextField size=\"small\" {...endProps} />\n              </Fragment>\n            )}\n          />\n        </LocalizationProvider>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Fillters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={7}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Time Entries\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={200}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      f\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Soft Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={65000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Hard Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={5000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={70000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Trust\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={4000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Due\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={100000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item={5}>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>User</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell> Jhon Johnson</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={74.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={39007.05}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Mark MacCalloff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={4.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={800.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Cindy Madenuff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={127.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={41372.5}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerCards;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n  Button,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { LinkButton } from \"../../styles/styles\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerTImeList = () => {\n  const [ledgerData, setLedgerData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setLedgerData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <Box>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Print\n        </Button>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Export\n        </Button>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>Cateagory</TableCell>\n                <TableCell>Sub-Category</TableCell>\n                <TableCell>Detail</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Qty</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Total</TableCell>\n                <TableCell>BillBy</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n                ? null\n                : ledgerData?.map((data) => {\n                    return (\n                      <TableBody id={data.id}>\n                        <TableCell>\n                          <Checkbox />\n                        </TableCell>\n                        <TableCell>{data.category}</TableCell>\n                        <TableCell>{data.sub_category}</TableCell>\n                        <TableCell>{data.detail}</TableCell>\n                        <TableCell>{data.date}</TableCell>\n                        <TableCell>{data.qty}</TableCell>\n                        <TableCell>\n                          {data.billable ? \"Billable\" : \"Paid\"}\n                        </TableCell>\n                        <TableCell>\n                          <NumberFormat\n                            value={data.qty * 25}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix=\"$\"\n                          />\n                        </TableCell>\n                        <TableCell>{data.bill_by}</TableCell>\n                      </TableBody>\n                    );\n                  })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default LedgerTImeList;\n","/** @format */\n\nimport { Typography, Box, Grid } from \"@mui/material\";\nimport React, { Fragment } from \"react\";\nimport Fillters from \"./Fillters\";\nimport LedgerCards from \"./LedgerCards\";\nimport LedgerTimeList from \"./LedgerTImeList\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LegderDashbard = () => {\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <Box>\n          <LedgerCards />\n          <Fillters />\n          <LedgerTimeList />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LegderDashbard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box, Typography, Paper, TextField } from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerDoc = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={1}>\n        <Grid item lg={4} sx={{}}>\n          <Box\n            sx={{\n              width: \"80%\",\n              minHeight: \"25rem\",\n              padding: \"5rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            MS Word Document On Pleading or Non Pleading Paper\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Box\n            sx={{\n              padding: \"5rem 2rem 5rem 2rem\",\n              minHeight: \"25rem\",\n              width: \"80%\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Space for 2nd Document to be opend if user wants it\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Grid container>\n            <Grid item lg={12}>\n              <Box component={Paper} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n              </Box>\n            </Grid>\n            <Grid item lg={12}>\n              <Box component={Paper} mt={2} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={5}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"filled\"\n                  name=\"detail\"\n                  type=\"text\"\n                  value=\"Quick Notes\"\n                  id=\"detail\"\n                  sx={{ borderRadius: \"1rem\" }}\n                />\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerDoc;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  RadioGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Radio,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst Time = () => {\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [timeToggle, setTimeToggle] = useToggle(true);\n  const [billable, setBillable] = useToggle(false);\n\n  // const [bill, setBill] = useToggle(false);\n  const [time, setTime] = useState(\"\");\n  const [timeData, setTimeData] = useState({\n    contact: 0,\n    matter_name: 0,\n    category: \"\",\n    sub_category: \"\",\n    // time: \"\",\n    hard: false,\n    soft: false,\n    unit: 0,\n    qty: 0,\n    rate: 0,\n    file: \"\",\n    detail: \"\",\n    bill_by: 0,\n    note: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    category,\n    sub_category,\n    hard,\n    soft,\n    unit,\n    // time,\n    qty,\n    rate,\n    file,\n    detail,\n    bill_by,\n\n    note,\n  } = timeData;\n  const onChange = (e) =>\n    setTimeData({ ...timeData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    let date = GetDate(pickDate);\n\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      category,\n      sub_category,\n      hard,\n      soft,\n      unit,\n      qty,\n      rate,\n      time,\n      date,\n      detail,\n      bill_by,\n      billable,\n      note,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/add-time/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Typography component=\"h3\" variant=\"h4\">\n          Time\n        </Typography>\n        <Grid\n          container\n          spacing={2}\n          mt={2}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n          }}\n        >\n          <Grid item xs={12}>\n            <Grid container p={3}>\n              <Grid item xs={6}>\n                <FormControlLabel\n                  size=\"large\"\n                  label=\"Time\"\n                  labelPlacement=\"start\"\n                  control={\n                    <Switch\n                      size=\"large\"\n                      checked={timeToggle}\n                      onChange={(e) => setTimeToggle(e)}\n                    />\n                  }\n                />\n                {timeToggle ? null : (\n                  <Box>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">Expense</FormLabel>\n                      <RadioGroup\n                        row\n                        aria-label=\"expense\"\n                        defaultValue=\"\"\n                        name=\"expense\"\n                        id=\"expense\"\n                      >\n                        <FormControlLabel\n                          value=\"hard\"\n                          control={<Radio />}\n                          label=\"Hard\"\n                        />\n                        <FormControlLabel\n                          value=\"soft\"\n                          control={<Radio />}\n                          label=\"Soft\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  </Box>\n                )}\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"matter\"\n                  label=\"matter\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"matter\"\n                  autoComplete=\"matter\"\n                  disabled\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"contact\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                  disabled\n                />\n              </Grid>\n            </Grid>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"category\"\n              label=\"category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"category\"\n              autoComplete=\"category\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"sub_category\"\n              label=\"sub_category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"sub_category\"\n              autoComplete=\"sub_category\"\n            />\n            {timeToggle ? (\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"rate\"\n                label=\"rate\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"rate\"\n                autoComplete=\"rate\"\n              />\n            ) : (\n              <Fragment>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"unit\"\n                  label=\"unit\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"unit\"\n                  autoComplete=\"unit\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"qty\"\n                  label=\"Qty\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"qty\"\n                  autoComplete=\"qty\"\n                />\n                <Box m={1}>\n                  <Typography component=\"lable\"> Receipt(s) </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n              </Fragment>\n            )}\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"HH:MM\"\n              mask={[\"H\", \"H\", \"M\", \"M\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time\"\n              name=\"time\"\n              id=\"time\"\n              value={time}\n              type=\"text\"\n              onValueChange={(e) => setTime(e.value)}\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Date\"\n                value={pickDate}\n                name=\"pickdate\"\n                id=\"pickdate\"\n                onChange={(e) => setPickDate(e)}\n                renderInput={(params) => <TextField size=\"small\" {...params} />}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"detail\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n              autoComplete=\"detail\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bill_by\"\n              label=\"bill_by\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bill_by\"\n              autoComplete=\"bill_by\"\n            />\n            <FormControlLabel\n              size=\"large\"\n              label=\"Billable\"\n              labelPlacement=\"start\"\n              control={\n                <Switch\n                  size=\"large\"\n                  checked={billable}\n                  onChange={() => setBillable(billable)}\n                />\n              }\n            />\n            <br />\n          </Grid>\n        </Grid>\n        <Grid container>\n          <Grid item lg={12}>\n            <TextField\n              fullWidth\n              multiline\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"note\"\n              rows={4}\n              // label=\"note\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              placeholder=\"Private / internal notes\"\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Time;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport LedgerActivity from \"./LedgerActivity\";\nimport LegderDashbard from \"./LedgerDashbard\";\nimport LedgerDoc from \"./LedgerDoc\";\nimport LedgerTImeList from \"./LedgerTImeList\";\nimport Time from \"./Time\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Ledger\">\n          <LegderDashbard />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Documents\">\n          <LedgerDoc />\n        </div>\n        <div label=\"Time\">\n          <Time />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst SubCategory = () => {\n  const [subCategory, setSubCategory] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/sub-category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setSubCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/sub-category/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n      })\n      .catch((err) => setStatus(err.statusText));\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/sub-category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n      })\n      .catch((err) => {\n        FetchData();\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Sub-Category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Sub-Category\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Sub-Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? (\n        subCategory.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default SubCategory;\n","/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst catHandler = (id) => {\n  console.log(id);\n};\n\nconst Category = () => {\n  const [category, setCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/category/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Add New Category\"}</DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* {!loading ? (\n        category?.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )} */}\n    </Fragment>\n  );\n};\n\nexport default Category;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Classification = () => {\n  const [classification, setClassification] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/classification/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setClassification(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/classification/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n        return <ActionAlerts value={{ status: status }} />;\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/api/classification/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return <ActionAlerts value={{ status: res.statusText }} />;\n      })\n      .catch((err) => {\n        FetchData();\n        return <ActionAlerts value={{ status: err.statusText }} />;\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Classification\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Classification\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Classification Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? (\n        classification.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Classification;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Typography, Grid, Button, Box } from \"@mui/material\";\n\nimport SubCategory from \"./SubCategory\";\nimport Category from \"./Category\";\nimport Classification from \"./Classification\";\n\nconst ManageCategory = () => {\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={8}>\n          <Typography component=\"h3\" variant=\"h5\">\n            Manage Category, Sub-category, Classification\n          </Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"error\">\n              Delete Checked\n            </Button>\n          </Box>\n        </Grid>\n\n        <Grid item lg={12}>\n          <Grid container spacing={5} mt={1}>\n            <Grid item lg={4}>\n              <Category />\n            </Grid>\n            <Grid item lg={4}>\n              <SubCategory />\n            </Grid>\n            <Grid item lg={4}>\n              <Classification />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageCategory;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Button,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { ActionAlerts, GetTime, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Contact = () => {\n  const [clientNo, setClientNo] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [ssn, setSsn] = useState(\"\");\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [homeNo, setHomeNo] = useState(\"\");\n  const [officeNo, setOfficeNo] = useState(\"\");\n  const [faxNo, setFaxNo] = useState(\"\");\n  const [otherNo, setOtherNo] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [plus4, setPlus4] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [contactData, setContactData] = useState({\n    // company info\n    company_name: \"\",\n    website: \"\",\n    ger_email: \"\",\n    billing_email: \"\",\n    // address\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    note: \"\",\n    f_name: \"\",\n    l_name: \"\",\n    email_1: \"\",\n    email_2: \"\",\n    email_3: \"\",\n    // other address\n    street2: \"\",\n    suite2: \"\",\n    city2: \"\",\n    state2: \"\",\n    office: \"\",\n    team: \"\",\n    member: \"\",\n    assign_to: \"\",\n    contact: \"\",\n    relation: \"\",\n  });\n\n  const {\n    company_name,\n    website,\n    ger_email,\n    billing_email,\n    street,\n    suite,\n    city,\n    state,\n    note,\n    f_name,\n    l_name,\n    email_1,\n    email_2,\n    email_3,\n    street2,\n    suite2,\n    city2,\n    state2,\n    office,\n    team,\n    member,\n    assign_to,\n    contact,\n    relation,\n  } = contactData;\n\n  const onChange = (e) => {\n    e.persist();\n    setContactData({ ...contactData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    //   let date = GetDate(pickDate);\n    //   const body = JSON.stringify({\n    //     company_name,\n    //     website,\n    //     ger_email,\n    //     billing_email,\n    //     street,\n    //     suite,\n    //     city,\n    //     state,\n    //     zip,\n    //     plus4,\n    //     client_no,\n    //     f_name,\n    //     l_name,\n    //     dob,\n    //     ssn,\n    //     mobile_no,\n    //     home_no,\n    //     office_no,\n    //     fax_no,\n    //     other_no,\n    //     email_1,\n    //     email_2,\n    //     email_3,\n    //     street2,\n    //     suite2,\n    //     city2,\n    //     state2,\n    //     zip2,\n    //     plus42,\n    //     office,\n    //     team,\n    //     member,\n    //     assign_to,\n    //     contact,\n    //     relation,\n    //   });\n    //   axios\n    //     .post(`${process.env.REACT_APP_API_URL}/api/contact/`, body, CONFIG)\n    //     .then((res) => {\n    //       <ActionAlerts value={{ status: res.statusText, message: \"Success\" }} />;\n    //     })\n    //     .catch((err) => {\n    //       <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />;\n    //     });\n    //   console.log(body);\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container p={2}>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h5\">\n              Company info\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"company_name\"\n              label=\"Company Name\"\n              type=\"text\"\n              value={company_name}\n              onChange={(e) => onChange(e)}\n              id=\"company_name\"\n              autoComplete=\"company_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Client #\"\n              id=\"clientno\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"clientno\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={clientNo}\n              onValueChange={(e) => setClientNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"First Name\"\n              label=\"f_name\"\n              type=\"text\"\n              value={f_name}\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Last Name\"\n              label=\"l_name\"\n              type=\"text\"\n              value={l_name}\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"DOB\"\n              id=\"dob\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              name=\"dob\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={dob}\n              onValueChange={(e) => setDob(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"#### #### ##\"\n              customInput={TextField}\n              label=\"SSN\"\n              id=\"ssn\"\n              name=\"ssn\"\n              value={ssn}\n              type=\"text\"\n              onValueChange={(e) => setSsn(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobileNo}\n              onValueChange={(e) => setMobileNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={homeNo}\n              onValueChange={(e) => setHomeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Office #\"\n              id=\"offlice_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"office_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={officeNo}\n              onValueChange={(e) => setOfficeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Fax #\"\n              id=\"fax_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"fax_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={faxNo}\n              onValueChange={(value) => setFaxNo(value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Other #\"\n              id=\"other_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"other_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={otherNo}\n              onValueChange={(e) => setOtherNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_1\"\n              label=\"Email 1\"\n              type=\"email\"\n              value={email_1}\n              onChange={(e) => onChange(e)}\n              id=\"email_1\"\n              autoComplete=\"email_1\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_2\"\n              label=\"Email 2\"\n              type=\"email\"\n              value={email_2}\n              onChange={(e) => onChange(e)}\n              id=\"email_2\"\n              autoComplete=\"email_2\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_3\"\n              label=\"Email 3\"\n              value={email_3}\n              type=\"email\"\n              onChange={(e) => onChange(e)}\n              id=\"email_3\"\n              autoComplete=\"email_3\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"street\"\n              type=\"text\"\n              value={street}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              value={city}\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip\"\n              label=\"zip\"\n              type=\"text\"\n              id=\"zip\"\n              type=\"text\"\n              value={zip}\n              onValueChange={(e) => setZip(e.value)}\n            />\n\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus4\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus4\"\n              type=\"text\"\n              value={plus4}\n              onValueChange={(e) => setPlus4(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              multiline\n              rows={5}\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Notes...\"\n              label=\"note\"\n              type=\"text\"\n              value={note}\n              onChange={(e) => onChange(e)}\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h6\">\n              Alternate Information\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"webiste\"\n              label=\"Webiste\"\n              type=\"text\"\n              value={website}\n              onChange={(e) => onChange(e)}\n              id=\"webiste\"\n              autoComplete=\"webiste\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"ger_email\"\n              label=\"General Email\"\n              type=\"text\"\n              value={ger_email}\n              onChange={(e) => onChange(e)}\n              id=\"ger_email\"\n              autoComplete=\"ger_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_email\"\n              label=\"Invoice/ Billing Email\"\n              type=\"text\"\n              value={billing_email}\n              onChange={(e) => onChange(e)}\n              id=\"billing_email\"\n              autoComplete=\"billing_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"Street\"\n              type=\"text\"\n              value={street2}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite2}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              type=\"text\"\n              value={city2}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip2\"\n              label=\"Zip\"\n              type=\"text\"\n              id=\"zip2\"\n              type=\"text\"\n              value={zip2}\n              onValueChange={(e) => setZip2(e.value)}\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus42\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus42\"\n              type=\"text\"\n              value={plus42}\n              onValueChange={(e) => setPlus42(e.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Source\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"office\"\n                  label=\"Office\"\n                  type=\"text\"\n                  value={office}\n                  onChange={(e) => onChange(e)}\n                  id=\"office\"\n                  autoComplete=\"office\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"team\"\n                  label=\"Team\"\n                  type=\"text\"\n                  value={team}\n                  onChange={(e) => onChange(e)}\n                  id=\"team\"\n                  autoComplete=\"team\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"member\"\n                  label=\"Member\"\n                  type=\"text\"\n                  value={member}\n                  onChange={(e) => onChange(e)}\n                  id=\"member\"\n                  autoComplete=\"member\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Assigned To\n                </Typography>\n                <FormControl\n                  size=\"small\"\n                  sx={{ mt: 2, mb: 2, minWidth: \"14rem\" }}\n                >\n                  <InputLabel id=\"demo-simple-select-autowidth-label\">\n                    Assigned To\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-autowidth-label\"\n                    id=\"demo-simple-select-autowidth\"\n                    value={assign_to}\n                    onChange={(e) => onChange(e)}\n                    autoWidth\n                    label=\"assign_to\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>Auto Assign</em>\n                    </MenuItem>\n                    <MenuItem value={10}>Twenty</MenuItem>\n                    <MenuItem value={21}>Twenty one</MenuItem>\n                    <MenuItem value={22}>Twenty one and a half</MenuItem>\n                  </Select>\n                </FormControl>\n\n                <Button variant=\"contained\" color=\"primary\">\n                  Auto Assign\n                </Button>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Linked Contacts\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"Contact\"\n                  type=\"text\"\n                  value={contact}\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"relation\"\n                  label=\"Relation\"\n                  type=\"text\"\n                  value={relation}\n                  onChange={(e) => onChange(e)}\n                  id=\"relation\"\n                  autoComplete=\"relation\"\n                />\n              </Grid>\n            </Grid>\n            <Box sx={{ float: \"right\" }}>\n              <Button variant=\"contained\" type=\"submit\" endIcon={<SaveIcon />}>\n                Save\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Contact;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Button,\n  TextField,\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Tab,\n  Paper,\n  Box,\n  Typography,\n  Switch,\n} from \"@mui/material\";\nimport { TabList, TabContext, TabPanel } from \"@mui/lab\";\nimport { connect } from \"react-redux\";\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport NumberFormat from \"react-number-format\";\n\n// import { update_profile } from \"../../store/actions/profile\";\n\nconst Profile = ({ profile }) => {\n  const [value, setValue] = React.useState(\"1\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [underGradYear, setUnderGradYear] = useState(\"\");\n\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [barNo, setBarNo] = useState(\"\");\n  const [practiceTime, setPracticeTime] = useState(\"\");\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    mobile: 0,\n    phone: 0,\n    state: \"\",\n    city: \"\",\n    language: \"\",\n    locate: false,\n    search_active: false,\n    law_school: \"\",\n    grad_year: \"\",\n    bar_admit_date: \"\",\n    undergrad_school: \"\",\n    undergrad_area: \"\",\n    undergrad_year: \"\",\n    bar_no: 0,\n    admitted_practice: \"\",\n    practice_time: \"\",\n    longest_tenure: \"\",\n    average_tenure: \"\",\n    current_tenure: \"\",\n    past_bar_companies_no: \"\",\n    primary_area: \"\",\n  });\n  const {\n    username,\n    email,\n    mobile,\n    phone,\n    state,\n    city,\n    language,\n    locate,\n    search_active,\n    law_school,\n    grad_year,\n    bar_admit_date,\n    undergrad_school,\n    undergrad_area,\n    undergrad_year,\n    bar_no,\n    admitted_practice,\n    practice_time,\n    longest_tenure,\n    average_tenure,\n    current_tenure,\n    past_bar_companies_no,\n    primary_area,\n  } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let id = profile.id;\n    const body = JSON.stringify({\n      username,\n      email,\n      mobile,\n      phone,\n      state,\n      city,\n      language,\n      locate,\n      search_active,\n      law_school,\n      grad_year,\n      bar_admit_date,\n      undergrad_school,\n      undergrad_area,\n      undergrad_year,\n      bar_no,\n      admitted_practice,\n      practice_time,\n      longest_tenure,\n      average_tenure,\n      current_tenure,\n      past_bar_companies_no,\n      primary_area,\n    });\n    console.log(body);\n    axios\n      .patch(\n        `${process.env.REACT_APP_API_URL}/api/profile/${id}/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Fragment>\n      {/* {profile ? ( */}\n      <Box p={5}>\n        <Paper elevation={5} sx={{ borderRadius: 3 }}>\n          <TabContext value={value} p={8}>\n            <Box component=\"form\" onSubmit={(e) => onSubmit(e)}>\n              <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                <TabList\n                  onChange={handleChange}\n                  aria-label=\"lab API tabs example\"\n                >\n                  <Tab label=\"Profile\" value=\"1\" />\n                  <Tab label=\"Education\" value=\"2\" />\n                  <Tab label=\"Work History\" value=\"3\" />\n                </TabList>\n              </Box>\n              <TabPanel value=\"1\">\n                <Grid container spacing={2}>\n                  <Grid item sx={12} xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Username\"\n                      value={username}\n                      id=\"username\"\n                      name=\"username\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.username}\n                      disabled\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Mobile #\"\n                      id=\"mobile\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"mobile\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={mobileNo}\n                      onValueChange={(e) => setMobileNo(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Phone #\"\n                      id=\"phone\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"phone\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={phoneNo}\n                      onValueChange={(e) => setPhoneNo(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Email\"\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.email}\n                      disabled\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"State\"\n                      id=\"state\"\n                      name=\"state\"\n                      type=\"text\"\n                      value={state}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.state}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"City\"\n                      id=\"city\"\n                      name=\"city\"\n                      type=\"text\"\n                      value={city}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.city}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Language(s)\"\n                      value={language}\n                      id=\"language\"\n                      name=\"language\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.language}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Willing to locate\"\n                      id=\"locate\"\n                      name=\"locate\"\n                      value={locate}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.locate}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Search Type (Active/ Passiv)\"\n                      id=\"search_active\"\n                      name=\"search_active\"\n                      value={search_active}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.search_active}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      m={5}\n                      variant=\"contained\"\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"2\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"2\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Law School\"\n                      id=\"law_school\"\n                      name=\"law_school\"\n                      value={law_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.law_school}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Grad year\"\n                      id=\"grad_year\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      name=\"grad_year\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={gradYear}\n                      onValueChange={(e) => setGradYear(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####/##/##\"\n                      placeholder=\"YYYY/MM/DD\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n                      customInput={TextField}\n                      label=\"Bar Admittance Date\"\n                      id=\"bar_admit_date\"\n                      name=\"bar_admit_date\"\n                      value={barDate}\n                      onValueChange={(e) => setBarDate(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrad school\"\n                      id=\"undergrad_school\"\n                      name=\"undergrad_school\"\n                      value={undergrad_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_school}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrade area of study\"\n                      id=\"undergrad_area\"\n                      name=\"undergrad_area\"\n                      value={undergrad_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_area}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      label=\"Undergrade year\"\n                      id=\"undergrad_year\"\n                      name=\"undergrad_year\"\n                      value={underGradYear}\n                      type=\"text\"\n                      onValueChange={(e) => setUnderGradYear(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"#### #### ##\"\n                      customInput={TextField}\n                      label=\"Bar #\"\n                      id=\"bar_no\"\n                      name=\"bar_no\"\n                      value={barNo}\n                      type=\"text\"\n                      onValueChange={(e) => setBarNo(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Admitted practice (state & District)\"\n                      value={admitted_practice}\n                      id=\"admitted_practice\"\n                      name=\"admitted_practice\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.admitted_practice}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      variant=\"contained\"\n                      mb={5}\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"3\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"3\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Practive Time (months / years)\"\n                      id=\"practice_time\"\n                      name=\"practice_time\"\n                      value={practiceTime}\n                      type=\"text\"\n                      onValueChange={(e) => setPracticeTime(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Longest tenure (months / years)\"\n                      id=\"longest_tenure\"\n                      name=\"longest_tenure\"\n                      value={longestTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setLongestTenure(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Average tenure (months / years)\"\n                      value={averageTenure}\n                      id=\"average_tenure\"\n                      name=\"average_tenure\"\n                      type=\"text\"\n                      onValueChange={(e) => setAverageTenure(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Time at Current Company (months / years)\"\n                      id=\"current_tenure\"\n                      name=\"current_tenure\"\n                      value={currentTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setCurrentTenure(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"# of Companies Post Bar\"\n                      id=\"past_bar_companies_no\"\n                      name=\"past_bar_companies_no\"\n                      value={past_bar_companies_no}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.past_bar_companies_no}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Primary areas of Law\"\n                      id=\"primary_area\"\n                      name=\"primary_area\"\n                      value={primary_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.primary_area}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Button\n                      variant=\"contained\"\n                      type=\"submit\"\n                      sx={{\n                        float: \"right\",\n                        marginTop: \"10rem\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n            </Box>\n          </TabContext>\n        </Paper>\n      </Box>\n      {/* // ) : ( // <Typography>Something wend wrong!</Typography>\n      // )} */}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  profile: state.auth.profile,\n});\n\nexport default connect(mapStateToProps)(Profile);\n","/** @format */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  TextField,\n  Switch,\n  FormControlLabel,\n  Box,\n  Grid,\n  Button,\n  Typography,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport axios from \"axios\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\n\nconst CreateTask = () => {\n  const [dueDate, setDueDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [bill, setBill] = useToggle(true);\n  const [matterData, setMatterData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useToggle(true);\n  const [file, setFile] = useState(\"\");\n  const [taskData, setTaskData] = useState({\n    matter_id: 0,\n    matter_contact: 0,\n    matter: \"\",\n    task: \"\",\n    filename: \"\",\n    assign_to: 0,\n    detail: \"\",\n  });\n\n  const {\n    matter_id,\n    matter_contact,\n    matter,\n    task,\n    filename,\n    assign_to,\n    detail,\n  } = taskData;\n\n  const onChange = (e) =>\n    setTaskData({ ...taskData, [e.target.name]: e.target.value });\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/matter/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setMatterData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log(matter_id, matter_contact, matter, task);\n    let due_at = GetDate(dueDate);\n    let is_billable = bill;\n    let is_private = isPrivate;\n\n    const body = JSON.stringify({\n      matter_id,\n      matter_contact,\n      matter,\n      task,\n      file,\n      is_billable,\n      is_private,\n      due_at,\n      assign_to,\n      detail,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-task/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n          \"& .MuiSelect-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Task\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_id\"\n              label=\"matter_id\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_id}\n              onChange={(e) => onChange(e)}\n              id=\"matter_id\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"matter\"\n              type=\"text\"\n              min=\"0\"\n              value={matter}\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"task\"\n              label=\"Task\"\n              type=\"text\"\n              value={task}\n              onChange={(e) => onChange(e)}\n              id=\"task\"\n              autoComplete=\"task\"\n            />\n            <Box ml={2} mt={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Attach File \"\n                labelPlacement=\"start\"\n                control={\n                  <input\n                    type=\"file\"\n                    name=\"filename\"\n                    id=\"file\"\n                    onChange={(e) => onChange(e)}\n                  />\n                }\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"file\"\n                label=\"please chose any file\"\n                type=\"text\"\n                min=\"0\"\n                value={filename}\n                onChange={(e) => setFile(filename)}\n                id=\"file\"\n                disabled\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_contact\"\n              label=\"matter_contact\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_contact}\n              onChange={(e) => onChange(e)}\n              id=\"matter_contact\"\n            />\n            <Box p={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Billable\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={bill}\n                    onChange={() => setBill(bill)}\n                  />\n                }\n              />\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Private\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={isPrivate}\n                    onChange={() => setIsPrivate(isPrivate)}\n                  />\n                }\n              />\n            </Box>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Due Date\"\n                value={dueDate}\n                name=\"dueDate\"\n                id=\"dueDate\"\n                onChange={(e) => setDueDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"Assign to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              autoComplete=\"assign_to\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              multiline\n              rows={5}\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"Detail\"\n              type=\"text\"\n              value={detail}\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n            />\n\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateTask;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport ViewTasks from \"./ViewTasks\";\nimport CreateTask from \"./CreateTask\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Task\">\n          <ViewTasks />\n        </div>\n        <div label=\"Create Task\">\n          <CreateTask />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport DashBoard from \"../Admin/DashBoard\";\n\nimport {\n  Box,\n  Typography,\n  Tabs,\n  Tab,\n  IconButton,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\n\nimport TabContext from \"@mui/lab/TabContext\";\nimport TabList from \"@mui/lab/TabList\";\n\nimport TabPanel from \"@mui/lab/TabPanel\";\nimport PropTypes from \"prop-types\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\n\n// components of tabs\nimport Invoice from \"../../Invoice\";\nimport Matter from \"../../Matter\";\nimport Ledger from \"../../Ledger\";\nimport Favorite from \"../../Favorite/Favorites\";\nimport Category from \"../../Category/ManageCategory\";\nimport Contact from \"../../Contact/Contact\";\nimport Profile from \"../../Profile/Profile\";\nimport Tasks from \"../../Tasks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport {\n  addNewTab,\n  removeNewTab,\n  removeLastNewTab,\n} from \"../../../redux/features/searchTabSlice\";\nimport { addTab, removeTab } from \"../../../redux/features/tabSlice\";\n\nconst data = [\n  { name: \"invoice\", content: <Invoice /> },\n  { name: \"matter\", content: <Matter /> },\n  { name: \"ledger\", content: <Ledger /> },\n  { name: \"favorite\", content: <Favorite /> },\n  { name: \"category\", content: <Category /> },\n  { name: \"contact\", content: <Contact /> },\n  { name: \"profile\", content: <Profile /> },\n  { name: \"tasks\", content: <Tasks /> },\n];\nconst component = {\n  invoice: <Invoice />,\n  matter: <Matter />,\n  ledger: <Ledger />,\n  favorite: <Favorite />,\n  category: <Category />,\n  contact: <Contact />,\n  profile: <Profile />,\n  tasks: <Tasks />,\n};\n\nconst AdminDashboard = () => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const tabList = useSelector((state) => state.tabs);\n  const newTabList = useSelector((state) => state.newTabs);\n  const dispatch = useDispatch();\n\n  // search tab will match the text and display tab\n  const [wordEntered, setWordEntered] = useState(\"\");\n\n  const searchItem = () => {\n    let selectedItem = data.filter((value) => {\n      if (value.name === wordEntered) {\n        return true;\n      }\n    });\n  };\n  const handleChangeSearch = (e) => {\n    setWordEntered(e.target.value);\n    let id = tabList.length + 1;\n    dispatch(\n      addTab({\n        id: id,\n        tab: e.target.value,\n      }),\n    );\n    dispatch(removeLastNewTab());\n    setValue(id);\n    searchItem();\n  };\n  const handleRemoveTab = (tab) => {\n    dispatch(removeTab(tab));\n    setValue(0);\n  };\n  const handleRemoveNewTab = (tab) => {\n    dispatch(removeNewTab(tab));\n    setValue(0);\n  };\n\n  const addSearchTab = () => {\n    let id = newTabList.length + 10;\n    setTimeout(\n      dispatch(\n        addNewTab({\n          id: id,\n          name: \"newtab\",\n        }),\n      ),\n      5000,\n    );\n\n    setValue(id);\n  };\n  const displayNewTabsName = () => {\n    if (newTabList) {\n      return newTabList.map((tab) => (\n        <Tab\n          key={tab.id}\n          value={tab.id}\n          label={\n            <span>\n              newtab\n              <IconButton\n                component=\"div\"\n                onClick={() => handleRemoveNewTab(tab)}\n              >\n                <CloseIcon />\n              </IconButton>\n            </span>\n          }\n        />\n      ));\n    } else return null;\n  };\n  const displayTabsName = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <Tab\n          key={tab.id}\n          value={tab.id}\n          label={\n            <span>\n              {\" \"}\n              {tab.name}\n              <IconButton component=\"div\" onClick={() => handleRemoveTab(tab)}>\n                <CloseIcon />\n              </IconButton>\n            </span>\n          }\n        />\n      ));\n    } else return null;\n  };\n  const searchTab = () => {\n    return (\n      <Box\n        noValidate\n        sx={{\n          p: \"2px 4px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          width: \"50%\",\n          borderRadius: \"5rem\",\n          backgroundColor: \"#dfdfdf\",\n        }}\n      >\n        <Select\n          fullWidth\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value=\"\"\n          label=\"Search....\"\n          onChange={handleChangeSearch}\n          sx={{\n            \" & .MuiOutlinedInput-notchedOutline\": {\n              border: \"none\",\n            },\n          }}\n        >\n          {data.map((item, index) => (\n            <MenuItem key={index} value={item.name}>\n              {item.name}\n            </MenuItem>\n          ))}\n        </Select>\n\n        <IconButton type=\"submit\" sx={{ p: \"10px\" }} aria-label=\"search\">\n          {wordEntered.length === 0 ? <SearchIcon /> : <CloseIcon />}\n        </IconButton>\n      </Box>\n    );\n  };\n  const displaySearchTabs = () => {\n    if (newTabList) {\n      return newTabList.map((tab) => (\n        <TabPanel value={tab.id}>{searchTab()}</TabPanel>\n      ));\n    } else return null;\n  };\n  const displayTabs = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <TabPanel value={tab.id}>{component[tab.name]}</TabPanel>\n      ));\n    } else return null;\n  };\n\n  const renderTabs = () => {\n    return (\n      <Box sx={{ width: \"100%\" }}>\n        <TabContext value={value}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              variant=\"scrollable\"\n              scrollButtons\n              allowScrollButtonsMobilearia-label=\"lab API tabs example\"\n            >\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label=\"Dashboard\"\n                value={0}\n              />\n\n              {displayTabsName()}\n              {displayNewTabsName()}\n\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label={\n                  <IconButton\n                    component=\"div\"\n                    onClick={() => dispatch(addNewTab())}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                }\n                onClick={addSearchTab}\n                value={100}\n              />\n            </Tabs>\n          </Box>\n          <TabPanel value={0}>\n            <DashBoard />\n          </TabPanel>\n          {displayTabs()}\n          {displaySearchTabs()}\n          <TabPanel value={100}></TabPanel>\n        </TabContext>\n      </Box>\n    );\n  };\n  useEffect(() => {\n    renderTabs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <Fragment>{renderTabs()}</Fragment>;\n};\n\nexport default AdminDashboard;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { LinearProgress, Box, Grid, Typography } from \"@mui/material\";\n\nconst ProgressBar = () => {\n  const [progress, setProgress] = useState(69);\n  return (\n    <Box paddingLeft={3} paddingRight={3}>\n      <Grid container>\n        <Grid item lg={1} xs={12}>\n          <Typography>{progress}%</Typography>\n        </Grid>\n        <Grid item lg={11} xs={12} mt={2} mb={5}>\n          <LinearProgress variant=\"determinate\" value={progress} />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ProgressBar;\n","/** @format */\n\nimport React from \"react\";\n\nimport { Typography, Box, Paper, Grid } from \"@mui/material\";\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from \"@mui/material\";\n\nconst randomDate = (start, end) => {\n  const getDateTime = new Date(\n    start.getTime() + Math.random() * (end.getTime() - start.getTime()),\n  );\n  const date = getDateTime.toLocaleDateString();\n  const hour = getDateTime.getHours();\n  const min = getDateTime.getMinutes();\n\n  return date + \" \" + hour + \":\" + min;\n};\n\nconst Task = () => {\n  return (\n    <Grid container>\n      <Grid item lg={12} xs={12}>\n        <Typography component=\"h5\" variant=\"h6\" color=\"primary\">\n          My Tasks\n        </Typography>\n        <TableContainer component={Paper}>\n          <Table size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    ID\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Date\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Subject\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Detail\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow bgColor=\"#e85355\">\n                <TableCell>\n                  <Typography variant=\"caption\">123452</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Submit Document X</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display first 3 links\n                  </Typography>{\" \"}\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#fd9905\">\n                <TableCell>\n                  <Typography variant=\"caption\">113457</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Y</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display more details\n                  </Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#28c570\">\n                <TableCell>\n                  <Typography variant=\"caption\">113455</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Z</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Note in popup</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"white\">\n                <TableCell>\n                  <Typography variant=\"caption\">113458</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document XY</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display First 3 links\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Task;\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nexport const AdminCards = () => {\n  return (\n    <>\n      <Grid container spacing={1}>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5} xs={12}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    New Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    Lost Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport const LawyerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Projected Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={230} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Annual Trending Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={768} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const FirmCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={6} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Lost Customers\n              </Typography>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const CustomerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={2}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Balance\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Payment Due\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={12345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nconst Cards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                New Matters\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={3425}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n// import axios from 'axios';\n\nimport { Grid } from \"@mui/material\";\n\nimport Calender from \"../Calender\";\nimport ProgressBar from \"../ProgressBar\";\n\nimport Tasks from \"../Tasks\";\nimport { CustomerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={3}>\n        <Grid item lg={2} xs={12}>\n          <CustomerCards />\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Calender />\n        </Grid>\n        <Grid item p={2} lg={6} xs={12}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <ProgressBar />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Button, Grid, Box, List, ListItem, ListItemText } from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst Templates = () => {\n  return (\n    <Fragment>\n      <Grid container mt={1} spacing={1}>\n        <Grid item xs={12} m={2}>\n          <Button variant=\"contained\" size=\"small\">\n            Merge Fields.XLS\n          </Button>\n          <Box sx={{ float: \"right\" }}>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Doc\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New PDF\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Email\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Edit\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Save\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Close\n            </Button>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Word Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Report Money</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - Report Time</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Report Billed hours</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              PDF Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>P001 - Write of Execution</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P002 - Memo of Cost</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P003 - Settlement Letter</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Email Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Invoice Email</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - New Client</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Firing Client</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              padding: \"15rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Templates can be opened here to edit them. user can add/ remove\n            merge fields directly to the document or PDF\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Templates;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Client/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst ClientDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default ClientDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const PieChart = () => {\n  const state = {\n    series: [86, 14],\n    options: {\n      chart: {\n        height: 500,\n        type: \"pie\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"65%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val + \"%\";\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Prodcutive v. Non-Productive Time\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n        horizontalAlign: \"center\",\n      },\n      colors: [\"#738df5\", \"#eaa3ff\"],\n      labels: [\"Non Productive\", \"Productive\"],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"pie\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            background: \"#aaa\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shade: \"gark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\", \"pink\"],\n        stops: [0, 3],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"user 1\",\n        data: [44, 55, 41, 37, 22, 43, 21],\n      },\n      {\n        name: \"user 2\",\n        data: [53, 32, 33, 52, 13, 43, 32],\n      },\n      {\n        name: \"User 3\",\n        data: [12, 17, 11, 9, 15, 11, 20],\n      },\n      {\n        name: \"User 4\",\n        data: [9, 7, 5, 8, 6, 9, 4],\n      },\n    ],\n    options: {\n      chart: {\n        type: \"bar\",\n        height: 350,\n        stacked: true,\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        borderRadius: 8,\n        colors: [\"#fff\"],\n      },\n\n      title: {\n        text: \"% Indicating User Ranking\",\n      },\n      xaxis: {\n        categories: [\n          \"Word per Min\",\n          \"Matter Completed\",\n          \"Revenue Generated\",\n          \"Articals Submitted\",\n          \"New Client\",\n          \"New Matter\",\n        ],\n        labels: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: undefined,\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      fill: {\n        opacity: 1,\n      },\n      color: [\"#738df5\", \"#eaa3ff\", \"#738df5\", \"#eaa3ff\"],\n      legend: {\n        show: false,\n        position: \"top\",\n        horizontalAlign: \"left\",\n        offsetX: 40,\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Grid } from \"@mui/material\";\nimport Calender from \"../Calender\";\nimport Tasks from \"../Tasks\";\nimport { Chart2, PieChart, BarChart } from \"./Chart\";\nimport { LawyerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={2}>\n          <LawyerCards />\n        </Grid>\n        <Grid item lg={4}>\n          <PieChart />\n        </Grid>\n        <Grid item lg={6}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={4}>\n          <Chart2 />\n        </Grid>\n        <Grid item lg={8}>\n          <BarChart />\n        </Grid>\n        <Grid item>\n          <Calender />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Lawyer/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst LawyerDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default LawyerDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const Chart = () => {\n  const state = {\n    series: [110, 110, 19, 80],\n    options: {\n      chart: {\n        height: 500,\n        type: \"donut\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"55%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Matter by Type\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      colors: [\"#03a5fc\", \"#fcd200\", \"#fca400\", \"#003f5c\"],\n      labels: [\n        \"Business Contacts\",\n        \"Criminal Defence\",\n        \"Personal Injury\",\n        \"Family Law\",\n      ],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"donut\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            // background: \"#333\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"solid\",\n      gradient: {\n        shade: \"dark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\"],\n        stops: [0, 100],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"Profit\",\n        data: [640, 505, 210, 108, 760, 410, 440, 140, 660, 320],\n      },\n      {\n        name: \"Loss\",\n        data: [530, 302, 420, 220, 290, 800, 160, 490, 708, 110],\n      },\n    ],\n\n    options: {\n      colors: [\"#e85355\", \"#28c570\"],\n      chart: {\n        height: 100,\n        type: \"bar\",\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n        },\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function (val) {\n          return \"$\" + val;\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return \"$ \" + val + \"\";\n          },\n        },\n      },\n\n      xaxis: {\n        categories: [\n          \"Jan\",\n          \"Feb\",\n          \"Mar\",\n          \"Apr\",\n          \"May\",\n          \"Jun\",\n          \"July\",\n          \"Aug\",\n          \"Sep\",\n          \"Oct\",\n        ],\n      },\n\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"right\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart2 = () => {\n  const state = {\n    series: [\n      {\n        data: [19, 57, 78, 40, 95, 25],\n      },\n    ],\n\n    options: {\n      chart: {\n        height: 350,\n        type: \"bar\",\n      },\n      colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n      plotOptions: {\n        bar: {\n          columnWidth: \"45%\",\n          distributed: true,\n        },\n      },\n      dataLabels: {\n        enabled: true,\n        formatter: function (val) {\n          return val + \"%\";\n        },\n      },\n      legend: {\n        show: false,\n      },\n      title: {\n        text: \"% of Task Completed by User\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      xaxis: {\n        categories: [\n          \"M. Jones\",\n          \"R. Smith\",\n          \"T.Sweeney\",\n          \"S. Booker\",\n          \"A. Knighter\",\n          \"J. King\",\n        ],\n        labels: {\n          style: {\n            // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n            fontSize: \"12px\",\n          },\n        },\n\n        legend: {\n          show: false,\n          dropShadow: false,\n          position: \"right\",\n          labels: {\n            useSeriesColors: true,\n          },\n          onItemClick: {\n            toggleDataSeries: true,\n          },\n          formatter: function (seriesName, opts) {\n            return (\n              seriesName +\n              \":  <NumberFormat value={\" +\n              opts.w.globals.series[opts.seriesIndex] +\n              \"} displayType={'text'} thousandSeparator={true}/>\"\n            );\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart3 = () => {\n  const state = {\n    // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n    options: {\n      series: [\n        {\n          data: [750, 280, 500, 720],\n        },\n      ],\n      chart: {\n        type: \"bar\",\n        height: 380,\n      },\n      plotOptions: {\n        bar: {\n          barHeight: \"100%\",\n          borderRadius: 8,\n          distributed: true,\n          horizontal: true,\n          dataLabels: {\n            position: \"top\",\n          },\n        },\n      },\n      //       light blue,  yellow, orange, dark blue,\n      colors: [\"#fcd200\", \"#fca400\", \"#003f5c\", \"#03a5fc\"],\n      dataLabels: {\n        enabled: false,\n        textAnchor: \"start\",\n        style: {\n          colors: [\"#fff\"],\n        },\n        formatter: function (val, opt) {\n          return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val;\n        },\n        offsetX: 0,\n        dropShadow: {\n          enabled: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        colors: [\"#fff\"],\n      },\n      xaxis: {\n        categories: [\n          \"Criminal Defense\",\n          \"Personal Injury\",\n          \"Family Law\",\n          \"Business Contract\",\n        ],\n      },\n      yaxis: {\n        labels: {\n          show: true,\n        },\n      },\n      title: {\n        text: \"Revenue By Mater Type\",\n        align: \"center\",\n        floating: true,\n      },\n\n      tooltip: {\n        theme: \"light\",\n        x: {\n          show: false,\n        },\n        y: {\n          formatter: function (val, opt) {\n            return (\n              opt.w.globals.labels[opt.dataPointIndex] + \": $ \" + val + \" k\"\n            );\n          },\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.options.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Paper, Grid, Box } from \"@mui/material\";\n\nimport Tasks from \"../Tasks\";\nimport { FirmCards } from \"../Cards\";\n\nimport { Chart, Chart2, BarChart, BarChart2, BarChart3 } from \"./Charts\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      {/*main dashboard section for display  */}\n      <Box component={Paper} elevation={3} mt={4}>\n        <Grid container spacing={2}>\n          <Grid item lg={8} xs={12}>\n            <FirmCards />\n            <Grid container>\n              <Grid item lg={5} xs={12}>\n                <Chart2 />\n              </Grid>\n              <Grid item lg={7} xs={12}>\n                <Tasks />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Chart />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <BarChart />\n          </Grid>\n          <Grid item lg={6} xs={6}>\n            <BarChart2 />\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <BarChart3 />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Firm/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst FirmDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default FirmDashboard;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport AdminDashboard from \"../components/Dashboard/UserRoles/AdminDashboard\";\nimport ClientDashboard from \"../components/Dashboard/UserRoles/ClientDashboard\";\nimport LawyerDashboard from \"../components/Dashboard/UserRoles/LawyerDashboard\";\nimport FirmDashboard from \"../components/Dashboard/UserRoles/FirmDashboard\";\n\nconst Dashboard = ({ user }) => {\n  // checker type of user\n  const [localuser, setLocalUser] = useState({\n    username: \"Guest\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: true,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const dashboardRedirect = () => {\n    switch (user.username) {\n      case \"admin\":\n        return <AdminDashboard />;\n      case \"firm\":\n        return <FirmDashboard />;\n      case \"lawyer\":\n        return <LawyerDashboard />;\n      default:\n        return <ClientDashboard />;\n    }\n  };\n  return <>{dashboardRedirect()}</>;\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/login_light.png\";\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const { username, email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    login(username, email, password);\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"87vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            {/* csrf_token */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              value={username}\n              onChange={(e) => onChange(e)}\n              autoComplete=\"new-password\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              autoComplete=\"new-password\"\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => onChange(e)}\n              id=\"password\"\n              minLength=\"6\"\n              autoComplete=\"password\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n          </Box>\n          <Grid container>\n            <Grid item xs>\n              <Link to=\"/\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../../actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n  FormControlLabel,\n  FormLabel,\n  FormGroup,\n  Checkbox,\n  RadioGroup,\n  Radio,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/signup_light.png\";\n\nconst Signup = ({ register, isAuthenticated }) => {\n  const [accountCreated, setAccountCreated] = useState(false);\n  const [isFirm, setIsFirm] = useState(false);\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    re_password: \"\",\n  });\n\n  const { username, email, first_name, last_name, password, re_password } =\n    formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    let is_firm = isFirm;\n    let is_client = !isFirm;\n\n    if (password === re_password) {\n      register(\n        email,\n        first_name,\n        last_name,\n        username,\n        password,\n        re_password,\n        is_firm,\n        is_client,\n      );\n\n      setAccountCreated(true);\n    } else {\n      console.log(\"Password no match, Please type again!\");\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (accountCreated) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"85vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={(e) => onChange(e)}\n                  autoComplete=\"new-password\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"first_name\"\n                  label=\"First Name\"\n                  name=\"first_name\"\n                  value={first_name}\n                  onChange={(e) => onChange(e)}\n                  autoComplete=\"new-password\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"last_name\"\n                  label=\"Last Name\"\n                  name=\"last_name\"\n                  autoComplete=\"last_name\"\n                  value={last_name}\n                  onChange={(e) => onChange(e)}\n                  autoFocus\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={(e) => onChange(e)}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                value={password}\n                onChange={(e) => onChange(e)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"re_password\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                value={re_password}\n                onChange={(e) => onChange(e)}\n                id=\"re_password\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Sign up as a </FormLabel>\n              <RadioGroup\n                row\n                value={isFirm}\n                onChange={(e) => setIsFirm(e.target.value)}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Firm\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Individual\"\n                />\n              </RadioGroup>\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormGroup>\n                <FormControlLabel\n                  control={<Checkbox />}\n                  label=\"Agreed on Term and Contidions\"\n                />\n              </FormGroup>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Register\n            </Button>\n          </Box>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" variant=\"body2\">\n                {\"Already have an account? Sign in\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { register })(Signup);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  Divider,\n  FormControlLabel,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Company = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate: 0.0,\n    role: \"\",\n    time_zone: \"\",\n    group: \"\",\n    job_title: \"\",\n    bar_no: 0,\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: 0,\n    ext: 0,\n    mobile: 0,\n    home: 0,\n    work_no: 0,\n\n    phone_ext: 0,\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    role,\n    time_zone,\n    group,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      c_email,\n      rate,\n      role,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      p_email,\n      phone_ext,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Box p={3} sx={{ float: \"right\" }}>\n        <LinkButton to=\"/users\">Manage User</LinkButton>\n        <LinkButton to=\"/user-group\">Manage Group</LinkButton>\n        <LinkButton to=\"/user-role\">Manage Role</LinkButton>\n      </Box>\n\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create User\n        </Typography>\n        <Grid container spacing={2} mt={2}>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"f_name\"\n              label=\"f_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"m_name\"\n              label=\"m_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"m_name\"\n              autoComplete=\"m_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"l_name\"\n              label=\"l_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"c_email\"\n              label=\"c_email\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"c_email\"\n              autoComplete=\"c_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"rate\"\n              label=\"rate\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"rate\"\n              autoComplete=\"rate\"\n            />\n            <FormControlLabel\n              label=\"Round Entries (Round [up/down] to nearnest 0.00 fraction of the hour\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n              sx={{ width: \"35rem\" }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"role\"\n              label=\"role\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"role\"\n              autoComplete=\"role\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"time_zone\"\n              label=\"time_zone\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"time_zone\"\n              autoComplete=\"time_zone\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"group\"\n              label=\"group\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"group\"\n              autoComplete=\"group\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"job_title\"\n              label=\"job_title\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"job_title\"\n              autoComplete=\"job_title\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bar_no\"\n              label=\"bar_no\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bar_no\"\n              autoComplete=\"bar_no\"\n            />\n          </Grid>\n          <Grid item mt={2}>\n            <Divider textAlign=\"left\">\n              <Typography component=\"h3\" variant=\"h5\">\n                Contact Info\n              </Typography>\n            </Divider>\n            <Box>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"street\"\n                label=\"street\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"street\"\n                autoComplete=\"street\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"suite\"\n                label=\"suite\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"suite\"\n                autoComplete=\"suite\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"city\"\n                label=\"city\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"city\"\n                autoComplete=\"city\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"state\"\n                label=\"state\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"state\"\n                autoComplete=\"state\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"zip\"\n                label=\"zip\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"zip\"\n                autoComplete=\"zip\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"ext\"\n                label=\"ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"ext\"\n                autoComplete=\"ext\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"mobile\"\n                label=\"mobile\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"mobile\"\n                autoComplete=\"mobile\"\n              />\n              <Button\n                variant=\"contained\"\n                sx={{ background: \"#5cb85c\", marginTop: \"0.5rem\" }}\n              >\n                Set Password Automaticly\n              </Button>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"home\"\n                label=\"home\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"home\"\n                autoComplete=\"home\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"work_no\"\n                label=\"work_no\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"work_no\"\n                autoComplete=\"work_no\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"p_email\"\n                label=\"p_email\"\n                type=\"email\"\n                onChange={(e) => onChange(e)}\n                id=\"p_email\"\n                autoComplete=\"p_email\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"phone_ext\"\n                label=\"phone_ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"phone_ext\"\n                autoComplete=\"phone_ext\"\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Box\n              sx={{\n                \"& .MuiButton-root\": { m: 1 },\n                float: \"right\",\n              }}\n            >\n              <Button variant=\"contained\" type=\"submit\">\n                Create Member\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Company;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\nimport Filters from \"../../components/Matter/Filters\";\nimport MatterCards from \"../../components/Matter/MatterCards\";\nimport MatterListLong from \"../../components/Matter/MatterListLong\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item xs={12}>\n            <Filters />\n          </Grid>\n          <Grid item xs={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item xs={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Matters;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Switch,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Button,\n  TextField,\n  Box,\n  Grid,\n  MenuItem,\n  Typography,\n  Divider,\n  FormControlLabel,\n  Stack,\n} from \"@mui/material\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport CreateUser from \"./CreateUser\";\nimport {\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useToggle } from \"../../context/useToggle\";\n\nconst ManageUser = () => {\n  const [activityData, setActivityData] = useState([]);\n\n  const [isActive, setIsActive] = useToggle(false);\n\n  const [roles, setRoles] = useState([]);\n  const [role, setRole] = useState(\"\");\n  const [group, setGroup] = useState(\"\");\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [rateType, setRateType] = useState(\"\");\n\n  const handleChange = (event) => {\n    setRateType(event.target.value);\n  };\n\n  const [approvel, setApprovel] = useToggle(false);\n\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate_type: \"\",\n    rate: \" \",\n    time_zone: \"\",\n    job_title: \"\",\n    bar_no: \" \",\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    ext: \"\",\n    mobile: \"\",\n    home: \"\",\n    work_no: \"\",\n    p_email: \"\",\n    phone_ext: \"\",\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    time_zone,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      p_email,\n      role,\n      c_email,\n      rate,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      phone_ext,\n    });\n\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/create-member/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchRoleData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/role/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setRoles(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  const FetchGroupData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/group/`, CONFIG)\n      .then((res) => {\n        setLoading2(false);\n        setGroups(res.data);\n      })\n      .catch((err) => {\n        setLoading2(false);\n      });\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setActivityData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchRoleData();\n    FetchData();\n    FetchGroupData();\n  }, []);\n\n  return (\n    <Fragment>\n      <Box>\n        <Typography component=\"h4\" variant=\"h5\" color=\"primary\" mb={2}>\n          Manage Users\n        </Typography>\n        <Stack p={3} direction=\"row\" spacing={2} sx={{ float: \"right\" }}>\n          <Search sx={{ width: \"15rem\" }}>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n          <Button\n            color=\"success\"\n            onClick={handleClickOpen}\n            variant=\"contained\"\n            sx={{ color: \"white\", background: \"#28c570\" }}\n          >\n            + Add User\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth=\"true\"\n            maxWidth=\"xl\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New User\"}</DialogTitle>\n            <DialogContent>\n              <Grid\n                container\n                spacing={2}\n                mt={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\" },\n                }}\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"f_name\"\n                    label=\"First Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"f_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"m_name\"\n                    label=\"Middle Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"m_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"l_name\"\n                    label=\"Last Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"l_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"c_email\"\n                    label=\"Company Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"c_email\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"rate\"\n                    label=\"Rate $\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"rate\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={6}>\n                  <Stack direction=\"row\" spacing={2} ml={2}>\n                    <FormControlLabel\n                      sx={{ fontSize: \"2rem\" }}\n                      label=\"\"\n                      control={\n                        <Switch\n                          checked={approvel}\n                          onChange={() => setApprovel(approvel)}\n                        />\n                      }\n                    />\n                    <Typography>\n                      Round Entries (Round [up/down] to nearnest\n                      <TextField\n                        margin=\"dense\"\n                        variant=\"standard\"\n                        type=\"text\"\n                        size=\"small\"\n                        placeholder=\"0.00\"\n                        sx={{\n                          maxWidth: \"5rem\",\n                        }}\n                      />\n                      fraction of the hour\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"role\"\n                    label=\"Role\"\n                    onChange={(e) => setRole(e.target.value)}\n                    id=\"role\"\n                    autoComplete=\"new-password\"\n                  >\n                    {!loading ? (\n                      roles.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"time_zone\"\n                    label=\"Time Zone\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"time_zone\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"group\"\n                    label=\"Group\"\n                    type=\"text\"\n                    onChange={(e) => setGroup(e.target.value)}\n                    id=\"group\"\n                    autoComplete=\"new-password\"\n                  >\n                    {!loading2 ? (\n                      groups.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"job_title\"\n                    label=\"Job Title\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"job_title\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"bar_no\"\n                    label=\"Bar #\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"bar_no\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={4} mb={2}>\n                <Divider />\n                <Typography mt={2} component=\"h3\" color=\"primary\" variant=\"h5\">\n                  Contact Info\n                </Typography>\n              </Box>\n\n              <Grid\n                container\n                spacing={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\" },\n                }}\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"street\"\n                    label=\"Street\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"street\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"suite\"\n                    label=\"Suite\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"suite\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"city\"\n                    label=\"City\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"city\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"state\"\n                    label=\"State\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"state\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"zip\"\n                    label=\"Zip\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"zip\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"ext\"\n                    label=\"+4\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"ext\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"p_email\"\n                    label=\"Personal Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"p_email\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <Box mt={1} ml={1}>\n                    <Button variant=\"contained\" color=\"primary\">\n                      Reset Password\n                    </Button>\n                  </Box>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"mobile\"\n                    label=\"Mobile #\"\n                    type=\"phone\"\n                    onChange={(e) => onChange(e)}\n                    id=\"mobile\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"home\"\n                    label=\"Home #\"\n                    type=\"phone\"\n                    onChange={(e) => onChange(e)}\n                    id=\"home\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"work_no\"\n                    label=\"Work #\"\n                    type=\"phone\"\n                    onChange={(e) => onChange(e)}\n                    id=\"work_no\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"phone_ext\"\n                    label=\"Extesion\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"phone_ext\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n              </Grid>\n              <Grid item lg={12}>\n                <Box\n                  sx={{\n                    \"& .MuiButton-root\": { m: 1, mr: 8 },\n                    float: \"right\",\n                  }}\n                >\n                  <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    type=\"submit\"\n                    sx={{ color: \"white\" }}\n                  >\n                    Activate\n                  </Button>\n                  <Button variant=\"contained\" color=\"error\">\n                    Deactivate\n                  </Button>\n                </Box>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n            </DialogActions>\n          </Dialog>\n        </Stack>\n\n        <TableContainer>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  <Typography color=\"white\">First Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Role</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Group</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Login</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Status</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Deactivate</Typography>\n                </TableCell>\n                <TableCell>\n                  <Switch\n                    color=\"success\"\n                    value={isActive}\n                    onChange={() => setIsActive()}\n                  />\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {/* {loading && isActive\n                ? activityData?.map((data) => (\n                    <TableRow>\n                      <TableCell>{data.f_name}</TableCell>\n                      <TableCell>{data.l_name}</TableCell>\n                      <TableCell>{data.p_email}</TableCell>\n                      <TableCell>{data.role}</TableCell>\n                      <TableCell>{data.group}</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>inactive</TableCell>\n                      <TableCell>\n                        <Button\n                          variant=\"contained\"\n                          value={data.id}\n                          onClick={() => handleDelete(data.id)}\n                          sx={{\n                            borderRadius: \"0.5rem\",\n                            float: \"right\",\n                          }}\n                        >\n                          <ClearIcon />\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                : null} */}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default ManageUser;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Stack,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst ManageUserGroup = () => {\n  const [filter, setFilter] = useState(\"\");\n\n  const handleChange = (event) => {\n    setFilter(event.target.value);\n  };\n  const [group, setGroup] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingUser, setLoadingUser] = useState(true);\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchUserData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        setLoadingUser(false);\n\n        setUserData(res.data);\n      })\n      .catch((err) => {\n        setLoadingUser(false);\n      });\n  };\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/group/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setGroup(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n    FetchUserData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/group/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/group/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={12}>\n          <Grid container spacing={2} direction=\"row\">\n            <Grid item lg={3}>\n              <Typography variant=\"h5\" component=\"h5\" m={1} color=\"primary\">\n                Manage Group\n              </Typography>\n            </Grid>\n            <Grid item lg={9}>\n              <Stack direction=\"row\" sx={{ float: \"right\" }}>\n                <Typography m={2} component=\"span\" color=\"primary\">\n                  Filter & Sort By\n                </Typography>\n                <FormControl sx={{ width: \"10rem\", height: \"2.5rem\" }}>\n                  <InputLabel id=\"demo-simple-select-label\" color=\"primary\">\n                    Custom Sort\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={filter}\n                    label=\"Age\"\n                    onChange={handleChange}\n                  >\n                    <MenuItem value=\"name\">By Name</MenuItem>\n                    <MenuItem value=\"role\">By Role</MenuItem>\n                    <MenuItem value=\"gorup\">By Group</MenuItem>\n                  </Select>\n                </FormControl>\n                <Search sx={{ width: \"20rem\", height: \"2.5rem\", m: 1 }}>\n                  <SearchIconWrapper>\n                    <SearchIcon />\n                  </SearchIconWrapper>\n                  <StyledInputBase\n                    placeholder=\"Search…\"\n                    inputProps={{ \"aria-label\": \"search\" }}\n                  />\n                </Search>\n              </Stack>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3}>\n          <Typography\n            variant=\"h5\"\n            component=\"h5\"\n            color=\"primary\"\n            align=\"center\"\n          >\n            Groups\n          </Typography>\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            fullWidth\n            sx={{\n              borderRadius: \"0.5rem\",\n            }}\n          >\n            + New Group\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New Group\"}</DialogTitle>\n            <DialogContent>\n              <TextField\n                required\n                fullWidth\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"name\"\n                label=\"Group Name\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n              <Button type=\"submit\" autoFocus>\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {/* {!loading ? (\n            group.map((data) => (\n              <Box mt={1}>\n                <List>\n                  <ListItem disablePadding>\n                    <ListItemText>{data.name}</ListItemText>\n                    <Button\n                      variant=\"contained\"\n                      value={data.id}\n                      onClick={() => handleDelete(data.id)}\n                      sx={{\n                        borderRadius: \"0.5rem\",\n                        float: \"right\",\n                      }}\n                    >\n                      <ClearIcon />\n                    </Button>\n                  </ListItem>\n                </List>\n              </Box>\n            ))\n          ) : (\n            <Typography>Loading ...</Typography>\n          )} */}\n        </Grid>\n        <Grid item lg={9}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow bgColor=\"#796ef0\">\n                  <TableCell>\n                    <Typography color=\"white\">First Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Last Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Role</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Group</Typography>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {/* {loadingUser\n                  ? null\n                  : userData?.map((data) => {\n                      return (\n                        <TableRow>\n                          <TableCell>{data.f_name}</TableCell>\n                          <TableCell>{data.l_name}</TableCell>\n                          <TableCell>{data.role}</TableCell>\n                          <TableCell>{data.group}</TableCell>\n                        </TableRow>\n                      );\n                    })} */}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item lg={12}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"success\" sx={{ color: \"white\" }}>\n              Done\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageUserGroup;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TableBody,\n  Typography,\n  Switch,\n} from \"@mui/material\";\n\nconst RoleFuncions = ({ data }) => {\n  const functions = [\n    \"Contacts\",\n    \"Matter\",\n    \"Calendar\",\n    \"Flat Fee\",\n    \"Expenses\",\n    \"Trust\",\n    \"Task(s)\",\n    \"Invoice\",\n    \"Payments\",\n    \"Full DOB\",\n    \"Full SSN\",\n    \"Partial SSN\",\n    \"Partial DOB\",\n    \"Roles\",\n    \"Run Reports\",\n    \"Discounts\",\n    \"Bank Accounts\",\n  ];\n  return (\n    <Fragment>\n      <TableContainer sx={{ overflowX: \"auto\" }}>\n        <Table size=\"small\" sx={{ fontSize: \"1rem\" }}>\n          <TableHead>\n            <TableRow bgColor=\"#796ef0\">\n              <TableCell>\n                <Typography color=\"white\">Function</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">View </Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Edit</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Create</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Delete</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Contacts</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Team</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Office</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Region</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">All</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {functions.map((data) => (\n              <TableRow>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  {data}\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default RoleFuncions;\n","/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  List,\n  Grid,\n  Box,\n  Typography,\n  ListItem,\n  ListItemText,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport RoleFuncions from \"./RoleFuncions\";\n\nconst UserRole = () => {\n  const [roles, setRoles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/role/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setRoles(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/role/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/role/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={12}></Grid>\n        <Grid item lg={2}>\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            fullWidth\n            sx={{\n              borderRadius: \"0.5rem\",\n            }}\n          >\n            + New Role\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New Role\"}</DialogTitle>\n            <DialogContent>\n              <TextField\n                required\n                fullWidth\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"name\"\n                label=\"Role Name\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n              <Button type=\"submit\" autoFocus>\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {!loading ? (\n            roles.map((data) => (\n              <Box mt={1}>\n                <List>\n                  <ListItem disablePadding>\n                    <ListItemText>{data.name}</ListItemText>\n                    <Button\n                      variant=\"contained\"\n                      value={data.id}\n                      size=\"small\"\n                      onClick={() => handleDelete(data.id)}\n                      sx={{\n                        borderRadius: \"0.5rem\",\n                        float: \"right\",\n                      }}\n                    >\n                      <ClearIcon />\n                    </Button>\n                  </ListItem>\n                </List>\n              </Box>\n            ))\n          ) : (\n            <Typography>Loading ...</Typography>\n          )}\n        </Grid>\n        <Grid item lg={10}>\n          <RoleFuncions data={roles} />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default UserRole;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport CreateUser from \"./CreateUser\";\nimport ManageUser from \"./ManageUser\";\nimport ManageUserGroup from \"./ManageUserGroup\";\nimport UserRole from \"./UserRole\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Manage Users\">\n          <ManageUser />\n        </div>\n\n        <div label=\"User Group\">\n          <ManageUserGroup />\n        </div>\n        <div label=\"User Role\">\n          <UserRole />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst TimeList = () => {\n  const [timeData, setTimeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTimeData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <Box>\n        <LinkButton to=\"/ledgers\" sx={{ float: \"right\" }}>\n          Ledger Dashboard\n        </LinkButton>\n        <Box p={3}>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Ledger Dashbaord\n          </LinkButton>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Add Time\n          </LinkButton>\n          <LinkButton to=\"/ledger-list\" sx={{ float: \"right\" }}>\n            Ledger List\n          </LinkButton>\n          <LinkButton to=\"/ledger-documents\" sx={{ float: \"right\" }}>\n            Documents\n          </LinkButton>\n        </Box>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Add</TableCell>\n\n                <TableCell>Matter #</TableCell>\n                <TableCell>Matter Name</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Billable Time</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell>Category</TableCell>\n                <TableCell>Activity</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n              ? null\n              : timeData?.map((data) => {\n                  return (\n                    <TableBody id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n\n                      <TableCell>{data.conatact}</TableCell>\n                      <TableCell>{data.date}</TableCell>\n                      <TableCell>{data.time}</TableCell>\n                      <TableCell>{data.rate}</TableCell>\n                      <TableCell>{data.category}</TableCell>\n                      <TableCell>{data.sub_category}</TableCell>\n                    </TableBody>\n                  );\n                })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TimeList;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Switch, FormControlLabel } from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Search = () => {\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [searchData, setSearchData] = useState({\n    state: \"\",\n    city: \"\",\n    practice_area: \"\",\n    law_school: \"\",\n\n    undergrad_study: \"\",\n    lamguages: \"\",\n    admitted_state: \"\",\n    relocate: false,\n  });\n\n  const {\n    state,\n    city,\n    practice_area,\n    law_school,\n\n    undergrad_study,\n    lamguages,\n    admitted_state,\n    relocate,\n  } = searchData;\n\n  const onChange = (e) =>\n    setSearchData({ ...searchData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"number\"\n              min=\"0\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Longest tenure (months / years)\"\n              id=\"longest_tenure\"\n              name=\"longest_tenure\"\n              value={longestTenure}\n              type=\"text\"\n              onValueChange={(e) => setLongestTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Average tenure (months / years)\"\n              value={averageTenure}\n              id=\"average_tenure\"\n              name=\"average_tenure\"\n              type=\"text\"\n              onValueChange={(e) => setAverageTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time at Current Company (months / years)\"\n              id=\"current_tenure\"\n              name=\"current_tenure\"\n              value={currentTenure}\n              type=\"text\"\n              onValueChange={(e) => setCurrentTenure(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"admitted_state\"\n              label=\"admitted_state\"\n              type=\"text\"\n              value={admitted_state}\n              onChange={(e) => onChange(e)}\n              id=\"admitted_state\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={gradYear}\n              onValueChange={(e) => setGradYear(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"undergrad_study\"\n              label=\"undergrad_study\"\n              step=\"0.01\"\n              type=\"text\"\n              value={undergrad_study}\n              onChange={(e) => onChange(e)}\n              id=\"undergrad_study\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"practice_area\"\n              label=\"practice_area\"\n              type=\"text\"\n              value={practice_area}\n              onChange={(e) => onChange(e)}\n              id=\"practice_area\"\n              disabled\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance Date\"\n              id=\"bar_admit_date\"\n              name=\"bar_admit_date\"\n              value={barDate}\n              onValueChange={(e) => setBarDate(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"lamguages\"\n              label=\"lamguages\"\n              type=\"text\"\n              value={lamguages}\n              onChange={(e) => onChange(e)}\n              id=\"lamguages\"\n            />\n            {/* <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Apply\n            </Button> */}\n            <Box m={3}>\n              <LinkButton to=\"/job-result\" sx={{ float: \"right\" }}>\n                Apply\n              </LinkButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Search;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\n// import axios from \"axios\";\n// import { CONFIG } from \"../../api/MatterApi\";\n// import { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Result = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(\"\");\n  // const [status, setStatus] = useState(\"\");\n  //   const FetchData = () => {\n  //     axios\n  //       .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n  //       .then((res) => {\n  //         setLoading(false);\n  //         setStatus(res.statusText);\n  //         setActivityData(res.data);\n  //       })\n  //       .catch((err) => {\n  //         setLoading(false);\n  //         setStatus(err.statusText);\n  //       });\n  //   };\n  //   useEffect(() => {\n  //     FetchData();\n  //   }, []);\n  return (\n    <Fragment>\n      <Box>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Rate</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Name</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">City</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">State</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Active</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Grage Year</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practice Area</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Relocation</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practicing</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading ? (\n              <TableBody>\n                <TableRow>\n                  <TableCell>74%</TableCell>\n                  <TableCell>Smith, John</TableCell>\n                  <TableCell>San Diego</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2000</TableCell>\n                  <TableCell>Criminal</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>22y - 03M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>72%</TableCell>\n                  <TableCell>Cassidy, Butch</TableCell>\n                  <TableCell>Los Angeles</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>2021</TableCell>\n                  <TableCell>Transctional</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>0y - 02M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>50%</TableCell>\n                  <TableCell>Short, Mart</TableCell>\n                  <TableCell>Sacramento</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2013</TableCell>\n                  <TableCell>Civil</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>06y - 11M</TableCell>\n                </TableRow>\n              </TableBody>\n            ) : (\n              activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })\n            )} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Result;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  FormControlLabel,\n  FormGroup,\n  Checkbox,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Saved = () => {\n  const [pickTime, setPickTime] = useState(new Date(\"2021-12-01T21:00:00\"));\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [jobData, setJobData] = useState({\n    name: \"\",\n    state: \"\",\n    city: \"\",\n    email: \"\",\n    mobile: \"\",\n    home: \"\",\n    law_school: \"\",\n    grad_year: \"\",\n    bar_adm_year: \"\",\n    practice_area: \"\",\n    mail_add: \"\",\n    relocate: false,\n    date: \"\",\n    time: \"\",\n    link: \"\",\n    notes: \"\",\n    file: \"\",\n  });\n\n  const {\n    name,\n    state,\n    city,\n    email,\n    mobile,\n    home,\n    law_school,\n    grad_year,\n    bar_adm_year,\n    practice_area,\n    mail_add,\n    relocate,\n    date,\n    time,\n    link,\n    notes,\n    file,\n  } = jobData;\n\n  const onChange = (e) =>\n    setJobData({ ...jobData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <FormGroup aria-label=\"position\" row>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Save\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Contacted\"\n                labelPlacement=\"start\"\n              />\n              <Typography component=\"label\" m={1}>\n                Interested :\n              </Typography>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Yes\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"No\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Interviewed\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Accept\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Reject\"\n                labelPlacement=\"start\"\n              />\n              <Box ml={3}>\n                <Typography component=\"h4\" color=\"success\" variant=\"h5\">\n                  Overall Score: 74%\n                </Typography>\n              </Box>\n            </FormGroup>\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"name\"\n              label=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(e) => onChange(e)}\n              id=\"name\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email\"\n              label=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              id=\"email\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobile}\n              onValueChange={(value) => onChange(value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={home}\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={grad_year}\n              onValueChange={(value) => onChange(value)}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance\"\n              id=\"bar_adm_year\"\n              name=\"bar_adm_year\"\n              value={bar_adm_year}\n              type=\"text\"\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"mail_add\"\n              label=\"mail_add\"\n              type=\"text\"\n              value={mail_add}\n              onChange={(e) => onChange(e)}\n              id=\"mail_add\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xs={4}>\n                <Box m={1}>\n                  <Typography component=\"lable\"> Writing Sample </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <TimePicker\n                    label=\"Pick Time\"\n                    name=\"picktime\"\n                    id=\"picktime\"\n                    value={pickTime}\n                    onChange={(e) => {\n                      setPickTime(e);\n                    }}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    inputFormat=\"yyyy-MM-dd\"\n                    mask=\"____-__-__\"\n                    label=\"Pick Date\"\n                    value={pickDate}\n                    name=\"pickdate\"\n                    id=\"pickdate\"\n                    onChange={(e) => setPickDate(e)}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n\n                <TextField\n                  size=\"small\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"link\"\n                  type=\"link\"\n                  defaultValue=\"2021-12-01\"\n                  value={link}\n                  onChange={(e) => onChange(e)}\n                  id=\"link\"\n                />\n              </Grid>\n              <Grid item xs={8}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={8}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"notes\"\n                  type=\"text\"\n                  value=\"Notes ...\"\n                  id=\"notes\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Saved;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport Search from \"./Search\";\nimport Result from \"./Result\";\nimport Saved from \"./Saved\";\nconst index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Search\">\n          <Search />\n        </div>\n        <div label=\"Result\">\n          <Result />\n        </div>\n        <div label=\"Saved\">\n          <Saved />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default index;\n","/** @format */\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nimport { Provider } from \"react-redux\";\n\nimport store, { persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport Layout from \"./hocs/Layout\";\n\nimport PrivateRoutes from \"./utils/PrivateRoute\";\n\nimport { UserProvider } from \"./context/User\";\n\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"./hocs/Theme\";\n\nimport Home from \"./containers/Home\";\n\n// Authentication links\nimport Login from \"./containers/Auth/Login\";\nimport Signup from \"./containers/Auth/Signup\";\n\nimport Profile from \"./components/Profile/Profile\";\nimport Company from \"./components/Profile/Company\";\n\nimport Matter from \"./components/Matter\";\n\nimport Matters from \"./containers/Matters/Matters\";\nimport MatterDetail from \"./components/Matter/MatterDetail\";\nimport NewMatter from \"./components/Matter/NewMatter\";\n\nimport Invoice from \"./components/Invoice\";\n\nimport CreateInvoice from \"./components/Invoice/CreateInvoice\";\n\nimport Payment from \"./components/Invoice/Payment\";\nimport ManageCategory from \"./components/Category/ManageCategory\";\n\nimport User from \"./components/User\";\n\nimport Time from \"./components/Ledger/Time\";\nimport TimeList from \"./components/Ledger/TimeList\";\n\nimport Ledger from \"./components/Ledger\";\n\nimport LedgerTImeList from \"./components/Ledger/LedgerTImeList\";\nimport LedgerActivity from \"./components/Ledger/LedgerActivity\";\n\nimport Tasks from \"./components/Tasks\";\nimport CreateTask from \"./components/Tasks/CreateTask\";\nimport ViewTasks from \"./components/Tasks/ViewTasks\";\nimport LedgerDoc from \"./components/Ledger/LedgerDoc\";\n\nimport Employee from \"./components/Employee\";\nimport Templates from \"./components/Template/Templates\";\n\nimport Contact from \"./components/Contact/Contact\";\nimport UserRole from \"./components/User/UserRole\";\nimport ManageUserGroup from \"./components/User/ManageUserGroup\";\n\nconst App = () => {\n  const alertOptions = {\n    timeout: 3000,\n    position: \"top center\",\n  };\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <UserProvider>\n          <ThemeProvider theme={theme}>\n            <AlertProvider template={AlertTemplate} {...alertOptions}>\n              <Router>\n                <Layout>\n                  <Switch>\n                    {/* loging regierter routes */}\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/signup\" component={Signup} />\n\n                    {/* private route after login  */}\n\n                    <PrivateRoutes exact path=\"/\" component={Home} />\n                    <PrivateRoutes path=\"/profile\" component={Profile} />\n                    <PrivateRoutes path=\"/company-detail\" component={Company} />\n\n                    <PrivateRoutes\n                      path=\"/matter-dashboard\"\n                      component={Matter}\n                    />\n                    <PrivateRoutes path=\"/matters\" component={Matters} />\n                    <PrivateRoutes\n                      path=\"/matter-detail\"\n                      component={MatterDetail}\n                    />\n                    <PrivateRoutes\n                      path=\"/create-matter\"\n                      component={NewMatter}\n                    />\n\n                    <PrivateRoutes path=\"/invoices\" component={Invoice} />\n                    <PrivateRoutes\n                      path=\"/create-invoice\" \n                      component={CreateInvoice}\n                    />\n                    <PrivateRoutes path=\"/recive-invoice\" component={Payment} />\n\n                    {/* <PrivateRoutes path=\"/create-user\" component={CreateUser} /> */}\n                    <PrivateRoutes path=\"/users\" component={User} />\n                    <PrivateRoutes path=\"/user-roles\" component={UserRole} />\n                    <PrivateRoutes\n                      path=\"/user-groups\"\n                      component={ManageUserGroup}\n                    />\n\n                    <PrivateRoutes\n                      path=\"/manage-categories\"\n                      component={ManageCategory}\n                    />\n                    <PrivateRoutes\n                      path=\"/ledger-documents\"\n                      component={LedgerDoc}\n                    />\n                    <PrivateRoutes path=\"/time\" component={Time} />\n                    <PrivateRoutes path=\"/time-list\" component={TimeList} />\n                    <PrivateRoutes path=\"/ledgers\" component={Ledger} />\n                    <PrivateRoutes\n                      path=\"/ledger-list\"\n                      component={LedgerTImeList}\n                    />\n                    <PrivateRoutes\n                      path=\"/activity-list\"\n                      component={LedgerActivity}\n                    />\n\n                    <PrivateRoutes path=\"/tasks\" component={Tasks} />\n                    <PrivateRoutes path=\"/create-task\" component={CreateTask} />\n                    <PrivateRoutes path=\"/view-tasks\" component={ViewTasks} />\n\n                    <PrivateRoutes\n                      path=\"/employee-search\"\n                      component={Employee}\n                    />\n\n                    <PrivateRoutes path=\"/templates\" component={Templates} />\n                    <PrivateRoutes path=\"/contact\" component={Contact} />\n                  </Switch>\n                </Layout>\n              </Router>\n            </AlertProvider>\n          </ThemeProvider>\n        </UserProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}