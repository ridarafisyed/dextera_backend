{"version":3,"sources":["components/Tabs/tabs.module.css","redux/features/sidebarSlice.js","asserts/logo_white copy.png","components/Dashboard/Admin/DashboardLayout/DashboardContent.jsx","asserts/login_light.png","asserts/signup_light.png","components/Dashboard/Admin/Charts.jsx","components/Dashboard/Admin/Cards/RevenueIn.jsx","components/Dashboard/Admin/Cards/RevenueOut.jsx","components/Dashboard/Admin/Cards/NewCustomer.jsx","components/Dashboard/Admin/Cards/LostCustomer.jsx","components/Dashboard/Admin/Map.jsx","components/Dashboard/Admin/NewAccounts.jsx","components/Dashboard/Admin/EmpOversite.jsx","components/Dashboard/Admin/DashboardLayout/Widget.jsx","reducers/profile.js","reducers/errors.js","reducers/messages.js","reducers/auth.js","reducers/data.js","redux/features/tabSlice.js","redux/features/favoriteSlice.js","reducers/index.js","actions/types.js","store.js","actions/messages.js","actions/auth.js","context/useToggle.jsx","styles/styles.jsx","components/Navbars/Navbar.jsx","actions/data.js","components/Chat/Chat.jsx","components/Dashboard/Calender.jsx","components/Tasks/ViewTasks.jsx","components/Favorite/Favorites.jsx","components/Navbars/NavbarSec.jsx","components/Sidebar/TestingSidebar.jsx","components/Sidebar/Sidebar.jsx","components/Footer/Footer.jsx","hocs/Layout.js","utils/PrivateRoute.js","context/User/reducer.js","context/User/index.js","hocs/Theme.js","components/Dashboard/Admin/DashBoard.jsx","components/Tabs/Tabs.jsx","components/Invoice/CreateInvoice.jsx","components/Invoice/Payment.jsx","components/Invoice/Filters.jsx","components/Invoice/InvoiceList.jsx","components/Invoice/index.jsx","api/MatterApi.js","utils/ActionAlerts.js","components/Matter/MatterList.jsx","components/Matter/Cards.jsx","components/Matter/Calendar.jsx","components/Matter/Filters.jsx","components/Matter/MatterCards.jsx","components/Matter/MatterListLong.jsx","components/Matter/NewMatter.jsx","components/Matter/MatterDetail.jsx","components/Matter/index.jsx","components/Ledger/LedgerActivity.jsx","components/Ledger/Fillters.jsx","components/Ledger/LedgerCards.jsx","components/Ledger/LedgerTImeList.jsx","components/Ledger/LedgerDashbard.jsx","components/Ledger/LedgerDoc.jsx","components/Ledger/Time.jsx","components/Ledger/index.jsx","components/Category/SubCategory.jsx","components/Category/Category.jsx","components/Category/Classification.jsx","components/Category/ManageCategory.jsx","components/Contact/Contact.jsx","components/Profile/Profile.js","components/Tasks/CreateTask.jsx","components/Tasks/index.jsx","components/Dashboard/UserRoles/AdminDashboard.jsx","components/Dashboard/ProgressBar.jsx","components/Dashboard/Tasks.jsx","components/Dashboard/Cards.jsx","components/Dashboard/Client/DashBoard.jsx","components/Template/Templates.jsx","components/Dashboard/UserRoles/ClientDashboard.jsx","components/Dashboard/Lawyer/Chart.jsx","components/Dashboard/Lawyer/DashBoard.jsx","components/Dashboard/UserRoles/LawyerDashboard.jsx","components/Dashboard/Firm/Charts.jsx","components/Dashboard/Firm/DashBoard.jsx","components/Dashboard/UserRoles/FirmDashboard.jsx","containers/Home.js","containers/Auth/Login.js","containers/Auth/Signup.js","components/Profile/Company.jsx","containers/Matters/Matters.jsx","components/User/ManageUser.jsx","components/User/ManageUserGroup.jsx","components/User/RoleFuncions.jsx","components/User/UserRole.jsx","components/User/index.jsx","components/Ledger/TimeList.jsx","components/Employee/Search.jsx","components/Employee/Result.jsx","components/Employee/Saved.jsx","components/Employee/index.jsx","App.jsx","index.js"],"names":["module","exports","tabs","current","content","__webpack_require__","d","__webpack_exports__","isDisplay","manageRoleActive","manageGroupActive","manageUserActive","revenueInActive","revenueOutActive","newCustomerActive","lostCustomerActive","newAccountActive","appointmentActive","marketingActive","empOversiteActive","emailsActive","callsActive","mapActive","_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__","sidebarSlice","createSlice","name","initialState","manageUser","manageRole","manageGroup","revenueIn","revenueOut","newCustomer","lostCustomer","newAccount","appointment","marketing","empOversite","emails","calls","map","display","reducers","state","actions","p","originalItems","initialLayouts","lg","i","x","y","w","h","withSize","refreshMode","refreshRate","_ref","width","size","sidebar","useSelector","dispatch","useDispatch","components","a","b","c","e","f","g","j","k","fnCall","_useState","useState","_useState2","Object","_home_supersis03_Projects_Dextera_Phase_3_dextera_project_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","items","_useState3","key","ls","global","localStorage","JSON","parse","getItem","getFromLS","_useState4","layouts","setLayouts","onRemoveItem","itemId","displayItemList","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","data-grid","Infinity","style","_Widget__WEBPACK_IMPORTED_MODULE_8__","id","backgroundColor","useEffect","Fragment","react_grid_layout__WEBPACK_IMPORTED_MODULE_4__","breakpoints","md","sm","xs","xxs","cols","rowHeight","onLayoutChange","_","allLayouts","Appointments","options","chart","type","height","series","data","fillColor","strokeColor","plotOptions","bar","barHeight","borderRadius","horizontal","dataLabels","position","enabled","title","text","fontSize","fontWeight","color","xaxis","react_default","react","Box","react_apexcharts_min_default","Marketing","config","toolbar","show","legend","horizontalAlign","onItemHover","highlightDataSeries","labels","colors","useSeriesColors","stroke","curve","align","categories","yaxis","Calls","radialBar","lable","value","total","formatter","floating","onItemClick","toggleDataSeries","seriesName","opts","globals","seriesIndex","Email","connect","isWeekly","Grid","container","item","Typography","sx","gutterBottom","variant","mt","component","react_number_format_es","amount","displayType","thousandSeparator","prefix","slicedToArray","dateValue","setDateValue","listStyleType","LocalizationProvider","dateAdapter","AdapterDateFns","DateRangePicker","startText","endText","onChange","newValue","renderInput","startProps","endProps","TextField","assign","mx","mapboxgl","workerClass","MapboxWorker","Map","latitude","longitude","zoom","viewport","setViewport","esm","mapStyle","MAP_STYLE","onViewportChange","mapboxApiAccessToken","zIndex","offsetLeft","offsetTop","Circle","NewAccounts","TableContainer","Table","fullWidth","TableHead","TableRow","TableCell","TableBody","EmpOversite","Widget","widgetNames","RevenueIn","RevenueOut","NewCustomer","LostCustomer","Admin_NewAccounts","Admin_Map","Admin_EmpOversite","Charts_Calls","Charts_Appointments","Charts_Marketing","Charts_Email","Card","padding","CardActions","IconButton","aria-label","onClick","Close_default","profile","msg","status","token","isAuthenticated","isLoading","user","tabSlice","addTab","action","newTask","payload","tab","push","removeTab","filter","favoriteSlice","addFav","newFav","page","favorite","length","isAvailable","removeFav","combineReducers","auth","arguments","undefined","objectSpread","setItem","removeItem","errors","messages","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","persistor","persistStore","returnErrors","logout","getState","axios","post","concat","process","tokenConfig","then","res","catch","err","response","headers","Content-Type","useToggle","isToggled","setIsToggled","useCallback","SideBarBtn","styled","Button","theme","textTransform","textAlign","margin","borderColor","&:hover","palette","primary","main","&:visited","SecNavbar","_ref2","boxShadow","FooterBar","_ref3","bottom","left","alignContent","FooterLink","Link","_ref4","fontFamily","textDecoration","marginTop","FooterButton","_ref5","marginX","paddingX","LinkButton","_ref6","cursor","Search","_ref7","marginRight","spacing","marginLeft","SearchIconWrapper","_ref8","pointerEvents","alignItems","justifyContent","StyledInputBase","InputBase","_ref9","& .MuiInputBase-input","defineProperty","paddingLeft","transition","transitions","create","up","MainSearch","_ref10","MainSearchIconWrapper","_ref12","StyledMainInputBase","_ref13","updateIsWeekly","Intl","DateTimeFormat","resolvedOptions","timeZone","Date","currentTime","_useState5","_useState6","_useToggle","_useToggle2","_useState7","_useState8","settingAcnchorEl","_useState9","Boolean","_useState10","redirect","_React$useState","React","_React$useState2","anchorEl","_React$useState3","_React$useState4","checked","setChecked","handleChange","event","target","flexGrow","AppBar","border","Toolbar","noWrap","react_router_dom","to","src","Logo","alt","Search_default","placeholder","inputProps","FormControl","InputLabel","Select","labelId","label","MenuItem","ml","mr","toLocaleTimeString","hour","minute","hour12","Switch","defaultChecked","transform","react_router","ChatHistory","Chip","avatar","Avatar","float","Chatting","Chat_ChatHistory","& .MuiTextField-root","m","endIcon","Send_default","Calender","setValue","tasks","Paper","LocalizationProvider_LocalizationProvider","StaticDatePicker","shouldDisableDate","isWeekend","handleOnChange","params","task","ViewTasks","Divider","my","Favorites","List","ListItem","disablePadding","ListItemButton","ListItemIcon","Star","ListItemText","openFav","setOpenFav","handleCloseFav","openCal","setOpenCal","handleCloseCal","openChat","setOpenChat","handleCloseChat","useHistory","username","is_firm","is_lawyer","is_client","localuser","setLocalUser","_useState11","_useState12","_useState13","_useState14","setSettingAcnchorEl","_useState15","_useState16","settingAcnchorEl2","setSettingAcnchorEl2","open","openSetting2","openSetting","handleClose2","handleClick","currentTarget","handleClose","anchorOrigin","vertical","Message","Dialog","Validate","onClose","aria-labelledby","aria-describedby","right","DialogTitle","DialogContent","Chat","DialogActions","pathname","EmailRounded","CalendarToday","maxWidth","Dashboard_Calender","aria-controls","aria-expanded","aria-haspopup","CheckBox","Menu","MenuListProps","TransitionComponent","Fade","Favorite_Favorites","autoFocus","NotificationAdd","Person","Settings","Controls","px","AddCircle","Receipt","FileCopy","MoneyOff","esm_Task","Work","AssignmentTurnedIn","Mail","HumanResources","Group","RevenueControls","AccountControls","EmployeeOversite","Phone","accordionData","tiles","TestingSidebar_Controls","TestingSidebar_HumanResources","TestingSidebar_RevenueControls","TestingSidebar_AccountControls","TestingSidebar_Marketing","TestingSidebar_EmployeeOversite","TestingSidebar","accordions","updateAccordions","react_beautiful_dnd_esm","onDragEnd","result","destination","Array","from","_items$splice","splice","source","index","reorderedItem","droppableId","provided","droppableProps","ref","innerRef","draggableId","Accordion","draggableProps","dragHandleProps","AccordionSummary","expandIcon","ExpandMore_default","AccordionDetails","Stack","elevation","overflowY","Sidebar_TestingSidebar","Footer","setOpen","children","sidebarToggle","useTheme","drawerOpen","setDrawerOpen","openPopover","descriptionElementRef","useRef","descriptionElement","focus","contianer","rowSpacing","columnSpacing","Navbars_NavbarSec","Navbars_Navbar","direction","wrap","components_Sidebar_Sidebar","top","components_Footer_Footer","Fab","esm_Chat","Popover","transformOrigin","rest","objectWithoutProperties","active","UserContext","createContext","UserProvider","_React$useReducer","useReducer","_React$useReducer2","Provider","createTheme","mode","error","warning","success","contrastThreshold","tonalOffset","typography","htmlFontSize","DashBoard","DashboardContent","Tabs","props","activeTab","setActiveTab","styles","startIcon","MoreVert","newActiveTab","preventDefault","one","CreateInvoice","approvel","setApprovel","matter","contact","billable","date_range","create_date","due_date","template","invoice_no","discount","submit","invoiceData","setInvoiceData","dateRange","setDateRange","onSubmit","autoComplete","FormControlLabel","control","Checkbox","varient","DateRangePicker_DateRangePicker","calendars","InputLabelProps","shrink","PaymentPlan","payment_no","due","late_fee","total_due","payment","posted","method","paymentData","mb","paddingInline","InvoicePayment","tax","interest","time","hard","soft","Payment","isPlan","setIsPlan","payment_type","date","retainer","menu","bank_account","payment_method","RadioGroup","row","defaultValue","Radio","Payment_PaymentPlan","Payment_InvoicePayment","Filters","invoiceToggle","setInvoiceToggle","_useToggle3","_useToggle4","paymentToggle","setPaymentToggle","_useToggle5","_useToggle6","paid","setPaid","age","setAge","& .MuiFormControl-root","DialogContentText","Invoice_CreateInvoice","Invoice_Payment","styles_Search","styles_SearchIconWrapper","styles_StyledInputBase","InvoiceList","Invoice_Filters","Index","Invoice_InvoiceList","CONFIG","Accept","ActionAlerts","Alert","severity","TotalDays","date1","date2","dt1","dt2","Math","floor","UTC","getFullYear","getMonth","getDate","GetDate","MatterList","setTasks","setStatus","setLoading","redTask","setRedTask","greenTask","setGreenTask","yellowTask","setYellowTask","myTask","setMyTask","get","statusText","FormGroup","Cards","minWidth","CardContent","Calendar","Box_Box","MatterCards","bgcolor","MatterListLong","setMatters","console","log","NewMatter","mask","openDate","setOpenDate","whenDate","setWhenDate","closeDate","setCloseDate","totalDays","setTotalDays","matter_name","matter_type","matter_source","matter_status","assign_to","assign_by","billing_rate","alerts","jurisdiction","status_limitaion","opposing_counsel","where","involved","witnesses","narrative","matterData","setMatterData","days","open_date","close_date","when","total_days","body","stringify","ActionAlerts_ActionAlerts","message","min","disabled","step","DatePicker","inputFormat","multiline","rows","Save_default","MatterTask","Activities","MatterDetail","MatterDetail_Activities","MatterDetail_MatterTask","MatterDetail_Cards","Matters","Matter_Filters","Matter_MatterCards","Matter_MatterListLong","MatterDashboard","Matter_MatterList","Matter_Calendar","Matter_Cards","components_Tabs_Tabs","Matter_MatterDashboard","Matter_Matters","Matter_NewMatter","Matter_MatterDetail","LedgerActivity","setActivityData","bgColor","Fillters","billedby","setBilledby","setFilter","LedgerCards","decimalScale","fixedDecimalScale","LedgerTImeList","setLedgerData","LegderDashbard","Ledger_LedgerCards","Ledger_Fillters","Ledger_LedgerTImeList","LedgerDoc","minHeight","Time","pickDate","setPickDate","timeToggle","setTimeToggle","setBillable","setTime","category","sub_category","unit","qty","rate","file","detail","bill_by","note","timeData","setTimeData","labelPlacement","FormLabel","format","customInput","onValueChange","LedgerDashbard","Ledger_LedgerActivity","Ledger_LedgerDoc","Ledger_Time","SubCategory","subCategory","setSubCategory","loading","formData","setFormData","FetchData","handleSubmit","required","delete","Clear_default","Category","setCategory","setError","Classification","classification","setClassification","ManageCategory","components_Category_Category","Category_SubCategory","Category_Classification","Contact","_React$createElement","_React$createElement2","_React$createElement3","_React$createElement4","clientNo","setClientNo","dob","setDob","ssn","setSsn","mobileNo","setMobileNo","homeNo","setHomeNo","officeNo","setOfficeNo","faxNo","setFaxNo","otherNo","setOtherNo","_useState17","_useState18","zip","setZip","_useState19","_useState20","plus4","setPlus4","_useState21","_useState22","zip2","setZip2","_useState23","_useState24","plus42","setPlus42","_useState25","company_name","website","ger_email","billing_email","street","suite","city","f_name","l_name","email_1","email_2","email_3","street2","suite2","city2","state2","office","team","member","relation","_useState26","contactData","setContactData","persist","thousandsGroupStyle","autoWidth","gradYear","setGradYear","barDate","setBarDate","underGradYear","setUnderGradYear","phoneNo","setPhoneNo","barNo","setBarNo","practiceTime","setPracticeTime","longestTenure","setLongestTenure","averageTenure","setAverageTenure","currentTenure","setCurrentTenure","email","mobile","phone","language","locate","search_active","law_school","grad_year","bar_admit_date","undergrad_school","undergrad_area","undergrad_year","bar_no","admitted_practice","practice_time","longest_tenure","average_tenure","current_tenure","past_bar_companies_no","primary_area","TabContext","patch","borderBottom","TabList","Tab","TabPanel","KeyboardArrowRight_default","CreateTask","dueDate","setDueDate","bill","setBill","isPrivate","setIsPrivate","setFile","matter_id","matter_contact","filename","taskData","setTaskData","& .MuiSelect-root","due_at","is_billable","is_private","Tasks_ViewTasks","Tasks_CreateTask","Invoice","Matter","Ledger","Category_ManageCategory","components_Contact_Contact","components_Profile_Profile","Tasks","invoice","ledger","AdminDashboard","tabList","wordEntered","setWordEntered","handleChangeSearch","renderTabs","icon","iconPosition","esm_Close","Admin_DashBoard","noValidate","ProgressBar","progress","paddingRight","LinearProgress","randomDate","start","end","getDateTime","getTime","random","toLocaleDateString","getHours","getMinutes","Task","LawyerCards","postfix","FirmCards","CustomerCards","Cards_CustomerCards","Dashboard_Tasks","Dashboard_ProgressBar","Templates","ClientDashboard","Client_DashBoard","Template_Templates","PieChart","pie","donut","val","dropShadow","Chart2","startAngle","endAngle","track","background","hollow","fill","gradient","shade","gradientToColors","stops","BarChart","stacked","tooltip","opacity","offsetX","Cards_LawyerCards","Chart_PieChart","Chart_Chart2","Chart_BarChart","LawyerDashboard","Lawyer_DashBoard","Chart","BarChart2","columnWidth","distributed","BarChart3","textAnchor","opt","dataPointIndex","Cards_FirmCards","Charts_Chart2","Charts_Chart","Charts_BarChart","Charts_BarChart2","Charts_BarChart3","FirmDashboard","Firm_DashBoard","UserRoles_AdminDashboard","UserRoles_FirmDashboard","UserRoles_LawyerDashboard","UserRoles_ClientDashboard","dashboardRedirect","login","password","LoginSuccess","backgroundImage","BackgroundImage","backgroundRepeat","t","grey","backgroundSize","backgroundPosition","square","flexDirection","LockOutlined_default","minLength","register","accountCreated","setAccountCreated","isFirm","setIsFirm","first_name","last_name","re_password","Company","m_name","c_email","role","time_zone","group","job_title","ext","home","work_no","phone_ext","userData","setUserData","p_email","& .MuiButton-root","ManageUser","isActive","setIsActive","roles","setRoles","setRole","setGroup","groups","setGroups","loading2","setLoading2","rate_type","select","ManageUserGroup","setLoadingUser","RoleFuncions","overflowX","UserRole","User_RoleFuncions","User_ManageUser","User_ManageUserGroup","User_UserRole","TimeList","practice_area","undergrad_study","lamguages","admitted_state","relocate","searchData","setSearchData","Result","Saved","pickTime","setPickTime","bar_adm_year","mail_add","link","notes","jobData","setJobData","TimePicker","Employee_Search","Employee_Result","Employee_Saved","App","es","integration_react","User_UserProvider","ThemeProvider","react_alert","AlertTemplate","timeout","Layout","path","Login","Signup","PrivateRoute","exact","Home","Profile","User","Employee","ReactDOM","render","StrictMode","CssBaseline","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5f076981.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"tabs_tabs__2iP2q\",\"current\":\"tabs_current__UH0Eq\",\"content\":\"tabs_content__Vh0J0\"};","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  manageUser: true,\n  manageRole: true,\n  manageGroup: true,\n  revenueIn: true,\n  revenueOut: true,\n  newCustomer: true,\n  lostCustomer: true,\n  newAccount: true,\n  appointment: true,\n  marketing: true,\n  empOversite: true,\n  emails: true,\n  calls: true,\n  map: true,\n  display: true,\n};\n\nconst sidebarSlice = createSlice({\n  name: \"sidebar\",\n  initialState,\n  reducers: {\n    isDisplay: (state) => {\n      state.display = !state.display;\n    },\n\n    manageRoleActive: (state) => {\n      state.manageRole = !state.manageRole;\n    },\n    manageUserActive: (state) => {\n      state.manageUser = !state.manageUser;\n    },\n    manageGroupActive: (state) => {\n      state.manageGroup = !state.manageGroup;\n    },\n    revenueInActive: (state) => {\n      state.revenueIn = !state.revenueIn;\n    },\n    revenueOutActive: (state) => {\n      state.revenueOut = !state.revenueOut;\n    },\n    newCustomerActive: (state) => {\n      state.newCustomer = !state.newCustomer;\n    },\n    lostCustomerActive: (state) => {\n      state.lostCustomer = !state.lostCustomer;\n    },\n    newAccountActive: (state) => {\n      state.newAccount = !state.newAccount;\n    },\n    appointmentActive: (state) => {\n      state.appointment = !state.appointment;\n    },\n    marketingActive: (state) => {\n      state.marketing = !state.marketing;\n    },\n    empOversiteActive: (state) => {\n      state.empOversite = !state.empOversite;\n    },\n    emailsActive: (state) => {\n      state.emails = !state.emails;\n    },\n    callsActive: (state) => {\n      state.calls = !state.calls;\n    },\n    mapActive: (state) => {\n      state.map = !state.map;\n    },\n  },\n});\n\nexport const {\n  isDisplay,\n  manageRoleActive,\n  manageGroupActive,\n  manageUserActive,\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} = sidebarSlice.actions;\nexport default sidebarSlice.reducer;\n","module.exports = __webpack_public_path__ + \"static/media/logo_white copy.aa470428.png\";","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { Responsive as ResponsiveGridLayout } from \"react-grid-layout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withSize } from \"react-sizeme\";\n\nimport {\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} from \"../../../../redux/features/sidebarSlice\";\n\nimport Widget from \"./Widget\";\n\nconst originalItems = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\"];\n\nconst initialLayouts = {\n  lg: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n};\n\nfunction Content({ size: { width } }) {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  const components = {\n    a: sidebar.revenueIn,\n    b: sidebar.revenueOut,\n    c: sidebar.newCustomer,\n    d: sidebar.lostCustomer,\n    e: sidebar.newAccount,\n    f: sidebar.map,\n    g: sidebar.empOversite,\n    h: sidebar.calls,\n    i: sidebar.appointment,\n    j: sidebar.marketing,\n    k: sidebar.emails,\n  };\n  const fnCall = {\n    a: revenueInActive(),\n    b: revenueOutActive(),\n    c: newCustomerActive(),\n    d: lostCustomerActive(),\n    e: newAccountActive(),\n    f: mapActive(),\n    g: empOversiteActive(),\n    h: callsActive(),\n    i: appointmentActive(),\n    j: marketingActive(),\n    k: emailsActive(),\n  };\n  const [items, setItems] = useState(originalItems);\n  const [layouts, setLayouts] = useState(\n    getFromLS(\"layouts\") || initialLayouts,\n  );\n  const onLayoutChange = (_, allLayouts) => {\n    setLayouts(allLayouts);\n  };\n  const onLayoutSave = () => {\n    saveToLS(\"layouts\", layouts);\n  };\n  const onRemoveItem = (itemId) => {\n    // setItems(items.filter((i) => i !== itemId));\n    dispatch(fnCall[itemId]);\n  };\n  const onAddItem = (itemId) => {\n    setItems([...items, itemId]);\n    dispatch(fnCall[itemId]);\n  };\n  const displayItemList = () => {\n    return items.map((key) => (\n      <div\n        key={key}\n        className=\"widget\"\n        data-grid={{ w: 3, h: 2, x: 0, y: Infinity }}\n        style={components[key] ? { display: \"block\" } : { display: \"none\" }}\n      >\n        <Widget\n          id={key}\n          onRemoveItem={onRemoveItem}\n          backgroundColor=\"#867ae9\"\n        />\n      </div>\n    ));\n  };\n  useEffect(() => {\n    displayItemList();\n  }, [sidebar]);\n  return (\n    <>\n      <ResponsiveGridLayout\n        className=\"layout\"\n        layouts={layouts}\n        breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n        cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n        rowHeight={60}\n        width={width}\n        onLayoutChange={onLayoutChange}\n      >\n        {displayItemList()}\n      </ResponsiveGridLayout>\n    </>\n  );\n}\n\nexport default withSize({ refreshMode: \"debounce\", refreshRate: 60 })(Content);\n\nfunction getFromLS(key) {\n  let ls = {};\n  if (global.localStorage) {\n    try {\n      ls = JSON.parse(global.localStorage.getItem(\"rgl-8\")) || {};\n    } catch (e) {}\n  }\n  return ls[key];\n}\n\nfunction saveToLS(key, value) {\n  if (global.localStorage) {\n    global.localStorage.setItem(\n      \"rgl-8\",\n      JSON.stringify({\n        [key]: value,\n      }),\n    );\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/login_light.a12d3677.png\";","module.exports = __webpack_public_path__ + \"static/media/signup_light.181ee8a6.png\";","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { Box } from \"@mui/material\";\n// import NumberFormat from \"react-number-format\";\n\nexport const Appointments = () => {\n  const options = {\n    chart: {\n      type: \"bar\",\n      height: 500,\n    },\n    series: [\n      {\n        data: [\n          {\n            x: \"Zoom\",\n            y: 150,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Phone\",\n            y: 250,\n            fillColor: \"#546E7A\",\n            strokeColor: \"#546E7A\",\n          },\n          {\n            x: \"In Person\",\n            y: 500,\n            fillColor: \"#f48024\",\n            strokeColor: \"#f48024\",\n          },\n          {\n            x: \"Met\",\n            y: 300,\n            fillColor: \"#13d8aa\",\n            strokeColor: \"#13d8aa\",\n          },\n          {\n            x: \"Rescheduled\",\n            y: 125,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Canceled\",\n            y: 30,\n            fillColor: \"#A5978B\",\n            strokeColor: \"#A5978B\",\n          },\n        ],\n      },\n    ],\n\n    options: {\n      plotOptions: {\n        bar: {\n          barHeight: \"50%\",\n          borderRadius: 4,\n\n          horizontal: true,\n          dataLabels: {\n            position: \"bottom\",\n          },\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      title: {\n        text: \"Appointments\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n    },\n    xaxis: {\n      style: {\n        fontSize: \"20px\",\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={options.options}\n          series={options.series}\n          height=\"300\"\n          type=\"bar\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\nexport const Marketing = () => {\n  const config = {\n    series: [\n      {\n        name: \"Google\",\n        data: [10, 51, 35, 41, 29, 62, 99, 41, 18],\n      },\n      {\n        name: \"Youtube\",\n        data: [10, 80, 35, 41, 99, 62, 79, 21, 68],\n      },\n      {\n        name: \"Website\",\n        data: [60, 21, 45, 41, 89, 62, 59, 71, 98],\n      },\n    ],\n    options: {\n      chart: {\n        height: 250,\n        toolbar: {\n          show: false,\n        },\n      },\n\n      legend: {\n        position: \"top\",\n        horizontalAlign: \"right\",\n        onItemHover: {\n          highlightDataSeries: true,\n        },\n        labels: {\n          colors: \"#dddddd\",\n          useSeriesColors: true,\n        },\n      },\n\n      dataLabels: {\n        enabled: false,\n      },\n\n      stroke: {\n        curve: \"smooth\",\n        width: 2,\n      },\n\n      title: {\n        text: \"Marketing\",\n        align: \"left\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      xaxis: {\n        categories: [\n          \"31/01\",\n          \"01/02\",\n          \"02/03\",\n          \"03/04\",\n          \"31/05\",\n          \"04/06\",\n          \"06/07\",\n          \"02/08\",\n          \"09/09\",\n        ],\n        style: {\n          fontSize: \"20px\",\n        },\n      },\n\n      yaxis: {},\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={config.options}\n        series={config.series}\n        height=\"250\"\n        type=\"line\"\n      />\n    </Fragment>\n  );\n};\nexport const Calls = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 300,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Calls\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Inbound\", \"Outbound\", \"Sales\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const Email = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total Emails\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Email\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Send\", \"Open\", \"Delete\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueInActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueInCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 460;\n      case \"weekly\":\n        return 3254;\n      case \"monthly\":\n        return 32564;\n      case \"quarterly\":\n        return 130256;\n      case \"yearly\":\n        return 521024;\n      case \"range\":\n        return 1500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue In\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueInCards);\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueOutActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueOutCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 35;\n      case \"weekly\":\n        return 240;\n      case \"monthly\":\n        return 4520;\n      case \"quarterly\":\n        return 18080;\n      case \"yearly\":\n        return 72320;\n      case \"range\":\n        return 500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue out\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueOutCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { newCustomerActive } from \"../../../../redux/features/sidebarSlice\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const NewCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 2;\n      case \"weekly\":\n        return 23;\n      case \"monthly\":\n        return 69;\n      case \"quarterly\":\n        return 200;\n      case \"yearly\":\n        return 610;\n      case \"range\":\n        return 10;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              New Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 23 : 69}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={23}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={69}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={15}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={50}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={200}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(newCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </IconButton>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(NewCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Button,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { lostCustomerActive } from \"../../../../redux/features/sidebarSlice\";\n\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const LostCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 0;\n      case \"weekly\":\n        return 0;\n      case \"monthly\":\n        return 3;\n      case \"quarterly\":\n        return 6;\n      case \"yearly\":\n        return 15;\n      case \"range\":\n        return 3;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              Lost Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 0 : 3}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={3}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={1}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={6}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <Button\n                  component={IconButton}\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(lostCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </Button>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(LostCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport { Circle } from \"@mui/icons-material\";\nimport MAP_STYLE from \"../../../utils/style.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapboxWorker from \"mapbox-gl/dist/mapbox-gl-csp-worker\";\nmapboxgl.workerClass = MapboxWorker;\n\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\";\n\nconst Map = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 38.7577,\n    longitude: -95.4376,\n    zoom: 3,\n  });\n\n  return (\n    <Fragment>\n      <ReactMapGL\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle={MAP_STYLE}\n        onViewportChange={setViewport}\n        mapboxApiAccessToken={\n          \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\"\n        }\n        style={{ zIndex: 200 }}\n      >\n        <Marker\n          latitude={40.7128}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={47.6062}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={41.8781}\n          longitude={-87.6298}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n      </ReactMapGL>\n    </Fragment>\n  );\n};\n\nexport default Map;\n","/** @format */\n\nimport {\n  Paper,\n  Box,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  TableCell,\n} from \"@mui/material\";\nimport React, { Fragment } from \"react\";\n\nconst NewAccounts = () => {\n  return (\n    <Fragment>\n      <Box p={1}>\n        <Typography color=\"blue\">New Accounts</Typography>\n        <TableContainer>\n          <Table fullWidth>\n            <TableHead color=\"blue\">\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"blue\">Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewAccounts;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Box, Grid, Typography } from \"@mui/material\";\n\nimport NumberFormat from \"react-number-format\";\n\nconst EmpOversite = () => {\n  return (\n    <Fragment>\n      <Typography color=\"blue\" sx={{ fontSize: \"1.1rem\" }}>\n        Employee Oversite\n      </Typography>\n      <Typography variant=\"h3\" component=\"h3\" sx={{ fontSize: \"1.8rem\" }}>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.1rem\" }}>\n        Employees logged in\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"purple\" }}> Total ticket issued:</span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"seagreen\" }}>Trouble ticket Resolved: </span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n    </Fragment>\n  );\n};\n\nexport default EmpOversite;\n","/** @format */\n\nimport React from \"react\";\n\nimport {\n  IconButton,\n  Typography,\n  Card,\n  CardContent,\n  CardActions,\n} from \"@mui/material\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { Appointments, Calls, Marketing, Email } from \"../Charts\";\n\nimport RevenueInCards from \"../Cards/RevenueIn\";\nimport RevenueOutCards from \"../Cards/RevenueOut\";\nimport NewCustomerCards from \"../Cards/NewCustomer\";\nimport LostCustomerCards from \"../Cards/LostCustomer\";\n\nimport Map from \"../Map\";\n\nimport NewAccounts from \"../NewAccounts\";\nimport EmpOversite from \"../EmpOversite\";\n\nconst widgetNames = {\n  a: <RevenueInCards />,\n  b: <RevenueOutCards />,\n  c: <NewCustomerCards />,\n  d: <LostCustomerCards />,\n  e: <NewAccounts />,\n  f: <Map />,\n  g: <EmpOversite />,\n  h: <Calls />,\n  i: <Appointments />,\n  j: <Marketing />,\n  k: <Email />,\n};\n\nexport default function Widget({ id, onRemoveItem }) {\n  return (\n    <Card\n      sx={{\n        width: \"100%\",\n        height: \"100%\",\n        padding: \"1rem\",\n      }}\n    >\n      <CardActions>\n        <IconButton aria-label=\"delete\" onClick={() => onRemoveItem(id)}>\n          <CloseIcon fontSize=\"small\" />\n        </IconButton>\n      </CardActions>\n      {widgetNames[id]}\n    </Card>\n  );\n}\n","/** @format */\n\nimport { GET_PROFILE } from \"../actions/types\";\n\nconst initialState = {\n  profile: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {\n  msg: {},\n  status: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { CREATE_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CREATE_MESSAGE:\n      return (state = action.payload);\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload,\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport {\n  GET_IS_WEEKLY,\n  MONTLY_REVENUE,\n  WEEKLY_REVENUE,\n} from \"../actions/types\";\n\nconst initialState = {\n  isWeekly: \"daily\",\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_IS_WEEKLY:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case MONTLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case WEEKLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst tabSlice = createSlice({\n  name: \"tab\",\n  initialState: [],\n  reducers: {\n    addTab: (state, action) => {\n      const newTask = {\n        id: action.payload.id,\n        name: action.payload.tab,\n      };\n      state.push(newTask);\n    },\n    removeTab: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n  },\n});\n\nexport const { addTab, removeTab } = tabSlice.actions;\nexport default tabSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  favorite: {},\n  isAvailable: true,\n};\n\nconst favoriteSlice = createSlice({\n  name: \"favorite\",\n  initialState: [],\n  reducers: {\n    addFav: (state, action) => {\n      const newFav = {\n        id: action.payload.id,\n        name: action.payload.name,\n        page: action.payload.page,\n      };\n      if (state.favorite.length < 10) {\n        state.favorite.push(newFav);\n      } else state.isAvailable = false;\n    },\n\n    removeFav: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n  },\n});\n\nexport const { addFav, removeFav } = favoriteSlice.actions;\nexport default favoriteSlice.reducer;\n","/** @format */\n\nimport { combineReducers } from \"redux\";\n// import leads from \"./leads\";\nimport profile from \"./profile\";\nimport errors from \"./errors\";\nimport messages from \"./messages\";\nimport auth from \"./auth\";\nimport data from \"./data\";\nimport sidebar from \"../redux/features/sidebarSlice\";\nimport tabs from \"../redux/features/tabSlice\";\nimport favorite from \"../redux/features/favoriteSlice\";\n\nexport default combineReducers({\n  auth,\n  profile,\n  errors,\n  messages,\n  data,\n  sidebar,\n  favorite,\n  tabs,\n});\n","/** @format */\n\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const DELETE_PROFILE = \"DELETE_PROFILE\";\nexport const ADD_PROFILE = \"ADD_PROFILE\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const CLEAR_PROFILES = \"CLEAR_PROFILES\";\nexport const MONTLY_REVENUE = \"GET_MONTLY_REVENUE\";\nexport const WEEKLY_REVENUE = \"GET_WEEKLY_REVENUE\";\nexport const GET_IS_WEEKLY = \"GET_IS_WEEKLY\";\nexport const UPDATE_IS_WEEKLY = \"UPDATE_IS_WEEKLY\";\n\nexport const CREATE_MEMBER_SUCCESS = \"CREATE_MEMBER_SUCCESS\";\nexport const CREATE_MEMBER_FAIL = \"CREATE_MEMBER_FAIL\";\n\nexport const GET_MEMBER_SUCCESS = \"GET_MEMBER_SUCCESS\";\nexport const GET_MEMBER_FAIL = \"GET_MEMBER_FAIL\";\n\nexport const GET_TIMEZONE_SUCCESS = \"GET_TIMEZONE_SUCCESS\";\nexport const GET_TIMEZONE_FAIL = \"GET_TIMEZONE_FAIL\";\nexport const GET_CURRENT_TIME_SCUSSESS = \"GET_CURRENT_TIME_SCUSSESS\";\nexport const GET_CURRENT_TIME_FAIL = \"GET_CURRENT_TIME_FAIL\";\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\n// export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\n// export const SIGNUP_FAIL = 'SIGNUP_FAIL';\n// export const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\n// export const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\n// export const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\n// export const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\n// export const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\n// export const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\n// export const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\n// export const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\n// export const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\n// export const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\n// export const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\n// export const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\n// export const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\n// export const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\n// export const LOGOUT = 'LOGOUT';\n\n// export const PROFILE_CREATED_SUCCESS = 'PROFILE_CREATED_SUCCESS';\n// export const PROFILE_CREATED_FAIL = 'PROFILE_CREATED_FAIL';\n\n// export const PROFILE_LOADED_SUCCESS = 'PROFILE_LOADED_SUCCESS';\n// export const PROFILE_LOADED_FAIL = 'PROFILE_LOADED_FAIL';\n\n// export const PROFILE_UPDATE_SUCCESS = 'PROFILE_UPDATE_SUCCESS';\n// export const PROFILE_UPDATE_FAIL = 'PROFILE_UPDATE_FAIL';\n","/** @format */\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./reducers\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({ reducer: persistedReducer });\n\nexport const persistor = persistStore(store);\n\nexport default store;\n","/** @format */\n\nimport { CREATE_MESSAGE, GET_ERRORS } from \"./types\";\n\n// CREATE MESSAGE\nexport const createMessage = (msg) => {\n  return {\n    type: CREATE_MESSAGE,\n    payload: msg,\n  };\n};\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status },\n  };\n};\n","/** @format */\n\nimport axios from \"axios\";\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from \"./types\";\nimport { createMessage, returnErrors } from \"./messages\";\n\n// CHECK TOKEN & LOAD USER\nexport const loadUser = () => (dispatch, getState) => {\n  // User Loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get(\n      `${process.env.REACT_APP_API_URL}/user/auth/user`,\n      tokenConfig(getState),\n    )\n    .then((res) => {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_ERROR,\n      });\n    });\n};\n\n// LOGIN USER\nexport const login = (username, email, password) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ username, password });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/user/auth/login`, body, config)\n    .then((res) => {\n      dispatch(createMessage({ LoginSuccess: \"Login Successful\" }));\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n      dispatch({});\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n    });\n};\n\n// REGISTER USER\nexport const register = ({ username, email, password }) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ username, email, password });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/user/auth/register`, body, config)\n    .then((res) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n    });\n};\n\n// LOGOUT USER\nexport const logout = () => (dispatch, getState) => {\n  axios\n    .post(\n      `${process.env.REACT_APP_API_URL}/user/auth/logout`,\n      null,\n      tokenConfig(getState),\n    )\n    .then((res) => {\n      dispatch({ type: \"CLEAR_LEADS\" });\n      dispatch({\n        type: LOGOUT_SUCCESS,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n    });\n};\n\n// Setup config with token - helper function\nexport const tokenConfig = (getState) => {\n  // Get token from state\n  const token = getState().auth.token;\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // If token, add to headers config\n  if (token) {\n    config.headers[\"Authorization\"] = `Token ${token}`;\n  }\n\n  return config;\n};\n","/** @format */\n\nimport { useState, useCallback } from \"react\";\n\nexport const useToggle = (initialState) => {\n  const [isToggled, setIsToggled] = useState(initialState);\n\n  // put [setIsToggled] into the useCallback's dependencies array\n  // this value never changes so the callback is not going to be ever re-created\n  const toggle = useCallback(\n    () => setIsToggled((state) => !state),\n    [setIsToggled],\n  );\n\n  return [isToggled, toggle];\n};\n","/** @format */\n\n// import * as React from 'react';\nimport { styled } from \"@mui/material/styles\";\nimport { Link } from \"react-router-dom\";\nimport { Button, InputBase } from \"@mui/material\";\n\nexport const SideBarBtn = styled(Button)(({ theme }) => ({\n  fontSize: \"0.6em\",\n  textTransform: \"none\",\n  // color: theme.palette.primary.main,\n  color: \"#eee\",\n  textAlign: \"center\",\n  width: \"8em\",\n  height: \"8em\",\n  margin: \"0.7em\",\n  borderColor: \"#eee\",\n  padding: \"1em\",\n  \"&:hover\": {\n    backgroundColor: \"white\",\n    color: theme.palette.primary.main,\n  },\n  \"&:visited\": {\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport const SecNavbar = styled(\"nav\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  color: \"#eee\",\n  position: \"reletive\",\n  padding: \"0\",\n  margin: \"0\",\n  height: \"3.5rem\",\n  width: \"100%\",\n}));\n\nexport const FooterBar = styled(\"footer\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  color: \"#eee\",\n  position: \"fixed\",\n  bottom: \"0\",\n  left: \"0\",\n\n  margin: \"0\",\n  height: \"2.5rem\",\n  textAlign: \"center\",\n  alignContent: \"center\",\n  width: \"100%\",\n}));\n\nexport const FooterLink = styled(Link)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  fontSize: \"1rem\",\n  textTransform: \"uppercase\",\n  fontWeight: 500,\n  textDecoration: \"none\",\n  marginTop: \"0.7rem\",\n  padding: \" 2rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\nexport const FooterButton = styled(Button)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  fontSize: \"1rem\",\n  fontWeight: 500,\n  marginX: \"2rem\",\n  paddingX: \"3rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\n\nexport const LinkButton = styled(Link)(({ theme }) => ({\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  margin: \"0.7em\",\n  backgroundColor: theme.palette.primary.main,\n  borderColor: \"#2979ff\",\n  color: \"white\",\n  padding: \"0.65rem 1.2rem\",\n  borderRadius: \"0.5rem\",\n  \"&:hover\": {\n    backgroundColor: \"#1c54b2\",\n    cursor: \"pointer\",\n    color: \"white\",\n  },\n}));\n\nexport const Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#ddd\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"40%\",\n}));\n\nexport const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\nexport const MainSearch = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#eee\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(3),\n    width: \"auto\",\n  },\n}));\n\nexport const MainSearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledMainInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport NumberFormat from \"react-number-format\";\nimport { useToggle } from \"../../context/useToggle\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  ListSubheader,\n  TextField,\n} from \"@mui/material\";\nimport {\n  MainSearch,\n  MainSearchIconWrapper,\n  StyledMainInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Logo from \"../../asserts/logo_white copy.png\";\nimport { updateIsWeekly } from \"../../actions/data\";\n\nconst Navbar = ({\n  logout,\n  isAuthenticated,\n  user,\n  updateIsWeekly,\n  isWeekly,\n}) => {\n  let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const [today, setToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [dateValue, setDateValue] = useState([null, null]);\n\n  const timeFormater = () => {\n    if (checked) {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n    } else {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: false,\n      });\n    }\n  };\n  const [isChecked, setIsChecked] = useToggle(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOnChage = (e) => {\n    updateIsWeekly(e.target.value);\n  };\n\n  const logout_user = () => {\n    logout();\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Typography variant=\"h5\" component=\"h5\">\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          color=\"primary\"\n          style={{ marginRight: \"0.5rem\" }}\n        >\n          Expected Balance :\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">\n              Expected Balance\n            </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={isWeekly}\n              label=\"Expected Balance\"\n              onChange={handleOnChage}\n            >\n              <MenuItem value=\"daily\">Daily</MenuItem>\n              <MenuItem value=\"weekly\">Weekly</MenuItem>\n              <MenuItem value=\"monthly\">Monthly</MenuItem>\n              <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n              <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n              <MenuItem value=\"range\">Custom Range</MenuItem>\n              {isWeekly === \"range\" ? (\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              ) : null}\n            </Select>\n          </FormControl>\n        </Typography>\n        <NumberFormat\n          value={isWeekly ? 3254 : 32564}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix=\"$\"\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" ml={1} mr={1}>\n        {\" \"}\n        |{\" \"}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h5\">\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          defaultChecked\n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n    </Fragment>\n  );\n  return (\n    <Fragment>\n      <Box sx={{ flexGrow: 1, backgroundColor: \"white\" }} component=\"nav\">\n        <AppBar position=\"static\" color=\"transparent\" sx={{ border: \"none\" }}>\n          <Toolbar>\n            <Typography\n              noWrap\n              component=\"div\"\n              sx={{ display: { xs: \"none\", sm: \"block\" } }}\n            >\n              <Link to=\"/\">\n                <img\n                  src={Logo}\n                  alt=\"logo\"\n                  style={{ height: \"2rem\", width: \"auto\" }}\n                />\n              </Link>\n            </Typography>\n            <MainSearch>\n              <MainSearchIconWrapper>\n                <SearchIcon />\n              </MainSearchIconWrapper>\n              <StyledMainInputBase\n                placeholder=\"Search…\"\n                inputProps={{ \"aria-label\": \"search\" }}\n              />\n            </MainSearch>\n            <Box sx={{ flexGrow: 1 }} />\n            <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\n              {isAuthenticated ? authLinks() : guestLinks()}\n            </Box>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps, { logout, updateIsWeekly })(Navbar);\n","/** @format */\n\n/** @format */ // import axios from \"axios\";\n\nimport { GET_IS_WEEKLY, MONTLY_REVENUE, WEEKLY_REVENUE } from \"./types\";\n// GET LEADS\nexport const updateIsWeekly = (data) => (dispatch) => {\n  if (data) {\n    dispatch({\n      type: WEEKLY_REVENUE,\n      payload: data,\n    });\n  } else {\n    dispatch({\n      type: MONTLY_REVENUE,\n    });\n  }\n};\n\nexport const getIsWeekly = () => (dispatch) =>\n  dispatch({\n    type: GET_IS_WEEKLY,\n    // payload: this.state,\n  });\n","/** @format */\n\nimport { Box, Typography, Button, TextField, Chip } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport React, { Fragment } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\n\nconst ChatHistory = () => {\n  return (\n    <Typography>\n      <Box\n        p={2}\n        sx={{\n          border: \"1px solid lightgray\",\n          borderRadius: \"1rem\",\n        }}\n      >\n        <Chip\n          label=\"Hi\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          size=\"large\"\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip label=\"Hello\" variant=\"outlined\" avatar={<Avatar>M</Avatar>} />\n        <br />\n        <Chip\n          label=\"Message by M\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"Message by D\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"this is just a ui design\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{ marginTop: \"1rem\" }}\n        />\n        <br />\n        <Chip\n          label=\"the chat feature is not working at backend\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n\n        <br />\n      </Box>\n    </Typography>\n  );\n};\n\nconst Chatting = () => {\n  return (\n    <Fragment>\n      <ChatHistory />\n      <br />\n      <Box\n        component=\"form\"\n        sx={{\n          //   border: \"1px solid lightgray\",\n          //   borderRadius: \"1rem\",\n          \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n        }}\n      >\n        <TextField type=\"text\" size=\"small\" variant=\"outlined\" />\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          endIcon={<SendIcon />}\n          type=\"submit\"\n          sx={{\n            m: 1,\n          }}\n        >\n          Send\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Chatting;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport isWeekend from \"date-fns/isWeekend\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport StaticDatePicker from \"@mui/lab/StaticDatePicker\";\nimport { TextField, Box, Paper, Grid } from \"@mui/material\";\n\nconst Calender = () => {\n  const [value, setValue] = useState(new Date());\n  const [tasks, setTasks] = useState([]);\n\n  const handleOnChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <Box component={Paper} m={2}>\n      <Grid container>\n        {\" \"}\n        <Grid item lg={6} xs={12}>\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <StaticDatePicker\n              value={value}\n              shouldDisableDate={isWeekend}\n              onChange={(e) => {\n                handleOnChange(e);\n              }}\n              renderInput={(params) => <TextField {...params} />}\n            />\n          </LocalizationProvider>\n        </Grid>{\" \"}\n        <Grid item lg={6} xs={12}>\n          {tasks.length !== 0 ? (\n            tasks.map((task) => (\n              <li>\n                {task.id} - {task.name}\n              </li>\n            ))\n          ) : (\n            <h4> No record found</h4>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Calender;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Menu, MenuItem, Divider } from \"@mui/material\";\n\nconst ViewTasks = () => {\n  return (\n    <Fragment>\n      <MenuItem>Profile</MenuItem>\n      <MenuItem>Account</MenuItem>\n      <MenuItem>Setting</MenuItem>\n      <Divider sx={{ my: 0.5 }} />\n      <MenuItem>Logout</MenuItem>\n    </Fragment>\n  );\n};\n\nexport default ViewTasks;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nimport { Star } from \"@mui/icons-material\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Favorites = () => {\n  const favList = useSelector((state) => state.favorite.favorite);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <List>\n        <ListItem disablePadding>\n          <ListItemButton>\n            <ListItemIcon>\n              <Star sx={{ color: \"orange\" }} />\n            </ListItemIcon>\n          </ListItemButton>\n          <ListItemText primary=\"Favorite 1\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Favorites;\n","/** @format */\n/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport Chatting from \"../Chat/Chat\";\n\n// styling imports\nimport {\n  Box,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  Fade,\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { SecNavbar } from \"../../styles/styles\";\n\nimport {\n  Message,\n  EmailRounded,\n  CalendarToday,\n  CheckBox,\n  Person,\n  NotificationAdd,\n  Settings,\n  Star,\n  StarBorder,\n} from \"@mui/icons-material/\";\nimport { useToggle } from \"../../context/useToggle\";\nimport Calender from \"../Dashboard/Calender\";\nimport ViewTasks from \"../Tasks/ViewTasks\";\nimport Favorites from \"../Favorite/Favorites\";\nimport serverTime from \"../../utils/ServerTime\";\n\nconst NavbarSec = ({ logout, isAuthenticated, user }) => {\n  const [openFav, setOpenFav] = useState(false);\n\n  const handleClickOpenFav = () => {\n    setOpenFav(true);\n  };\n\n  const handleCloseFav = () => {\n    setOpenFav(false);\n  };\n  const [openTask, setOpenTask] = useState(false);\n\n  const handleClickOpenTask = () => {\n    setOpenTask(true);\n  };\n\n  const handleCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const [openCal, setOpenCal] = useState(false);\n\n  const handleClickOpenCal = () => {\n    setOpenCal(true);\n  };\n\n  const handleCloseCal = () => {\n    setOpenCal(false);\n  };\n\n  const [openChat, setOpenChat] = useState(false);\n\n  const handleClickOpenChat = () => {\n    setOpenChat(true);\n  };\n\n  const handleCloseChat = () => {\n    setOpenChat(false);\n  };\n\n  const history = useHistory();\n  const [isLogout, setIsLogout] = useToggle(false);\n  const today = new Date();\n  const time = today.toLocaleTimeString();\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n  const [redirect, setRedirect] = useState(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [settingAcnchorEl2, setSettingAcnchorEl2] = useState(null);\n\n  const [anchorEl2, setAnchorEl2] = React.useState(null);\n\n  const logout_user = () => {\n    logout();\n    setRedirect(true);\n  };\n\n  const open = Boolean(anchorEl);\n  const open2 = Boolean(anchorEl);\n\n  const userRoleChecker = () => {\n    switch (user.username) {\n      case \"admin\":\n        return \"Admin\";\n      case \"firm\":\n        return \"Firm\";\n      case \"lawyer\":\n        return \"Lawyer\";\n      default:\n        return \"Client\";\n    }\n  };\n\n  const openSetting2 = Boolean(settingAcnchorEl2);\n\n  const handleClick2 = (event) => {\n    setSettingAcnchorEl2(event.currentTarget);\n  };\n  const openSetting = Boolean(settingAcnchorEl);\n  const handleClose2 = () => {\n    setSettingAcnchorEl2(null);\n  };\n\n  const handleClick = (event) => {\n    setSettingAcnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setSettingAcnchorEl(null);\n  };\n  const dispatch = useDispatch();\n\n  return (\n    <Fragment>\n      <SecNavbar>\n        <Toolbar>\n          <Box component=\"div\" sx={{ flexGrow: 1 }}>\n            <IconButton\n              size=\"large\"\n              onClick={handleClickOpenChat}\n              sx={{\n                fontSize: \"2rem\",\n                color: \"#eee\",\n                \"&:hover\": {\n                  color: \"#fff\",\n                  backgroundColor: \"#7a4ebf\",\n                },\n              }}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n            >\n              <Message />\n            </IconButton>\n            <Dialog\n              Validate\n              open={openChat}\n              onClose={handleCloseChat}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n              sx={{\n                position: \"absolute\",\n                right: \"20px\",\n                bottom: \"150px\",\n              }}\n            >\n              <DialogTitle id=\"alert-dialog-title\">\n                {\"Chatting Application\"}\n              </DialogTitle>\n              <DialogContent>\n                <Chatting />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleCloseChat}>Close</Button>\n              </DialogActions>\n            </Dialog>\n\n            <IconButton\n              size=\"large\"\n              component={Link}\n              sx={{\n                fontSize: \"2rem\",\n                color: \"white\",\n                \"&:hover\": {\n                  color: \"white\",\n                  backgroundColor: \"#7a4ebf\",\n                },\n              }}\n              to={{\n                pathname:\n                  \"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=someone@gmail.com\",\n              }}\n              target=\"_blank\"\n            >\n              <EmailRounded />\n            </IconButton>\n\n            <IconButton\n              size=\"large\"\n              onClick={handleClickOpenCal}\n              sx={{\n                fontSize: \"2rem\",\n                color: \"white\",\n                \"&:hover\": {\n                  color: \"white\",\n                  backgroundColor: \"#7a4ebf\",\n                },\n              }}\n            >\n              <CalendarToday />\n            </IconButton>\n            <Dialog\n              Validate\n              open={openCal}\n              maxWidth=\"lg\"\n              fullWidth\n              onClose={handleCloseCal}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n              sx={{\n                position: \"absolute\",\n                right: \"20px\",\n                bottom: \"150px\",\n              }}\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Calender\"}</DialogTitle>\n              <DialogContent>\n                <Calender />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleCloseCal}>Close</Button>\n              </DialogActions>\n            </Dialog>\n            <IconButton\n              aria-label=\"more\"\n              id=\"long-button\"\n              aria-controls=\"long-menu\"\n              aria-expanded={openSetting2 ? \"true\" : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleClick2}\n              sx={{\n                fontSize: \"2rem\",\n                color: \"white\",\n                \"&:hover\": {\n                  color: \"white\",\n                  backgroundColor: \"#7a4ebf\",\n                },\n              }}\n            >\n              <CheckBox />\n            </IconButton>\n            <Menu\n              id=\"fade-menu\"\n              MenuListProps={{\n                \"aria-labelledby\": \"fade-button\",\n              }}\n              anchorEl={settingAcnchorEl2}\n              open={openSetting2}\n              onClose={handleClose2}\n              TransitionComponent={Fade}\n            >\n              <MenuItem onClick={handleClose2}>\n                Task 1: This is task one\n              </MenuItem>\n              <MenuItem onClick={handleClose2}>\n                Task 2: This is task two\n              </MenuItem>\n              <MenuItem onClick={handleClose2}>\n                Task 3: This is task three\n              </MenuItem>\n              <Divider sx={{ my: 0.5 }} />\n              <MenuItem onClick={handleClose2}>\n                Task 4: This is task four\n              </MenuItem>\n            </Menu>\n            <IconButton\n              aria-label=\"more\"\n              id=\"long-button\"\n              aria-controls=\"long-menu\"\n              aria-expanded={openSetting2 ? \"true\" : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleClickOpenFav}\n              sx={{\n                fontSize: \"2rem\",\n                color: \"white\",\n                \"&:hover\": {\n                  color: \"white\",\n                  backgroundColor: \"#7a4ebf\",\n                },\n              }}\n            >\n              <Star />\n            </IconButton>\n            <Dialog\n              open={openFav}\n              onClose={handleCloseFav}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n              <DialogContent>\n                <Favorites />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleCloseFav} autoFocus>\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Box>\n          <NotificationAdd mr={2} />\n          <Typography component=\"h5\" variant=\"h6\" ml={2} mr={2}>\n            |\n          </Typography>\n\n          <Button\n            color=\"inherit\"\n            aria-controls=\"basic-menu\"\n            aria-haspopup=\"true\"\n            aria-expanded={open ? \"true\" : undefined}\n            onClick={handleClick}\n          >\n            <Person /> {localuser.username} - ({localuser.username} )\n          </Button>\n          <Button color=\"inherit\" onClick={() => dispatch(logout())}>\n            Logout\n          </Button>\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleClose}\n            MenuListProps={{\n              \"aria-labelledby\": \"basic-button\",\n            }}\n          >\n            <MenuItem component={Link} to=\"/profile\">\n              Profile\n            </MenuItem>\n            {/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n          </Menu>\n          <IconButton\n            aria-label=\"more\"\n            id=\"long-button\"\n            aria-controls=\"long-menu\"\n            aria-expanded={openSetting ? \"true\" : undefined}\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n            sx={{\n              color: \"white\",\n            }}\n          >\n            <Settings />\n          </IconButton>\n          <Menu\n            id=\"fade-menu\"\n            MenuListProps={{\n              \"aria-labelledby\": \"fade-button\",\n            }}\n            anchorEl={settingAcnchorEl}\n            open={openSetting}\n            onClose={handleClose}\n            TransitionComponent={Fade}\n          >\n            <MenuItem onClick={handleClose}>Profile</MenuItem>\n            <MenuItem onClick={handleClose}>Account</MenuItem>\n            <MenuItem onClick={handleClose}>Setting</MenuItem>\n            <Divider sx={{ my: 0.5 }} />\n            <MenuItem onClick={handleClose}>Logout</MenuItem>\n          </Menu>\n        </Toolbar>\n      </SecNavbar>\n\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps, { logout })(NavbarSec);\n","/** @format */\n\nimport React, { useState, Fragment } from \"react\";\nimport {\n  Box,\n  Accordion,\n  AccordionSummary,\n  Typography,\n  AccordionDetails,\n  Grid,\n} from \"@mui/material\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  Mail,\n  Phone,\n  Group,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  manageRoleActive,\n  manageGroupActive,\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  manageUserActive,\n  lostCustomerActive,\n  newAccountActive,\n  marketingActive,\n  appointmentActive,\n  empOversiteActive,\n  emailsActive,\n  mapActive,\n  callsActive,\n} from \"../../redux/features/sidebarSlice\";\n\nimport \"./style.css\";\n\nconst Controls = () => {\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/\">\n              <Grid item>\n                <AddCircle fontSize=\"medium\" />\n              </Grid>\n              <Grid item>DashBoard</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/invoices\">\n              <Grid item>\n                <Receipt fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Invoices</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/manage-categories\">\n              <Grid item>\n                <FileCopy fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Categories</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/ledgers\">\n              <Grid item>\n                <MoneyOff fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Ledger</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/create-task\">\n              <Grid item>\n                <Task fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Task</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/employee-search\">\n              <Grid item>\n                <Work fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Search</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/matter-dashboard\">\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Matters</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/contact\">\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Contact</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\nconst Marketing = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(marketingActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.marketing ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Marketing</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(emailsActive())}>\n          <Grid>\n            <Box sx={sidebar.emails ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Email</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst HumanResources = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(manageUserActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.manageUser ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage User</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(manageRoleActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.manageRole ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Role</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(manageGroupActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.manageGroup ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Group</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst RevenueControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueInActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueIn ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue In</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueOutActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueOut ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue Out</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst AccountControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.newCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Customers</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(lostCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.lostCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Lost Customer</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newAccountActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.newAccount ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Accounts</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(mapActive())}>\n          <Grid>\n            <Box sx={sidebar.map ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Trouble Ticket Map</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\nconst EmployeeOversite = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(empOversiteActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.empOversite ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Oversite</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(callsActive())}>\n          <Grid>\n            <Box sx={sidebar.calls ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Phone fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Calls</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(appointmentActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.appointment ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Appointments</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const accordionData = [\n  {\n    name: \"Controls\",\n    id: \"controls\",\n    tiles: <Controls />,\n  },\n\n  {\n    name: \"Human Resources\",\n    id: \"human_resource\",\n    tiles: <HumanResources />,\n  },\n  {\n    name: \"Revenue\",\n    id: \"revenue\",\n    tiles: <RevenueControls />,\n  },\n  {\n    name: \"Customers\",\n    id: \"customers\",\n    tiles: <AccountControls />,\n  },\n  {\n    name: \"Marketing\",\n    id: \"marketing\",\n    tiles: <Marketing />,\n  },\n  {\n    name: \"Employee Oversite\",\n    id: \"empOversite\",\n    tiles: <EmployeeOversite />,\n  },\n];\n\nconst TestingSidebar = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n\n  const [accordions, updateAccordions] = useState(accordionData);\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n\n    const items = Array.from(accordions);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    updateAccordions(items);\n  }\n\n  return (\n    <Fragment>\n      <Box mt={5}>\n        <DragDropContext onDragEnd={handleOnDragEnd}>\n          <Droppable droppableId=\"accordions\">\n            {(provided) => (\n              <Box\n                className=\"accordions\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {accordions.map((item, index) => {\n                  return (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <Accordion\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          <AccordionSummary\n                            expandIcon={<ExpandMoreIcon color=\"primary\" />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                          >\n                            <Typography\n                              align=\"center\"\n                              color=\"primary\"\n                              sx={{ textTransform: \"uppercase\" }}\n                            >\n                              {item.name}\n                            </Typography>\n                          </AccordionSummary>\n                          <AccordionDetails>{item.tiles}</AccordionDetails>\n                        </Accordion>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </Box>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TestingSidebar;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  Box,\n  Paper,\n  Link,\n  Grid,\n  Container,\n  Stack,\n} from \"@mui/material\";\n\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\n\nimport { useToggle } from \"../../context/useToggle\";\nimport AdminSidebar from \"./AdminSidebar\";\nimport LawyerSidebar from \"./LawyerSidebar\";\nimport FirmSidebar from \"./FirmSidebar\";\nimport CustomerSidebar from \"./CutomerSidebar\";\nimport \"./style.css\";\nimport TestingSidebar from \"./TestingSidebar\";\n\nconst Sidebar = ({ user }) => {\n  const [controlToggle, setControlToggle] = useToggle(true);\n\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: true,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const SidebarRedirect = () => {\n    switch (user.username) {\n      case \"admin\":\n        return <AdminSidebar />;\n      case \"firm\":\n        return <FirmSidebar />;\n      case \"lawyer\":\n        return <LawyerSidebar />;\n      default:\n        return <CustomerSidebar />;\n    }\n  };\n\n  // const [state, dispatch] = useContext(UserContext);\n  return (\n    <Fragment>\n      <Paper component={Stack} elevation={3} spacing={1}>\n        <Box\n          sx={{\n            height: \"calc(83vh - 40px)\",\n            overflowY: \"scroll\",\n          }}\n        >\n          {/* {SidebarRedirect()} */}\n          <TestingSidebar />\n        </Box>\n        <Box p={2}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"error\"\n            style={{\n              padding: \"1rem\",\n              \"&:hover\": {\n                color: \"#fff\",\n              },\n            }}\n          >\n            Report\n          </Button>\n        </Box>\n      </Paper>\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Sidebar);\n\n// export default Sidebar;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  BottomNavigation,\n  BottomNavigationAction,\n  Link,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@mui/material\";\nimport { FooterBar, FooterLink, FooterButton } from \"../../styles/styles\";\nimport Favorites from \"../Favorite/Favorites\";\n\nconst Footer = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <FooterBar>\n          <FooterLink to={\"/ledgers\"}>Accounting</FooterLink> |\n          <FooterLink to={\"/\"}> Calendar</FooterLink> |\n          <FooterLink to={\"/\"}>Contacts</FooterLink> |\n          <FooterButton\n            sx={{\n              color: \"#eee\",\n              textTransform: \"uppercase\",\n              textDecoration: \"none\",\n              \"&:visited\": {\n                color: \"#eee\",\n              },\n            }}\n            variant=\"text\"\n            onClick={handleClickOpen}\n          >\n            Favorites\n          </FooterButton>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n            <DialogContent>\n              <Favorites />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} autoFocus>\n                Close\n              </Button>\n            </DialogActions>\n          </Dialog>\n          |<FooterLink to={\"/matters\"}>Matters</FooterLink> |\n          <FooterLink to={\"/tasks\"}>Tasks</FooterLink> |\n          <FooterLink to={\"/\"}>Workflow</FooterLink>\n        </FooterBar>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Footer;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport Navbar from \"../components/Navbars/Navbar\";\nimport NavbarSec from \"../components/Navbars/NavbarSec\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport { connect } from \"react-redux\";\nimport Chatting from \"../components/Chat/Chat\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { isDisplay } from \"../redux/features/sidebarSlice\";\n\nimport { Paper, Fab, Popover } from \"@mui/material\";\nimport { Grid, Box, Button } from \"@mui/material\";\n\nimport { Chat } from \"@mui/icons-material\";\n\nimport Footer from \"../components/Footer/Footer\";\n\nconst InnerLayout = ({ isAuthenticated, children }) => {\n  const theme = useTheme();\n\n  const sidebarToggle = useSelector((state) => state.sidebar.display);\n  const dispatch = useDispatch();\n\n  const [drawerOpen, setDrawerOpen] = React.useState(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setDrawerOpen(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setDrawerOpen(null);\n  };\n\n  const openPopover = Boolean(drawerOpen);\n  const id = openPopover ? \"simple-popover\" : undefined;\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (drawerOpen) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [drawerOpen]);\n\n  return (\n    <Paper style={{ margin: \"0\" }}>\n      <Grid contianer rowSpacing={2} columnSpacing={2}>\n        <Grid item lg={12} md={12}>\n          {isAuthenticated ? (\n            <Fragment>\n              <NavbarSec />\n            </Fragment>\n          ) : (\n            <Navbar />\n          )}\n        </Grid>\n\n        {isAuthenticated ? (\n          <Fragment>\n            <Grid item lg={12}>\n              <Navbar />\n            </Grid>\n            <Grid container direction=\"row\" wrap=\"nowrap\">\n              {sidebarToggle ? (\n                <Fragment>\n                  <Grid item lg={2} xs={12} m={3}>\n                    <Sidebar />\n                  </Grid>\n                  <Grid item lg={10} xs={12} p={1}>\n                    <Box>\n                      <Button\n                        onClick={() => dispatch(isDisplay())}\n                        p={5}\n                        sx={{\n                          left: \"-8rem\",\n                          top: \"2rem\",\n                        }}\n                      >\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <Grid item lg={12} xs={12} p={1}>\n                    <Box>\n                      <Button onClick={() => dispatch(isDisplay())}>\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              )}\n            </Grid>\n            <Grid item lg={12}>\n              <Footer />\n            </Grid>\n          </Fragment>\n        ) : (\n          <Grid item lg={12} xs={12}>\n            {children}\n          </Grid>\n        )}\n        <Fab\n          size=\"large\"\n          onClick={handlePopoverOpen}\n          style={{\n            borderRadius: \"50%\",\n            backgroundColor: \"#eee\",\n            position: \"fixed\",\n            bottom: \"16px\",\n            right: \"16px\",\n            color: \"#461594\",\n            zIndex: \"200\",\n            \"&:hover\": {\n              color: \"#7a4ebf\",\n            },\n          }}\n          aria-label=\"chat\"\n        >\n          <Chat />\n        </Fab>\n        <Popover\n          open={openPopover}\n          anchorEl={drawerOpen}\n          onClose={handlePopoverClose}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          sx={{ margin: \"-2rem\" }}\n        >\n          <Chatting />\n        </Popover>\n      </Grid>\n    </Paper>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps)(InnerLayout);\n","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nconst PrivateRoutes = ({ isAuthenticated, children, ...rest}) => {\n    \n\n    return (\n        <Route {...rest}>\n            {isAuthenticated ? children: <Redirect to=\"/login\"/>}\n        </Route>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(PrivateRoutes);","/** @format */\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'toggle_button':\n      return {\n        ...state,\n        active: !state.active,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initialState = {\n  active: false,\n};\n","/** @format */\n\nimport React from 'react';\nimport { reducer, initialState } from './reducer';\n\nexport const UserContext = React.createContext({\n  state: initialState,\n  dispatch: () => null,\n});\n\nexport const UserProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <UserContext.Provider value={[state, dispatch]}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","/** @format */\n\n// import styled from \"styled-components\";\nimport { createTheme } from \"@mui/material/styles\";\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    mode: \"light\",\n    primary: {\n      main: \"#796ef0\", //blueish purple\n    },\n    // secondary: {\n    //   main: \"\",\n    // },\n    error: {\n      main: \"#e85355\", //red\n    },\n    warning: {\n      main: \"#fd9905\", // orange\n    },\n    success: {\n      main: \"#28c570\", //green\n    },\n\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n  typography: {\n    htmlFontSize: 14,\n    fontSize: 12,\n    color: \"#333\",\n  },\n});\n\nexport default theme;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport \"./DashboardLayout/style.css\";\n\nimport DashboardContent from \"./DashboardLayout/DashboardContent\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <DashboardContent />\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\nimport { Button, Stack, IconButton } from \"@mui/material\";\nimport styles from \"./tabs.module.css\";\n\nconst Tabs = ({ children }) => {\n  const [activeTab, setActiveTab] = useState(children[0].props.label);\n  const handleClick = (e, newActiveTab) => {\n    e.preventDefault();\n    setActiveTab(newActiveTab);\n  };\n  return (\n    <Fragment>\n      <Stack direction=\"row\" spacing={1}>\n        <ul className={styles.tabs}>\n          {children.map((tab) => (\n            <li\n              className={tab.props.label === activeTab ? styles.current : \"\"}\n              key={tab.props.label}\n            >\n              <Button\n                variant=\"text\"\n                size=\"small\"\n                startIcon={<MoreVert />}\n                onClick={(e) => handleClick(e, tab.props.label)}\n              >\n                {tab.props.label}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      </Stack>\n\n      {children.map((one) =>\n        one.props.label === activeTab ? (\n          <div className={styles.content} key={one.props.label}>\n            {one.props.children}\n          </div>\n        ) : (\n          \"\"\n        ),\n      )}\n    </Fragment>\n  );\n};\n\nexport default Tabs;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  FormControlLabel,\n  Switch,\n  Button,\n  Stack,\n} from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst CreateInvoice = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    matter: \"\",\n    contact: \"\",\n    billable: false,\n    date_range: \"\",\n    create_date: \"\",\n    due_date: \"\",\n    template: \"\",\n    invoice_no: \"\",\n    discount: \"\",\n    submit: false,\n  });\n\n  // const {\n  //   matter,\n  //   contact,\n  //   billable,\n  //   date_range,\n  //   create_date,\n  //   due_date,\n  //   template,\n  //   invoice_no,\n  //   discount,\n  //   submit,\n  // } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  const [invoice, setInvoice] = useState(null);\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoice`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  const [dateRange, setDateRange] = React.useState([null, null]);\n  return (\n    <Fragment>\n      {/* <Typography component=\"h3\" variant=\"h4\">\n        Create New Invoice\n      </Typography>\n      <Box p={3}>\n        <LinkButton to=\"/invoices\" sx={{ float: \"right\" }}>\n          Invoice Dashboard\n        </LinkButton>\n      </Box> */}\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Grid\n          spacing={3}\n          container\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"Matter\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n              autoComplete=\"matter\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"Contact\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              autoComplete=\"contact\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <FormControlLabel\n              sx={{ fontSize: \"12px\", marginLeft: \"1rem\" }}\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Unbillable\"\n            />\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Stack direction=\"row\">\n              <Typography varient=\"caption\" sx={{ marginTop: \"0.7rem\" }}>\n                Range:\n              </Typography>\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateRangePicker\n                  calendars={1}\n                  value={dateRange}\n                  onChange={(newValue) => {\n                    setDateRange(newValue);\n                  }}\n                  renderInput={(startProps, endProps) => (\n                    <Fragment>\n                      <TextField size=\"small\" {...startProps} />\n                      <Box sx={{ mx: 2 }}> to </Box>\n                      <TextField size=\"small\" {...endProps} />\n                    </Fragment>\n                  )}\n                />\n              </LocalizationProvider>\n            </Stack>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          spacing={3}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"create_date\"\n              label=\"Create Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"due_date\"\n              label=\"Due Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"template\"\n              label=\"Template\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"template\"\n              autoComplete=\"template\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"invoice_no\"\n              label=\"Invoice #\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"invoice_no\"\n              autoComplete=\"invoice_no\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"discount\"\n              label=\"Discount\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"discount\"\n              autoComplete=\"discount\"\n            />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <FormControlLabel\n              label=\"Submit For Approvel\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n            />\n          </Grid>\n        </Grid>\n\n        <Grid item lg={12} mt={2}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Sub-Category</TableCell>\n                  <TableCell>Description</TableCell>\n                  <TableCell>Date</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Rate</TableCell>\n                  <TableCell>Sub</TableCell>\n                  <TableCell>Tax</TableCell>\n                  <TableCell>int</TableCell>\n                  <TableCell>Disc.</TableCell>\n                  <TableCell>Total</TableCell>\n                  <TableCell>Biller</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                {/* {invoice?.map((invoice) => (\n                  <TableRow id={invoice.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n\n                    <TableCell>{invoice.sub_cat}</TableCell>\n                    <TableCell>{invoice.discription}</TableCell>\n                    <TableCell>{invoice.date}</TableCell>\n                    <TableCell>{invoice.hours}</TableCell>\n                    <TableCell>{invoice.rate}</TableCell>\n                    <TableCell>{invoice.sub}</TableCell>\n                    <TableCell>{invoice.tax}</TableCell>\n                    <TableCell>{invoice.int}</TableCell>\n                    <TableCell>{invoice.dics}</TableCell>\n                    <TableCell>{invoice.total}</TableCell>\n                    <TableCell>{invoice.biller}</TableCell>\n                  </TableRow>\n                ))} */}\n              </TableHead>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item mt={3} direction=\"row\">\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Notes\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"Accept Online Payment\"\n              />\n            }\n            label=\"Accept Online Payment\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Accept Payments for Less\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (Compound / Simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Terms and Conditions\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (compund/ simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Use Trust Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add all unpaid invoices\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"use Operating Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Send Reminders Every\"\n          />\n          <TextField size=\"small\" sx={{ width: \"5rem\" }} />\n          <Typography\n            varient=\"caption\"\n            component=\"span\"\n            sx={{ marginLeft: \"0.5rem \" }}\n          >\n            day(s)/week(s)\n          </Typography>\n\n          {/* <Button\n            variant=\"contained\"\n            sx={{ float: \"right\" }}\n            endIcon={<SaveIcon />}\n          >\n            Send\n          </Button> */}\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateInvoice;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Grid,\n  Box,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormControl,\n  Checkbox,\n  Typography,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  MenuItem,\n  InputLabel,\n  Select,\n  Button,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst PaymentPlan = () => {\n  const [paymentData, setPaymentData] = useState({\n    payment_no: \"File# - 001\",\n    due: \"2020/07/01\",\n    amount: \"$ 750.00\",\n    late_fee: \"$22.00\",\n    total_due: \"$ 775.00\",\n    payment: \"$775.00\",\n    posted: \"$2020/07/05\",\n    method: \"Check\",\n  });\n\n  return (\n    <Fragment>\n      <Grid container mt={3} mb={3}>\n        <Grid item lg={4}>\n          <Typography>Start Balance:</Typography>\n          <Typography>Start Date:</Typography>\n          <Typography>Interest Rate:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Amout:</Typography>\n          <Typography>Payment Date:</Typography>\n          <Typography>No Payments:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Remaining:</Typography>\n          <Typography>Last Payment:</Typography>\n          <Typography>Last Payment $:</Typography>\n        </Grid>\n      </Grid>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Payment #</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Amout</TableCell>\n            <TableCell>Late Fee</TableCell>\n            <TableCell>Total Due</TableCell>\n            <TableCell>Payment</TableCell>\n            <TableCell>Posted</TableCell>\n            <TableCell>Method</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{paymentData.payment_no}</TableCell>\n          <TableCell>{paymentData.due}</TableCell>\n          <TableCell>{paymentData.amount} </TableCell>\n          <TableCell>{paymentData.late_fee}</TableCell>\n          <TableCell>{paymentData.total_due}</TableCell>\n          <TableCell>{paymentData.payment}</TableCell>\n          <TableCell>{paymentData.posted}</TableCell>\n          <TableCell>{paymentData.method}</TableCell>\n        </TableBody>\n      </Table>\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Close\n      </Button>\n      <Grid container>\n        <Grid item lg={6}>\n          <Typography>Post agreement Balance:</Typography>\n        </Grid>\n        <Grid item lg={6}>\n          <Typography>Start Date:</Typography>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst InvoicePayment = () => {\n  const [invoiceData, setInvoiceData] = useState({\n    invoice_no: \"i-2106-0004542\",\n    due: \"2020/07/01\",\n    tax: \"$ 15.00\",\n    interest: \"$2.35\",\n    time: \"$ 1,234.50\",\n    hard: \"$457.00\",\n    soft: \"$45.00\",\n    total: \"$ 1,753.85\",\n  });\n\n  return (\n    <Fragment>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Invoice</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Tax</TableCell>\n            <TableCell>Interest</TableCell>\n            <TableCell>Time</TableCell>\n            <TableCell>Hard</TableCell>\n            <TableCell>Soft</TableCell>\n            <TableCell>Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{invoiceData.invoice_no}</TableCell>\n          <TableCell>{invoiceData.due}</TableCell>\n          <TableCell>{invoiceData.tax} </TableCell>\n          <TableCell>{invoiceData.interest}</TableCell>\n          <TableCell>{invoiceData.time}</TableCell>\n          <TableCell>{invoiceData.hard}</TableCell>\n          <TableCell>{invoiceData.soft}</TableCell>\n          <TableCell>{invoiceData.total}</TableCell>\n        </TableBody>\n      </Table>{\" \"}\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Pay\n      </Button>{\" \"}\n    </Fragment>\n  );\n};\n\nconst Payment = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [isPlan, setIsPlan] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    payment_type: \"\",\n    date: \"\",\n    retainer: \"\",\n    payment: \"\",\n    date_range: \"\",\n    menu: \"\",\n    bank_account: \"\",\n    payment_method: \"\",\n  });\n\n  const {\n    payment_type,\n    date,\n    retainer,\n    payment,\n    date_range,\n    menu,\n    bank_account,\n    payment_method,\n  } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{\n              \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n            }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"payment_type\"\n                defaultValue=\"cash\"\n                name=\"payment_type\"\n                onChange={(e) => onChange(e)}\n                id=\"payment_type\"\n                autoComplete=\"payment_type\"\n              >\n                <FormControlLabel\n                  value=\"cash\"\n                  control={<Radio />}\n                  label=\"Cash\"\n                />\n                <FormControlLabel value=\"cc\" control={<Radio />} label=\"CC\" />\n                <FormControlLabel\n                  value=\"wire\"\n                  control={<Radio />}\n                  label=\"Wire\"\n                />\n                <FormControlLabel\n                  value=\"check\"\n                  control={<Radio />}\n                  label=\"Check\"\n                />\n              </RadioGroup>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              id=\"date\"\n              label=\"date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <FormControlLabel\n              value=\"retainer\"\n              control={<Checkbox />}\n              label=\"Retainer\"\n            />\n            <FormControlLabel\n              value=\"payment\"\n              control={<Checkbox />}\n              label=\"Payment\"\n            />\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n              <DateRangePicker\n                calendars={1}\n                value={dateRange}\n                onChange={(newValue) => {\n                  setDateRange(newValue);\n                }}\n                renderInput={(startProps, endProps) => (\n                  <Fragment>\n                    <TextField size=\"small\" {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField size=\"small\" {...endProps} />\n                  </Fragment>\n                )}\n              />\n            </LocalizationProvider> */}\n            <FormControl sx={{ width: \"12rem\" }}>\n              <InputLabel id=\"demo-simple-select-label\">Date Range</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={date_range}\n                label=\"Age\"\n                onChange={(e) => onChange(e)}\n              >\n                <MenuItem value={10}>Ten</MenuItem>\n                <MenuItem value={20}>Twenty</MenuItem>\n                <MenuItem value={30}>Thirty</MenuItem>\n              </Select>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"menu\"\n              label=\"menu\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"menu\"\n              autoComplete=\"menu\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bank_account\"\n              label=\"bank_account\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"bank_account\"\n              autoComplete=\"bank_account\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"payment_method\"\n              label=\"payment_method\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"payment_method\"\n              autoComplete=\"payment_method\"\n            />\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"isPlan\"\n                defaultValue={isPlan}\n                name=\"isPlan\"\n                onChange={(e) => setIsPlan(e)}\n                id=\"isPlan\"\n                autoComplete=\"isPlan\"\n              >\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Invoice Payment\"\n                />\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Payment Plan\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Box>\n        </Grid>\n        <Grid item lg={12}>\n          <TableContainer>\n            {isPlan ? <PaymentPlan /> : <InvoicePayment />}\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Payment;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  FormControlLabel,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  Button,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport { styled } from \"@mui/material/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\nimport CreateInvoice from \"./CreateInvoice\";\nimport Payment from \"./Payment\";\n\nconst Filters = () => {\n  const [invoiceToggle, setInvoiceToggle] = useToggle(false);\n  const [paymentToggle, setPaymentToggle] = useToggle(false);\n  const [paid, setPaid] = useToggle(false);\n\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid\n          spacing={2}\n          item\n          lg={12}\n          direction=\"Row\"\n          sx={{\n            \"& .MuiTextField-root\": { m: 1 },\n            \"& .MuiFormControl-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            onClick={() => setInvoiceToggle(invoiceToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Create Invoice\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={invoiceToggle}\n            onClose={() => setInvoiceToggle(invoiceToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {\"Create Invoice\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <CreateInvoice />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <Button\n            variant=\"contained\"\n            onClick={() => setPaymentToggle(paymentToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Receive Money\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={paymentToggle}\n            onClose={() => setPaymentToggle(paymentToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Receive Money\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <Payment />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <FormControlLabel\n            label=\" Paid/ Unpaid\"\n            control={<Switch checked={paid} onChange={() => setPaid(paid)} />}\n          />\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Invoice</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Bill Date</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Times</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <Typography\n            component=\"span\"\n            variant=\"caption\"\n            sx={{ width: \"8rem\", m: 2, fontSize: \"1.2rem\" }}\n          >\n            Status:\n          </Typography>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Any </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Dropd-own</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n} from \"@mui/material\";\nimport Filters from \"./Filters\";\n\nconst InvoiceList = () => {\n  const [invoice, setInvoice] = useState(null);\n\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoices`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  return (\n    <Fragment>\n      <Filters />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Invoice</TableCell>\n              <TableCell>Created</TableCell>\n              <TableCell>Due</TableCell>\n              <TableCell>Tax</TableCell>\n              <TableCell>Interest</TableCell>\n              <TableCell>Discount</TableCell>\n              <TableCell>Total</TableCell>\n              <TableCell>Balance</TableCell>\n              <TableCell>Last Payment</TableCell>\n              <TableCell>Approval Date</TableCell>\n              <TableCell>Approval by</TableCell>\n              <TableCell>Created by</TableCell>\n            </TableRow>\n            {/* {invoice?.map((invoice) => (\n              <TableRow id={invoice.id}>\n                <TableCell>\n                  <Checkbox />\n                </TableCell>\n                <TableCell>{invoice.id}</TableCell>\n                <TableCell>{invoice.created}</TableCell>\n                <TableCell>{invoice.due}</TableCell>\n                <TableCell>{invoice.tax}</TableCell>\n                <TableCell>{invoice.interest}</TableCell>\n                <TableCell>{invoice.discount}</TableCell>\n                <TableCell>{invoice.total}</TableCell>\n                <TableCell>{invoice.balance}</TableCell>\n                <TableCell>{invoice.last_payment}</TableCell>\n                <TableCell>{invoice.approvel_date}</TableCell>\n                <TableCell>{invoice.approvel.by}</TableCell>\n                <TableCell>{invoice.created_by}</TableCell>\n              </TableRow>\n            ))} */}\n          </TableHead>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default InvoiceList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport InvoiceList from \"./InvoiceList\";\nimport Payment from \"./Payment\";\nimport CreateInvoice from \"./CreateInvoice\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <InvoiceList />\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\n// import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport const CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nexport const CreateMatter = (\n  contact,\n  matter_name,\n  matter_type,\n  matter_source,\n  matter_status,\n  assign_to,\n  assign_by,\n  billing_rate,\n  alerts,\n  open_date,\n  close_date,\n  total_days,\n  jurisdiction,\n  status_limitaion,\n  opposing_counsel,\n  where,\n  when,\n  involved,\n  witnesses,\n  narrative,\n) => {\n  let status = \"\";\n  const body = JSON.stringify({\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n    open_date,\n    close_date,\n    total_days,\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    when,\n    involved,\n    witnesses,\n    narrative,\n  });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n    .then((res) => {\n      status = res.statusText;\n    })\n    .catch((err) => {\n      status = err.message;\n    });\n\n  return status;\n};\n\nexport const retrive_matter = () => {};\n","/** @format */\n\nimport React from \"react\";\nimport { Alert } from \"@mui/material\";\n\nexport const ActionAlerts = (status) => {\n  return <Alert severity=\"error\">{status}</Alert>;\n};\n\nexport const TotalDays = (date1, date2) => {\n  let dt1 = new Date(date1);\n  let dt2 = new Date(date2);\n  return Math.floor(\n    (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) -\n      Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) /\n      (1000 * 60 * 60 * 24),\n  );\n};\n\nexport const GetDate = (date) => {\n  let newDate =\n    date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n  return newDate;\n};\n\nexport const GetTime = (time) => {\n  let newTime =\n    time.getHours() + \":\" + time.getMinutes() + \":\" + time.getSeconds();\n  return newTime;\n};\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Box,\n  containerClasses,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\n\nconst MatterList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const [redTask, setRedTask] = useState(false);\n  const [greenTask, setGreenTask] = useState(false);\n  const [yellowTask, setYellowTask] = useState(false);\n  const [myTask, setMyTask] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/tasks/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTasks(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Box component={Paper} p={2}>\n      <FormGroup aria-label=\"position\" row>\n        <FormControlLabel\n          control={\n            <Checkbox value={myTask} onChange={() => setMyTask(!myTask)} />\n          }\n          label=\"My Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox value={redTask} onChange={() => setRedTask(!redTask)} />\n          }\n          label=\"Red Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={greenTask}\n              onChange={() => setGreenTask(!greenTask)}\n            />\n          }\n          label=\"Green Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={yellowTask}\n              onChange={() => setYellowTask(!yellowTask)}\n            />\n          }\n          label=\"Yellow Tasks\"\n        />\n      </FormGroup>\n      <Typography component=\"h3\">All Matters Task's List</Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assign To</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : tasks?.map((data) => {\n                  return (\n                    <TableRow id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        {data.task_nature === \"urgent\" ? (\n                          <CircleIcon color=\"error\" />\n                        ) : (\n                          <CircleIcon color=\"success\" />\n                        )}\n                      </TableCell>\n                      <TableCell>{data.matter}</TableCell>\n                      <TableCell>\n                        {data.last_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>\n                        {data.next_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default MatterList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, CardContent, Typography } from \"@mui/material\";\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Tasks cleared Last day\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Goal Today\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Personal Best\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Company Record\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Link, Typography, List, ListItem, Paper } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nconst Calendar = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography variant=\"h6\" component=\"h7\">\n          My Calendar at a Glance\n        </Typography>\n        <List>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Start motion for trail</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Calendar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  Typography,\n} from \"@mui/material\";\n\nconst Filters = () => {\n  // const [user, setUser] = useState(\"Any user\");\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item>\n          <Typography>Assign To</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Organized By</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Status</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, Button, Typography } from \"@mui/material\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst MatterCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2} mt={1.5}>\n        <Grid item lg={9}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"error.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Urgent\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"warning.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Concern\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"success.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Start\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"white\",\n                  color: \"black\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      New\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3}>\n          <Button\n            variant=\"outlined\"\n            sx={{\n              minWidth: 100,\n              height: 40,\n              borderRadius: \"0.5rem\",\n              bgcolor: \"white\",\n              color: \"black\",\n            }}\n          >\n            Import\n          </Button>\n          <LinkButton to=\"/create-matter\"> + New </LinkButton>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterCards;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  TableBody,\n} from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst MatterListLong = () => {\n  const [matters, setMatters] = useState([]);\n\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/new-matter/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setMatters(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Matter Contact</TableCell>\n              <TableCell>Matter Type</TableCell>\n              <TableCell>Bill Rate</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assigned to</TableCell>\n              <TableCell>Billable</TableCell>\n              <TableCell>Open Invoice</TableCell>\n              <TableCell>Trust Account</TableCell>\n              <TableCell>Last Payment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : matters?.map((data, index) => {\n                  return (\n                    <TableRow id={index}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        <CircleIcon color=\"error\" />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n                      <TableCell>{data.contact}</TableCell>\n                      <TableCell>{data.matter_type}</TableCell>\n                      <TableCell>{data.billing_rate}</TableCell>\n                      <TableCell>{data.open_date}</TableCell>\n                      <TableCell>{data.close_date}</TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 100)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {\" \"}\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />{\" \"}\n                        - {data.close_date}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default MatterListLong;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Button, Typography } from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\n\nimport { LocalizationProvider, DateRangePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { CreateMatter, CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, TotalDays, GetDate } from \"../../utils/ActionAlerts\";\n\nconst NewMatter = () => {\n  // const matter_number = Math.floor(Math.random() * 10000000);\n  const mask = \"____-__-__\";\n  const matter_number = 23568;\n  const [openDate, setOpenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [whenDate, setWhenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [closeDate, setCloseDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [totalDays, setTotalDays] = useState(0);\n  const [matterData, setMatterData] = useState({\n    contact: 0,\n    matter_name: \"\",\n    matter_type: \"\",\n    matter_source: \"\",\n    matter_status: \"\",\n    assign_to: 0,\n    assign_by: 0,\n    billing_rate: 0,\n    alerts: \"\",\n\n    jurisdiction: \"\",\n    status_limitaion: null,\n    opposing_counsel: \"\",\n    where: \"\",\n    involved: \"\",\n    witnesses: \"\",\n    narrative: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    involved,\n    witnesses,\n    narrative,\n  } = matterData;\n\n  const onChange = (e) =>\n    setMatterData({ ...matterData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let open_date = GetDate(openDate);\n    let close_date = GetDate(closeDate);\n    let when = GetDate(whenDate);\n    let total_days = totalDays;\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      matter_type,\n      matter_source,\n      matter_status,\n      assign_to,\n      assign_by,\n      billing_rate,\n      alerts,\n      open_date,\n      close_date,\n      total_days,\n      jurisdiction,\n      status_limitaion,\n      opposing_counsel,\n      where,\n      when,\n      involved,\n      witnesses,\n      narrative,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  useEffect(() => {\n    let days = TotalDays(openDate, closeDate);\n    setTotalDays(days);\n  }, [openDate, closeDate]);\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Matter\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item lg={8}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"contact\"\n              type=\"number\"\n              min=\"0\"\n              value={contact}\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_number\"\n              label=\"matter_number\"\n              type=\"text\"\n              value={matter_number}\n              // onChange={(e) => onChange(e)}\n              id=\"matter_number\"\n              disabled\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_name\"\n              label=\"matter_name\"\n              type=\"text\"\n              value={matter_name}\n              onChange={(e) => onChange(e)}\n              id=\"matter_name\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"alerts\"\n              label=\"alerts\"\n              type=\"text\"\n              value={alerts}\n              onChange={(e) => onChange(e)}\n              id=\"alerts\"\n              autoComplete=\"alerts\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_type\"\n              label=\"matter_type\"\n              type=\"text\"\n              value={matter_type}\n              onChange={(e) => onChange(e)}\n              id=\"matter_type\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_source\"\n              label=\"matter_source\"\n              type=\"text\"\n              value={matter_source}\n              onChange={(e) => onChange(e)}\n              id=\"matter_source\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_status\"\n              label=\"matter_status\"\n              type=\"text\"\n              value={matter_status}\n              onChange={(e) => onChange(e)}\n              id=\"matter_status\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"assign_to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_rate\"\n              label=\"billing_rate\"\n              step=\"0.01\"\n              type=\"number\"\n              value={billing_rate}\n              onChange={(e) => onChange(e)}\n              id=\"billing_rate\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Open Date\"\n                value={openDate}\n                name=\"open\"\n                id=\"open\"\n                onChange={(e) => setOpenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Close Date\"\n                value={closeDate}\n                name=\"closed\"\n                id=\"closed\"\n                onChange={(e) => setCloseDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"total_days\"\n              label=\"total_days\"\n              type=\"number\"\n              value={totalDays}\n              onChange={(e) => setTotalDays(TotalDays(openDate, closeDate))}\n              id=\"total_days\"\n              disabled\n            />\n          </Grid>\n\n          <Grid item lg={4}>\n            <br />\n            <Typography component=\"h5\" variant=\"h6\">\n              Legal Concerns\n            </Typography>\n            <br />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"jurisdiction\"\n              label=\"jurisdiction\"\n              type=\"text\"\n              value={jurisdiction}\n              onChange={(e) => onChange(e)}\n              id=\"jurisdiction\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"status_limitaion\"\n              label=\"status_limitaion\"\n              type=\"text\"\n              value={status_limitaion}\n              onChange={(e) => onChange(e)}\n              id=\"status_limitaion\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"opposing_counsel\"\n              label=\"opposing_counsel\"\n              type=\"text\"\n              value={opposing_counsel}\n              onChange={(e) => onChange(e)}\n              id=\"opposing_counsel\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <Typography component=\"h5\" variant=\"h6\" sx={{ fontSize: \"1rem\" }}>\n              Event Detail\n            </Typography>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"where\"\n              label=\"where\"\n              type=\"text\"\n              value={where}\n              onChange={(e) => onChange(e)}\n              id=\"where\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"When\"\n                value={whenDate}\n                name=\"when\"\n                id=\"when\"\n                onChange={(e) => setWhenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"involved\"\n              label=\"Who was involved\"\n              type=\"text\"\n              value={involved}\n              onChange={(e) => onChange(e)}\n              id=\"involved\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"witnesses\"\n              label=\"witnesses\"\n              type=\"text\"\n              value={witnesses}\n              onChange={(e) => onChange(e)}\n              id=\"witnesses\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              label=\"Customer Narrative of the Event\"\n              multiline\n              type=\"text\"\n              rows={10}\n              value={narrative}\n              onChange={(e) => onChange(e)}\n              defaultValue=\"Narrative\"\n              name=\"narrative\"\n              id=\"narrative\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewMatter;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { styled } from \"@mui/material/styles\";\n\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  CardContent,\n  Typography,\n  Card,\n  Grid,\n  Box,\n  List,\n  ListItem,\n  Paper,\n  InputBase,\n} from \"@mui/material\";\n\nconst MatterTask = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components=\"p\">\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components=\"p\">\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components=\"p\">YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Activities = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components={Typography}>\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components={Typography}>\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components={Typography}>YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Classification\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                % time spent\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Matter Completion\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst MatterDetail = () => {\n  const Search = styled(\"div\")(({ theme }) => ({\n    position: \"relative\",\n    borderRadius: \"1.5rem\",\n    backgroundColor: \"#eee\",\n    \"&:hover\": {\n      backgroundColor: \"#ddd\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"40%\",\n  }));\n\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }));\n\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: \"inherit\",\n    \"& .MuiInputBase-input\": {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"md\")]: {\n        width: \"20ch\",\n      },\n    },\n  }));\n  // const [matters, setMatters] = useState(null);\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n        </Grid>\n        <Grid item lg={12}>\n          <Grid container spacing={2}>\n            <Grid item mt={2} lg={7}>\n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Recent Document</TableCell>\n                      <TableCell>Version</TableCell>\n                      <TableCell>Last Open</TableCell>\n                      <TableCell>User</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>1</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>2</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>3</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableContainer>\n              <Grid container spacing={3}>\n                <Grid item>\n                  <Activities />\n                </Grid>\n                <Grid item>\n                  <MatterTask />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item mt={2} lg={5}>\n              <Cards />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterDetail;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport MatterList from \"./MatterList\";\nimport { Grid, Box } from \"@mui/material\";\nimport Cards from \"./Cards\";\nimport Calendar from \"./Calendar\";\nimport Filters from \"./Filters\";\nimport MatterCards from \"./MatterCards\";\nimport MatterListLong from \"./MatterListLong\";\nimport NewMatter from \"./NewMatter\";\nimport MatterDetail from \"./MatterDetail\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item lg={12}>\n            <Filters />\n          </Grid>\n          <Grid item lg={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item lg={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst MatterDashboard = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container spacing={2}>\n          <Grid item lg={7}>\n            <MatterList />\n            <Calendar />\n          </Grid>\n          <Grid item lg={5}>\n            <Cards />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashboard\">\n          <MatterDashboard />\n        </div>\n        <div label=\"Matter\">\n          <Matters />\n        </div>\n        <div label=\"New Matter\">\n          <NewMatter />\n        </div>\n        <div label=\"Smith vs. Jhon\">\n          <MatterDetail />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerActivity = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setActivityData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow bgColor=\"#796ef0\">\n              <TableCell>\n                <Typography color=\"white\">Date</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Files</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Sub-Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Notes</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Source</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">User</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">In/Out</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          {/* {loading\n            ? null\n            : activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })} */}\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default LedgerActivity;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  TextField,\n  FormControlLabel,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Fillters = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [billedby, setBilledby] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Filter By</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={filter}\n            label=\"Filter By\"\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Billed by</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={billedby}\n            label=\"Billed By\"\n            onChange={(e) => setBilledby(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={status}\n            label=\"Age\"\n            onChange={(e) => setStatus(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n          <DateRangePicker\n            calendars={1}\n            value={dateRange}\n            onChange={(newValue) => {\n              setDateRange(newValue);\n            }}\n            renderInput={(startProps, endProps) => (\n              <Fragment>\n                <TextField size=\"small\" {...startProps} />\n                <Box sx={{ mx: 2 }}> to </Box>\n                <TextField size=\"small\" {...endProps} />\n              </Fragment>\n            )}\n          />\n        </LocalizationProvider>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Fillters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={7}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Time Entries\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={200}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      f\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Soft Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={65000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Hard Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={5000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={70000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Trust\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={4000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Due\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={100000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item={5}>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>User</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell> Jhon Johnson</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={74.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={39007.05}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Mark MacCalloff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={4.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={800.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Cindy Madenuff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={127.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={41372.5}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerCards;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n  Button,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { LinkButton } from \"../../styles/styles\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerTImeList = () => {\n  const [ledgerData, setLedgerData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setLedgerData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <Box>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Print\n        </Button>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Export\n        </Button>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>Cateagory</TableCell>\n                <TableCell>Sub-Category</TableCell>\n                <TableCell>Detail</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Qty</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Total</TableCell>\n                <TableCell>BillBy</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n                ? null\n                : ledgerData?.map((data) => {\n                    return (\n                      <TableBody id={data.id}>\n                        <TableCell>\n                          <Checkbox />\n                        </TableCell>\n                        <TableCell>{data.category}</TableCell>\n                        <TableCell>{data.sub_category}</TableCell>\n                        <TableCell>{data.detail}</TableCell>\n                        <TableCell>{data.date}</TableCell>\n                        <TableCell>{data.qty}</TableCell>\n                        <TableCell>\n                          {data.billable ? \"Billable\" : \"Paid\"}\n                        </TableCell>\n                        <TableCell>\n                          <NumberFormat\n                            value={data.qty * 25}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix=\"$\"\n                          />\n                        </TableCell>\n                        <TableCell>{data.bill_by}</TableCell>\n                      </TableBody>\n                    );\n                  })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default LedgerTImeList;\n","/** @format */\n\nimport { Typography, Box, Grid } from \"@mui/material\";\nimport React, { Fragment } from \"react\";\nimport Fillters from \"./Fillters\";\nimport LedgerCards from \"./LedgerCards\";\nimport LedgerTimeList from \"./LedgerTImeList\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LegderDashbard = () => {\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <Box>\n          <LedgerCards />\n          <Fillters />\n          <LedgerTimeList />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LegderDashbard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box, Typography, Paper, TextField } from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerDoc = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={1}>\n        <Grid item lg={4} sx={{}}>\n          <Box\n            sx={{\n              width: \"80%\",\n              minHeight: \"25rem\",\n              padding: \"5rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            MS Word Document On Pleading or Non Pleading Paper\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Box\n            sx={{\n              padding: \"5rem 2rem 5rem 2rem\",\n              minHeight: \"25rem\",\n              width: \"80%\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Space for 2nd Document to be opend if user wants it\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Grid container>\n            <Grid item lg={12}>\n              <Box component={Paper} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n              </Box>\n            </Grid>\n            <Grid item lg={12}>\n              <Box component={Paper} mt={2} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={5}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"filled\"\n                  name=\"detail\"\n                  type=\"text\"\n                  value=\"Quick Notes\"\n                  id=\"detail\"\n                  sx={{ borderRadius: \"1rem\" }}\n                />\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerDoc;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  RadioGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Radio,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst Time = () => {\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [timeToggle, setTimeToggle] = useToggle(true);\n  const [billable, setBillable] = useToggle(false);\n\n  // const [bill, setBill] = useToggle(false);\n  const [time, setTime] = useState(\"\");\n  const [timeData, setTimeData] = useState({\n    contact: 0,\n    matter_name: 0,\n    category: \"\",\n    sub_category: \"\",\n    // time: \"\",\n    hard: false,\n    soft: false,\n    unit: 0,\n    qty: 0,\n    rate: 0,\n    file: \"\",\n    detail: \"\",\n    bill_by: 0,\n    note: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    category,\n    sub_category,\n    hard,\n    soft,\n    unit,\n    // time,\n    qty,\n    rate,\n    file,\n    detail,\n    bill_by,\n\n    note,\n  } = timeData;\n  const onChange = (e) =>\n    setTimeData({ ...timeData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    let date = GetDate(pickDate);\n\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      category,\n      sub_category,\n      hard,\n      soft,\n      unit,\n      qty,\n      rate,\n      time,\n      date,\n      detail,\n      bill_by,\n      billable,\n      note,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/add-time/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Typography component=\"h3\" variant=\"h4\">\n          Time\n        </Typography>\n        <Grid\n          container\n          spacing={2}\n          mt={2}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n          }}\n        >\n          <Grid item xs={12}>\n            <Grid container p={3}>\n              <Grid item xs={6}>\n                <FormControlLabel\n                  size=\"large\"\n                  label=\"Time\"\n                  labelPlacement=\"start\"\n                  control={\n                    <Switch\n                      size=\"large\"\n                      checked={timeToggle}\n                      onChange={(e) => setTimeToggle(e)}\n                    />\n                  }\n                />\n                {timeToggle ? null : (\n                  <Box>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">Expense</FormLabel>\n                      <RadioGroup\n                        row\n                        aria-label=\"expense\"\n                        defaultValue=\"\"\n                        name=\"expense\"\n                        id=\"expense\"\n                      >\n                        <FormControlLabel\n                          value=\"hard\"\n                          control={<Radio />}\n                          label=\"Hard\"\n                        />\n                        <FormControlLabel\n                          value=\"soft\"\n                          control={<Radio />}\n                          label=\"Soft\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  </Box>\n                )}\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"matter\"\n                  label=\"matter\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"matter\"\n                  autoComplete=\"matter\"\n                  disabled\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"contact\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                  disabled\n                />\n              </Grid>\n            </Grid>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"category\"\n              label=\"category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"category\"\n              autoComplete=\"category\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"sub_category\"\n              label=\"sub_category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"sub_category\"\n              autoComplete=\"sub_category\"\n            />\n            {timeToggle ? (\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"rate\"\n                label=\"rate\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"rate\"\n                autoComplete=\"rate\"\n              />\n            ) : (\n              <Fragment>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"unit\"\n                  label=\"unit\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"unit\"\n                  autoComplete=\"unit\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"qty\"\n                  label=\"Qty\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"qty\"\n                  autoComplete=\"qty\"\n                />\n                <Box m={1}>\n                  <Typography component=\"lable\"> Receipt(s) </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n              </Fragment>\n            )}\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"HH:MM\"\n              mask={[\"H\", \"H\", \"M\", \"M\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time\"\n              name=\"time\"\n              id=\"time\"\n              value={time}\n              type=\"text\"\n              onValueChange={(e) => setTime(e.value)}\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Date\"\n                value={pickDate}\n                name=\"pickdate\"\n                id=\"pickdate\"\n                onChange={(e) => setPickDate(e)}\n                renderInput={(params) => <TextField size=\"small\" {...params} />}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"detail\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n              autoComplete=\"detail\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bill_by\"\n              label=\"bill_by\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bill_by\"\n              autoComplete=\"bill_by\"\n            />\n            <FormControlLabel\n              size=\"large\"\n              label=\"Billable\"\n              labelPlacement=\"start\"\n              control={\n                <Switch\n                  size=\"large\"\n                  checked={billable}\n                  onChange={() => setBillable(billable)}\n                />\n              }\n            />\n            <br />\n          </Grid>\n        </Grid>\n        <Grid container>\n          <Grid item lg={12}>\n            <TextField\n              fullWidth\n              multiline\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"note\"\n              rows={4}\n              // label=\"note\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              placeholder=\"Private / internal notes\"\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Time;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport LedgerActivity from \"./LedgerActivity\";\nimport LegderDashbard from \"./LedgerDashbard\";\nimport LedgerDoc from \"./LedgerDoc\";\nimport LedgerTImeList from \"./LedgerTImeList\";\nimport Time from \"./Time\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Ledger\">\n          <LegderDashbard />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Documents\">\n          <LedgerDoc />\n        </div>\n        <div label=\"Time\">\n          <Time />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst SubCategory = () => {\n  const [subCategory, setSubCategory] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/sub-category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setSubCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/sub-category/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n      })\n      .catch((err) => setStatus(err.statusText));\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/sub-category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n      })\n      .catch((err) => {\n        FetchData();\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Sub-Category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Sub-Category\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Sub-Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? (\n        subCategory.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default SubCategory;\n","/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst catHandler = (id) => {\n  console.log(id);\n};\n\nconst Category = () => {\n  const [category, setCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/category/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Add New Category\"}</DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* {!loading ? (\n        category?.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )} */}\n    </Fragment>\n  );\n};\n\nexport default Category;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Classification = () => {\n  const [classification, setClassification] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/classification/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setClassification(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/classification/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n        return <ActionAlerts value={{ status: status }} />;\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/api/classification/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return <ActionAlerts value={{ status: res.statusText }} />;\n      })\n      .catch((err) => {\n        FetchData();\n        return <ActionAlerts value={{ status: err.statusText }} />;\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Classification\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Classification\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Classification Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? (\n        classification.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Classification;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Typography, Grid, Button, Box } from \"@mui/material\";\n\nimport SubCategory from \"./SubCategory\";\nimport Category from \"./Category\";\nimport Classification from \"./Classification\";\n\nconst ManageCategory = () => {\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={8}>\n          <Typography component=\"h3\" variant=\"h5\">\n            Manage Category, Sub-category, Classification\n          </Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"error\">\n              Delete Checked\n            </Button>\n          </Box>\n        </Grid>\n\n        <Grid item lg={12}>\n          <Grid container spacing={5} mt={1}>\n            <Grid item lg={4}>\n              <Category />\n            </Grid>\n            <Grid item lg={4}>\n              <SubCategory />\n            </Grid>\n            <Grid item lg={4}>\n              <Classification />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageCategory;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Button,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { ActionAlerts, GetTime, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Contact = () => {\n  const [clientNo, setClientNo] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [ssn, setSsn] = useState(\"\");\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [homeNo, setHomeNo] = useState(\"\");\n  const [officeNo, setOfficeNo] = useState(\"\");\n  const [faxNo, setFaxNo] = useState(\"\");\n  const [otherNo, setOtherNo] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [plus4, setPlus4] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [contactData, setContactData] = useState({\n    // company info\n    company_name: \"\",\n    website: \"\",\n    ger_email: \"\",\n    billing_email: \"\",\n    // address\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    note: \"\",\n    f_name: \"\",\n    l_name: \"\",\n    email_1: \"\",\n    email_2: \"\",\n    email_3: \"\",\n    // other address\n    street2: \"\",\n    suite2: \"\",\n    city2: \"\",\n    state2: \"\",\n    office: \"\",\n    team: \"\",\n    member: \"\",\n    assign_to: \"\",\n    contact: \"\",\n    relation: \"\",\n  });\n\n  const {\n    company_name,\n    website,\n    ger_email,\n    billing_email,\n    street,\n    suite,\n    city,\n    state,\n    note,\n    f_name,\n    l_name,\n    email_1,\n    email_2,\n    email_3,\n    street2,\n    suite2,\n    city2,\n    state2,\n    office,\n    team,\n    member,\n    assign_to,\n    contact,\n    relation,\n  } = contactData;\n\n  const onChange = (e) => {\n    e.persist();\n    setContactData({ ...contactData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    //   let date = GetDate(pickDate);\n    //   const body = JSON.stringify({\n    //     company_name,\n    //     website,\n    //     ger_email,\n    //     billing_email,\n    //     street,\n    //     suite,\n    //     city,\n    //     state,\n    //     zip,\n    //     plus4,\n    //     client_no,\n    //     f_name,\n    //     l_name,\n    //     dob,\n    //     ssn,\n    //     mobile_no,\n    //     home_no,\n    //     office_no,\n    //     fax_no,\n    //     other_no,\n    //     email_1,\n    //     email_2,\n    //     email_3,\n    //     street2,\n    //     suite2,\n    //     city2,\n    //     state2,\n    //     zip2,\n    //     plus42,\n    //     office,\n    //     team,\n    //     member,\n    //     assign_to,\n    //     contact,\n    //     relation,\n    //   });\n    //   axios\n    //     .post(`${process.env.REACT_APP_API_URL}/api/contact/`, body, CONFIG)\n    //     .then((res) => {\n    //       <ActionAlerts value={{ status: res.statusText, message: \"Success\" }} />;\n    //     })\n    //     .catch((err) => {\n    //       <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />;\n    //     });\n    //   console.log(body);\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container p={2}>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h5\">\n              Company info\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"company_name\"\n              label=\"Company Name\"\n              type=\"text\"\n              value={company_name}\n              onChange={(e) => onChange(e)}\n              id=\"company_name\"\n              autoComplete=\"company_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Client #\"\n              id=\"clientno\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"clientno\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={clientNo}\n              onValueChange={(e) => setClientNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"First Name\"\n              label=\"f_name\"\n              type=\"text\"\n              value={f_name}\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Last Name\"\n              label=\"l_name\"\n              type=\"text\"\n              value={l_name}\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"DOB\"\n              id=\"dob\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              name=\"dob\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={dob}\n              onValueChange={(e) => setDob(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"#### #### ##\"\n              customInput={TextField}\n              label=\"SSN\"\n              id=\"ssn\"\n              name=\"ssn\"\n              value={ssn}\n              type=\"text\"\n              onValueChange={(e) => setSsn(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobileNo}\n              onValueChange={(e) => setMobileNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={homeNo}\n              onValueChange={(e) => setHomeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Office #\"\n              id=\"offlice_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"office_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={officeNo}\n              onValueChange={(e) => setOfficeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Fax #\"\n              id=\"fax_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"fax_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={faxNo}\n              onValueChange={(value) => setFaxNo(value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Other #\"\n              id=\"other_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"other_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={otherNo}\n              onValueChange={(e) => setOtherNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_1\"\n              label=\"Email 1\"\n              type=\"email\"\n              value={email_1}\n              onChange={(e) => onChange(e)}\n              id=\"email_1\"\n              autoComplete=\"email_1\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_2\"\n              label=\"Email 2\"\n              type=\"email\"\n              value={email_2}\n              onChange={(e) => onChange(e)}\n              id=\"email_2\"\n              autoComplete=\"email_2\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_3\"\n              label=\"Email 3\"\n              value={email_3}\n              type=\"email\"\n              onChange={(e) => onChange(e)}\n              id=\"email_3\"\n              autoComplete=\"email_3\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"street\"\n              type=\"text\"\n              value={street}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              value={city}\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip\"\n              label=\"zip\"\n              type=\"text\"\n              id=\"zip\"\n              type=\"text\"\n              value={zip}\n              onValueChange={(e) => setZip(e.value)}\n            />\n\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus4\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus4\"\n              type=\"text\"\n              value={plus4}\n              onValueChange={(e) => setPlus4(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              multiline\n              rows={5}\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Notes...\"\n              label=\"note\"\n              type=\"text\"\n              value={note}\n              onChange={(e) => onChange(e)}\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h6\">\n              Alternate Information\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"webiste\"\n              label=\"Webiste\"\n              type=\"text\"\n              value={website}\n              onChange={(e) => onChange(e)}\n              id=\"webiste\"\n              autoComplete=\"webiste\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"ger_email\"\n              label=\"General Email\"\n              type=\"text\"\n              value={ger_email}\n              onChange={(e) => onChange(e)}\n              id=\"ger_email\"\n              autoComplete=\"ger_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_email\"\n              label=\"Invoice/ Billing Email\"\n              type=\"text\"\n              value={billing_email}\n              onChange={(e) => onChange(e)}\n              id=\"billing_email\"\n              autoComplete=\"billing_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"Street\"\n              type=\"text\"\n              value={street2}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite2}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              type=\"text\"\n              value={city2}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip2\"\n              label=\"Zip\"\n              type=\"text\"\n              id=\"zip2\"\n              type=\"text\"\n              value={zip2}\n              onValueChange={(e) => setZip2(e.value)}\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus42\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus42\"\n              type=\"text\"\n              value={plus42}\n              onValueChange={(e) => setPlus42(e.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Source\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"office\"\n                  label=\"Office\"\n                  type=\"text\"\n                  value={office}\n                  onChange={(e) => onChange(e)}\n                  id=\"office\"\n                  autoComplete=\"office\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"team\"\n                  label=\"Team\"\n                  type=\"text\"\n                  value={team}\n                  onChange={(e) => onChange(e)}\n                  id=\"team\"\n                  autoComplete=\"team\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"member\"\n                  label=\"Member\"\n                  type=\"text\"\n                  value={member}\n                  onChange={(e) => onChange(e)}\n                  id=\"member\"\n                  autoComplete=\"member\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Assigned To\n                </Typography>\n                <FormControl\n                  size=\"small\"\n                  sx={{ mt: 2, mb: 2, minWidth: \"14rem\" }}\n                >\n                  <InputLabel id=\"demo-simple-select-autowidth-label\">\n                    Assigned To\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-autowidth-label\"\n                    id=\"demo-simple-select-autowidth\"\n                    value={assign_to}\n                    onChange={(e) => onChange(e)}\n                    autoWidth\n                    label=\"assign_to\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>Auto Assign</em>\n                    </MenuItem>\n                    <MenuItem value={10}>Twenty</MenuItem>\n                    <MenuItem value={21}>Twenty one</MenuItem>\n                    <MenuItem value={22}>Twenty one and a half</MenuItem>\n                  </Select>\n                </FormControl>\n\n                <Button variant=\"contained\" color=\"primary\">\n                  Auto Assign\n                </Button>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Linked Contacts\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"Contact\"\n                  type=\"text\"\n                  value={contact}\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"relation\"\n                  label=\"Relation\"\n                  type=\"text\"\n                  value={relation}\n                  onChange={(e) => onChange(e)}\n                  id=\"relation\"\n                  autoComplete=\"relation\"\n                />\n              </Grid>\n            </Grid>\n            <Box sx={{ float: \"right\" }}>\n              <Button variant=\"contained\" type=\"submit\" endIcon={<SaveIcon />}>\n                Save\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Contact;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Button,\n  TextField,\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Tab,\n  Paper,\n  Box,\n  Typography,\n  Switch,\n} from \"@mui/material\";\nimport { TabList, TabContext, TabPanel } from \"@mui/lab\";\nimport { connect } from \"react-redux\";\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport NumberFormat from \"react-number-format\";\n\n// import { update_profile } from \"../../store/actions/profile\";\n\nconst Profile = ({ profile }) => {\n  const [value, setValue] = React.useState(\"1\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [underGradYear, setUnderGradYear] = useState(\"\");\n\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [barNo, setBarNo] = useState(\"\");\n  const [practiceTime, setPracticeTime] = useState(\"\");\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    mobile: 0,\n    phone: 0,\n    state: \"\",\n    city: \"\",\n    language: \"\",\n    locate: false,\n    search_active: false,\n    law_school: \"\",\n    grad_year: \"\",\n    bar_admit_date: \"\",\n    undergrad_school: \"\",\n    undergrad_area: \"\",\n    undergrad_year: \"\",\n    bar_no: 0,\n    admitted_practice: \"\",\n    practice_time: \"\",\n    longest_tenure: \"\",\n    average_tenure: \"\",\n    current_tenure: \"\",\n    past_bar_companies_no: \"\",\n    primary_area: \"\",\n  });\n  const {\n    username,\n    email,\n    mobile,\n    phone,\n    state,\n    city,\n    language,\n    locate,\n    search_active,\n    law_school,\n    grad_year,\n    bar_admit_date,\n    undergrad_school,\n    undergrad_area,\n    undergrad_year,\n    bar_no,\n    admitted_practice,\n    practice_time,\n    longest_tenure,\n    average_tenure,\n    current_tenure,\n    past_bar_companies_no,\n    primary_area,\n  } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let id = profile.id;\n    const body = JSON.stringify({\n      username,\n      email,\n      mobile,\n      phone,\n      state,\n      city,\n      language,\n      locate,\n      search_active,\n      law_school,\n      grad_year,\n      bar_admit_date,\n      undergrad_school,\n      undergrad_area,\n      undergrad_year,\n      bar_no,\n      admitted_practice,\n      practice_time,\n      longest_tenure,\n      average_tenure,\n      current_tenure,\n      past_bar_companies_no,\n      primary_area,\n    });\n    console.log(body);\n    axios\n      .patch(\n        `${process.env.REACT_APP_API_URL}/api/profile/${id}/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Fragment>\n      {/* {profile ? ( */}\n      <Box p={5}>\n        <Paper elevation={5} sx={{ borderRadius: 3 }}>\n          <TabContext value={value} p={8}>\n            <Box component=\"form\" onSubmit={(e) => onSubmit(e)}>\n              <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                <TabList\n                  onChange={handleChange}\n                  aria-label=\"lab API tabs example\"\n                >\n                  <Tab label=\"Profile\" value=\"1\" />\n                  <Tab label=\"Education\" value=\"2\" />\n                  <Tab label=\"Work History\" value=\"3\" />\n                </TabList>\n              </Box>\n              <TabPanel value=\"1\">\n                <Grid container spacing={2}>\n                  <Grid item sx={12} xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Username\"\n                      value={username}\n                      id=\"username\"\n                      name=\"username\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.username}\n                      disabled\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Mobile #\"\n                      id=\"mobile\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"mobile\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={mobileNo}\n                      onValueChange={(e) => setMobileNo(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Phone #\"\n                      id=\"phone\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"phone\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={phoneNo}\n                      onValueChange={(e) => setPhoneNo(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Email\"\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.email}\n                      disabled\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"State\"\n                      id=\"state\"\n                      name=\"state\"\n                      type=\"text\"\n                      value={state}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.state}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"City\"\n                      id=\"city\"\n                      name=\"city\"\n                      type=\"text\"\n                      value={city}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.city}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Language(s)\"\n                      value={language}\n                      id=\"language\"\n                      name=\"language\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.language}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Willing to locate\"\n                      id=\"locate\"\n                      name=\"locate\"\n                      value={locate}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.locate}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Search Type (Active/ Passiv)\"\n                      id=\"search_active\"\n                      name=\"search_active\"\n                      value={search_active}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.search_active}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      m={5}\n                      variant=\"contained\"\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"2\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"2\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Law School\"\n                      id=\"law_school\"\n                      name=\"law_school\"\n                      value={law_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.law_school}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Grad year\"\n                      id=\"grad_year\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      name=\"grad_year\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={gradYear}\n                      onValueChange={(e) => setGradYear(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####/##/##\"\n                      placeholder=\"YYYY/MM/DD\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n                      customInput={TextField}\n                      label=\"Bar Admittance Date\"\n                      id=\"bar_admit_date\"\n                      name=\"bar_admit_date\"\n                      value={barDate}\n                      onValueChange={(e) => setBarDate(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrad school\"\n                      id=\"undergrad_school\"\n                      name=\"undergrad_school\"\n                      value={undergrad_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_school}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrade area of study\"\n                      id=\"undergrad_area\"\n                      name=\"undergrad_area\"\n                      value={undergrad_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_area}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      label=\"Undergrade year\"\n                      id=\"undergrad_year\"\n                      name=\"undergrad_year\"\n                      value={underGradYear}\n                      type=\"text\"\n                      onValueChange={(e) => setUnderGradYear(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"#### #### ##\"\n                      customInput={TextField}\n                      label=\"Bar #\"\n                      id=\"bar_no\"\n                      name=\"bar_no\"\n                      value={barNo}\n                      type=\"text\"\n                      onValueChange={(e) => setBarNo(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Admitted practice (state & District)\"\n                      value={admitted_practice}\n                      id=\"admitted_practice\"\n                      name=\"admitted_practice\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.admitted_practice}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      variant=\"contained\"\n                      mb={5}\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"3\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"3\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Practive Time (months / years)\"\n                      id=\"practice_time\"\n                      name=\"practice_time\"\n                      value={practiceTime}\n                      type=\"text\"\n                      onValueChange={(e) => setPracticeTime(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Longest tenure (months / years)\"\n                      id=\"longest_tenure\"\n                      name=\"longest_tenure\"\n                      value={longestTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setLongestTenure(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Average tenure (months / years)\"\n                      value={averageTenure}\n                      id=\"average_tenure\"\n                      name=\"average_tenure\"\n                      type=\"text\"\n                      onValueChange={(e) => setAverageTenure(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Time at Current Company (months / years)\"\n                      id=\"current_tenure\"\n                      name=\"current_tenure\"\n                      value={currentTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setCurrentTenure(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"# of Companies Post Bar\"\n                      id=\"past_bar_companies_no\"\n                      name=\"past_bar_companies_no\"\n                      value={past_bar_companies_no}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.past_bar_companies_no}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Primary areas of Law\"\n                      id=\"primary_area\"\n                      name=\"primary_area\"\n                      value={primary_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.primary_area}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Button\n                      variant=\"contained\"\n                      type=\"submit\"\n                      sx={{\n                        float: \"right\",\n                        marginTop: \"10rem\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n            </Box>\n          </TabContext>\n        </Paper>\n      </Box>\n      {/* // ) : ( // <Typography>Something wend wrong!</Typography>\n      // )} */}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  profile: state.auth.profile,\n});\n\nexport default connect(mapStateToProps)(Profile);\n","/** @format */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  TextField,\n  Switch,\n  FormControlLabel,\n  Box,\n  Grid,\n  Button,\n  Typography,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport axios from \"axios\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\n\nconst CreateTask = () => {\n  const [dueDate, setDueDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [bill, setBill] = useToggle(true);\n  const [matterData, setMatterData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useToggle(true);\n  const [file, setFile] = useState(\"\");\n  const [taskData, setTaskData] = useState({\n    matter_id: 0,\n    matter_contact: 0,\n    matter: \"\",\n    task: \"\",\n    filename: \"\",\n    assign_to: 0,\n    detail: \"\",\n  });\n\n  const {\n    matter_id,\n    matter_contact,\n    matter,\n    task,\n    filename,\n    assign_to,\n    detail,\n  } = taskData;\n\n  const onChange = (e) =>\n    setTaskData({ ...taskData, [e.target.name]: e.target.value });\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/matter/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setMatterData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log(matter_id, matter_contact, matter, task);\n    let due_at = GetDate(dueDate);\n    let is_billable = bill;\n    let is_private = isPrivate;\n\n    const body = JSON.stringify({\n      matter_id,\n      matter_contact,\n      matter,\n      task,\n      file,\n      is_billable,\n      is_private,\n      due_at,\n      assign_to,\n      detail,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-task/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n          \"& .MuiSelect-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Task\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_id\"\n              label=\"matter_id\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_id}\n              onChange={(e) => onChange(e)}\n              id=\"matter_id\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"matter\"\n              type=\"text\"\n              min=\"0\"\n              value={matter}\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"task\"\n              label=\"Task\"\n              type=\"text\"\n              value={task}\n              onChange={(e) => onChange(e)}\n              id=\"task\"\n              autoComplete=\"task\"\n            />\n            <Box ml={2} mt={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Attach File \"\n                labelPlacement=\"start\"\n                control={\n                  <input\n                    type=\"file\"\n                    name=\"filename\"\n                    id=\"file\"\n                    onChange={(e) => onChange(e)}\n                  />\n                }\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"file\"\n                label=\"please chose any file\"\n                type=\"text\"\n                min=\"0\"\n                value={filename}\n                onChange={(e) => setFile(filename)}\n                id=\"file\"\n                disabled\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_contact\"\n              label=\"matter_contact\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_contact}\n              onChange={(e) => onChange(e)}\n              id=\"matter_contact\"\n            />\n            <Box p={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Billable\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={bill}\n                    onChange={() => setBill(bill)}\n                  />\n                }\n              />\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Private\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={isPrivate}\n                    onChange={() => setIsPrivate(isPrivate)}\n                  />\n                }\n              />\n            </Box>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Due Date\"\n                value={dueDate}\n                name=\"dueDate\"\n                id=\"dueDate\"\n                onChange={(e) => setDueDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"Assign to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              autoComplete=\"assign_to\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              multiline\n              rows={5}\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"Detail\"\n              type=\"text\"\n              value={detail}\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n            />\n\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateTask;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport ViewTasks from \"./ViewTasks\";\nimport CreateTask from \"./CreateTask\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Task\">\n          <ViewTasks />\n        </div>\n        <div label=\"Create Task\">\n          <CreateTask />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport DashBoard from \"../Admin/DashBoard\";\n\nimport {\n  Box,\n  Typography,\n  Tabs,\n  Tab,\n  IconButton,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport TabContext from \"@mui/lab/TabContext\";\nimport TabList from \"@mui/lab/TabList\";\nimport TabPanel from \"@mui/lab/TabPanel\";\nimport PropTypes from \"prop-types\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\n\n// components of tabs\nimport Invoice from \"../../Invoice\";\nimport Matter from \"../../Matter\";\nimport Ledger from \"../../Ledger\";\nimport Favorite from \"../../Favorite/Favorites\";\nimport Category from \"../../Category/ManageCategory\";\nimport Contact from \"../../Contact/Contact\";\nimport Profile from \"../../Profile/Profile\";\nimport Tasks from \"../../Tasks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTab, removeTab } from \"../../../redux/features/tabSlice\";\n\nconst data = [\n  { name: \"invoice\", content: <Invoice /> },\n  { name: \"matter\", content: <Matter /> },\n  { name: \"ledger\", content: <Ledger /> },\n  { name: \"favorite\", content: <Favorite /> },\n  { name: \"category\", content: <Category /> },\n  { name: \"contact\", content: <Contact /> },\n  { name: \"profile\", content: <Profile /> },\n  { name: \"tasks\", content: <Tasks /> },\n];\nconst component = {\n  invoice: <Invoice />,\n  matter: <Matter />,\n  ledger: <Ledger />,\n  favorite: <Favorite />,\n  category: <Category />,\n  contact: <Contact />,\n  profile: <Profile />,\n  tasks: <Tasks />,\n};\n\nconst AdminDashboard = () => {\n  const tabList = useSelector((state) => state.tabs);\n  const dispatch = useDispatch();\n  const [wordEntered, setWordEntered] = useState(\"\");\n  const searchItem = () => {\n    let selectedItem = data.filter((value) => {\n      if (value.name === wordEntered) {\n        return true;\n      }\n    });\n  };\n\n  const handleChangeSearch = (e) => {\n    setWordEntered(e.target.value);\n    dispatch(\n      addTab({\n        id: tabList.length + 1,\n        tab: e.target.value,\n      }),\n    );\n    searchItem();\n  };\n  const displayTabsName = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <Tab\n          icon={<Close />}\n          iconPosition=\"end\"\n          label={tab.name}\n          value={tab.id}\n        />\n      ));\n    } else return null;\n  };\n\n  const displayTabs = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <TabPanel value={tab.id}>{component[tab.name]}</TabPanel>\n      ));\n    } else return null;\n  };\n  const searchTab = () => {\n    return (\n      <Box\n        noValidate\n        sx={{\n          p: \"2px 4px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          width: \"100%\",\n          borderRadius: \"5rem\",\n          backgroundColor: \"#dfdfdf\",\n        }}\n      >\n        <Select\n          fullWidth\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={wordEntered}\n          label=\"Search....\"\n          onChange={handleChangeSearch}\n        >\n          {data.map((item, index) => (\n            <MenuItem key={index} value={item.name}>\n              {item.name}\n            </MenuItem>\n          ))}\n        </Select>\n\n        <IconButton type=\"submit\" sx={{ p: \"10px\" }} aria-label=\"search\">\n          {wordEntered.length === 0 ? <SearchIcon /> : <CloseIcon />}\n        </IconButton>\n      </Box>\n    );\n  };\n\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const renderTabs = () => {\n    return (\n      <Box sx={{ width: \"100%\" }}>\n        <TabContext value={value}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label=\"Dashboard\"\n                value={0}\n              />\n\n              {displayTabsName()}\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label=\"+\"\n                value={10}\n              />\n            </TabList>\n          </Box>\n          <TabPanel value={0}>\n            <DashBoard />\n          </TabPanel>\n          {displayTabs()}\n          <TabPanel value={10}>{searchTab()}</TabPanel>\n        </TabContext>\n      </Box>\n    );\n  };\n  useEffect(() => {\n    renderTabs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <Fragment>{renderTabs()}</Fragment>;\n};\n\nexport default AdminDashboard;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { LinearProgress, Box, Grid, Typography } from \"@mui/material\";\n\nconst ProgressBar = () => {\n  const [progress, setProgress] = useState(69);\n  return (\n    <Box paddingLeft={3} paddingRight={3}>\n      <Grid container>\n        <Grid item lg={1} xs={12}>\n          <Typography>{progress}%</Typography>\n        </Grid>\n        <Grid item lg={11} xs={12} mt={2} mb={5}>\n          <LinearProgress variant=\"determinate\" value={progress} />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ProgressBar;\n","/** @format */\n\nimport React from \"react\";\n\nimport { Typography, Box, Paper, Grid } from \"@mui/material\";\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from \"@mui/material\";\n\nconst randomDate = (start, end) => {\n  const getDateTime = new Date(\n    start.getTime() + Math.random() * (end.getTime() - start.getTime()),\n  );\n  const date = getDateTime.toLocaleDateString();\n  const hour = getDateTime.getHours();\n  const min = getDateTime.getMinutes();\n\n  return date + \" \" + hour + \":\" + min;\n};\n\nconst Task = () => {\n  return (\n    <Grid container>\n      <Grid item lg={12} xs={12}>\n        <Typography component=\"h5\" variant=\"h6\" color=\"primary\">\n          My Tasks\n        </Typography>\n        <TableContainer component={Paper}>\n          <Table size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    ID\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Date\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Subject\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Detail\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow bgColor=\"#e85355\">\n                <TableCell>\n                  <Typography variant=\"caption\">123452</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Submit Document X</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display first 3 links\n                  </Typography>{\" \"}\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#fd9905\">\n                <TableCell>\n                  <Typography variant=\"caption\">113457</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Y</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display more details\n                  </Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#28c570\">\n                <TableCell>\n                  <Typography variant=\"caption\">113455</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Z</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Note in popup</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"white\">\n                <TableCell>\n                  <Typography variant=\"caption\">113458</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document XY</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display First 3 links\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Task;\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nexport const AdminCards = () => {\n  return (\n    <>\n      <Grid container spacing={1}>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5} xs={12}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    New Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    Lost Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport const LawyerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Projected Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={230} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Annual Trending Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={768} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const FirmCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={6} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Lost Customers\n              </Typography>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const CustomerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={2}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Balance\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Payment Due\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={12345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nconst Cards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                New Matters\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={3425}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n// import axios from 'axios';\n\nimport { Grid } from \"@mui/material\";\n\nimport Calender from \"../Calender\";\nimport ProgressBar from \"../ProgressBar\";\n\nimport Tasks from \"../Tasks\";\nimport { CustomerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={3}>\n        <Grid item lg={2} xs={12}>\n          <CustomerCards />\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Calender />\n        </Grid>\n        <Grid item p={2} lg={6} xs={12}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <ProgressBar />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Button, Grid, Box, List, ListItem, ListItemText } from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst Templates = () => {\n  return (\n    <Fragment>\n      <Grid container mt={1} spacing={1}>\n        <Grid item xs={12} m={2}>\n          <Button variant=\"contained\" size=\"small\">\n            Merge Fields.XLS\n          </Button>\n          <Box sx={{ float: \"right\" }}>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Doc\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New PDF\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Email\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Edit\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Save\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Close\n            </Button>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Word Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Report Money</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - Report Time</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Report Billed hours</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              PDF Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>P001 - Write of Execution</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P002 - Memo of Cost</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P003 - Settlement Letter</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Email Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Invoice Email</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - New Client</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Firing Client</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              padding: \"15rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Templates can be opened here to edit them. user can add/ remove\n            merge fields directly to the document or PDF\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Templates;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Client/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst ClientDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default ClientDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const PieChart = () => {\n  const state = {\n    series: [86, 14],\n    options: {\n      chart: {\n        height: 500,\n        type: \"pie\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"65%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val + \"%\";\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Prodcutive v. Non-Productive Time\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n        horizontalAlign: \"center\",\n      },\n      colors: [\"#738df5\", \"#eaa3ff\"],\n      labels: [\"Non Productive\", \"Productive\"],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"pie\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            background: \"#aaa\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shade: \"gark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\", \"pink\"],\n        stops: [0, 3],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"user 1\",\n        data: [44, 55, 41, 37, 22, 43, 21],\n      },\n      {\n        name: \"user 2\",\n        data: [53, 32, 33, 52, 13, 43, 32],\n      },\n      {\n        name: \"User 3\",\n        data: [12, 17, 11, 9, 15, 11, 20],\n      },\n      {\n        name: \"User 4\",\n        data: [9, 7, 5, 8, 6, 9, 4],\n      },\n    ],\n    options: {\n      chart: {\n        type: \"bar\",\n        height: 350,\n        stacked: true,\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        borderRadius: 8,\n        colors: [\"#fff\"],\n      },\n\n      title: {\n        text: \"% Indicating User Ranking\",\n      },\n      xaxis: {\n        categories: [\n          \"Word per Min\",\n          \"Matter Completed\",\n          \"Revenue Generated\",\n          \"Articals Submitted\",\n          \"New Client\",\n          \"New Matter\",\n        ],\n        labels: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: undefined,\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      fill: {\n        opacity: 1,\n      },\n      color: [\"#738df5\", \"#eaa3ff\", \"#738df5\", \"#eaa3ff\"],\n      legend: {\n        show: false,\n        position: \"top\",\n        horizontalAlign: \"left\",\n        offsetX: 40,\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Grid } from \"@mui/material\";\nimport Calender from \"../Calender\";\nimport Tasks from \"../Tasks\";\nimport { Chart2, PieChart, BarChart } from \"./Chart\";\nimport { LawyerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={2}>\n          <LawyerCards />\n        </Grid>\n        <Grid item lg={4}>\n          <PieChart />\n        </Grid>\n        <Grid item lg={6}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={4}>\n          <Chart2 />\n        </Grid>\n        <Grid item lg={8}>\n          <BarChart />\n        </Grid>\n        <Grid item>\n          <Calender />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Lawyer/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst LawyerDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default LawyerDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const Chart = () => {\n  const state = {\n    series: [110, 110, 19, 80],\n    options: {\n      chart: {\n        height: 500,\n        type: \"donut\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"55%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Matter by Type\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      colors: [\"#03a5fc\", \"#fcd200\", \"#fca400\", \"#003f5c\"],\n      labels: [\n        \"Business Contacts\",\n        \"Criminal Defence\",\n        \"Personal Injury\",\n        \"Family Law\",\n      ],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"donut\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            // background: \"#333\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"solid\",\n      gradient: {\n        shade: \"dark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\"],\n        stops: [0, 100],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"Profit\",\n        data: [640, 505, 210, 108, 760, 410, 440, 140, 660, 320],\n      },\n      {\n        name: \"Loss\",\n        data: [530, 302, 420, 220, 290, 800, 160, 490, 708, 110],\n      },\n    ],\n\n    options: {\n      colors: [\"#e85355\", \"#28c570\"],\n      chart: {\n        height: 100,\n        type: \"bar\",\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n        },\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function (val) {\n          return \"$\" + val;\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return \"$ \" + val + \"\";\n          },\n        },\n      },\n\n      xaxis: {\n        categories: [\n          \"Jan\",\n          \"Feb\",\n          \"Mar\",\n          \"Apr\",\n          \"May\",\n          \"Jun\",\n          \"July\",\n          \"Aug\",\n          \"Sep\",\n          \"Oct\",\n        ],\n      },\n\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"right\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart2 = () => {\n  const state = {\n    series: [\n      {\n        data: [19, 57, 78, 40, 95, 25],\n      },\n    ],\n\n    options: {\n      chart: {\n        height: 350,\n        type: \"bar\",\n      },\n      colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n      plotOptions: {\n        bar: {\n          columnWidth: \"45%\",\n          distributed: true,\n        },\n      },\n      dataLabels: {\n        enabled: true,\n        formatter: function (val) {\n          return val + \"%\";\n        },\n      },\n      legend: {\n        show: false,\n      },\n      title: {\n        text: \"% of Task Completed by User\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      xaxis: {\n        categories: [\n          \"M. Jones\",\n          \"R. Smith\",\n          \"T.Sweeney\",\n          \"S. Booker\",\n          \"A. Knighter\",\n          \"J. King\",\n        ],\n        labels: {\n          style: {\n            // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n            fontSize: \"12px\",\n          },\n        },\n\n        legend: {\n          show: false,\n          dropShadow: false,\n          position: \"right\",\n          labels: {\n            useSeriesColors: true,\n          },\n          onItemClick: {\n            toggleDataSeries: true,\n          },\n          formatter: function (seriesName, opts) {\n            return (\n              seriesName +\n              \":  <NumberFormat value={\" +\n              opts.w.globals.series[opts.seriesIndex] +\n              \"} displayType={'text'} thousandSeparator={true}/>\"\n            );\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart3 = () => {\n  const state = {\n    // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n    options: {\n      series: [\n        {\n          data: [750, 280, 500, 720],\n        },\n      ],\n      chart: {\n        type: \"bar\",\n        height: 380,\n      },\n      plotOptions: {\n        bar: {\n          barHeight: \"100%\",\n          borderRadius: 8,\n          distributed: true,\n          horizontal: true,\n          dataLabels: {\n            position: \"top\",\n          },\n        },\n      },\n      //       light blue,  yellow, orange, dark blue,\n      colors: [\"#fcd200\", \"#fca400\", \"#003f5c\", \"#03a5fc\"],\n      dataLabels: {\n        enabled: false,\n        textAnchor: \"start\",\n        style: {\n          colors: [\"#fff\"],\n        },\n        formatter: function (val, opt) {\n          return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val;\n        },\n        offsetX: 0,\n        dropShadow: {\n          enabled: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        colors: [\"#fff\"],\n      },\n      xaxis: {\n        categories: [\n          \"Criminal Defense\",\n          \"Personal Injury\",\n          \"Family Law\",\n          \"Business Contract\",\n        ],\n      },\n      yaxis: {\n        labels: {\n          show: true,\n        },\n      },\n      title: {\n        text: \"Revenue By Mater Type\",\n        align: \"center\",\n        floating: true,\n      },\n\n      tooltip: {\n        theme: \"light\",\n        x: {\n          show: false,\n        },\n        y: {\n          formatter: function (val, opt) {\n            return (\n              opt.w.globals.labels[opt.dataPointIndex] + \": $ \" + val + \" k\"\n            );\n          },\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.options.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Paper, Grid, Box } from \"@mui/material\";\n\nimport Tasks from \"../Tasks\";\nimport { FirmCards } from \"../Cards\";\n\nimport { Chart, Chart2, BarChart, BarChart2, BarChart3 } from \"./Charts\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      {/*main dashboard section for display  */}\n      <Box component={Paper} elevation={3} mt={4}>\n        <Grid container spacing={2}>\n          <Grid item lg={8} xs={12}>\n            <FirmCards />\n            <Grid container>\n              <Grid item lg={5} xs={12}>\n                <Chart2 />\n              </Grid>\n              <Grid item lg={7} xs={12}>\n                <Tasks />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Chart />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <BarChart />\n          </Grid>\n          <Grid item lg={6} xs={6}>\n            <BarChart2 />\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <BarChart3 />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Firm/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst FirmDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default FirmDashboard;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport AdminDashboard from \"../components/Dashboard/UserRoles/AdminDashboard\";\nimport ClientDashboard from \"../components/Dashboard/UserRoles/ClientDashboard\";\nimport LawyerDashboard from \"../components/Dashboard/UserRoles/LawyerDashboard\";\nimport FirmDashboard from \"../components/Dashboard/UserRoles/FirmDashboard\";\n\nconst Dashboard = ({ user }) => {\n  // checker type of user\n  const [localuser, setLocalUser] = useState({\n    username: \"Guest\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: true,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const dashboardRedirect = () => {\n    switch (user.username) {\n      case \"admin\":\n        return <AdminDashboard />;\n      case \"firm\":\n        return <FirmDashboard />;\n      case \"lawyer\":\n        return <LawyerDashboard />;\n      default:\n        return <ClientDashboard />;\n    }\n  };\n  return <>{dashboardRedirect()}</>;\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/login_light.png\";\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const { username, email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    login(username, email, password);\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"87vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            {/* csrf_token */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              value={username}\n              onChange={(e) => onChange(e)}\n              autoComplete=\"new-password\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              autoComplete=\"new-password\"\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => onChange(e)}\n              id=\"password\"\n              minLength=\"6\"\n              autoComplete=\"password\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n          </Box>\n          <Grid container>\n            <Grid item xs>\n              <Link to=\"/\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../../actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n  FormControlLabel,\n  FormLabel,\n  FormGroup,\n  Checkbox,\n  RadioGroup,\n  Radio,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/signup_light.png\";\n\nconst Signup = ({ register, isAuthenticated }) => {\n  const [accountCreated, setAccountCreated] = useState(false);\n  const [isFirm, setIsFirm] = useState(false);\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    re_password: \"\",\n  });\n\n  const { username, email, first_name, last_name, password, re_password } =\n    formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    let is_firm = isFirm;\n    let is_client = !isFirm;\n\n    if (password === re_password) {\n      register(\n        email,\n        first_name,\n        last_name,\n        username,\n        password,\n        re_password,\n        is_firm,\n        is_client,\n      );\n\n      setAccountCreated(true);\n    } else {\n      console.log(\"Password no match, Please type again!\");\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (accountCreated) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"85vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={(e) => onChange(e)}\n                  autoComplete=\"new-password\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"first_name\"\n                  label=\"First Name\"\n                  name=\"first_name\"\n                  value={first_name}\n                  onChange={(e) => onChange(e)}\n                  autoComplete=\"new-password\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"last_name\"\n                  label=\"Last Name\"\n                  name=\"last_name\"\n                  autoComplete=\"last_name\"\n                  value={last_name}\n                  onChange={(e) => onChange(e)}\n                  autoFocus\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={(e) => onChange(e)}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                value={password}\n                onChange={(e) => onChange(e)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"re_password\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                value={re_password}\n                onChange={(e) => onChange(e)}\n                id=\"re_password\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Sign up as a </FormLabel>\n              <RadioGroup\n                row\n                value={isFirm}\n                onChange={(e) => setIsFirm(e.target.value)}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Firm\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Individual\"\n                />\n              </RadioGroup>\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormGroup>\n                <FormControlLabel\n                  control={<Checkbox />}\n                  label=\"Agreed on Term and Contidions\"\n                />\n              </FormGroup>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Register\n            </Button>\n          </Box>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" variant=\"body2\">\n                {\"Already have an account? Sign in\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { register })(Signup);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  Divider,\n  FormControlLabel,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Company = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate: 0.0,\n    role: \"\",\n    time_zone: \"\",\n    group: \"\",\n    job_title: \"\",\n    bar_no: 0,\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: 0,\n    ext: 0,\n    mobile: 0,\n    home: 0,\n    work_no: 0,\n\n    phone_ext: 0,\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    role,\n    time_zone,\n    group,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      c_email,\n      rate,\n      role,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      p_email,\n      phone_ext,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Box p={3} sx={{ float: \"right\" }}>\n        <LinkButton to=\"/users\">Manage User</LinkButton>\n        <LinkButton to=\"/user-group\">Manage Group</LinkButton>\n        <LinkButton to=\"/user-role\">Manage Role</LinkButton>\n      </Box>\n\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create User\n        </Typography>\n        <Grid container spacing={2} mt={2}>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"f_name\"\n              label=\"f_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"m_name\"\n              label=\"m_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"m_name\"\n              autoComplete=\"m_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"l_name\"\n              label=\"l_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"c_email\"\n              label=\"c_email\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"c_email\"\n              autoComplete=\"c_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"rate\"\n              label=\"rate\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"rate\"\n              autoComplete=\"rate\"\n            />\n            <FormControlLabel\n              label=\"Round Entries (Round [up/down] to nearnest 0.00 fraction of the hour\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n              sx={{ width: \"35rem\" }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"role\"\n              label=\"role\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"role\"\n              autoComplete=\"role\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"time_zone\"\n              label=\"time_zone\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"time_zone\"\n              autoComplete=\"time_zone\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"group\"\n              label=\"group\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"group\"\n              autoComplete=\"group\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"job_title\"\n              label=\"job_title\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"job_title\"\n              autoComplete=\"job_title\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bar_no\"\n              label=\"bar_no\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bar_no\"\n              autoComplete=\"bar_no\"\n            />\n          </Grid>\n          <Grid item mt={2}>\n            <Divider textAlign=\"left\">\n              <Typography component=\"h3\" variant=\"h5\">\n                Contact Info\n              </Typography>\n            </Divider>\n            <Box>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"street\"\n                label=\"street\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"street\"\n                autoComplete=\"street\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"suite\"\n                label=\"suite\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"suite\"\n                autoComplete=\"suite\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"city\"\n                label=\"city\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"city\"\n                autoComplete=\"city\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"state\"\n                label=\"state\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"state\"\n                autoComplete=\"state\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"zip\"\n                label=\"zip\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"zip\"\n                autoComplete=\"zip\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"ext\"\n                label=\"ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"ext\"\n                autoComplete=\"ext\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"mobile\"\n                label=\"mobile\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"mobile\"\n                autoComplete=\"mobile\"\n              />\n              <Button\n                variant=\"contained\"\n                sx={{ background: \"#5cb85c\", marginTop: \"0.5rem\" }}\n              >\n                Set Password Automaticly\n              </Button>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"home\"\n                label=\"home\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"home\"\n                autoComplete=\"home\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"work_no\"\n                label=\"work_no\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"work_no\"\n                autoComplete=\"work_no\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"p_email\"\n                label=\"p_email\"\n                type=\"email\"\n                onChange={(e) => onChange(e)}\n                id=\"p_email\"\n                autoComplete=\"p_email\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"phone_ext\"\n                label=\"phone_ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"phone_ext\"\n                autoComplete=\"phone_ext\"\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Box\n              sx={{\n                \"& .MuiButton-root\": { m: 1 },\n                float: \"right\",\n              }}\n            >\n              <Button variant=\"contained\" type=\"submit\">\n                Create Member\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Company;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\nimport Filters from \"../../components/Matter/Filters\";\nimport MatterCards from \"../../components/Matter/MatterCards\";\nimport MatterListLong from \"../../components/Matter/MatterListLong\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item xs={12}>\n            <Filters />\n          </Grid>\n          <Grid item xs={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item xs={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Matters;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Switch,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Button,\n  TextField,\n  Box,\n  Grid,\n  MenuItem,\n  Typography,\n  Divider,\n  FormControlLabel,\n  Stack,\n} from \"@mui/material\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport CreateUser from \"./CreateUser\";\nimport {\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useToggle } from \"../../context/useToggle\";\n\nconst ManageUser = () => {\n  const [activityData, setActivityData] = useState([]);\n\n  const [isActive, setIsActive] = useToggle(false);\n\n  const [roles, setRoles] = useState([]);\n  const [role, setRole] = useState(\"\");\n  const [group, setGroup] = useState(\"\");\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [rateType, setRateType] = useState(\"\");\n\n  const handleChange = (event) => {\n    setRateType(event.target.value);\n  };\n\n  const [approvel, setApprovel] = useToggle(false);\n\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate_type: \"\",\n    rate: \" \",\n    time_zone: \"\",\n    job_title: \"\",\n    bar_no: \" \",\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    ext: \"\",\n    mobile: \"\",\n    home: \"\",\n    work_no: \"\",\n    p_email: \"\",\n    phone_ext: \"\",\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    time_zone,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      p_email,\n      role,\n      c_email,\n      rate,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      phone_ext,\n    });\n\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/create-member/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchRoleData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/role/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setRoles(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  const FetchGroupData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/group/`, CONFIG)\n      .then((res) => {\n        setLoading2(false);\n        setGroups(res.data);\n      })\n      .catch((err) => {\n        setLoading2(false);\n      });\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setActivityData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchRoleData();\n    FetchData();\n    FetchGroupData();\n  }, []);\n\n  return (\n    <Fragment>\n      <Box>\n        <Typography component=\"h4\" variant=\"h5\" color=\"primary\" mb={2}>\n          Manage Users\n        </Typography>\n        <Stack p={3} direction=\"row\" spacing={2} sx={{ float: \"right\" }}>\n          <Search sx={{ width: \"15rem\" }}>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n          <Button\n            color=\"success\"\n            onClick={handleClickOpen}\n            variant=\"contained\"\n            sx={{ color: \"white\", background: \"#28c570\" }}\n          >\n            + Add User\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth=\"true\"\n            maxWidth=\"xl\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New User\"}</DialogTitle>\n            <DialogContent>\n              <Grid\n                container\n                spacing={2}\n                mt={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\" },\n                }}\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"f_name\"\n                    label=\"First Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"f_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"m_name\"\n                    label=\"Middle Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"m_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"l_name\"\n                    label=\"Last Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"l_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"c_email\"\n                    label=\"Company Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"c_email\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"rate\"\n                    label=\"Rate $\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"rate\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={6}>\n                  <Stack direction=\"row\" spacing={2} ml={2}>\n                    <FormControlLabel\n                      sx={{ fontSize: \"2rem\" }}\n                      label=\"\"\n                      control={\n                        <Switch\n                          checked={approvel}\n                          onChange={() => setApprovel(approvel)}\n                        />\n                      }\n                    />\n                    <Typography>\n                      Round Entries (Round [up/down] to nearnest\n                      <TextField\n                        margin=\"dense\"\n                        variant=\"standard\"\n                        type=\"text\"\n                        size=\"small\"\n                        placeholder=\"0.00\"\n                        sx={{\n                          maxWidth: \"5rem\",\n                        }}\n                      />\n                      fraction of the hour\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"role\"\n                    label=\"Role\"\n                    onChange={(e) => setRole(e.target.value)}\n                    id=\"role\"\n                    autoComplete=\"new-password\"\n                  >\n                    {!loading ? (\n                      roles.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"time_zone\"\n                    label=\"Time Zone\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"time_zone\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"group\"\n                    label=\"Group\"\n                    type=\"text\"\n                    onChange={(e) => setGroup(e.target.value)}\n                    id=\"group\"\n                    autoComplete=\"new-password\"\n                  >\n                    {!loading2 ? (\n                      groups.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"job_title\"\n                    label=\"Job Title\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"job_title\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"bar_no\"\n                    label=\"Bar #\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"bar_no\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={4} mb={2}>\n                <Divider />\n                <Typography mt={2} component=\"h3\" color=\"primary\" variant=\"h5\">\n                  Contact Info\n                </Typography>\n              </Box>\n\n              <Grid\n                container\n                spacing={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\" },\n                }}\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"street\"\n                    label=\"Street\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"street\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"suite\"\n                    label=\"Suite\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"suite\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"city\"\n                    label=\"City\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"city\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"state\"\n                    label=\"State\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"state\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"zip\"\n                    label=\"Zip\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"zip\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"ext\"\n                    label=\"+4\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"ext\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"p_email\"\n                    label=\"Personal Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"p_email\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <Box mt={1} ml={1}>\n                    <Button variant=\"contained\" color=\"primary\">\n                      Reset Password\n                    </Button>\n                  </Box>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"mobile\"\n                    label=\"Mobile #\"\n                    type=\"phone\"\n                    onChange={(e) => onChange(e)}\n                    id=\"mobile\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"home\"\n                    label=\"Home #\"\n                    type=\"phone\"\n                    onChange={(e) => onChange(e)}\n                    id=\"home\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"work_no\"\n                    label=\"Work #\"\n                    type=\"phone\"\n                    onChange={(e) => onChange(e)}\n                    id=\"work_no\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"phone_ext\"\n                    label=\"Extesion\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"phone_ext\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n              </Grid>\n              <Grid item lg={12}>\n                <Box\n                  sx={{\n                    \"& .MuiButton-root\": { m: 1, mr: 8 },\n                    float: \"right\",\n                  }}\n                >\n                  <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    type=\"submit\"\n                    sx={{ color: \"white\" }}\n                  >\n                    Activate\n                  </Button>\n                  <Button variant=\"contained\" color=\"error\">\n                    Deactivate\n                  </Button>\n                </Box>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n            </DialogActions>\n          </Dialog>\n        </Stack>\n\n        <TableContainer>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  <Typography color=\"white\">First Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Role</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Group</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Login</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Status</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Deactivate</Typography>\n                </TableCell>\n                <TableCell>\n                  <Switch\n                    color=\"success\"\n                    value={isActive}\n                    onChange={() => setIsActive()}\n                  />\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {/* {loading && isActive\n                ? activityData?.map((data) => (\n                    <TableRow>\n                      <TableCell>{data.f_name}</TableCell>\n                      <TableCell>{data.l_name}</TableCell>\n                      <TableCell>{data.p_email}</TableCell>\n                      <TableCell>{data.role}</TableCell>\n                      <TableCell>{data.group}</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>inactive</TableCell>\n                      <TableCell>\n                        <Button\n                          variant=\"contained\"\n                          value={data.id}\n                          onClick={() => handleDelete(data.id)}\n                          sx={{\n                            borderRadius: \"0.5rem\",\n                            float: \"right\",\n                          }}\n                        >\n                          <ClearIcon />\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                : null} */}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default ManageUser;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Stack,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst ManageUserGroup = () => {\n  const [filter, setFilter] = useState(\"\");\n\n  const handleChange = (event) => {\n    setFilter(event.target.value);\n  };\n  const [group, setGroup] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingUser, setLoadingUser] = useState(true);\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchUserData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        setLoadingUser(false);\n\n        setUserData(res.data);\n      })\n      .catch((err) => {\n        setLoadingUser(false);\n      });\n  };\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/group/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setGroup(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n    FetchUserData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/group/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/group/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={12}>\n          <Grid container spacing={2} direction=\"row\">\n            <Grid item lg={3}>\n              <Typography variant=\"h5\" component=\"h5\" m={1} color=\"primary\">\n                Manage Group\n              </Typography>\n            </Grid>\n            <Grid item lg={9}>\n              <Stack direction=\"row\" sx={{ float: \"right\" }}>\n                <Typography m={2} component=\"span\" color=\"primary\">\n                  Filter & Sort By\n                </Typography>\n                <FormControl sx={{ width: \"10rem\", height: \"2.5rem\" }}>\n                  <InputLabel id=\"demo-simple-select-label\" color=\"primary\">\n                    Custom Sort\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={filter}\n                    label=\"Age\"\n                    onChange={handleChange}\n                  >\n                    <MenuItem value=\"name\">By Name</MenuItem>\n                    <MenuItem value=\"role\">By Role</MenuItem>\n                    <MenuItem value=\"gorup\">By Group</MenuItem>\n                  </Select>\n                </FormControl>\n                <Search sx={{ width: \"20rem\", height: \"2.5rem\", m: 1 }}>\n                  <SearchIconWrapper>\n                    <SearchIcon />\n                  </SearchIconWrapper>\n                  <StyledInputBase\n                    placeholder=\"Search…\"\n                    inputProps={{ \"aria-label\": \"search\" }}\n                  />\n                </Search>\n              </Stack>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3}>\n          <Typography\n            variant=\"h5\"\n            component=\"h5\"\n            color=\"primary\"\n            align=\"center\"\n          >\n            Groups\n          </Typography>\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            fullWidth\n            sx={{\n              borderRadius: \"0.5rem\",\n            }}\n          >\n            + New Group\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New Group\"}</DialogTitle>\n            <DialogContent>\n              <TextField\n                required\n                fullWidth\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"name\"\n                label=\"Group Name\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n              <Button type=\"submit\" autoFocus>\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {/* {!loading ? (\n            group.map((data) => (\n              <Box mt={1}>\n                <List>\n                  <ListItem disablePadding>\n                    <ListItemText>{data.name}</ListItemText>\n                    <Button\n                      variant=\"contained\"\n                      value={data.id}\n                      onClick={() => handleDelete(data.id)}\n                      sx={{\n                        borderRadius: \"0.5rem\",\n                        float: \"right\",\n                      }}\n                    >\n                      <ClearIcon />\n                    </Button>\n                  </ListItem>\n                </List>\n              </Box>\n            ))\n          ) : (\n            <Typography>Loading ...</Typography>\n          )} */}\n        </Grid>\n        <Grid item lg={9}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow bgColor=\"#796ef0\">\n                  <TableCell>\n                    <Typography color=\"white\">First Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Last Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Role</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Group</Typography>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {/* {loadingUser\n                  ? null\n                  : userData?.map((data) => {\n                      return (\n                        <TableRow>\n                          <TableCell>{data.f_name}</TableCell>\n                          <TableCell>{data.l_name}</TableCell>\n                          <TableCell>{data.role}</TableCell>\n                          <TableCell>{data.group}</TableCell>\n                        </TableRow>\n                      );\n                    })} */}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item lg={12}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"success\" sx={{ color: \"white\" }}>\n              Done\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageUserGroup;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TableBody,\n  Typography,\n  Switch,\n} from \"@mui/material\";\n\nconst RoleFuncions = ({ data }) => {\n  const functions = [\n    \"Contacts\",\n    \"Matter\",\n    \"Calendar\",\n    \"Flat Fee\",\n    \"Expenses\",\n    \"Trust\",\n    \"Task(s)\",\n    \"Invoice\",\n    \"Payments\",\n    \"Full DOB\",\n    \"Full SSN\",\n    \"Partial SSN\",\n    \"Partial DOB\",\n    \"Roles\",\n    \"Run Reports\",\n    \"Discounts\",\n    \"Bank Accounts\",\n  ];\n  return (\n    <Fragment>\n      <TableContainer sx={{ overflowX: \"auto\" }}>\n        <Table size=\"small\" sx={{ fontSize: \"1rem\" }}>\n          <TableHead>\n            <TableRow bgColor=\"#796ef0\">\n              <TableCell>\n                <Typography color=\"white\">Function</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">View </Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Edit</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Create</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Delete</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Contacts</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Team</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Office</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Region</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">All</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {functions.map((data) => (\n              <TableRow>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  {data}\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default RoleFuncions;\n","/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  List,\n  Grid,\n  Box,\n  Typography,\n  ListItem,\n  ListItemText,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport RoleFuncions from \"./RoleFuncions\";\n\nconst UserRole = () => {\n  const [roles, setRoles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/role/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setRoles(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/role/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/role/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={12}></Grid>\n        <Grid item lg={2}>\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            fullWidth\n            sx={{\n              borderRadius: \"0.5rem\",\n            }}\n          >\n            + New Role\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New Role\"}</DialogTitle>\n            <DialogContent>\n              <TextField\n                required\n                fullWidth\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"name\"\n                label=\"Role Name\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n              <Button type=\"submit\" autoFocus>\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {!loading ? (\n            roles.map((data) => (\n              <Box mt={1}>\n                <List>\n                  <ListItem disablePadding>\n                    <ListItemText>{data.name}</ListItemText>\n                    <Button\n                      variant=\"contained\"\n                      value={data.id}\n                      size=\"small\"\n                      onClick={() => handleDelete(data.id)}\n                      sx={{\n                        borderRadius: \"0.5rem\",\n                        float: \"right\",\n                      }}\n                    >\n                      <ClearIcon />\n                    </Button>\n                  </ListItem>\n                </List>\n              </Box>\n            ))\n          ) : (\n            <Typography>Loading ...</Typography>\n          )}\n        </Grid>\n        <Grid item lg={10}>\n          <RoleFuncions data={roles} />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default UserRole;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport CreateUser from \"./CreateUser\";\nimport ManageUser from \"./ManageUser\";\nimport ManageUserGroup from \"./ManageUserGroup\";\nimport UserRole from \"./UserRole\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Manage Users\">\n          <ManageUser />\n        </div>\n\n        <div label=\"User Group\">\n          <ManageUserGroup />\n        </div>\n        <div label=\"User Role\">\n          <UserRole />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst TimeList = () => {\n  const [timeData, setTimeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTimeData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <Box>\n        <LinkButton to=\"/ledgers\" sx={{ float: \"right\" }}>\n          Ledger Dashboard\n        </LinkButton>\n        <Box p={3}>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Ledger Dashbaord\n          </LinkButton>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Add Time\n          </LinkButton>\n          <LinkButton to=\"/ledger-list\" sx={{ float: \"right\" }}>\n            Ledger List\n          </LinkButton>\n          <LinkButton to=\"/ledger-documents\" sx={{ float: \"right\" }}>\n            Documents\n          </LinkButton>\n        </Box>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Add</TableCell>\n\n                <TableCell>Matter #</TableCell>\n                <TableCell>Matter Name</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Billable Time</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell>Category</TableCell>\n                <TableCell>Activity</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n              ? null\n              : timeData?.map((data) => {\n                  return (\n                    <TableBody id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n\n                      <TableCell>{data.conatact}</TableCell>\n                      <TableCell>{data.date}</TableCell>\n                      <TableCell>{data.time}</TableCell>\n                      <TableCell>{data.rate}</TableCell>\n                      <TableCell>{data.category}</TableCell>\n                      <TableCell>{data.sub_category}</TableCell>\n                    </TableBody>\n                  );\n                })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TimeList;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Switch, FormControlLabel } from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Search = () => {\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [searchData, setSearchData] = useState({\n    state: \"\",\n    city: \"\",\n    practice_area: \"\",\n    law_school: \"\",\n\n    undergrad_study: \"\",\n    lamguages: \"\",\n    admitted_state: \"\",\n    relocate: false,\n  });\n\n  const {\n    state,\n    city,\n    practice_area,\n    law_school,\n\n    undergrad_study,\n    lamguages,\n    admitted_state,\n    relocate,\n  } = searchData;\n\n  const onChange = (e) =>\n    setSearchData({ ...searchData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"number\"\n              min=\"0\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Longest tenure (months / years)\"\n              id=\"longest_tenure\"\n              name=\"longest_tenure\"\n              value={longestTenure}\n              type=\"text\"\n              onValueChange={(e) => setLongestTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Average tenure (months / years)\"\n              value={averageTenure}\n              id=\"average_tenure\"\n              name=\"average_tenure\"\n              type=\"text\"\n              onValueChange={(e) => setAverageTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time at Current Company (months / years)\"\n              id=\"current_tenure\"\n              name=\"current_tenure\"\n              value={currentTenure}\n              type=\"text\"\n              onValueChange={(e) => setCurrentTenure(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"admitted_state\"\n              label=\"admitted_state\"\n              type=\"text\"\n              value={admitted_state}\n              onChange={(e) => onChange(e)}\n              id=\"admitted_state\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={gradYear}\n              onValueChange={(e) => setGradYear(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"undergrad_study\"\n              label=\"undergrad_study\"\n              step=\"0.01\"\n              type=\"text\"\n              value={undergrad_study}\n              onChange={(e) => onChange(e)}\n              id=\"undergrad_study\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"practice_area\"\n              label=\"practice_area\"\n              type=\"text\"\n              value={practice_area}\n              onChange={(e) => onChange(e)}\n              id=\"practice_area\"\n              disabled\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance Date\"\n              id=\"bar_admit_date\"\n              name=\"bar_admit_date\"\n              value={barDate}\n              onValueChange={(e) => setBarDate(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"lamguages\"\n              label=\"lamguages\"\n              type=\"text\"\n              value={lamguages}\n              onChange={(e) => onChange(e)}\n              id=\"lamguages\"\n            />\n            {/* <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Apply\n            </Button> */}\n            <Box m={3}>\n              <LinkButton to=\"/job-result\" sx={{ float: \"right\" }}>\n                Apply\n              </LinkButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Search;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\n// import axios from \"axios\";\n// import { CONFIG } from \"../../api/MatterApi\";\n// import { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Result = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(\"\");\n  // const [status, setStatus] = useState(\"\");\n  //   const FetchData = () => {\n  //     axios\n  //       .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n  //       .then((res) => {\n  //         setLoading(false);\n  //         setStatus(res.statusText);\n  //         setActivityData(res.data);\n  //       })\n  //       .catch((err) => {\n  //         setLoading(false);\n  //         setStatus(err.statusText);\n  //       });\n  //   };\n  //   useEffect(() => {\n  //     FetchData();\n  //   }, []);\n  return (\n    <Fragment>\n      <Box>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Rate</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Name</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">City</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">State</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Active</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Grage Year</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practice Area</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Relocation</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practicing</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading ? (\n              <TableBody>\n                <TableRow>\n                  <TableCell>74%</TableCell>\n                  <TableCell>Smith, John</TableCell>\n                  <TableCell>San Diego</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2000</TableCell>\n                  <TableCell>Criminal</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>22y - 03M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>72%</TableCell>\n                  <TableCell>Cassidy, Butch</TableCell>\n                  <TableCell>Los Angeles</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>2021</TableCell>\n                  <TableCell>Transctional</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>0y - 02M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>50%</TableCell>\n                  <TableCell>Short, Mart</TableCell>\n                  <TableCell>Sacramento</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2013</TableCell>\n                  <TableCell>Civil</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>06y - 11M</TableCell>\n                </TableRow>\n              </TableBody>\n            ) : (\n              activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })\n            )} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Result;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  FormControlLabel,\n  FormGroup,\n  Checkbox,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Saved = () => {\n  const [pickTime, setPickTime] = useState(new Date(\"2021-12-01T21:00:00\"));\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [jobData, setJobData] = useState({\n    name: \"\",\n    state: \"\",\n    city: \"\",\n    email: \"\",\n    mobile: \"\",\n    home: \"\",\n    law_school: \"\",\n    grad_year: \"\",\n    bar_adm_year: \"\",\n    practice_area: \"\",\n    mail_add: \"\",\n    relocate: false,\n    date: \"\",\n    time: \"\",\n    link: \"\",\n    notes: \"\",\n    file: \"\",\n  });\n\n  const {\n    name,\n    state,\n    city,\n    email,\n    mobile,\n    home,\n    law_school,\n    grad_year,\n    bar_adm_year,\n    practice_area,\n    mail_add,\n    relocate,\n    date,\n    time,\n    link,\n    notes,\n    file,\n  } = jobData;\n\n  const onChange = (e) =>\n    setJobData({ ...jobData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <FormGroup aria-label=\"position\" row>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Save\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Contacted\"\n                labelPlacement=\"start\"\n              />\n              <Typography component=\"label\" m={1}>\n                Interested :\n              </Typography>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Yes\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"No\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Interviewed\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Accept\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Reject\"\n                labelPlacement=\"start\"\n              />\n              <Box ml={3}>\n                <Typography component=\"h4\" color=\"success\" variant=\"h5\">\n                  Overall Score: 74%\n                </Typography>\n              </Box>\n            </FormGroup>\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"name\"\n              label=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(e) => onChange(e)}\n              id=\"name\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email\"\n              label=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              id=\"email\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobile}\n              onValueChange={(value) => onChange(value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={home}\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={grad_year}\n              onValueChange={(value) => onChange(value)}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance\"\n              id=\"bar_adm_year\"\n              name=\"bar_adm_year\"\n              value={bar_adm_year}\n              type=\"text\"\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"mail_add\"\n              label=\"mail_add\"\n              type=\"text\"\n              value={mail_add}\n              onChange={(e) => onChange(e)}\n              id=\"mail_add\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xs={4}>\n                <Box m={1}>\n                  <Typography component=\"lable\"> Writing Sample </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <TimePicker\n                    label=\"Pick Time\"\n                    name=\"picktime\"\n                    id=\"picktime\"\n                    value={pickTime}\n                    onChange={(e) => {\n                      setPickTime(e);\n                    }}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    inputFormat=\"yyyy-MM-dd\"\n                    mask=\"____-__-__\"\n                    label=\"Pick Date\"\n                    value={pickDate}\n                    name=\"pickdate\"\n                    id=\"pickdate\"\n                    onChange={(e) => setPickDate(e)}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n\n                <TextField\n                  size=\"small\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"link\"\n                  type=\"link\"\n                  defaultValue=\"2021-12-01\"\n                  value={link}\n                  onChange={(e) => onChange(e)}\n                  id=\"link\"\n                />\n              </Grid>\n              <Grid item xs={8}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={8}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"notes\"\n                  type=\"text\"\n                  value=\"Notes ...\"\n                  id=\"notes\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Saved;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport Search from \"./Search\";\nimport Result from \"./Result\";\nimport Saved from \"./Saved\";\nconst index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Search\">\n          <Search />\n        </div>\n        <div label=\"Result\">\n          <Result />\n        </div>\n        <div label=\"Saved\">\n          <Saved />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default index;\n","/** @format */\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nimport { Provider } from \"react-redux\";\n\nimport store, { persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport Layout from \"./hocs/Layout\";\n\nimport PrivateRoutes from \"./utils/PrivateRoute\";\n\nimport { UserProvider } from \"./context/User\";\n\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"./hocs/Theme\";\n\nimport Home from \"./containers/Home\";\n\n// Authentication links\nimport Login from \"./containers/Auth/Login\";\nimport Signup from \"./containers/Auth/Signup\";\n\nimport Profile from \"./components/Profile/Profile\";\nimport Company from \"./components/Profile/Company\";\n\nimport Matter from \"./components/Matter\";\n\nimport Matters from \"./containers/Matters/Matters\";\nimport MatterDetail from \"./components/Matter/MatterDetail\";\nimport NewMatter from \"./components/Matter/NewMatter\";\n\nimport Invoice from \"./components/Invoice\";\n\nimport CreateInvoice from \"./components/Invoice/CreateInvoice\";\n\nimport Payment from \"./components/Invoice/Payment\";\nimport ManageCategory from \"./components/Category/ManageCategory\";\n\nimport User from \"./components/User\";\n\nimport Time from \"./components/Ledger/Time\";\nimport TimeList from \"./components/Ledger/TimeList\";\n\nimport Ledger from \"./components/Ledger\";\n\nimport LedgerTImeList from \"./components/Ledger/LedgerTImeList\";\nimport LedgerActivity from \"./components/Ledger/LedgerActivity\";\n\nimport Tasks from \"./components/Tasks\";\nimport CreateTask from \"./components/Tasks/CreateTask\";\nimport ViewTasks from \"./components/Tasks/ViewTasks\";\nimport LedgerDoc from \"./components/Ledger/LedgerDoc\";\n\nimport Employee from \"./components/Employee\";\nimport Templates from \"./components/Template/Templates\";\n\nimport Contact from \"./components/Contact/Contact\";\nimport UserRole from \"./components/User/UserRole\";\nimport ManageUserGroup from \"./components/User/ManageUserGroup\";\n\nconst App = () => {\n  const alertOptions = {\n    timeout: 3000,\n    position: \"top center\",\n  };\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <UserProvider>\n          <ThemeProvider theme={theme}>\n            <AlertProvider template={AlertTemplate} {...alertOptions}>\n              <Router>\n                <Layout>\n                  <Switch>\n                    {/* loging regierter routes */}\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/signup\" component={Signup} />\n\n                    {/* private route after login  */}\n\n                    <PrivateRoutes exact path=\"/\" component={Home} />\n                    <PrivateRoutes path=\"/profile\" component={Profile} />\n                    <PrivateRoutes path=\"/company-detail\" component={Company} />\n\n                    <PrivateRoutes\n                      path=\"/matter-dashboard\"\n                      component={Matter}\n                    />\n                    <PrivateRoutes path=\"/matters\" component={Matters} />\n                    <PrivateRoutes\n                      path=\"/matter-detail\"\n                      component={MatterDetail}\n                    />\n                    <PrivateRoutes\n                      path=\"/create-matter\"\n                      component={NewMatter}\n                    />\n\n                    <PrivateRoutes path=\"/invoices\" component={Invoice} />\n                    <PrivateRoutes\n                      path=\"/create-invoice\"\n                      component={CreateInvoice}\n                    />\n                    <PrivateRoutes path=\"/recive-invoice\" component={Payment} />\n\n                    {/* <PrivateRoutes path=\"/create-user\" component={CreateUser} /> */}\n                    <PrivateRoutes path=\"/users\" component={User} />\n                    <PrivateRoutes path=\"/user-roles\" component={UserRole} />\n                    <PrivateRoutes\n                      path=\"/user-groups\"\n                      component={ManageUserGroup}\n                    />\n\n                    <PrivateRoutes\n                      path=\"/manage-categories\"\n                      component={ManageCategory}\n                    />\n                    <PrivateRoutes\n                      path=\"/ledger-documents\"\n                      component={LedgerDoc}\n                    />\n                    <PrivateRoutes path=\"/time\" component={Time} />\n                    <PrivateRoutes path=\"/time-list\" component={TimeList} />\n                    <PrivateRoutes path=\"/ledgers\" component={Ledger} />\n                    <PrivateRoutes\n                      path=\"/ledger-list\"\n                      component={LedgerTImeList}\n                    />\n                    <PrivateRoutes\n                      path=\"/activity-list\"\n                      component={LedgerActivity}\n                    />\n\n                    <PrivateRoutes path=\"/tasks\" component={Tasks} />\n                    <PrivateRoutes path=\"/create-task\" component={CreateTask} />\n                    <PrivateRoutes path=\"/view-tasks\" component={ViewTasks} />\n\n                    <PrivateRoutes\n                      path=\"/employee-search\"\n                      component={Employee}\n                    />\n\n                    <PrivateRoutes path=\"/templates\" component={Templates} />\n                    <PrivateRoutes path=\"/contact\" component={Contact} />\n                  </Switch>\n                </Layout>\n              </Router>\n            </AlertProvider>\n          </ThemeProvider>\n        </UserProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}