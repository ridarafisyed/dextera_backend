{"version":3,"sources":["asserts/logo_white copy.png","components/Tabs/tabs.module.css","redux/features/sidebarSlice.js","components/Dashboard/Admin/DashboardLayout/DashboardContent.jsx","asserts/login_light.png","asserts/signup_light.png","reducers/profile.js","reducers/errors.js","reducers/messages.js","reducers/auth.js","reducers/data.js","redux/features/tabSlice.js","redux/features/searchTabSlice.js","redux/features/favoriteSlice.js","api/MatterApi.js","redux/services/roleFnService.js","redux/features/roleFnSlice.js","redux/services/permissionService.js","redux/features/permissionSlice.js","reducers/index.js","actions/types.js","store.js","actions/messages.js","actions/auth.js","context/useToggle.jsx","styles/styles.jsx","actions/data.js","components/Navbars/NavbarResponsive.jsx","components/Navbars/Navbar.jsx","components/Chat/Chat.jsx","components/Dashboard/Calender.jsx","components/Tasks/ViewTasks.jsx","components/Favorite/Favorites.jsx","components/Navbars/DrawerComp.jsx","components/Navbars/NavbarSec.jsx","components/Sidebar/TestingSidebar.jsx","components/Sidebar/Sidebar.jsx","components/Footer/Footer.jsx","hocs/Layout.js","utils/PrivateRoute.js","context/User/reducer.js","context/User/index.js","hocs/Theme.js","components/Dashboard/Admin/DashBoard.jsx","components/Tabs/Tabs.jsx","components/Invoice/CreateInvoice.jsx","components/Invoice/Payment.jsx","components/Invoice/Filters.jsx","components/Invoice/InvoiceList.jsx","components/Invoice/index.jsx","utils/ActionAlerts.js","components/Matter/MatterList.jsx","components/Matter/Cards.jsx","components/Matter/Calendar.jsx","components/Matter/Filters.jsx","components/Matter/MatterCards.jsx","components/Matter/MatterListLong.jsx","components/Matter/NewMatter.jsx","components/Matter/MatterDetail.jsx","components/Matter/index.jsx","components/Ledger/LedgerActivity.jsx","components/Ledger/Fillters.jsx","components/Ledger/LedgerCards.jsx","components/Ledger/LedgerTImeList.jsx","components/Ledger/LedgerDashbard.jsx","components/Ledger/LedgerDoc.jsx","components/Ledger/Time.jsx","components/Ledger/index.jsx","components/Category/SubCategory.jsx","components/Category/Category.jsx","components/Category/Classification.jsx","components/Category/ManageCategory.jsx","components/Contact/Contact.jsx","components/Profile/Profile.js","components/Tasks/CreateTask.jsx","components/Tasks/index.jsx","components/Dashboard/UserRoles/AdminDashboard.jsx","components/Dashboard/ProgressBar.jsx","components/Dashboard/Tasks.jsx","components/Dashboard/Cards.jsx","components/Dashboard/Client/DashBoard.jsx","components/Template/Templates.jsx","components/Dashboard/UserRoles/ClientDashboard.jsx","components/Dashboard/Lawyer/Chart.jsx","components/Dashboard/Lawyer/DashBoard.jsx","components/Dashboard/UserRoles/LawyerDashboard.jsx","components/Dashboard/Firm/Charts.jsx","components/Dashboard/Firm/DashBoard.jsx","components/Dashboard/UserRoles/FirmDashboard.jsx","containers/Home.js","containers/Auth/Login.js","containers/Auth/Signup.js","components/Profile/Company.jsx","containers/Matters/Matters.jsx","components/User/ManageUser.jsx","components/User/ManageUserGroup.jsx","components/User/ManageRole.jsx","components/User/index.jsx","components/Ledger/TimeList.jsx","components/Employee/Search.jsx","components/Employee/Result.jsx","components/Employee/Saved.jsx","components/Employee/index.jsx","App.jsx","index.js","components/Dashboard/Admin/Charts.jsx","components/Dashboard/Admin/Cards/RevenueIn.jsx","components/Dashboard/Admin/Cards/RevenueOut.jsx","components/Dashboard/Admin/Cards/NewCustomer.jsx","components/Dashboard/Admin/Cards/LostCustomer.jsx","components/Dashboard/Admin/Map.jsx","components/Dashboard/Admin/NewAccounts.jsx","components/Dashboard/Admin/EmpOversite.jsx","components/Dashboard/Admin/DashboardLayout/Widget.jsx"],"names":["module","exports","__webpack_require__","p","tabs","current","content","d","__webpack_exports__","hideSidebar","showSidebar","revenueInActive","revenueOutActive","newCustomerActive","lostCustomerActive","newAccountActive","appointmentActive","marketingActive","empOversiteActive","emailsActive","callsActive","mapActive","_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__","sidebarSlice","createSlice","name","initialState","revenueIn","revenueOut","newCustomer","lostCustomer","newAccount","appointment","marketing","empOversite","emails","calls","map","display","reducers","isDisplay","state","actions","originalItems","initialLayouts","lg","i","x","y","w","h","md","sm","xs","xxs","withSize","refreshMode","refreshRate","_ref","width","size","sidebar","useSelector","dispatch","useDispatch","components","a","b","c","e","f","g","j","k","fnCall","_useState","useState","_useState2","Object","_home_supersis03_Projects_Dextera_Phase_3_dextera_project_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","items","_useState3","key","ls","global","localStorage","JSON","parse","getItem","getFromLS","_useState4","layouts","setLayouts","onRemoveItem","itemId","displayItemList","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","data-grid","Infinity","style","_Widget__WEBPACK_IMPORTED_MODULE_8__","id","backgroundColor","useEffect","Fragment","react_grid_layout__WEBPACK_IMPORTED_MODULE_4__","breakpoints","cols","rowHeight","onLayoutChange","_","allLayouts","profile","msg","status","token","isAuthenticated","isLoading","user","isWeekly","tabSlice","addTab","action","newTask","payload","tab","push","removeTab","filter","item","reset","newTabSlice","addNewTab","removeNewTab","removeLastNewTab","pop","resetNewTab","favoriteSlice","addFav","newFav","page","favorite","length","isAvailable","removeFav","CONFIG","headers","Content-Type","Accept","API_URL","concat","process","getRoleFn","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","RoleId","response","wrap","_context2","prev","next","axios","get","sent","abrupt","data","stop","_x3","apply","this","arguments","roleFnService","goals","isError","isSuccess","message","createGoal","createAsyncThunk","_callee","goalData","thunkAPI","_context","getState","auth","goalService","t0","toString","rejectWithValue","_x","_x2","getGoals","_x4","deleteGoal","_ref3","_callee3","_context3","_x5","_x6","goalSlice","extraReducers","builder","addCase","pending","fulfilled","rejected","goal","_id","permissionService","createpermission","permissionData","getPermissions","deletePermission","delete","updatePermission","_ref4","_callee4","_context4","put","permissions","all","createPermission","permissionSlice","updateIsView","permission","find","is_view","updateIsEdit","is_edit","updateIsCreate","is_create","updateIsDelete","is_delete","updateIsContacts","is_contacts","updateIsTeam","is_team","updateIsOffice","is_office","updateIsRegion","is_region","updateIsAll","value","combineReducers","undefined","type","objectSpread","setItem","removeItem","errors","messages","sidebarReducer","favoriteReducer","tabsReducer","newTabs","newTabsReducer","permissionReducer","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","persistor","persistStore","returnErrors","logout","post","tokenConfig","then","res","config","useToggle","slicedToArray","isToggled","setIsToggled","useCallback","SideBarBtn","styled","Button","theme","fontSize","textTransform","color","textAlign","height","margin","borderColor","padding","&:hover","palette","primary","main","&:visited","SecNavbar","boxShadow","overflow","position","FooterBar","bottom","left","alignContent","FooterLink","Link","fontFamily","fontWeight","textDecoration","marginTop","FooterButton","_ref5","marginX","paddingX","LinkButton","_ref6","borderRadius","cursor","Search","_ref7","marginRight","spacing","marginLeft","SearchIconWrapper","_ref8","pointerEvents","alignItems","justifyContent","StyledInputBase","InputBase","_ref9","& .MuiInputBase-input","defineProperty","paddingLeft","transition","transitions","create","up","MainSearch","_ref10","MainSearchIconWrapper","_ref12","StyledMainInputBase","_ref13","updateIsWeekly","NavbarResponsive","Intl","DateTimeFormat","resolvedOptions","timeZone","Date","currentTime","_useState5","_useState6","dateValue","setDateValue","timeFormater","checked","toLocaleTimeString","hour","minute","hour12","_useToggle","_useToggle2","_useState7","_useState8","settingAcnchorEl","_useState9","Boolean","_useState10","_React$useState","React","_React$useState2","anchorEl","_React$useState3","_React$useState4","setChecked","handleChange","event","target","handleOnChage","_useState11","_useState12","openDrawer","setOpenDrawer","react_default","react","Typography","noWrap","component","sx","react_router_dom","to","src","Logo","alt","variant","Switch","onChange","inputProps","aria-label","transform","IconButton","float","onClick","Menu_default","Drawer","anchor","open","onClose","List","ListItemButton","ListItemIcon","Search_default","placeholder","Select","labelId","label","MenuItem","LocalizationProvider","dateAdapter","AdapterDateFns","DateRangePicker","startText","endText","newValue","renderInput","startProps","endProps","TextField","Box","mx","react_number_format_es","displayType","thousandSeparator","prefix","Navbar","isTabletOrMobile","useMediaQuery","query","redirect","flexGrow","AppBar","border","Toolbar","Navbars_NavbarResponsive","ml","mr","react_router","ChatHistory","Chip","avatar","Avatar","Chatting","Chat_ChatHistory","& .MuiTextField-root","m","endIcon","Send_default","Calender","setValue","tasks","Paper","Grid","container","StaticDatePicker","orientation","openTo","shouldDisableDate","isWeekend","params","task","ViewTasks","Divider","my","Favorites","ListItem","disablePadding","Star","ListItemText","NavBarSecResponsive","openFav","setOpenFav","handleCloseFav","openCal","setOpenCal","handleCloseCal","openChat","setOpenChat","handleCloseChat","useHistory","username","is_firm","is_lawyer","is_client","setLocalUser","setRedirect","_useState13","_useState14","setSettingAcnchorEl","_useState15","_useState16","settingAcnchorEl2","setSettingAcnchorEl2","openSetting2","openSetting","handleClose2","handleClose","_useState17","_useState18","anchorOrigin","vertical","horizontal","Message","Dialog","Validate","aria-labelledby","aria-describedby","right","DialogTitle","DialogContent","Chat","DialogActions","pathname","EmailRounded","CalendarToday","maxWidth","fullWidth","Dashboard_Calender","aria-controls","aria-expanded","aria-haspopup","currentTarget","CheckBox","Menu_Menu","MenuListProps","TransitionComponent","Fade","Favorite_Favorites","autoFocus","Settings","console","log","NotificationAdd","NavbarSec","handleLogout","handleClick","DrawerComp_NavBarSecResponsive","Person","Controls","px","AddCircle","Receipt","FileCopy","MoneyOff","esm_Task","Work","AssignmentTurnedIn","Marketing","Mail","HumanResources","Group","RevenueControls","AccountControls","EmployeeOversite","Phone","accordionData","tiles","TestingSidebar_Controls","TestingSidebar_HumanResources","TestingSidebar_RevenueControls","TestingSidebar_AccountControls","TestingSidebar_Marketing","TestingSidebar_EmployeeOversite","TestingSidebar","accordions","updateAccordions","mt","react_beautiful_dnd_esm","onDragEnd","result","destination","Array","from","_items$splice","splice","source","index","reorderedItem","droppableId","provided","assign","droppableProps","ref","innerRef","draggableId","Accordion","draggableProps","dragHandleProps","AccordionSummary","expandIcon","ExpandMore_default","align","AccordionDetails","connect","Stack","elevation","overflowY","Sidebar_TestingSidebar","Footer","setOpen","handleClickOpen","InnerLayout","children","_useSelector","isDesktopOrLaptop","useTheme","isBigScreen","sidebarToggle","drawerOpen","setDrawerOpen","openPopover","handleSidebarToggle","descriptionElementRef","useRef","descriptionElement","focus","contianer","rowSpacing","columnSpacing","Navbars_NavbarSec","Navbars_Navbar","direction","components_Sidebar_Sidebar","top","components_Footer_Footer","Fab","zIndex","Report","esm_Chat","Popover","transformOrigin","PrivateRoutes","rest","objectWithoutProperties","active","UserContext","createContext","UserProvider","_React$useReducer","useReducer","_React$useReducer2","Provider","createTheme","mode","error","warning","success","contrastThreshold","tonalOffset","typography","htmlFontSize","DashBoard","DashboardContent","Tabs","props","activeTab","setActiveTab","styles","startIcon","MoreVert","newActiveTab","preventDefault","one","CreateInvoice","approvel","setApprovel","matter","contact","billable","date_range","create_date","due_date","template","invoice_no","discount","submit","invoiceData","setInvoiceData","dateRange","setDateRange","onSubmit","autoComplete","FormControlLabel","control","Checkbox","varient","LocalizationProvider_LocalizationProvider","DateRangePicker_DateRangePicker","calendars","InputLabelProps","shrink","TableContainer","Table","TableHead","TableRow","TableCell","PaymentPlan","payment_no","due","amount","late_fee","total_due","payment","posted","method","paymentData","mb","TableBody","paddingInline","InvoicePayment","tax","interest","time","hard","soft","total","Payment","isPlan","setIsPlan","payment_type","date","retainer","menu","bank_account","payment_method","FormControl","RadioGroup","row","defaultValue","Radio","InputLabel","Payment_PaymentPlan","Payment_InvoicePayment","Filters","invoiceToggle","setInvoiceToggle","_useToggle3","_useToggle4","paymentToggle","setPaymentToggle","_useToggle5","_useToggle6","paid","setPaid","age","setAge","& .MuiFormControl-root","DialogContentText","Invoice_CreateInvoice","Invoice_Payment","styles_Search","styles_SearchIconWrapper","styles_StyledInputBase","InvoiceList","Invoice_Filters","Index","Invoice_InvoiceList","ActionAlerts","Alert","severity","TotalDays","date1","date2","dt1","dt2","Math","floor","UTC","getFullYear","getMonth","getDate","GetDate","MatterList","setTasks","setStatus","setLoading","redTask","setRedTask","greenTask","setGreenTask","yellowTask","setYellowTask","myTask","setMyTask","statusText","catch","err","FormGroup","Cards","Card","minWidth","CardContent","gutterBottom","Calendar","Box_Box","MatterCards","bgcolor","MatterListLong","setMatters","NewMatter","mask","openDate","setOpenDate","whenDate","setWhenDate","closeDate","setCloseDate","totalDays","setTotalDays","matter_name","matter_type","matter_source","matter_status","assign_to","assign_by","billing_rate","alerts","jurisdiction","status_limitaion","opposing_counsel","where","involved","witnesses","narrative","matterData","setMatterData","days","open_date","close_date","when","total_days","body","stringify","ActionAlerts_ActionAlerts","min","disabled","step","DatePicker","inputFormat","multiline","rows","Save_default","MatterTask","Activities","MatterDetail","MatterDetail_Activities","MatterDetail_MatterTask","MatterDetail_Cards","Matters","Matter_Filters","Matter_MatterCards","Matter_MatterListLong","MatterDashboard","Matter_MatterList","Matter_Calendar","Matter_Cards","components_Tabs_Tabs","Matter_MatterDashboard","Matter_Matters","Matter_NewMatter","Matter_MatterDetail","LedgerActivity","setActivityData","bgColor","Fillters","billedby","setBilledby","setFilter","LedgerCards","decimalScale","fixedDecimalScale","LedgerTImeList","setLedgerData","LegderDashbard","Ledger_LedgerCards","Ledger_Fillters","Ledger_LedgerTImeList","LedgerDoc","minHeight","Time","pickDate","setPickDate","timeToggle","setTimeToggle","setBillable","setTime","category","sub_category","unit","qty","rate","file","detail","bill_by","note","timeData","setTimeData","labelPlacement","FormLabel","format","customInput","onValueChange","LedgerDashbard","Ledger_LedgerActivity","Ledger_LedgerDoc","Ledger_Time","SubCategory","subCategory","setSubCategory","loading","formData","setFormData","FetchData","handleSubmit","required","Clear_default","Category","setCategory","setError","Classification","classification","setClassification","ManageCategory","components_Category_Category","Category_SubCategory","Category_Classification","Contact","_React$createElement","_React$createElement2","_React$createElement3","_React$createElement4","clientNo","setClientNo","dob","setDob","ssn","setSsn","mobileNo","setMobileNo","homeNo","setHomeNo","officeNo","setOfficeNo","faxNo","setFaxNo","otherNo","setOtherNo","zip","setZip","_useState19","_useState20","plus4","setPlus4","_useState21","_useState22","zip2","setZip2","_useState23","_useState24","plus42","setPlus42","_useState25","company_name","website","ger_email","billing_email","street","suite","city","f_name","l_name","email_1","email_2","email_3","street2","suite2","city2","state2","office","team","member","relation","_useState26","contactData","setContactData","persist","thousandsGroupStyle","autoWidth","gradYear","setGradYear","barDate","setBarDate","underGradYear","setUnderGradYear","phoneNo","setPhoneNo","barNo","setBarNo","practiceTime","setPracticeTime","longestTenure","setLongestTenure","averageTenure","setAverageTenure","currentTenure","setCurrentTenure","email","mobile","phone","language","locate","search_active","law_school","grad_year","bar_admit_date","undergrad_school","undergrad_area","undergrad_year","bar_no","admitted_practice","practice_time","longest_tenure","average_tenure","current_tenure","past_bar_companies_no","primary_area","TabContext","patch","borderBottom","TabList","Tab","TabPanel","defaultChecked","KeyboardArrowRight_default","CreateTask","dueDate","setDueDate","bill","setBill","isPrivate","setIsPrivate","setFile","matter_id","matter_contact","filename","taskData","setTaskData","& .MuiSelect-root","due_at","is_billable","is_private","Tasks_ViewTasks","Tasks_CreateTask","Invoice","Matter","Ledger","Category_ManageCategory","components_Contact_Contact","components_Profile_Profile","Tasks","invoice","ledger","AdminDashboard","tabList","newTabList","wordEntered","setWordEntered","handleChangeSearch","addSearchTab","setTimeout","displayNewTabsName","handleRemoveNewTab","Close_default","displayTabsName","handleRemoveTab","displaySearchTabs","noValidate"," & .MuiOutlinedInput-notchedOutline","renderTabs","Tabs_Tabs","scrollButtons","allowScrollButtonsMobilearia-label","icon","iconPosition","Add_default","Admin_DashBoard","ProgressBar","progress","paddingRight","LinearProgress","randomDate","start","end","getDateTime","getTime","random","toLocaleDateString","getHours","getMinutes","Task","LawyerCards","postfix","FirmCards","CustomerCards","Cards_CustomerCards","Dashboard_Tasks","Dashboard_ProgressBar","Templates","ClientDashboard","Client_DashBoard","Template_Templates","PieChart","series","options","chart","plotOptions","pie","donut","dataLabels","enabled","formatter","val","title","text","horizontalAlign","colors","labels","legend","show","dropShadow","useSeriesColors","onItemClick","toggleDataSeries","seriesName","opts","globals","seriesIndex","react_apexcharts_min_default","Chart2","radialBar","startAngle","endAngle","track","background","hollow","fill","gradient","shade","gradientToColors","stops","BarChart","stacked","bar","stroke","xaxis","categories","yaxis","tooltip","opacity","offsetX","Cards_LawyerCards","Chart_PieChart","Chart_Chart2","Chart_BarChart","LawyerDashboard","Lawyer_DashBoard","Chart","BarChart2","columnWidth","distributed","BarChart3","barHeight","textAnchor","opt","dataPointIndex","floating","Cards_FirmCards","Charts_Chart2","Charts_Chart","Charts_BarChart","Charts_BarChart2","Charts_BarChart3","FirmDashboard","Firm_DashBoard","Dashboard","UserRoles_AdminDashboard","UserRoles_FirmDashboard","UserRoles_LawyerDashboard","UserRoles_ClientDashboard","dashboardRedirect","login","password","LoginSuccess","backgroundImage","BackgroundImage","backgroundRepeat","t","grey","backgroundSize","backgroundPosition","square","flexDirection","LockOutlined_default","minLength","register","accountCreated","setAccountCreated","isFirm","setIsFirm","first_name","last_name","re_password","Company","m_name","c_email","role","time_zone","group","job_title","ext","home","work_no","phone_ext","userData","setUserData","p_email","& .MuiButton-root","User","usersData","setUsersData","isActive","setIsActive","searchItem","setSearchItem","roles","setRoles","setRole","setGroup","groups","setGroups","loading2","setLoading2","rate_type","toLowerCase","body1","body2","axiosReguest1","axiosReguest2","input::-webkit-outer-spin-button","webkitAappearance","select","includes","is_active","last_login","ManageUserGroup","loadingUser","setLoadingUser","ManageRole","allValue","setAllValue","_useSelector2","updateData","setUpdateData","overflowX","&MuiTableCell","Rectangle_default","ManageUser","TimeList","practice_area","undergrad_study","lamguages","admitted_state","relocate","searchData","setSearchData","Result","Saved","pickTime","setPickTime","bar_adm_year","mail_add","link","notes","jobData","setJobData","TimePicker","Employee_Search","Employee_Result","Employee_Saved","App","es","integration_react","User_UserProvider","ThemeProvider","react_alert","AlertTemplate","timeout","Layout","path","Login","Signup","PrivateRoute","exact","Home","Profile","Employee","ReactDOM","render","StrictMode","CssBaseline","src_App","document","getElementById","Appointments","fillColor","strokeColor","toolbar","onItemHover","highlightDataSeries","curve","Calls","lable","Email","listStyleType","mapboxgl","workerClass","MapboxWorker","Map","latitude","longitude","zoom","viewport","setViewport","esm","mapStyle","MAP_STYLE","onViewportChange","mapboxApiAccessToken","offsetLeft","offsetTop","Circle","NewAccounts","EmpOversite","Widget","widgetNames","RevenueIn","RevenueOut","NewCustomer","LostCustomer","Admin_NewAccounts","Admin_Map","Admin_EmpOversite","Charts_Calls","Charts_Appointments","Charts_Marketing","Charts_Email","paddingTop","CardActions"],"mappings":"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","file":"static/js/main.09b97178.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white copy.aa470428.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"tabs_tabs__2iP2q\",\"current\":\"tabs_current__UH0Eq\",\"content\":\"tabs_content__Vh0J0\"};","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  revenueIn: true,\n  revenueOut: true,\n  newCustomer: true,\n  lostCustomer: true,\n  newAccount: true,\n  appointment: true,\n  marketing: true,\n  empOversite: true,\n  emails: true,\n  calls: true,\n  map: true,\n  display: true,\n};\n\nconst sidebarSlice = createSlice({\n  name: \"sidebar\",\n  initialState,\n  reducers: {\n    isDisplay: (state) => {\n      state.display = !state.display;\n    },\n    hideSidebar: (state) => {\n      state.display = false;\n    },\n    showSidebar: (state) => {\n      state.display = true;\n    },\n    // manageRoleActive: (state) => {\n    //   state.manageRole = !state.manageRole;\n    // },\n    // manageUserActive: (state) => {\n    //   state.manageUser = !state.manageUser;\n    // },\n    // manageGroupActive: (state) => {\n    //   state.manageGroup = !state.manageGroup;\n    // },\n    revenueInActive: (state) => {\n      state.revenueIn = !state.revenueIn;\n    },\n    revenueOutActive: (state) => {\n      state.revenueOut = !state.revenueOut;\n    },\n    newCustomerActive: (state) => {\n      state.newCustomer = !state.newCustomer;\n    },\n    lostCustomerActive: (state) => {\n      state.lostCustomer = !state.lostCustomer;\n    },\n    newAccountActive: (state) => {\n      state.newAccount = !state.newAccount;\n    },\n    appointmentActive: (state) => {\n      state.appointment = !state.appointment;\n    },\n    marketingActive: (state) => {\n      state.marketing = !state.marketing;\n    },\n    empOversiteActive: (state) => {\n      state.empOversite = !state.empOversite;\n    },\n    emailsActive: (state) => {\n      state.emails = !state.emails;\n    },\n    callsActive: (state) => {\n      state.calls = !state.calls;\n    },\n    mapActive: (state) => {\n      state.map = !state.map;\n    },\n  },\n});\n\nexport const {\n  isDisplay,\n  // manageRoleActive,\n  // manageGroupActive,\n  // manageUserActive,\n  hideSidebar,\n  showSidebar,\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} = sidebarSlice.actions;\nexport default sidebarSlice.reducer;\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { Responsive as ResponsiveGridLayout } from \"react-grid-layout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withSize } from \"react-sizeme\";\n\nimport {\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} from \"../../../../redux/features/sidebarSlice\";\n\nimport Widget from \"./Widget\";\n\nconst originalItems = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\"];\n\nconst initialLayouts = {\n  lg: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  md: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  sm: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  xs: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 3 },\n    { i: \"b\", x: 0, y: 4, w: 2, h: 3 },\n    { i: \"c\", x: 0, y: 8, w: 4, h: 6 },\n    { i: \"d\", x: 0, y: 12, w: 4, h: 6 },\n\n    { i: \"e\", x: 0, y: 18, w: 5, h: 6 },\n    { i: \"f\", x: 0, y: 24, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 30, w: 3, h: 4 },\n    { i: \"h\", x: 0, y: 36, w: 3, h: 4 },\n    { i: \"i\", x: 0, y: 42, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 48, w: 8, h: 5 },\n    { i: \"k\", x: 0, y: 53, w: 4, h: 5 },\n  ],\n  xxs: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 3 },\n    { i: \"b\", x: 0, y: 4, w: 2, h: 3 },\n    { i: \"c\", x: 0, y: 8, w: 4, h: 6 },\n    { i: \"d\", x: 0, y: 12, w: 4, h: 6 },\n\n    { i: \"e\", x: 0, y: 18, w: 5, h: 6 },\n    { i: \"f\", x: 0, y: 24, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 30, w: 3, h: 4 },\n    { i: \"h\", x: 0, y: 36, w: 3, h: 4 },\n    { i: \"i\", x: 0, y: 42, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 48, w: 8, h: 5 },\n    { i: \"k\", x: 0, y: 53, w: 4, h: 4 },\n  ],\n};\n\nfunction Content({ size: { width } }) {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  const components = {\n    a: sidebar.revenueIn,\n    b: sidebar.revenueOut,\n    c: sidebar.newCustomer,\n    d: sidebar.lostCustomer,\n    e: sidebar.newAccount,\n    f: sidebar.map,\n    g: sidebar.empOversite,\n    h: sidebar.calls,\n    i: sidebar.appointment,\n    j: sidebar.marketing,\n    k: sidebar.emails,\n  };\n  const fnCall = {\n    a: revenueInActive(),\n    b: revenueOutActive(),\n    c: newCustomerActive(),\n    d: lostCustomerActive(),\n    e: newAccountActive(),\n    f: mapActive(),\n    g: empOversiteActive(),\n    h: callsActive(),\n    i: appointmentActive(),\n    j: marketingActive(),\n    k: emailsActive(),\n  };\n  const [items, setItems] = useState(originalItems);\n  const [layouts, setLayouts] = useState(\n    getFromLS(\"layouts\") || initialLayouts,\n  );\n  const onLayoutChange = (_, allLayouts) => {\n    setLayouts(allLayouts);\n  };\n  const onLayoutSave = () => {\n    saveToLS(\"layouts\", layouts);\n  };\n  const onRemoveItem = (itemId) => {\n    // setItems(items.filter((i) => i !== itemId));\n    dispatch(fnCall[itemId]);\n  };\n  const onAddItem = (itemId) => {\n    setItems([...items, itemId]);\n    dispatch(fnCall[itemId]);\n  };\n  const displayItemList = () => {\n    return items.map((key) => (\n      <div\n        key={key}\n        className=\"widget\"\n        data-grid={{ w: 3, h: 2, x: 0, y: Infinity }}\n        style={components[key] ? { display: \"block\" } : { display: \"none\" }}\n      >\n        <Widget\n          id={key}\n          onRemoveItem={onRemoveItem}\n          backgroundColor=\"#867ae9\"\n        />\n      </div>\n    ));\n  };\n  useEffect(() => {\n    displayItemList();\n  }, [sidebar]);\n\n  return (\n    <>\n      <ResponsiveGridLayout\n        className=\"layout\"\n        layouts={layouts}\n        breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n        cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n        rowHeight={60}\n        width={width}\n        onLayoutChange={onLayoutChange}\n      >\n        {displayItemList()}\n      </ResponsiveGridLayout>\n    </>\n  );\n}\n\nexport default withSize({ refreshMode: \"debounce\", refreshRate: 60 })(Content);\n\nfunction getFromLS(key) {\n  let ls = {};\n  if (global.localStorage) {\n    try {\n      ls = JSON.parse(global.localStorage.getItem(\"rgl-8\")) || {};\n    } catch (e) {}\n  }\n  return ls[key];\n}\n\nfunction saveToLS(key, value) {\n  if (global.localStorage) {\n    global.localStorage.setItem(\n      \"rgl-8\",\n      JSON.stringify({\n        [key]: value,\n      }),\n    );\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/login_light.a12d3677.png\";","module.exports = __webpack_public_path__ + \"static/media/signup_light.181ee8a6.png\";","/** @format */\n\nimport { GET_PROFILE } from \"../actions/types\";\n\nconst initialState = {\n  profile: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {\n  msg: {},\n  status: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { CREATE_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case CREATE_MESSAGE:\n      return (state = action.payload);\n\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload,\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport {\n  GET_IS_WEEKLY,\n  MONTLY_REVENUE,\n  WEEKLY_REVENUE,\n} from \"../actions/types\";\n\nconst initialState = {\n  isWeekly: \"daily\",\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_IS_WEEKLY:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case MONTLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case WEEKLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst tabSlice = createSlice({\n  name: \"tab\",\n  initialState: initialState,\n  reducers: {\n    addTab: (state, action) => {\n      const newTask = {\n        id: action.payload.id,\n        name: action.payload.tab,\n      };\n      state.push(newTask);\n    },\n    removeTab: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n    reset: (state) => initialState,\n  },\n});\n\nexport const { addTab, removeTab, reset } = tabSlice.actions;\nexport default tabSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst newTabSlice = createSlice({\n  name: \"tab\",\n  initialState: initialState,\n  reducers: {\n    addNewTab: (state, action) => {\n      state.push({\n        id: action.payload.id,\n        name: action.payload.name,\n      });\n    },\n    removeNewTab: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n\n    removeLastNewTab: (state) => {\n      state.pop();\n    },\n    resetNewTab: (state) => initialState,\n  },\n});\n\nexport const {\n  addNewTab,\n  removeNewTab,\n  resetNewTab,\n  removeLastNewTab,\n} = newTabSlice.actions;\nexport default newTabSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  favorite: {},\n  isAvailable: true,\n};\n\nconst favoriteSlice = createSlice({\n  name: \"favorite\",\n  initialState: [],\n  reducers: {\n    addFav: (state, action) => {\n      const newFav = {\n        id: action.payload.id,\n        name: action.payload.name,\n        page: action.payload.page,\n      };\n      if (state.favorite.length < 10) {\n        state.favorite.push(newFav);\n      } else state.isAvailable = false;\n    },\n\n    removeFav: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n  },\n});\n\nexport const { addFav, removeFav } = favoriteSlice.actions;\nexport default favoriteSlice.reducer;\n","/** @format */\n\n// import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport const CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nexport const CreateMatter = (\n  contact,\n  matter_name,\n  matter_type,\n  matter_source,\n  matter_status,\n  assign_to,\n  assign_by,\n  billing_rate,\n  alerts,\n  open_date,\n  close_date,\n  total_days,\n  jurisdiction,\n  status_limitaion,\n  opposing_counsel,\n  where,\n  when,\n  involved,\n  witnesses,\n  narrative,\n) => {\n  let status = \"\";\n  const body = JSON.stringify({\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n    open_date,\n    close_date,\n    total_days,\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    when,\n    involved,\n    witnesses,\n    narrative,\n  });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n    .then((res) => {\n      status = res.statusText;\n    })\n    .catch((err) => {\n      status = err.message;\n    });\n\n  return status;\n};\n\nexport const retrive_matter = () => {};\n","import axios from 'axios'\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/user/auth/`\n\n// Create new goal\nconst createRole = async (roleData, token) => {\n  // const config = {\n  //   headers: {\n  //     Authorization: `Bearer ${token}`,\n  //   },\n  // }\n\n  const response = await axios.post(API_URL, roleData, CONFIG)\n\n  return response.data\n}\n\n// Get user goals\nconst getRoleFn = async (RoleId) => {\n\n  const response = await axios.get(API_URL + RoleId , CONFIG)\n\n  return response.data\n}\n\n// Delete user goal\nconst deleteGoal = async (goalId, token) => {\n\n  const response = await axios.delete(API_URL + goalId, CONFIG)\n\n  return response.data\n}\n\nconst roleFnService = {\n  // createGoal,\n  getRoleFn,\n  // deleteGoal,\n}\n\nexport default roleFnService","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport goalService from '../services/roleFnService'\n\nconst initialState = {\n  goals: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: '',\n}\n\n// Create new goal\nexport const createGoal = createAsyncThunk(\n  'goals/create',\n  async (goalData, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      return await goalService.createGoal(goalData, token)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// Get user goals\nexport const getGoals = createAsyncThunk(\n  'goals/getAll',\n  async (_, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      return await goalService.getGoals(token)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// Delete user goal\nexport const deleteGoal = createAsyncThunk(\n  'goals/delete',\n  async (id, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      return await goalService.deleteGoal(id, token)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\nexport const goalSlice = createSlice({\n  name: 'goal',\n  initialState,\n  reducers: {\n    reset: (state) => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(createGoal.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(createGoal.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.goals.push(action.payload)\n      })\n      .addCase(createGoal.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n      .addCase(getGoals.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(getGoals.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.goals = action.payload\n      })\n      .addCase(getGoals.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n      .addCase(deleteGoal.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(deleteGoal.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.goals = state.goals.filter(\n          (goal) => goal._id !== action.payload.id\n        )\n      })\n      .addCase(deleteGoal.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n  },\n})\n\nexport const { reset } = goalSlice.actions\nexport default goalSlice.reducer","import axios from 'axios'\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/user/auth/role-permissions/`\n// Create new permission\nconst createpermission = async (permissionData, token) => {\n//   const config = {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//     },\n//   }\n\n//   const response = await axios.post(API_URL, permissionData, config)\n\n//   return response.data\n}\n\n// Get user permissions\nconst getPermissions = async (id) => {\n\n  const response = await axios.get(`${process.env.REACT_APP_API_URL}/user/auth/role-permissions/${id}/`, CONFIG)\n\n  return response.data\n}\n\n// Delete user permission\nconst deletePermission = async (id) => {\n\n  const response = await axios.delete(`${process.env.REACT_APP_API_URL}/user/auth/role-permissions/${id}/`, CONFIG)\n\n  return response.data\n}\nconst updatePermission = async (data) => {\n\n  const response = await axios.put(`${process.env.REACT_APP_API_URL}/user/auth/permissions/${data.id}/`, CONFIG)\n\n  return response.data\n}\n\nconst permissionService = {\n  createpermission,\n  getPermissions,\n  deletePermission,\n  updatePermission\n}\n\nexport default permissionService","/** @format */\n\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport permissionService from \"../services/permissionService\";\n\nconst initialState = {\n\tpermissions: [],\n\tisError: false,\n\tisSuccess: false,\n\tisLoading: false,\n\tmessage: \"\",\n\tall: false,\n};\n\n// Create new permissions\nexport const createPermission = createAsyncThunk(\n\t\"permissions/create\",\n\tasync (permissionData, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.createPermission(permissionData);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\n// Get user permissions\nexport const getPermissions = createAsyncThunk(\n\t\"permissions/getAll\",\n\tasync (id, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.getPermissions(id);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\n// Delete user permission\nexport const deletePermission = createAsyncThunk(\n\t\"permissions/delete\",\n\tasync (id, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.deletePermission(id);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\nexport const permissionSlice = createSlice({\n\tname: \"permission\",\n\tinitialState,\n\treducers: {\n\t\treset: (state) => initialState,\n\t\tupdateIsView: (state, action) => {\n\t\t\tconst permission = state.permissions.permissions.find(\n\t\t\t\t(item) => item.id === action.payload,\n\t\t\t);\n\t\t\tif (permission) {\n\t\t\t\tpermission.is_view = !permission.is_view;\n\t\t\t}\n\t\t},\n\t\tupdateIsEdit: (state, action) => {\n\t\t\tconst permission = state.permissions.permissions.find(\n\t\t\t\t(item) => item.id === action.payload,\n\t\t\t);\n\t\t\tif (permission) {\n\t\t\t\tpermission.is_edit = !permission.is_edit;\n\t\t\t}\n\t\t},\n\t\tupdateIsCreate: (state, action) => {\n\t\t\tconst permission = state.permissions.permissions.find(\n\t\t\t\t(item) => item.id === action.payload,\n\t\t\t);\n\t\t\tif (permission) {\n\t\t\t\tpermission.is_create = !permission.is_create;\n\t\t\t}\n\t\t},\n\t\tupdateIsDelete: (state, action) => {\n\t\t\tconst permission = state.permissions.permissions.find(\n\t\t\t\t(item) => item.id === action.payload,\n\t\t\t);\n\t\t\tif (permission) {\n\t\t\t\tpermission.is_delete = !permission.is_delete;\n\t\t\t}\n\t\t},\n\t\tupdateIsContacts: (state, action) => {\n\t\t\tconst permission = state.permissions.permissions.find(\n\t\t\t\t(item) => item.id === action.payload,\n\t\t\t);\n\t\t\tif (permission) {\n\t\t\t\tpermission.is_contacts = !permission.is_contacts;\n\t\t\t}\n\t\t},\n\t\tupdateIsTeam: (state, action) => {\n\t\t\tconst permission = state.permissions.permissions.find(\n\t\t\t\t(item) => item.id === action.payload,\n\t\t\t);\n\t\t\tif (permission) {\n\t\t\t\tpermission.is_team = !permission.is_team;\n\t\t\t}\n\t\t},\n\t\tupdateIsOffice: (state, action) => {\n\t\t\tconst permission = state.permissions.permissions.find(\n\t\t\t\t(item) => item.id === action.payload,\n\t\t\t);\n\t\t\tif (permission) {\n\t\t\t\tpermission.is_office = !permission.is_office;\n\t\t\t}\n\t\t},\n\t\tupdateIsRegion: (state, action) => {\n\t\t\tconst permission = state.permissions.permissions.find(\n\t\t\t\t(item) => item.id === action.payload,\n\t\t\t);\n\t\t\tif (permission) {\n\t\t\t\tpermission.is_region = !permission.is_region;\n\t\t\t}\n\t\t},\n\t\tupdateIsAll: (state, action) => {\n\t\t\tconst permission = state.permissions.permissions.find(\n\t\t\t\t(item) => item.id === action.payload.id,\n\t\t\t);\n\t\t\tif (permission) {\n\t\t\t\tpermission.is_contacts = !action.payload.value;\n\t\t\t\tpermission.is_team = !action.payload.value;\n\t\t\t\tpermission.is_office = !action.payload.value;\n\t\t\t\tpermission.is_region = !action.payload.value;\n\t\t\t}\n\t\t},\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder\n\t\t\t.addCase(createPermission.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(createPermission.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions.push(action.payload);\n\t\t\t})\n\t\t\t.addCase(createPermission.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(getPermissions.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(getPermissions.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions = action.payload;\n\t\t\t})\n\t\t\t.addCase(getPermissions.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(deletePermission.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(deletePermission.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions = state.permissions.filter(\n\t\t\t\t\t(permission) => permission._id !== action.payload.id,\n\t\t\t\t);\n\t\t\t})\n\t\t\t.addCase(deletePermission.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t});\n\t},\n});\n\nexport const {\n\treset,\n\tupdateIsView,\n\tupdateIsEdit,\n\tupdateIsCreate,\n\tupdateIsDelete,\n\tupdateIsContacts,\n\tupdateIsTeam,\n\tupdateIsOffice,\n\tupdateIsRegion,\n\tupdateIsAll,\n} = permissionSlice.actions;\nexport default permissionSlice.reducer;\n","/** @format */\n\nimport { combineReducers } from \"redux\";\n// import leads from \"./leads\";\nimport profile from \"./profile\";\nimport errors from \"./errors\";\nimport messages from \"./messages\";\nimport auth from \"./auth\";\nimport data from \"./data\";\nimport sidebarReducer from \"../redux/features/sidebarSlice\";\nimport tabsReducer from \"../redux/features/tabSlice\";\nimport newTabsReducer from \"../redux/features/searchTabSlice\";\nimport favoriteReducer from \"../redux/features/favoriteSlice\";\nimport rolefnsReducer from \"../redux/features/roleFnSlice\";\nimport permissionReducer from \"../redux/features/permissionSlice\"\n// import auth from \"../redux/features/authSlice\"\n\nexport default combineReducers({\n  auth,\n  profile,\n  errors,\n  messages,\n  data,\n  sidebar: sidebarReducer,\n  favorite: favoriteReducer ,\n  tabs: tabsReducer,\n  newTabs: newTabsReducer,\n  permissions: permissionReducer, \n});\n","/** @format */\n\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const DELETE_PROFILE = \"DELETE_PROFILE\";\nexport const ADD_PROFILE = \"ADD_PROFILE\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const CLEAR_PROFILES = \"CLEAR_PROFILES\";\nexport const MONTLY_REVENUE = \"GET_MONTLY_REVENUE\";\nexport const WEEKLY_REVENUE = \"GET_WEEKLY_REVENUE\";\nexport const GET_IS_WEEKLY = \"GET_IS_WEEKLY\";\nexport const UPDATE_IS_WEEKLY = \"UPDATE_IS_WEEKLY\";\n\nexport const CREATE_MEMBER_SUCCESS = \"CREATE_MEMBER_SUCCESS\";\nexport const CREATE_MEMBER_FAIL = \"CREATE_MEMBER_FAIL\";\n\nexport const GET_MEMBER_SUCCESS = \"GET_MEMBER_SUCCESS\";\nexport const GET_MEMBER_FAIL = \"GET_MEMBER_FAIL\";\n\nexport const GET_TIMEZONE_SUCCESS = \"GET_TIMEZONE_SUCCESS\";\nexport const GET_TIMEZONE_FAIL = \"GET_TIMEZONE_FAIL\";\nexport const GET_CURRENT_TIME_SCUSSESS = \"GET_CURRENT_TIME_SCUSSESS\";\nexport const GET_CURRENT_TIME_FAIL = \"GET_CURRENT_TIME_FAIL\";\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\n// export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\n// export const SIGNUP_FAIL = 'SIGNUP_FAIL';\n// export const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\n// export const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\n// export const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\n// export const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\n// export const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\n// export const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\n// export const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\n// export const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\n// export const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\n// export const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\n// export const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\n// export const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\n// export const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\n// export const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\n// export const LOGOUT = 'LOGOUT';\n\n// export const PROFILE_CREATED_SUCCESS = 'PROFILE_CREATED_SUCCESS';\n// export const PROFILE_CREATED_FAIL = 'PROFILE_CREATED_FAIL';\n\n// export const PROFILE_LOADED_SUCCESS = 'PROFILE_LOADED_SUCCESS';\n// export const PROFILE_LOADED_FAIL = 'PROFILE_LOADED_FAIL';\n\n// export const PROFILE_UPDATE_SUCCESS = 'PROFILE_UPDATE_SUCCESS';\n// export const PROFILE_UPDATE_FAIL = 'PROFILE_UPDATE_FAIL';\n","/** @format */\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./reducers\";\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({ reducer: persistedReducer,});\n\nexport const persistor = persistStore(store);\n\nexport default store;\n","/** @format */\n\nimport { CREATE_MESSAGE, GET_ERRORS } from \"./types\";\n\n// CREATE MESSAGE\nexport const createMessage = (msg) => {\n  return {\n    type: CREATE_MESSAGE,\n    payload: msg,\n  };\n};\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status },\n  };\n};\n","/** @format */\n\nimport axios from \"axios\";\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from \"./types\";\nimport { createMessage, returnErrors } from \"./messages\";\nimport { useSelector } from \"react-redux\";\nimport { reset } from \"../redux/features/tabSlice\";\nimport { resetNewTab } from \"../redux/features/searchTabSlice\";\n\n// CHECK TOKEN & LOAD USER\nexport const loadUser = () => (dispatch, getState) => {\n  // User Loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get(\n      `${process.env.REACT_APP_API_URL}/user/auth/user`,\n      tokenConfig(getState),\n    )\n    .then((res) => {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data.message, err.response.status));\n      dispatch({\n        type: AUTH_ERROR,\n      });\n    });\n};\n\n// LOGIN USER\nexport const login = (username, email, password) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ username, password });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/user/auth/login`, body, config)\n    .then(function(response) {\n      console.log(response);\n      dispatch(createMessage({ LoginSuccess: \"Login Successful\" }));\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: response.data,\n      });\n    })\n    .catch(function(error) {\n      dispatch(returnErrors(error.response.data, error.response.status));\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n      console.log(error);\n    });\n};\n\n// REGISTER USER\nexport const register = ({ username, email, password }) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ username, email, password });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/user/auth/register`, body, config)\n    .then((res) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n    });\n};\n\n// LOGOUT USER\nexport const logout = () => (dispatch, getState) => {\n  axios\n    .post(\n      `${process.env.REACT_APP_API_URL}/user/auth/logout`,\n      null,\n      tokenConfig(getState),\n    )\n    .then((res) => {\n      localStorage.removeItem(\"token\");\n      dispatch(reset());\n      dispatch(resetNewTab());\n      dispatch({\n        type: LOGOUT_SUCCESS,\n      });\n    });\n};\n\n// Setup config with token - helper function\nexport const tokenConfig = (getState) => {\n  // const token = useSelector((state) => state.auth.token);\n  // Get token from state\n  const token = getState().auth.token;\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // If token, add to headers config\n  if (token) {\n    config.headers[\"Authorization\"] = `Token ${token}`;\n  }\n\n  return config;\n};\n","/** @format */\n\nimport { useState, useCallback } from \"react\";\n\nexport const useToggle = (initialState) => {\n  const [isToggled, setIsToggled] = useState(initialState);\n\n  // put [setIsToggled] into the useCallback's dependencies array\n  // this value never changes so the callback is not going to be ever re-created\n  const toggle = useCallback(\n    () => setIsToggled((state) => !state),\n    [setIsToggled],\n  );\n\n  return [isToggled, toggle];\n};\n","/** @format */\n\n// import * as React from 'react';\nimport { styled } from \"@mui/material/styles\";\nimport { Link } from \"react-router-dom\";\nimport { Button, InputBase } from \"@mui/material\";\n\nexport const SideBarBtn = styled(Button)(({ theme }) => ({\n  fontSize: \"0.6em\",\n  textTransform: \"none\",\n  // color: theme.palette.primary.main,\n  color: \"#eee\",\n  textAlign: \"center\",\n  width: \"8em\",\n  height: \"8em\",\n  margin: \"0.7em\",\n  borderColor: \"#eee\",\n  padding: \"1em\",\n  \"&:hover\": {\n    backgroundColor: \"white\",\n    color: theme.palette.primary.main,\n  },\n  \"&:visited\": {\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport const SecNavbar = styled(\"nav\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  overflow: \"hidden\",\n  color: \"#eee\",\n  position: \"reletive\",\n  padding: \"0\",\n  margin: \"0\",\n  height: \"3.5rem\",\n  width: \"100%\",\n}));\n\nexport const FooterBar = styled(\"footer\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  color: \"#eee\",\n  position: \"fixed\",\n  bottom: \"0\",\n  left: \"0\",\n\n  margin: \"0\",\n  height: \"2.5rem\",\n  textAlign: \"center\",\n  alignContent: \"center\",\n  width: \"100%\",\n}));\n\nexport const FooterLink = styled(Link)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  fontSize: \"1rem\",\n  textTransform: \"uppercase\",\n  fontWeight: 500,\n  textDecoration: \"none\",\n  marginTop: \"0.7rem\",\n  padding: \" 2rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\nexport const FooterButton = styled(Button)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  fontSize: \"1rem\",\n  fontWeight: 500,\n  marginX: \"2rem\",\n  paddingX: \"3rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\n\nexport const LinkButton = styled(Link)(({ theme }) => ({\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  margin: \"0.7em\",\n  backgroundColor: theme.palette.primary.main,\n  borderColor: \"#2979ff\",\n  color: \"white\",\n  padding: \"0.65rem 1.2rem\",\n  borderRadius: \"0.5rem\",\n  \"&:hover\": {\n    backgroundColor: \"#1c54b2\",\n    cursor: \"pointer\",\n    color: \"white\",\n  },\n}));\n\nexport const Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#ddd\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"40%\",\n}));\n\nexport const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\nexport const MainSearch = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#eee\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(3),\n    width: \"auto\",\n  },\n}));\n\nexport const MainSearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledMainInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n\n","/** @format */\n\n/** @format */ // import axios from \"axios\";\n\nimport { GET_IS_WEEKLY, MONTLY_REVENUE, WEEKLY_REVENUE } from \"./types\";\n// GET LEADS\nexport const updateIsWeekly = (data) => (dispatch) => {\n  if (data) {\n    dispatch({\n      type: WEEKLY_REVENUE,\n      payload: data,\n    });\n  } else {\n    dispatch({\n      type: MONTLY_REVENUE,\n    });\n  }\n};\n\nexport const getIsWeekly = () => (dispatch) =>\n  dispatch({\n    type: GET_IS_WEEKLY,\n    // payload: this.state,\n  });\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport NumberFormat from \"react-number-format\";\nimport { useToggle } from \"../../context/useToggle\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  ListSubheader,\n  TextField,\n} from \"@mui/material\";\nimport {\n  MainSearch,\n  MainSearchIconWrapper,\n  StyledMainInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Logo from \"../../asserts/logo_white copy.png\";\nimport { updateIsWeekly } from \"../../actions/data\";\nimport {\n  IconButton,\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\n\nconst NavbarResponsive = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const [today, setToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [dateValue, setDateValue] = useState([null, null]);\n\n  const timeFormater = () => {\n    if (checked) {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n    } else {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: false,\n      });\n    }\n  };\n  const [isChecked, setIsChecked] = useToggle(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOnChage = (e) => {\n    dispatch(updateIsWeekly(e.target.value));\n  };\n\n  const logout_user = () => {\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Typography variant=\"h5\" component=\"h5\">\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          color=\"primary\"\n          style={{ marginRight: \"0.5rem\" }}\n        >\n          Expected Balance :\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">\n              Expected Balance\n            </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={isWeekly}\n              label=\"Expected Balance\"\n              onChange={handleOnChage}\n            >\n              <MenuItem value=\"daily\">Daily</MenuItem>\n              <MenuItem value=\"weekly\">Weekly</MenuItem>\n              <MenuItem value=\"monthly\">Monthly</MenuItem>\n              <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n              <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n              <MenuItem value=\"range\">Custom Range</MenuItem>\n              {isWeekly === \"range\" ? (\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              ) : null}\n            </Select>\n          </FormControl>\n        </Typography>\n        <NumberFormat\n          value={isWeekly ? 3254 : 32564}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix=\"$\"\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" ml={1} mr={1}>\n        {\" \"}\n        |{\" \"}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h5\">\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          \n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n    </Fragment>\n  );\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <Typography noWrap component=\"div\" sx={{ display: \"block\" }}>\n        <Link to=\"/\">\n          <img\n            src={Logo}\n            alt=\"logo\"\n            style={{ height: \"2rem\", width: \"auto\" }}\n          />\n        </Link>\n      </Typography>\n      {isAuthenticated ? (\n        <>\n          <Typography variant=\"h5\" component=\"h5\" sx={{ marginLeft: \"1rem\" }}>\n            {timeFormater()}\n            <Switch\n              size=\"small\"\n              \n              checked={checked}\n              onChange={handleChange}\n              inputProps={{ \"aria-label\": \"controlled\" }}\n              sx={{ transform: \"rotate(90deg)\" }}\n            />\n          </Typography>\n          <IconButton\n            sx={{ color: \"#7a4ebf\", float: \"right\" }}\n            onClick={() => setOpenDrawer(!openDrawer)}\n          >\n            <MenuIcon color=\"#7a4ebf\" />\n          </IconButton>\n        </>\n      ) : (\n        guestLinks()\n      )}\n\n      <Drawer\n        anchor=\"right\"\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <MainSearch>\n                <MainSearchIconWrapper>\n                  <SearchIcon />\n                </MainSearchIconWrapper>\n                <StyledMainInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </MainSearch>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <Typography variant=\"h5\" component=\"h5\">\n                <Typography\n                  component=\"span\"\n                  variant=\"h5\"\n                  color=\"primary\"\n                  style={{ marginRight: \"0.5rem\" }}\n                >\n                  Set Interval :\n                  <Select\n                    size=\"small\"\n                    sx={{ marginX: \"1rem\" }}\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={isWeekly}\n                    label=\"Expected Balance\"\n                    onChange={handleOnChage}\n                  >\n                    <MenuItem value=\"daily\">Daily</MenuItem>\n                    <MenuItem value=\"weekly\">Weekly</MenuItem>\n                    <MenuItem value=\"monthly\">Monthly</MenuItem>\n                    <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n                    <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n                    <MenuItem value=\"range\">Custom Range</MenuItem>\n                    {isWeekly === \"range\" ? (\n                      <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DateRangePicker\n                          startText=\"Start Date\"\n                          endText=\"End Date\"\n                          value={dateValue}\n                          onChange={(newValue) => {\n                            setDateValue(newValue);\n                          }}\n                          renderInput={(startProps, endProps) => (\n                            <Fragment>\n                              <TextField {...startProps} />\n                              <Box sx={{ mx: 2 }}> to </Box>\n                              <TextField {...endProps} />\n                            </Fragment>\n                          )}\n                        />\n                      </LocalizationProvider>\n                    ) : null}\n                  </Select>\n                </Typography>\n              </Typography>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              {\" \"}\n              <Typography variant=\"h5\" component=\"h5\">\n                Expected Balance :{\" \"}\n                <NumberFormat\n                  value={isWeekly ? 3254 : 32564}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon></ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon></ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <MainSearch>\n                <MainSearchIconWrapper>\n                  <SearchIcon />\n                </MainSearchIconWrapper>\n                <StyledMainInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </MainSearch>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n      </Drawer>\n    </Fragment>\n  );\n};\n\nexport default NavbarResponsive;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport NumberFormat from \"react-number-format\";\nimport { useToggle } from \"../../context/useToggle\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  ListSubheader,\n  TextField,\n} from \"@mui/material\";\nimport {\n  MainSearch,\n  MainSearchIconWrapper,\n  StyledMainInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Logo from \"../../asserts/logo_white copy.png\";\nimport { updateIsWeekly } from \"../../actions/data\";\nimport { useMediaQuery } from \"react-responsive\";\nimport NavbarResponsive from \"./NavbarResponsive\";\n\nconst Navbar = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const [today, setToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [dateValue, setDateValue] = useState([null, null]);\n\n  const timeFormater = () => {\n    if (checked) {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n    } else {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: false,\n      });\n    }\n  };\n  const [isChecked, setIsChecked] = useToggle(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOnChage = (e) => {\n    dispatch(updateIsWeekly(e.target.value));\n  };\n\n  const logout_user = () => {\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Typography variant=\"h5\" component=\"h5\">\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          color=\"primary\"\n          style={{ marginRight: \"0.8rem\" }}\n        >\n          Expected Balance :\n          <Select\n            sx={{ marginX: \"1rem\" }}\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={isWeekly}\n            label=\"Expected Balance\"\n            onChange={handleOnChage}\n          >\n            <MenuItem value=\"daily\">Daily</MenuItem>\n            <MenuItem value=\"weekly\">Weekly</MenuItem>\n            <MenuItem value=\"monthly\">Monthly</MenuItem>\n            <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n            <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n            <MenuItem value=\"range\">Custom Range</MenuItem>\n            {isWeekly === \"range\" ? (\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateRangePicker\n                  startText=\"Start Date\"\n                  endText=\"End Date\"\n                  value={dateValue}\n                  onChange={(newValue) => {\n                    setDateValue(newValue);\n                  }}\n                  renderInput={(startProps, endProps) => (\n                    <Fragment>\n                      <TextField {...startProps} />\n                      <Box sx={{ mx: 2 }}> to </Box>\n                      <TextField {...endProps} />\n                    </Fragment>\n                  )}\n                />\n              </LocalizationProvider>\n            ) : null}\n          </Select>\n        </Typography>\n        <NumberFormat\n          value={isWeekly ? 3254 : 32564}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix=\"$\"\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" ml={1} mr={1}>\n        {\" \"}\n        |{\" \"}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h5\">\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          \n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n    </Fragment>\n  );\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <Box sx={{ flexGrow: 1, backgroundColor: \"white\" }} component=\"nav\">\n        <AppBar position=\"static\" color=\"transparent\" sx={{ border: \"none\" }}>\n          <Toolbar>\n            {isTabletOrMobile ? (\n              <>\n                <NavbarResponsive />\n              </>\n            ) : (\n              <>\n                <Typography\n                  noWrap\n                  component=\"div\"\n                  sx={{ display: { xs: \"none\", sm: \"block\" } }}\n                >\n                  <Link to=\"/\">\n                    <img\n                      src={Logo}\n                      alt=\"logo\"\n                      style={{ height: \"2rem\", width: \"auto\" }}\n                    />\n                  </Link>\n                </Typography>\n                <MainSearch>\n                  <MainSearchIconWrapper>\n                    <SearchIcon />\n                  </MainSearchIconWrapper>\n                  <StyledMainInputBase\n                    placeholder=\"Search…\"\n                    inputProps={{ \"aria-label\": \"search\" }}\n                  />\n                </MainSearch>\n                <Box sx={{ flexGrow: 1 }} />\n                <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\n                  {isAuthenticated ? authLinks() : guestLinks()}\n                </Box>\n              </>\n            )}\n          </Toolbar>\n        </AppBar>\n      </Box>\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\n\nexport default Navbar;\n","/** @format */\n\nimport { Box, Typography, Button, TextField, Chip } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport React, { Fragment } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\n\nconst ChatHistory = () => {\n  return (\n    <Typography>\n      <Box\n        p={2}\n        sx={{\n          border: \"1px solid lightgray\",\n          borderRadius: \"1rem\",\n        }}\n      >\n        <Chip\n          label=\"Hi\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          size=\"large\"\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip label=\"Hello\" variant=\"outlined\" avatar={<Avatar>M</Avatar>} />\n        <br />\n        <Chip\n          label=\"Message by M\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"Message by D\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"this is just a ui design\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{ marginTop: \"1rem\" }}\n        />\n        <br />\n        <Chip\n          label=\"the chat feature is not working at backend\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n\n        <br />\n      </Box>\n    </Typography>\n  );\n};\n\nconst Chatting = () => {\n  return (\n    <Fragment>\n      <ChatHistory />\n      <br />\n      <Box\n        component=\"form\"\n        sx={{\n          //   border: \"1px solid lightgray\",\n          //   borderRadius: \"1rem\",\n          \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n        }}\n      >\n        <TextField type=\"text\" size=\"small\" variant=\"outlined\" />\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          endIcon={<SendIcon />}\n          type=\"submit\"\n          sx={{\n            m: 1,\n          }}\n        >\n          Send\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Chatting;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport isWeekend from \"date-fns/isWeekend\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { StaticDatePicker } from \"@mui/x-date-pickers/StaticDatePicker\";\nimport { TextField, Box, Paper, Grid } from \"@mui/material\";\n\nconst Calender = () => {\n  const [value, setValue] = useState(new Date());\n  const [tasks, setTasks] = useState([]);\n\n  return (\n    <Box component={Paper} m={2}>\n      <Grid container>\n        {\" \"}\n        <Grid item lg={6} xs={12}>\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <StaticDatePicker\n              orientation=\"landscape\"\n              openTo=\"day\"\n              value={value}\n              shouldDisableDate={isWeekend}\n              onChange={(newValue) => {\n                setValue(newValue);\n              }}\n              renderInput={(params) => <TextField {...params} />}\n            />\n          </LocalizationProvider>\n        </Grid>{\" \"}\n        <Grid item lg={6} xs={12}>\n          {tasks.length !== 0 ? (\n            tasks.map((task) => (\n              <li>\n                {task.id} - {task.name}\n              </li>\n            ))\n          ) : (\n            <h4> No record found</h4>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Calender;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Menu, MenuItem, Divider } from \"@mui/material\";\n\nconst ViewTasks = () => {\n  return (\n    <Fragment>\n      <MenuItem>Profile</MenuItem>\n      <MenuItem>Account</MenuItem>\n      <MenuItem>Setting</MenuItem>\n      <Divider sx={{ my: 0.5 }} />\n      <MenuItem>Logout</MenuItem>\n    </Fragment>\n  );\n};\n\nexport default ViewTasks;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nimport { Star } from \"@mui/icons-material\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Favorites = () => {\n  const favList = useSelector((state) => state.favorite.favorite);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <List>\n        <ListItem disablePadding>\n          <ListItemButton>\n            <ListItemIcon>\n              <Star sx={{ color: \"orange\" }} />\n            </ListItemIcon>\n          </ListItemButton>\n          <ListItemText primary=\"Favorite 1\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Favorites;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport Chatting from \"../Chat/Chat\";\n\n// styling imports\nimport {\n  Box,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  Fade,\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { SecNavbar } from \"../../styles/styles\";\n\nimport {\n  Message,\n  EmailRounded,\n  CalendarToday,\n  CheckBox,\n  Person,\n  NotificationAdd,\n  Settings,\n  Star,\n  StarBorder,\n} from \"@mui/icons-material/\";\nimport { useToggle } from \"../../context/useToggle\";\nimport Calender from \"../Dashboard/Calender\";\nimport ViewTasks from \"../Tasks/ViewTasks\";\nimport Favorites from \"../Favorite/Favorites\";\nimport serverTime from \"../../utils/ServerTime\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { useMediaQuery } from \"react-responsive\";\nimport {\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nexport const NavBarSecResponsive = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  const [openFav, setOpenFav] = useState(false);\n\n  const handleClickOpenFav = () => {\n    setOpenFav(true);\n  };\n\n  const handleCloseFav = () => {\n    setOpenFav(false);\n  };\n  const [openTask, setOpenTask] = useState(false);\n\n  const handleClickOpenTask = () => {\n    setOpenTask(true);\n  };\n\n  const handleCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const [openCal, setOpenCal] = useState(false);\n\n  const handleClickOpenCal = () => {\n    setOpenCal(true);\n  };\n\n  const handleCloseCal = () => {\n    setOpenCal(false);\n  };\n\n  const [openChat, setOpenChat] = useState(false);\n\n  const handleClickOpenChat = () => {\n    setOpenChat(true);\n  };\n\n  const handleCloseChat = () => {\n    setOpenChat(false);\n  };\n\n  const history = useHistory();\n  const [isLogout, setIsLogout] = useToggle(false);\n  const today = new Date();\n  const time = today.toLocaleTimeString();\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n  const [redirect, setRedirect] = useState(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [settingAcnchorEl2, setSettingAcnchorEl2] = useState(null);\n\n  const [anchorEl2, setAnchorEl2] = React.useState(null);\n\n  const handleLogout = () => {\n    console.log(\"logout button just clicked\");\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const open = Boolean(anchorEl);\n  const open2 = Boolean(anchorEl);\n\n  const userRoleChecker = () => {\n    switch (user.username) {\n      case \"admin\":\n        return \"Admin\";\n      case \"firm\":\n        return \"Firm\";\n      case \"lawyer\":\n        return \"Lawyer\";\n      default:\n        return \"Client\";\n    }\n  };\n\n  const openSetting2 = Boolean(settingAcnchorEl2);\n\n  const handleClick2 = (event) => {\n    setSettingAcnchorEl2(event.currentTarget);\n  };\n  const openSetting = Boolean(settingAcnchorEl);\n  const handleClose2 = () => {\n    setSettingAcnchorEl2(null);\n  };\n\n  const handleClick = (event) => {\n    setSettingAcnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setSettingAcnchorEl(null);\n  };\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <IconButton\n        sx={{ color: \"white\" }}\n        onClick={() => setOpenDrawer(!openDrawer)}\n      >\n        <MenuIcon color=\"white\" />\n      </IconButton>\n      <Drawer\n        anchor=\"left\"\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                className=\"nav-items\"\n                size=\"large\"\n                onClick={handleClickOpenChat}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"#fff\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n              >\n                <Message />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          className=\"nav-items\"\n          Validate\n          open={openChat}\n          onClose={handleCloseChat}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          sx={{\n            position: \"absolute\",\n            right: \"20px\",\n            bottom: \"150px\",\n          }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Chatting Application\"}\n          </DialogTitle>\n          <DialogContent>\n            <Chatting />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseChat}>Close</Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                size=\"large\"\n                className=\"nav-items\"\n                component={Link}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n                to={{\n                  pathname:\n                    \"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=someone@gmail.com\",\n                }}\n                target=\"_blank\"\n              >\n                <EmailRounded />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                size=\"large\"\n                className=\"nav-items\"\n                onClick={handleClickOpenCal}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <CalendarToday />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          Validate\n          open={openCal}\n          maxWidth=\"lg\"\n          fullWidth\n          onClose={handleCloseCal}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          sx={{\n            position: \"absolute\",\n            right: \"20px\",\n            bottom: \"150px\",\n          }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Calender\"}</DialogTitle>\n          <DialogContent>\n            <Calender />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseCal}>Close</Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                aria-label=\"more\"\n                className=\"nav-items\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting2 ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick2}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <CheckBox />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Menu\n          id=\"fade-menu\"\n          MenuListProps={{\n            \"aria-labelledby\": \"fade-button\",\n          }}\n          className=\"nav-items\"\n          anchorEl={settingAcnchorEl2}\n          open={openSetting2}\n          onClose={handleClose2}\n          TransitionComponent={Fade}\n        >\n          <MenuItem onClick={handleClose2}>Task 1: This is task one</MenuItem>\n          <MenuItem onClick={handleClose2}>Task 2: This is task two</MenuItem>\n          <MenuItem onClick={handleClose2}>Task 3: This is task three</MenuItem>\n          <Divider sx={{ my: 0.5 }} />\n          <MenuItem onClick={handleClose2}>Task 4: This is task four</MenuItem>\n        </Menu>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                className=\"nav-items\"\n                aria-expanded={openSetting2 ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClickOpenFav}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <Star />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          open={openFav}\n          onClose={handleCloseFav}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n          <DialogContent>\n            <Favorites />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseFav} autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                className=\"nav-items\"\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                <MenuItem component={Link} to=\"/profile\">\n                  Profile\n                </MenuItem>\n                {/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n              </Menu>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                sx={{\n                  color: \"#7a4ebf\",\n                }}\n              >\n                <Settings />\n              </IconButton>\n              <Menu\n                id=\"fade-menu\"\n                MenuListProps={{\n                  \"aria-labelledby\": \"fade-button\",\n                }}\n                anchorEl={settingAcnchorEl}\n                open={openSetting}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Account</MenuItem>\n                <MenuItem onClick={handleClose}>Setting</MenuItem>\n                <Divider sx={{ my: 0.5 }} />\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n              </Menu>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n      </Drawer>\n\n      <NotificationAdd mr={2} />\n    </Fragment>\n  );\n};\n","/** @format */\n/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport Chatting from \"../Chat/Chat\";\n\n// styling imports\nimport {\n  Box,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  Fade,\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { SecNavbar } from \"../../styles/styles\";\n\nimport {\n  Message,\n  EmailRounded,\n  CalendarToday,\n  CheckBox,\n  Person,\n  NotificationAdd,\n  Settings,\n  Star,\n  StarBorder,\n} from \"@mui/icons-material/\";\nimport { useToggle } from \"../../context/useToggle\";\nimport Calender from \"../Dashboard/Calender\";\nimport ViewTasks from \"../Tasks/ViewTasks\";\nimport Favorites from \"../Favorite/Favorites\";\nimport serverTime from \"../../utils/ServerTime\";\n\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { NavBarSecResponsive } from \"./DrawerComp\";\n\nconst NavbarSec = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const { user } = useSelector(\n    (state) => state.auth\n  )\n\n  \n\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  \n\n  const dispatch = useDispatch();\n\n  const [openFav, setOpenFav] = useState(false);\n\n  const handleClickOpenFav = () => {\n    setOpenFav(true);\n  };\n\n  const handleCloseFav = () => {\n    setOpenFav(false);\n  };\n  const [openTask, setOpenTask] = useState(false);\n\n  const handleClickOpenTask = () => {\n    setOpenTask(true);\n  };\n\n  const handleCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const [openCal, setOpenCal] = useState(false);\n\n  const handleClickOpenCal = () => {\n    setOpenCal(true);\n  };\n\n  const handleCloseCal = () => {\n    setOpenCal(false);\n  };\n\n  const [openChat, setOpenChat] = useState(false);\n\n  const handleClickOpenChat = () => {\n    setOpenChat(true);\n  };\n\n  const handleCloseChat = () => {\n    setOpenChat(false);\n  };\n\n  const history = useHistory();\n  const [isLogout, setIsLogout] = useToggle(false);\n  const today = new Date();\n  const time = today.toLocaleTimeString();\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n  const [redirect, setRedirect] = useState(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [settingAcnchorEl2, setSettingAcnchorEl2] = useState(null);\n\n  const [anchorEl2, setAnchorEl2] = React.useState(null);\n\n  const handleLogout = () => {\n    console.log(\"logout button just clicked\");\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const open = Boolean(anchorEl);\n  const open2 = Boolean(anchorEl);\n\n  const userRoleChecker = () => {\n    switch (user.username) {\n      case \"admin\":\n        return \"Admin\";\n      case \"firm\":\n        return \"Firm\";\n      case \"lawyer\":\n        return \"Lawyer\";\n      default:\n        return \"Client\";\n    }\n  };\n\n  const openSetting2 = Boolean(settingAcnchorEl2);\n\n  const handleClick2 = (event) => {\n    setSettingAcnchorEl2(event.currentTarget);\n  };\n  const openSetting = Boolean(settingAcnchorEl);\n  const handleClose2 = () => {\n    setSettingAcnchorEl2(null);\n  };\n\n  const handleClick = (event) => {\n    setSettingAcnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setSettingAcnchorEl(null);\n  };\n\n  return (\n    <Fragment>\n      <SecNavbar>\n        <Toolbar>\n          {isTabletOrMobile ? (\n            <>\n              <NavBarSecResponsive />\n            </>\n          ) : (\n            <>\n              <Box component=\"div\" sx={{ flexGrow: 1 }}>\n                <IconButton\n                  className=\"nav-items\"\n                  size=\"large\"\n                  onClick={handleClickOpenChat}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"#eee\",\n                    \"&:hover\": {\n                      color: \"#fff\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                  anchorOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"left\",\n                  }}\n                >\n                  <Message />\n                </IconButton>\n                <Dialog\n                  className=\"nav-items\"\n                  Validate\n                  open={openChat}\n                  onClose={handleCloseChat}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                  sx={{\n                    position: \"absolute\",\n                    right: \"20px\",\n                    bottom: \"150px\",\n                  }}\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    {\"Chatting Application\"}\n                  </DialogTitle>\n                  <DialogContent>\n                    <Chatting />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleCloseChat}>Close</Button>\n                  </DialogActions>\n                </Dialog>\n\n                <IconButton\n                  size=\"large\"\n                  className=\"nav-items\"\n                  component={Link}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"white\",\n                    \"&:hover\": {\n                      color: \"white\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                  to={{\n                    pathname:\n                      \"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=someone@gmail.com\",\n                  }}\n                  target=\"_blank\"\n                >\n                  <EmailRounded />\n                </IconButton>\n\n                <IconButton\n                  size=\"large\"\n                  className=\"nav-items\"\n                  onClick={handleClickOpenCal}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"white\",\n                    \"&:hover\": {\n                      color: \"white\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                >\n                  <CalendarToday />\n                </IconButton>\n                <Dialog\n                  Validate\n                  open={openCal}\n                  maxWidth=\"lg\"\n                  fullWidth\n                  onClose={handleCloseCal}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                  sx={{\n                    position: \"absolute\",\n                    right: \"20px\",\n                    bottom: \"150px\",\n                  }}\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    {\"Calender\"}\n                  </DialogTitle>\n                  <DialogContent>\n                    <Calender />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleCloseCal}>Close</Button>\n                  </DialogActions>\n                </Dialog>\n                <IconButton\n                  aria-label=\"more\"\n                  className=\"nav-items\"\n                  id=\"long-button\"\n                  aria-controls=\"long-menu\"\n                  aria-expanded={openSetting2 ? \"true\" : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={handleClick2}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"white\",\n                    \"&:hover\": {\n                      color: \"white\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                >\n                  <CheckBox />\n                </IconButton>\n                <Menu\n                  id=\"fade-menu\"\n                  MenuListProps={{\n                    \"aria-labelledby\": \"fade-button\",\n                  }}\n                  className=\"nav-items\"\n                  anchorEl={settingAcnchorEl2}\n                  open={openSetting2}\n                  onClose={handleClose2}\n                  TransitionComponent={Fade}\n                >\n                  <MenuItem onClick={handleClose2}>\n                    Task 1: This is task one\n                  </MenuItem>\n                  <MenuItem onClick={handleClose2}>\n                    Task 2: This is task two\n                  </MenuItem>\n                  <MenuItem onClick={handleClose2}>\n                    Task 3: This is task three\n                  </MenuItem>\n                  <Divider sx={{ my: 0.5 }} />\n                  <MenuItem onClick={handleClose2}>\n                    Task 4: This is task four\n                  </MenuItem>\n                </Menu>\n                <IconButton\n                  aria-label=\"more\"\n                  id=\"long-button\"\n                  aria-controls=\"long-menu\"\n                  className=\"nav-items\"\n                  aria-expanded={openSetting2 ? \"true\" : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={handleClickOpenFav}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"white\",\n                    \"&:hover\": {\n                      color: \"white\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                >\n                  <Star />\n                </IconButton>\n                <Dialog\n                  open={openFav}\n                  onClose={handleCloseFav}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    {\"Favorites\"}\n                  </DialogTitle>\n                  <DialogContent>\n                    <Favorites />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleCloseFav} autoFocus>\n                      Close\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </Box>\n              <NotificationAdd mr={2} />\n              <Typography component=\"h5\" variant=\"h6\" ml={2} mr={2}>\n                |\n              </Typography>\n\n              <Button\n                color=\"inherit\"\n                aria-controls=\"basic-menu\"\n                aria-haspopup=\"true\"\n                className=\"nav-items\"\n                aria-expanded={open ? \"true\" : undefined}\n                onClick={handleClick}\n              >\n                <Person /> {user.username} - ({user.username} )\n              </Button>\n              <Button\n                color=\"inherit\"\n                className=\"nav-items\"\n                onClick={handleLogout}\n              >\n                Logout\n              </Button>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                className=\"nav-items\"\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                <MenuItem component={Link} to=\"/profile\">\n                  Profile\n                </MenuItem>\n                {/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n              </Menu>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                sx={{\n                  color: \"white\",\n                }}\n              >\n                <Settings />\n              </IconButton>\n              <Menu\n                id=\"fade-menu\"\n                MenuListProps={{\n                  \"aria-labelledby\": \"fade-button\",\n                }}\n                anchorEl={settingAcnchorEl}\n                open={openSetting}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Account</MenuItem>\n                <MenuItem onClick={handleClose}>Setting</MenuItem>\n                <Divider sx={{ my: 0.5 }} />\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n              </Menu>\n            </>\n          )}\n        </Toolbar>\n      </SecNavbar>\n\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\n\nexport default NavbarSec;\n","/** @format */\n\nimport React, { useState, Fragment } from \"react\";\nimport {\n  Box,\n  Accordion,\n  AccordionSummary,\n  Typography,\n  AccordionDetails,\n  Grid,\n} from \"@mui/material\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  Mail,\n  Phone,\n  Group,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  marketingActive,\n  appointmentActive,\n  empOversiteActive,\n  emailsActive,\n  mapActive,\n  callsActive,\n} from \"../../redux/features/sidebarSlice\";\n\nimport \"./style.css\";\n\nconst Controls = () => {\n  return (\n    <Fragment>\n      <Box px={3} sx={{ color: \"#796ef0\" }}>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/\">\n              <Grid item>\n                <AddCircle fontSize=\"medium\" />\n              </Grid>\n              <Grid item>DashBoard</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/invoices\">\n              <Grid item>\n                <Receipt fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Invoices</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/manage-categories\">\n              <Grid item>\n                <FileCopy fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Categories</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/ledgers\">\n              <Grid item>\n                <MoneyOff fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Ledger</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/create-task\">\n              <Grid item>\n                <Task fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Task</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/employee-search\">\n              <Grid item>\n                <Work fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Search</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/matter-dashboard\">\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Matters</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/contact\">\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Contact</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Marketing = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(marketingActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.marketing ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Marketing</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(emailsActive())}>\n          <Grid>\n            <Box sx={sidebar.emails ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Email</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst HumanResources = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageUserActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/users\">\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage User</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageRoleActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/user-roles\">\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Role</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageGroupActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/user-groups\">\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Group</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst RevenueControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueInActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueIn ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue In</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueOutActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueOut ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue Out</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst AccountControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.newCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Customers</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(lostCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.lostCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Lost Customer</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newAccountActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.newAccount ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Accounts</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(mapActive())}>\n          <Grid>\n            <Box sx={sidebar.map ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Trouble Ticket Map</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\nconst EmployeeOversite = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(empOversiteActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.empOversite ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Oversite</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(callsActive())}>\n          <Grid>\n            <Box sx={sidebar.calls ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Phone fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Calls</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(appointmentActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.appointment ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Appointments</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const accordionData = [\n  {\n    name: \"Controls\",\n    id: \"controls\",\n    tiles: <Controls />,\n  },\n\n  {\n    name: \"Human Resources\",\n    id: \"human_resource\",\n    tiles: <HumanResources />,\n  },\n  {\n    name: \"Revenue\",\n    id: \"revenue\",\n    tiles: <RevenueControls />,\n  },\n  {\n    name: \"Customers\",\n    id: \"customers\",\n    tiles: <AccountControls />,\n  },\n  {\n    name: \"Marketing\",\n    id: \"marketing\",\n    tiles: <Marketing />,\n  },\n  {\n    name: \"Employee Oversite\",\n    id: \"empOversite\",\n    tiles: <EmployeeOversite />,\n  },\n];\n\nconst TestingSidebar = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n\n  const [accordions, updateAccordions] = useState(accordionData);\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n\n    const items = Array.from(accordions);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    updateAccordions(items);\n  }\n\n  return (\n    <Fragment>\n      <Box mt={5}>\n        <DragDropContext onDragEnd={handleOnDragEnd}>\n          <Droppable droppableId=\"accordions\">\n            {(provided) => (\n              <Box\n                className=\"accordions\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {accordions.map((item, index) => {\n                  return (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <Accordion\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          <AccordionSummary\n                            expandIcon={<ExpandMoreIcon color=\"primary\" />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                          >\n                            <Typography\n                              align=\"center\"\n                              color=\"primary\"\n                              sx={{ textTransform: \"uppercase\" }}\n                            >\n                              {item.name}\n                            </Typography>\n                          </AccordionSummary>\n                          <AccordionDetails>{item.tiles}</AccordionDetails>\n                        </Accordion>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </Box>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TestingSidebar;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  Box,\n  Paper,\n  Link,\n  Grid,\n  Container,\n  Stack,\n} from \"@mui/material\";\n\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\n\nimport { useToggle } from \"../../context/useToggle\";\nimport AdminSidebar from \"./AdminSidebar\";\nimport LawyerSidebar from \"./LawyerSidebar\";\nimport FirmSidebar from \"./FirmSidebar\";\nimport CustomerSidebar from \"./CutomerSidebar\";\nimport \"./style.css\";\nimport TestingSidebar from \"./TestingSidebar\";\n\nconst Sidebar = ({ user }) => {\n  const [controlToggle, setControlToggle] = useToggle(true);\n\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: true,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const SidebarRedirect = () => {\n    switch (user.username) {\n      case \"admin\":\n        return <AdminSidebar />;\n      case \"firm\":\n        return <FirmSidebar />;\n      case \"lawyer\":\n        return <LawyerSidebar />;\n      default:\n        return <CustomerSidebar />;\n    }\n  };\n\n  // const [state, dispatch] = useContext(UserContext);\n  return (\n    <Fragment>\n      <Paper component={Stack} elevation={3} spacing={1}>\n        <Box\n          sx={{\n            height: \"calc(83vh - 40px)\",\n            overflowY: \"scroll\",\n          }}\n        >\n          {/* {SidebarRedirect()} */}\n          <TestingSidebar />\n        </Box>\n        {/* <Box p={2}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"error\"\n            style={{\n              padding: \"1rem\",\n              \"&:hover\": {\n                color: \"#fff\",\n              },\n            }}\n          >\n            Report\n          </Button>\n        </Box> */}\n      </Paper>\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Sidebar);\n\n// export default Sidebar;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  BottomNavigation,\n  BottomNavigationAction,\n  Link,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@mui/material\";\nimport { FooterBar, FooterLink, FooterButton } from \"../../styles/styles\";\nimport {\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport Favorites from \"../Favorite/Favorites\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst Footer = () => {\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <Box mt={3}>\n        {isTabletOrMobile ? (\n          <Box sx={{ color: \"#eee\", backgroundColor: \"#7a4ebf\" }}>\n            <List>\n              <FooterLink to={\"/ledgers\"}>Accounting</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}> Calendar</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}>Contacts</FooterLink>\n            </List>\n            <List>\n              <FooterButton\n                sx={{\n                  color: \"#eee\",\n                  marginLeft: \"1.2rem\",\n                  textTransform: \"uppercase\",\n                  textDecoration: \"none\",\n                  \"&:visited\": {\n                    color: \"#eee\",\n                  },\n                }}\n                variant=\"text\"\n                onClick={handleClickOpen}\n              >\n                Favorites\n              </FooterButton>\n            </List>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n              <DialogContent>\n                <Favorites />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} autoFocus>\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n            <List>\n              <FooterLink to={\"/matters\"}>Matters</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/tasks\"}>Tasks</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}>Workflow</FooterLink>\n            </List>\n          </Box>\n        ) : (\n          <FooterBar>\n            <FooterLink to={\"/ledgers\"}>Accounting</FooterLink> |\n            <FooterLink to={\"/\"}> Calendar</FooterLink> |\n            <FooterLink to={\"/\"}>Contacts</FooterLink> |\n            <FooterButton\n              sx={{\n                color: \"#eee\",\n                textTransform: \"uppercase\",\n                textDecoration: \"none\",\n                \"&:visited\": {\n                  color: \"#eee\",\n                },\n              }}\n              variant=\"text\"\n              onClick={handleClickOpen}\n            >\n              Favorites\n            </FooterButton>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n              <DialogContent>\n                <Favorites />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} autoFocus>\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n            |<FooterLink to={\"/matters\"}>Matters</FooterLink> |\n            <FooterLink to={\"/tasks\"}>Tasks</FooterLink> |\n            <FooterLink to={\"/\"}>Workflow</FooterLink>\n          </FooterBar>\n        )}\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Footer;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Navbar from \"../components/Navbars/Navbar\";\nimport NavbarSec from \"../components/Navbars/NavbarSec\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport { connect } from \"react-redux\";\nimport Chatting from \"../components/Chat/Chat\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  isDisplay,\n  hideSidebar,\n  showSidebar,\n} from \"../redux/features/sidebarSlice\";\n\nimport { Paper, Fab, Popover } from \"@mui/material\";\nimport { Grid, Box, Button } from \"@mui/material\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { Chat, Report } from \"@mui/icons-material\";\n\nimport Footer from \"../components/Footer/Footer\";\n\nconst InnerLayout = ({ children }) => {\n  const { user, isAuthenticated} = useSelector(\n    (state) => state.auth\n  )\n\n  const theme = useTheme();\n\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  const sidebarToggle = useSelector((state) => state.sidebar.display);\n  const dispatch = useDispatch();\n\n  const [drawerOpen, setDrawerOpen] = React.useState(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setDrawerOpen(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setDrawerOpen(null);\n  };\n\n  const openPopover = Boolean(drawerOpen);\n  const id = openPopover ? \"simple-popover\" : undefined;\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleSidebarToggle = () => {\n    if (sidebarToggle) {\n      dispatch(hideSidebar());\n    } else {\n      dispatch(showSidebar());\n    }\n  };\n  const descriptionElementRef = React.useRef(null);\n\n  useEffect(() => {\n    if (isBigScreen) {\n      dispatch(showSidebar());\n    } else if (isTabletOrMobile) {\n      dispatch(hideSidebar());\n    }\n  }, []);\n  useEffect(() => {\n    if (drawerOpen) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [drawerOpen]);\n\n  return (\n    <Paper style={{ margin: \"0\" }}>\n      <Grid contianer rowSpacing={2} columnSpacing={2}>\n        <Grid item lg={12} md={12}>\n          {isAuthenticated ? (\n            <Fragment>\n              <NavbarSec />\n            </Fragment>\n          ) : (\n            <Navbar />\n          )}\n        </Grid>\n\n        {isAuthenticated ? (\n          <Fragment>\n            <Grid item lg={12}>\n              <Navbar />\n            </Grid>\n            <Grid container direction=\"row\" wrap=\"nowrap\">\n              {sidebarToggle ? (\n                <Fragment>\n                  <Grid item lg={2} xs={12} m={3}>\n                    <Sidebar />\n                  </Grid>\n                  <Grid item lg={10} xs={12} p={1}>\n                    <Box>\n                      <Button\n                        onClick={handleSidebarToggle}\n                        p={5}\n                        sx={{\n                          left: \"-8rem\",\n                          top: \"2rem\",\n                        }}\n                      >\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <Grid item lg={12} xs={12} p={1}>\n                    <Box>\n                      <Button onClick={handleSidebarToggle}>\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              )}\n            </Grid>\n            <Grid item lg={12}>\n              <Footer />\n            </Grid>\n          </Fragment>\n        ) : (\n          <Grid item lg={12} xs={12}>\n            {children}\n          </Grid>\n        )}\n        {isAuthenticated? \n        <>\n        <Fab\n          size=\"large\"\n          sx={\n            isDesktopOrLaptop\n              ? {\n                  borderRadius: \"50%\",\n                  backgroundColor: \"#edb4b6\",\n                  position: \"fixed\",\n                  bottom: \"16px\",\n                  left: \"16px\",\n                  color: \"red\",\n                  zIndex: \"200\",\n                  \"&:hover\": {\n                    color: \"red\",\n                  },\n                }\n              : { display: \"none\" }\n          }\n          aria-label=\"report\"\n        >\n          <Report />\n        </Fab>\n        <Fab\n          size=\"large\"\n          onClick={handlePopoverOpen}\n          sx={\n            isDesktopOrLaptop\n              ? {\n                  borderRadius: \"50%\",\n                  backgroundColor: \"#eee\",\n                  position: \"fixed\",\n                  bottom: \"16px\",\n                  right: \"16px\",\n                  color: \"#461594\",\n                  zIndex: \"200\",\n                  \"&:hover\": {\n                    color: \"#7a4ebf\",\n                  },\n                }\n              : { display: \"none\" }\n          }\n          aria-label=\"chat\"\n        >\n          <Chat />\n        </Fab>\n        <Popover\n          open={openPopover}\n          anchorEl={drawerOpen}\n          onClose={handlePopoverClose}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          sx={{ margin: \"-2rem\" }}\n        >\n          <Chatting />\n        </Popover>\n        </>\n        : null}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default InnerLayout;\n","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport { useSelector } from 'react-redux';\n\n\nconst PrivateRoutes = ({ children, ...rest}) => {\n    const { isAuthenticated } = useSelector(\n    (state) => state.auth\n  )\n\n\n    return (\n        <Route {...rest}>\n            {isAuthenticated ? children: <Redirect to=\"/login\"/>}\n        </Route>\n    )\n}\n\n\nexport default PrivateRoutes;","/** @format */\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'toggle_button':\n      return {\n        ...state,\n        active: !state.active,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initialState = {\n  active: false,\n};\n","/** @format */\n\nimport React from 'react';\nimport { reducer, initialState } from './reducer';\n\nexport const UserContext = React.createContext({\n  state: initialState,\n  dispatch: () => null,\n});\n\nexport const UserProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <UserContext.Provider value={[state, dispatch]}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","/** @format */\n\n// import styled from \"styled-components\";\nimport { createTheme } from \"@mui/material/styles\";\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    mode: \"light\",\n    primary: {\n      main: \"#796ef0\", //blueish purple\n    },\n    // secondary: {\n    //   main: \"\",\n    // },\n    error: {\n      main: \"#e85355\", //red\n    },\n    warning: {\n      main: \"#fd9905\", // orange\n    },\n    success: {\n      main: \"#28c570\", //green\n    },\n\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n  typography: {\n    htmlFontSize: 14,\n    fontSize: 12,\n    color: \"#333\",\n  },\n});\n\nexport default theme;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport \"./DashboardLayout/style.css\";\n\nimport DashboardContent from \"./DashboardLayout/DashboardContent\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <DashboardContent />\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\nimport { Button, Stack, IconButton } from \"@mui/material\";\nimport styles from \"./tabs.module.css\";\n\nconst Tabs = ({ children }) => {\n  const [activeTab, setActiveTab] = useState(children[0].props.label);\n  const handleClick = (e, newActiveTab) => {\n    e.preventDefault();\n    setActiveTab(newActiveTab);\n  };\n  return (\n    <Fragment>\n      <Stack direction=\"row\" spacing={1}>\n        <ul className={styles.tabs}>\n          {children.map((tab) => (\n            <li\n              className={tab.props.label === activeTab ? styles.current : \"\"}\n              key={tab.props.label}\n            >\n              <Button\n                variant=\"text\"\n                size=\"small\"\n                startIcon={<MoreVert />}\n                onClick={(e) => handleClick(e, tab.props.label)}\n              >\n                {tab.props.label}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      </Stack>\n\n      {children.map((one) =>\n        one.props.label === activeTab ? (\n          <div className={styles.content} key={one.props.label}>\n            {one.props.children}\n          </div>\n        ) : (\n          \"\"\n        ),\n      )}\n    </Fragment>\n  );\n};\n\nexport default Tabs;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  FormControlLabel,\n  Switch,\n  Button,\n  Stack,\n} from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst CreateInvoice = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    matter: \"\",\n    contact: \"\",\n    billable: false,\n    date_range: \"\",\n    create_date: \"\",\n    due_date: \"\",\n    template: \"\",\n    invoice_no: \"\",\n    discount: \"\",\n    submit: false,\n  });\n\n  // const {\n  //   matter,\n  //   contact,\n  //   billable,\n  //   date_range,\n  //   create_date,\n  //   due_date,\n  //   template,\n  //   invoice_no,\n  //   discount,\n  //   submit,\n  // } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  const [invoice, setInvoice] = useState(null);\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoice`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  const [dateRange, setDateRange] = React.useState([null, null]);\n  return (\n    <Fragment>\n      {/* <Typography component=\"h3\" variant=\"h4\">\n        Create New Invoice\n      </Typography>\n      <Box p={3}>\n        <LinkButton to=\"/invoices\" sx={{ float: \"right\" }}>\n          Invoice Dashboard\n        </LinkButton>\n      </Box> */}\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Grid\n          spacing={3}\n          container\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"Matter\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n              autoComplete=\"matter\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"Contact\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              autoComplete=\"contact\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <FormControlLabel\n              sx={{ fontSize: \"12px\", marginLeft: \"1rem\" }}\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Unbillable\"\n            />\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Stack direction=\"row\">\n              <Typography varient=\"caption\" sx={{ marginTop: \"0.7rem\" }}>\n                Range:\n              </Typography>\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateRangePicker\n                  calendars={1}\n                  value={dateRange}\n                  onChange={(newValue) => {\n                    setDateRange(newValue);\n                  }}\n                  renderInput={(startProps, endProps) => (\n                    <Fragment>\n                      <TextField size=\"small\" {...startProps} />\n                      <Box sx={{ mx: 2 }}> to </Box>\n                      <TextField size=\"small\" {...endProps} />\n                    </Fragment>\n                  )}\n                />\n              </LocalizationProvider>\n            </Stack>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          spacing={3}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"create_date\"\n              label=\"Create Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"due_date\"\n              label=\"Due Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"template\"\n              label=\"Template\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"template\"\n              autoComplete=\"template\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"invoice_no\"\n              label=\"Invoice #\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"invoice_no\"\n              autoComplete=\"invoice_no\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"discount\"\n              label=\"Discount\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"discount\"\n              autoComplete=\"discount\"\n            />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <FormControlLabel\n              label=\"Submit For Approvel\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n            />\n          </Grid>\n        </Grid>\n\n        <Grid item lg={12} mt={2}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Sub-Category</TableCell>\n                  <TableCell>Description</TableCell>\n                  <TableCell>Date</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Rate</TableCell>\n                  <TableCell>Sub</TableCell>\n                  <TableCell>Tax</TableCell>\n                  <TableCell>int</TableCell>\n                  <TableCell>Disc.</TableCell>\n                  <TableCell>Total</TableCell>\n                  <TableCell>Biller</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                {/* {invoice?.map((invoice) => (\n                  <TableRow id={invoice.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n\n                    <TableCell>{invoice.sub_cat}</TableCell>\n                    <TableCell>{invoice.discription}</TableCell>\n                    <TableCell>{invoice.date}</TableCell>\n                    <TableCell>{invoice.hours}</TableCell>\n                    <TableCell>{invoice.rate}</TableCell>\n                    <TableCell>{invoice.sub}</TableCell>\n                    <TableCell>{invoice.tax}</TableCell>\n                    <TableCell>{invoice.int}</TableCell>\n                    <TableCell>{invoice.dics}</TableCell>\n                    <TableCell>{invoice.total}</TableCell>\n                    <TableCell>{invoice.biller}</TableCell>\n                  </TableRow>\n                ))} */}\n              </TableHead>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item mt={3} direction=\"row\">\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Notes\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"Accept Online Payment\"\n              />\n            }\n            label=\"Accept Online Payment\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Accept Payments for Less\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (Compound / Simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Terms and Conditions\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (compund/ simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Use Trust Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add all unpaid invoices\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"use Operating Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Send Reminders Every\"\n          />\n          <TextField size=\"small\" sx={{ width: \"5rem\" }} />\n          <Typography\n            varient=\"caption\"\n            component=\"span\"\n            sx={{ marginLeft: \"0.5rem \" }}\n          >\n            day(s)/week(s)\n          </Typography>\n\n          {/* <Button\n            variant=\"contained\"\n            sx={{ float: \"right\" }}\n            endIcon={<SaveIcon />}\n          >\n            Send\n          </Button> */}\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateInvoice;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Grid,\n  Box,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormControl,\n  Checkbox,\n  Typography,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  MenuItem,\n  InputLabel,\n  Select,\n  Button,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst PaymentPlan = () => {\n  const [paymentData, setPaymentData] = useState({\n    payment_no: \"File# - 001\",\n    due: \"2020/07/01\",\n    amount: \"$ 750.00\",\n    late_fee: \"$22.00\",\n    total_due: \"$ 775.00\",\n    payment: \"$775.00\",\n    posted: \"$2020/07/05\",\n    method: \"Check\",\n  });\n\n  return (\n    <Fragment>\n      <Grid container mt={3} mb={3}>\n        <Grid item lg={4}>\n          <Typography>Start Balance:</Typography>\n          <Typography>Start Date:</Typography>\n          <Typography>Interest Rate:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Amout:</Typography>\n          <Typography>Payment Date:</Typography>\n          <Typography>No Payments:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Remaining:</Typography>\n          <Typography>Last Payment:</Typography>\n          <Typography>Last Payment $:</Typography>\n        </Grid>\n      </Grid>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Payment #</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Amout</TableCell>\n            <TableCell>Late Fee</TableCell>\n            <TableCell>Total Due</TableCell>\n            <TableCell>Payment</TableCell>\n            <TableCell>Posted</TableCell>\n            <TableCell>Method</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{paymentData.payment_no}</TableCell>\n          <TableCell>{paymentData.due}</TableCell>\n          <TableCell>{paymentData.amount} </TableCell>\n          <TableCell>{paymentData.late_fee}</TableCell>\n          <TableCell>{paymentData.total_due}</TableCell>\n          <TableCell>{paymentData.payment}</TableCell>\n          <TableCell>{paymentData.posted}</TableCell>\n          <TableCell>{paymentData.method}</TableCell>\n        </TableBody>\n      </Table>\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Close\n      </Button>\n      <Grid container>\n        <Grid item lg={6}>\n          <Typography>Post agreement Balance:</Typography>\n        </Grid>\n        <Grid item lg={6}>\n          <Typography>Start Date:</Typography>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst InvoicePayment = () => {\n  const [invoiceData, setInvoiceData] = useState({\n    invoice_no: \"i-2106-0004542\",\n    due: \"2020/07/01\",\n    tax: \"$ 15.00\",\n    interest: \"$2.35\",\n    time: \"$ 1,234.50\",\n    hard: \"$457.00\",\n    soft: \"$45.00\",\n    total: \"$ 1,753.85\",\n  });\n\n  return (\n    <Fragment>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Invoice</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Tax</TableCell>\n            <TableCell>Interest</TableCell>\n            <TableCell>Time</TableCell>\n            <TableCell>Hard</TableCell>\n            <TableCell>Soft</TableCell>\n            <TableCell>Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{invoiceData.invoice_no}</TableCell>\n          <TableCell>{invoiceData.due}</TableCell>\n          <TableCell>{invoiceData.tax} </TableCell>\n          <TableCell>{invoiceData.interest}</TableCell>\n          <TableCell>{invoiceData.time}</TableCell>\n          <TableCell>{invoiceData.hard}</TableCell>\n          <TableCell>{invoiceData.soft}</TableCell>\n          <TableCell>{invoiceData.total}</TableCell>\n        </TableBody>\n      </Table>{\" \"}\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Pay\n      </Button>{\" \"}\n    </Fragment>\n  );\n};\n\nconst Payment = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [isPlan, setIsPlan] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    payment_type: \"\",\n    date: \"\",\n    retainer: \"\",\n    payment: \"\",\n    date_range: \"\",\n    menu: \"\",\n    bank_account: \"\",\n    payment_method: \"\",\n  });\n\n  const {\n    payment_type,\n    date,\n    retainer,\n    payment,\n    date_range,\n    menu,\n    bank_account,\n    payment_method,\n  } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{\n              \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n            }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"payment_type\"\n                defaultValue=\"cash\"\n                name=\"payment_type\"\n                onChange={(e) => onChange(e)}\n                id=\"payment_type\"\n                autoComplete=\"payment_type\"\n              >\n                <FormControlLabel\n                  value=\"cash\"\n                  control={<Radio />}\n                  label=\"Cash\"\n                />\n                <FormControlLabel value=\"cc\" control={<Radio />} label=\"CC\" />\n                <FormControlLabel\n                  value=\"wire\"\n                  control={<Radio />}\n                  label=\"Wire\"\n                />\n                <FormControlLabel\n                  value=\"check\"\n                  control={<Radio />}\n                  label=\"Check\"\n                />\n              </RadioGroup>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              id=\"date\"\n              label=\"date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <FormControlLabel\n              value=\"retainer\"\n              control={<Checkbox />}\n              label=\"Retainer\"\n            />\n            <FormControlLabel\n              value=\"payment\"\n              control={<Checkbox />}\n              label=\"Payment\"\n            />\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n              <DateRangePicker\n                calendars={1}\n                value={dateRange}\n                onChange={(newValue) => {\n                  setDateRange(newValue);\n                }}\n                renderInput={(startProps, endProps) => (\n                  <Fragment>\n                    <TextField size=\"small\" {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField size=\"small\" {...endProps} />\n                  </Fragment>\n                )}\n              />\n            </LocalizationProvider> */}\n            <FormControl sx={{ width: \"12rem\" }}>\n              <InputLabel id=\"demo-simple-select-label\">Date Range</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={date_range}\n                label=\"Age\"\n                onChange={(e) => onChange(e)}\n              >\n                <MenuItem value={10}>Ten</MenuItem>\n                <MenuItem value={20}>Twenty</MenuItem>\n                <MenuItem value={30}>Thirty</MenuItem>\n              </Select>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"menu\"\n              label=\"menu\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"menu\"\n              autoComplete=\"menu\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bank_account\"\n              label=\"bank_account\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"bank_account\"\n              autoComplete=\"bank_account\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"payment_method\"\n              label=\"payment_method\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"payment_method\"\n              autoComplete=\"payment_method\"\n            />\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"isPlan\"\n                defaultValue={isPlan}\n                name=\"isPlan\"\n                onChange={(e) => setIsPlan(e)}\n                id=\"isPlan\"\n                autoComplete=\"isPlan\"\n              >\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Invoice Payment\"\n                />\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Payment Plan\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Box>\n        </Grid>\n        <Grid item lg={12}>\n          <TableContainer>\n            {isPlan ? <PaymentPlan /> : <InvoicePayment />}\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Payment;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  FormControlLabel,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  Button,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport { styled } from \"@mui/material/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\nimport CreateInvoice from \"./CreateInvoice\";\nimport Payment from \"./Payment\";\n\nconst Filters = () => {\n  const [invoiceToggle, setInvoiceToggle] = useToggle(false);\n  const [paymentToggle, setPaymentToggle] = useToggle(false);\n  const [paid, setPaid] = useToggle(false);\n\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid\n          spacing={2}\n          item\n          lg={12}\n          direction=\"Row\"\n          sx={{\n            \"& .MuiTextField-root\": { m: 1 },\n            \"& .MuiFormControl-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            onClick={() => setInvoiceToggle(invoiceToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Create Invoice\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={invoiceToggle}\n            onClose={() => setInvoiceToggle(invoiceToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {\"Create Invoice\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <CreateInvoice />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <Button\n            variant=\"contained\"\n            onClick={() => setPaymentToggle(paymentToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Receive Money\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={paymentToggle}\n            onClose={() => setPaymentToggle(paymentToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Receive Money\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <Payment />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <FormControlLabel\n            label=\" Paid/ Unpaid\"\n            control={<Switch checked={paid} onChange={() => setPaid(paid)} />}\n          />\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Invoice</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Bill Date</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Times</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <Typography\n            component=\"span\"\n            variant=\"caption\"\n            sx={{ width: \"8rem\", m: 2, fontSize: \"1.2rem\" }}\n          >\n            Status:\n          </Typography>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Any </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Dropd-own</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n} from \"@mui/material\";\nimport Filters from \"./Filters\";\n\nconst InvoiceList = () => {\n  const [invoice, setInvoice] = useState(null);\n\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoices`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  return (\n    <Fragment>\n      <Filters />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Invoice</TableCell>\n              <TableCell>Created</TableCell>\n              <TableCell>Due</TableCell>\n              <TableCell>Tax</TableCell>\n              <TableCell>Interest</TableCell>\n              <TableCell>Discount</TableCell>\n              <TableCell>Total</TableCell>\n              <TableCell>Balance</TableCell>\n              <TableCell>Last Payment</TableCell>\n              <TableCell>Approval Date</TableCell>\n              <TableCell>Approval by</TableCell>\n              <TableCell>Created by</TableCell>\n            </TableRow>\n            {/* {invoice?.map((invoice) => (\n              <TableRow id={invoice.id}>\n                <TableCell>\n                  <Checkbox />\n                </TableCell>\n                <TableCell>{invoice.id}</TableCell>\n                <TableCell>{invoice.created}</TableCell>\n                <TableCell>{invoice.due}</TableCell>\n                <TableCell>{invoice.tax}</TableCell>\n                <TableCell>{invoice.interest}</TableCell>\n                <TableCell>{invoice.discount}</TableCell>\n                <TableCell>{invoice.total}</TableCell>\n                <TableCell>{invoice.balance}</TableCell>\n                <TableCell>{invoice.last_payment}</TableCell>\n                <TableCell>{invoice.approvel_date}</TableCell>\n                <TableCell>{invoice.approvel.by}</TableCell>\n                <TableCell>{invoice.created_by}</TableCell>\n              </TableRow>\n            ))} */}\n          </TableHead>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default InvoiceList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport InvoiceList from \"./InvoiceList\";\nimport Payment from \"./Payment\";\nimport CreateInvoice from \"./CreateInvoice\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <InvoiceList />\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React from \"react\";\nimport { Alert } from \"@mui/material\";\n\nexport const ActionAlerts = (status) => {\n  return <Alert severity=\"error\">{status}</Alert>;\n};\n\nexport const TotalDays = (date1, date2) => {\n  let dt1 = new Date(date1);\n  let dt2 = new Date(date2);\n  return Math.floor(\n    (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) -\n      Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) /\n      (1000 * 60 * 60 * 24),\n  );\n};\n\nexport const GetDate = (date) => {\n  let newDate =\n    date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n  return newDate;\n};\n\nexport const GetTime = (time) => {\n  let newTime =\n    time.getHours() + \":\" + time.getMinutes() + \":\" + time.getSeconds();\n  return newTime;\n};\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Box,\n  containerClasses,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\n\nconst MatterList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const [redTask, setRedTask] = useState(false);\n  const [greenTask, setGreenTask] = useState(false);\n  const [yellowTask, setYellowTask] = useState(false);\n  const [myTask, setMyTask] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/tasks/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTasks(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Box component={Paper} p={2}>\n      <FormGroup aria-label=\"position\" row>\n        <FormControlLabel\n          control={\n            <Checkbox value={myTask} onChange={() => setMyTask(!myTask)} />\n          }\n          label=\"My Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox value={redTask} onChange={() => setRedTask(!redTask)} />\n          }\n          label=\"Red Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={greenTask}\n              onChange={() => setGreenTask(!greenTask)}\n            />\n          }\n          label=\"Green Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={yellowTask}\n              onChange={() => setYellowTask(!yellowTask)}\n            />\n          }\n          label=\"Yellow Tasks\"\n        />\n      </FormGroup>\n      <Typography component=\"h3\">All Matters Task's List</Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assign To</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : tasks?.map((data) => {\n                  return (\n                    <TableRow id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        {data.task_nature === \"urgent\" ? (\n                          <CircleIcon color=\"error\" />\n                        ) : (\n                          <CircleIcon color=\"success\" />\n                        )}\n                      </TableCell>\n                      <TableCell>{data.matter}</TableCell>\n                      <TableCell>\n                        {data.last_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>\n                        {data.next_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default MatterList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, CardContent, Typography } from \"@mui/material\";\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Tasks cleared Last day\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Goal Today\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Personal Best\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Company Record\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Link, Typography, List, ListItem, Paper } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nconst Calendar = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography variant=\"h6\" component=\"h7\">\n          My Calendar at a Glance\n        </Typography>\n        <List>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Start motion for trail</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Calendar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  Typography,\n} from \"@mui/material\";\n\nconst Filters = () => {\n  // const [user, setUser] = useState(\"Any user\");\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item>\n          <Typography>Assign To</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Organized By</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Status</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, Button, Typography } from \"@mui/material\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst MatterCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2} mt={1.5}>\n        <Grid item lg={9}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"error.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Urgent\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"warning.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Concern\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"success.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Start\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"white\",\n                  color: \"black\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      New\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3}>\n          <Button\n            variant=\"outlined\"\n            sx={{\n              minWidth: 100,\n              height: 40,\n              borderRadius: \"0.5rem\",\n              bgcolor: \"white\",\n              color: \"black\",\n            }}\n          >\n            Import\n          </Button>\n          <LinkButton to=\"/create-matter\"> + New </LinkButton>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterCards;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  TableBody,\n} from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst MatterListLong = () => {\n  const [matters, setMatters] = useState([]);\n\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/new-matter/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setMatters(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Matter Contact</TableCell>\n              <TableCell>Matter Type</TableCell>\n              <TableCell>Bill Rate</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assigned to</TableCell>\n              <TableCell>Billable</TableCell>\n              <TableCell>Open Invoice</TableCell>\n              <TableCell>Trust Account</TableCell>\n              <TableCell>Last Payment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : matters?.map((data, index) => {\n                  return (\n                    <TableRow id={index}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        <CircleIcon color=\"error\" />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n                      <TableCell>{data.contact}</TableCell>\n                      <TableCell>{data.matter_type}</TableCell>\n                      <TableCell>{data.billing_rate}</TableCell>\n                      <TableCell>{data.open_date}</TableCell>\n                      <TableCell>{data.close_date}</TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 100)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {\" \"}\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />{\" \"}\n                        - {data.close_date}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default MatterListLong;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Button, Typography } from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\n\nimport { LocalizationProvider, DateRangePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { CreateMatter, CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, TotalDays, GetDate } from \"../../utils/ActionAlerts\";\n\nconst NewMatter = () => {\n  // const matter_number = Math.floor(Math.random() * 10000000);\n  const mask = \"____-__-__\";\n  const matter_number = 23568;\n  const [openDate, setOpenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [whenDate, setWhenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [closeDate, setCloseDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [totalDays, setTotalDays] = useState(0);\n  const [matterData, setMatterData] = useState({\n    contact: 0,\n    matter_name: \"\",\n    matter_type: \"\",\n    matter_source: \"\",\n    matter_status: \"\",\n    assign_to: 0,\n    assign_by: 0,\n    billing_rate: 0,\n    alerts: \"\",\n\n    jurisdiction: \"\",\n    status_limitaion: null,\n    opposing_counsel: \"\",\n    where: \"\",\n    involved: \"\",\n    witnesses: \"\",\n    narrative: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    involved,\n    witnesses,\n    narrative,\n  } = matterData;\n\n  const onChange = (e) =>\n    setMatterData({ ...matterData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let open_date = GetDate(openDate);\n    let close_date = GetDate(closeDate);\n    let when = GetDate(whenDate);\n    let total_days = totalDays;\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      matter_type,\n      matter_source,\n      matter_status,\n      assign_to,\n      assign_by,\n      billing_rate,\n      alerts,\n      open_date,\n      close_date,\n      total_days,\n      jurisdiction,\n      status_limitaion,\n      opposing_counsel,\n      where,\n      when,\n      involved,\n      witnesses,\n      narrative,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  useEffect(() => {\n    let days = TotalDays(openDate, closeDate);\n    setTotalDays(days);\n  }, [openDate, closeDate]);\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Matter\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item lg={8}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"contact\"\n              type=\"number\"\n              min=\"0\"\n              value={contact}\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_number\"\n              label=\"matter_number\"\n              type=\"text\"\n              value={matter_number}\n              // onChange={(e) => onChange(e)}\n              id=\"matter_number\"\n              disabled\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_name\"\n              label=\"matter_name\"\n              type=\"text\"\n              value={matter_name}\n              onChange={(e) => onChange(e)}\n              id=\"matter_name\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"alerts\"\n              label=\"alerts\"\n              type=\"text\"\n              value={alerts}\n              onChange={(e) => onChange(e)}\n              id=\"alerts\"\n              autoComplete=\"alerts\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_type\"\n              label=\"matter_type\"\n              type=\"text\"\n              value={matter_type}\n              onChange={(e) => onChange(e)}\n              id=\"matter_type\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_source\"\n              label=\"matter_source\"\n              type=\"text\"\n              value={matter_source}\n              onChange={(e) => onChange(e)}\n              id=\"matter_source\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_status\"\n              label=\"matter_status\"\n              type=\"text\"\n              value={matter_status}\n              onChange={(e) => onChange(e)}\n              id=\"matter_status\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"assign_to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_rate\"\n              label=\"billing_rate\"\n              step=\"0.01\"\n              type=\"number\"\n              value={billing_rate}\n              onChange={(e) => onChange(e)}\n              id=\"billing_rate\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Open Date\"\n                value={openDate}\n                name=\"open\"\n                id=\"open\"\n                onChange={(e) => setOpenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Close Date\"\n                value={closeDate}\n                name=\"closed\"\n                id=\"closed\"\n                onChange={(e) => setCloseDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"total_days\"\n              label=\"total_days\"\n              type=\"number\"\n              value={totalDays}\n              onChange={(e) => setTotalDays(TotalDays(openDate, closeDate))}\n              id=\"total_days\"\n              disabled\n            />\n          </Grid>\n\n          <Grid item lg={4}>\n            <br />\n            <Typography component=\"h5\" variant=\"h6\">\n              Legal Concerns\n            </Typography>\n            <br />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"jurisdiction\"\n              label=\"jurisdiction\"\n              type=\"text\"\n              value={jurisdiction}\n              onChange={(e) => onChange(e)}\n              id=\"jurisdiction\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"status_limitaion\"\n              label=\"status_limitaion\"\n              type=\"text\"\n              value={status_limitaion}\n              onChange={(e) => onChange(e)}\n              id=\"status_limitaion\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"opposing_counsel\"\n              label=\"opposing_counsel\"\n              type=\"text\"\n              value={opposing_counsel}\n              onChange={(e) => onChange(e)}\n              id=\"opposing_counsel\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <Typography component=\"h5\" variant=\"h6\" sx={{ fontSize: \"1rem\" }}>\n              Event Detail\n            </Typography>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"where\"\n              label=\"where\"\n              type=\"text\"\n              value={where}\n              onChange={(e) => onChange(e)}\n              id=\"where\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"When\"\n                value={whenDate}\n                name=\"when\"\n                id=\"when\"\n                onChange={(e) => setWhenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"involved\"\n              label=\"Who was involved\"\n              type=\"text\"\n              value={involved}\n              onChange={(e) => onChange(e)}\n              id=\"involved\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"witnesses\"\n              label=\"witnesses\"\n              type=\"text\"\n              value={witnesses}\n              onChange={(e) => onChange(e)}\n              id=\"witnesses\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              label=\"Customer Narrative of the Event\"\n              multiline\n              type=\"text\"\n              rows={10}\n              value={narrative}\n              onChange={(e) => onChange(e)}\n              defaultValue=\"Narrative\"\n              name=\"narrative\"\n              id=\"narrative\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewMatter;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { styled } from \"@mui/material/styles\";\n\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  CardContent,\n  Typography,\n  Card,\n  Grid,\n  Box,\n  List,\n  ListItem,\n  Paper,\n  InputBase,\n} from \"@mui/material\";\n\nconst MatterTask = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components=\"p\">\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components=\"p\">\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components=\"p\">YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Activities = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components={Typography}>\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components={Typography}>\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components={Typography}>YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Classification\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                % time spent\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Matter Completion\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst MatterDetail = () => {\n  const Search = styled(\"div\")(({ theme }) => ({\n    position: \"relative\",\n    borderRadius: \"1.5rem\",\n    backgroundColor: \"#eee\",\n    \"&:hover\": {\n      backgroundColor: \"#ddd\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"40%\",\n  }));\n\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }));\n\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: \"inherit\",\n    \"& .MuiInputBase-input\": {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"md\")]: {\n        width: \"20ch\",\n      },\n    },\n  }));\n  // const [matters, setMatters] = useState(null);\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n        </Grid>\n        <Grid item lg={12}>\n          <Grid container spacing={2}>\n            <Grid item mt={2} lg={7}>\n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Recent Document</TableCell>\n                      <TableCell>Version</TableCell>\n                      <TableCell>Last Open</TableCell>\n                      <TableCell>User</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>1</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>2</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>3</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableContainer>\n              <Grid container spacing={3}>\n                <Grid item>\n                  <Activities />\n                </Grid>\n                <Grid item>\n                  <MatterTask />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item mt={2} lg={5}>\n              <Cards />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterDetail;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport MatterList from \"./MatterList\";\nimport { Grid, Box } from \"@mui/material\";\nimport Cards from \"./Cards\";\nimport Calendar from \"./Calendar\";\nimport Filters from \"./Filters\";\nimport MatterCards from \"./MatterCards\";\nimport MatterListLong from \"./MatterListLong\";\nimport NewMatter from \"./NewMatter\";\nimport MatterDetail from \"./MatterDetail\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item lg={12}>\n            <Filters />\n          </Grid>\n          <Grid item lg={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item lg={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst MatterDashboard = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container spacing={2}>\n          <Grid item lg={7}>\n            <MatterList />\n            <Calendar />\n          </Grid>\n          <Grid item lg={5}>\n            <Cards />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashboard\">\n          <MatterDashboard />\n        </div>\n        <div label=\"Matter\">\n          <Matters />\n        </div>\n        <div label=\"New Matter\">\n          <NewMatter />\n        </div>\n        <div label=\"Smith vs. Jhon\">\n          <MatterDetail />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerActivity = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setActivityData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow bgColor=\"#796ef0\">\n              <TableCell>\n                <Typography color=\"white\">Date</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Files</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Sub-Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Notes</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Source</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">User</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">In/Out</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          {/* {loading\n            ? null\n            : activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })} */}\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default LedgerActivity;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  TextField,\n  FormControlLabel,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Fillters = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [billedby, setBilledby] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Filter By</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={filter}\n            label=\"Filter By\"\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Billed by</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={billedby}\n            label=\"Billed By\"\n            onChange={(e) => setBilledby(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={status}\n            label=\"Age\"\n            onChange={(e) => setStatus(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n          <DateRangePicker\n            calendars={1}\n            value={dateRange}\n            onChange={(newValue) => {\n              setDateRange(newValue);\n            }}\n            renderInput={(startProps, endProps) => (\n              <Fragment>\n                <TextField size=\"small\" {...startProps} />\n                <Box sx={{ mx: 2 }}> to </Box>\n                <TextField size=\"small\" {...endProps} />\n              </Fragment>\n            )}\n          />\n        </LocalizationProvider>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Fillters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={7}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Time Entries\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={200}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      f\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Soft Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={65000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Hard Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={5000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={70000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Trust\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={4000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Due\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={100000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item={5}>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>User</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell> Jhon Johnson</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={74.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={39007.05}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Mark MacCalloff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={4.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={800.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Cindy Madenuff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={127.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={41372.5}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerCards;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n  Button,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { LinkButton } from \"../../styles/styles\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerTImeList = () => {\n  const [ledgerData, setLedgerData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setLedgerData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <Box>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Print\n        </Button>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Export\n        </Button>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>Cateagory</TableCell>\n                <TableCell>Sub-Category</TableCell>\n                <TableCell>Detail</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Qty</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Total</TableCell>\n                <TableCell>BillBy</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n                ? null\n                : ledgerData?.map((data) => {\n                    return (\n                      <TableBody id={data.id}>\n                        <TableCell>\n                          <Checkbox />\n                        </TableCell>\n                        <TableCell>{data.category}</TableCell>\n                        <TableCell>{data.sub_category}</TableCell>\n                        <TableCell>{data.detail}</TableCell>\n                        <TableCell>{data.date}</TableCell>\n                        <TableCell>{data.qty}</TableCell>\n                        <TableCell>\n                          {data.billable ? \"Billable\" : \"Paid\"}\n                        </TableCell>\n                        <TableCell>\n                          <NumberFormat\n                            value={data.qty * 25}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix=\"$\"\n                          />\n                        </TableCell>\n                        <TableCell>{data.bill_by}</TableCell>\n                      </TableBody>\n                    );\n                  })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default LedgerTImeList;\n","/** @format */\n\nimport { Typography, Box, Grid } from \"@mui/material\";\nimport React, { Fragment } from \"react\";\nimport Fillters from \"./Fillters\";\nimport LedgerCards from \"./LedgerCards\";\nimport LedgerTimeList from \"./LedgerTImeList\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LegderDashbard = () => {\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <Box>\n          <LedgerCards />\n          <Fillters />\n          <LedgerTimeList />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LegderDashbard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box, Typography, Paper, TextField } from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerDoc = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={1}>\n        <Grid item lg={4} sx={{}}>\n          <Box\n            sx={{\n              width: \"80%\",\n              minHeight: \"25rem\",\n              padding: \"5rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            MS Word Document On Pleading or Non Pleading Paper\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Box\n            sx={{\n              padding: \"5rem 2rem 5rem 2rem\",\n              minHeight: \"25rem\",\n              width: \"80%\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Space for 2nd Document to be opend if user wants it\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Grid container>\n            <Grid item lg={12}>\n              <Box component={Paper} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n              </Box>\n            </Grid>\n            <Grid item lg={12}>\n              <Box component={Paper} mt={2} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={5}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"filled\"\n                  name=\"detail\"\n                  type=\"text\"\n                  value=\"Quick Notes\"\n                  id=\"detail\"\n                  sx={{ borderRadius: \"1rem\" }}\n                />\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerDoc;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  RadioGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Radio,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst Time = () => {\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [timeToggle, setTimeToggle] = useToggle(true);\n  const [billable, setBillable] = useToggle(false);\n\n  // const [bill, setBill] = useToggle(false);\n  const [time, setTime] = useState(\"\");\n  const [timeData, setTimeData] = useState({\n    contact: 0,\n    matter_name: 0,\n    category: \"\",\n    sub_category: \"\",\n    // time: \"\",\n    hard: false,\n    soft: false,\n    unit: 0,\n    qty: 0,\n    rate: 0,\n    file: \"\",\n    detail: \"\",\n    bill_by: 0,\n    note: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    category,\n    sub_category,\n    hard,\n    soft,\n    unit,\n    // time,\n    qty,\n    rate,\n    file,\n    detail,\n    bill_by,\n\n    note,\n  } = timeData;\n  const onChange = (e) =>\n    setTimeData({ ...timeData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    let date = GetDate(pickDate);\n\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      category,\n      sub_category,\n      hard,\n      soft,\n      unit,\n      qty,\n      rate,\n      time,\n      date,\n      detail,\n      bill_by,\n      billable,\n      note,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/add-time/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Typography component=\"h3\" variant=\"h4\">\n          Time\n        </Typography>\n        <Grid\n          container\n          spacing={2}\n          mt={2}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n          }}\n        >\n          <Grid item xs={12}>\n            <Grid container p={3}>\n              <Grid item xs={6}>\n                <FormControlLabel\n                  size=\"large\"\n                  label=\"Time\"\n                  labelPlacement=\"start\"\n                  control={\n                    <Switch\n                      size=\"large\"\n                      checked={timeToggle}\n                      onChange={(e) => setTimeToggle(e)}\n                    />\n                  }\n                />\n                {timeToggle ? null : (\n                  <Box>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">Expense</FormLabel>\n                      <RadioGroup\n                        row\n                        aria-label=\"expense\"\n                        defaultValue=\"\"\n                        name=\"expense\"\n                        id=\"expense\"\n                      >\n                        <FormControlLabel\n                          value=\"hard\"\n                          control={<Radio />}\n                          label=\"Hard\"\n                        />\n                        <FormControlLabel\n                          value=\"soft\"\n                          control={<Radio />}\n                          label=\"Soft\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  </Box>\n                )}\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"matter\"\n                  label=\"matter\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"matter\"\n                  autoComplete=\"matter\"\n                  disabled\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"contact\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                  disabled\n                />\n              </Grid>\n            </Grid>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"category\"\n              label=\"category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"category\"\n              autoComplete=\"category\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"sub_category\"\n              label=\"sub_category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"sub_category\"\n              autoComplete=\"sub_category\"\n            />\n            {timeToggle ? (\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"rate\"\n                label=\"rate\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"rate\"\n                autoComplete=\"rate\"\n              />\n            ) : (\n              <Fragment>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"unit\"\n                  label=\"unit\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"unit\"\n                  autoComplete=\"unit\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"qty\"\n                  label=\"Qty\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"qty\"\n                  autoComplete=\"qty\"\n                />\n                <Box m={1}>\n                  <Typography component=\"lable\"> Receipt(s) </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n              </Fragment>\n            )}\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"HH:MM\"\n              mask={[\"H\", \"H\", \"M\", \"M\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time\"\n              name=\"time\"\n              id=\"time\"\n              value={time}\n              type=\"text\"\n              onValueChange={(e) => setTime(e.value)}\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Date\"\n                value={pickDate}\n                name=\"pickdate\"\n                id=\"pickdate\"\n                onChange={(e) => setPickDate(e)}\n                renderInput={(params) => <TextField size=\"small\" {...params} />}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"detail\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n              autoComplete=\"detail\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bill_by\"\n              label=\"bill_by\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bill_by\"\n              autoComplete=\"bill_by\"\n            />\n            <FormControlLabel\n              size=\"large\"\n              label=\"Billable\"\n              labelPlacement=\"start\"\n              control={\n                <Switch\n                  size=\"large\"\n                  checked={billable}\n                  onChange={() => setBillable(billable)}\n                />\n              }\n            />\n            <br />\n          </Grid>\n        </Grid>\n        <Grid container>\n          <Grid item lg={12}>\n            <TextField\n              fullWidth\n              multiline\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"note\"\n              rows={4}\n              // label=\"note\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              placeholder=\"Private / internal notes\"\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Time;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport LedgerActivity from \"./LedgerActivity\";\nimport LegderDashbard from \"./LedgerDashbard\";\nimport LedgerDoc from \"./LedgerDoc\";\nimport LedgerTImeList from \"./LedgerTImeList\";\nimport Time from \"./Time\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Ledger\">\n          <LegderDashbard />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Documents\">\n          <LedgerDoc />\n        </div>\n        <div label=\"Time\">\n          <Time />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst SubCategory = () => {\n  const [subCategory, setSubCategory] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/sub-category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setSubCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/sub-category/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n      })\n      .catch((err) => setStatus(err.statusText));\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/sub-category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n      })\n      .catch((err) => {\n        FetchData();\n      });\n  };\n  const showSubcategory = () => {\n    if (subCategory.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return subCategory.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Sub-Category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Sub-Category\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Sub-Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? showSubcategory() : <Typography>Loading ...</Typography>}\n    </Fragment>\n  );\n};\n\nexport default SubCategory;\n","/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst catHandler = (id) => {\n  console.log(id);\n};\n\nconst Category = () => {\n  const [category, setCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/category/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const showCategory = () => {\n    if (category.length === 0) {\n      return <p> no data found...</p>;\n    } else\n      return category.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Add New Category\"}</DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? showCategory() : <Typography>Loading ...</Typography>}\n    </Fragment>\n  );\n};\n\nexport default Category;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Classification = () => {\n  const [classification, setClassification] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/classification/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setClassification(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/classification/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n        return <ActionAlerts value={{ status: status }} />;\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/api/classification/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return <ActionAlerts value={{ status: res.statusText }} />;\n      })\n      .catch((err) => {\n        FetchData();\n        return <ActionAlerts value={{ status: err.statusText }} />;\n      });\n  };\n  const showClassification = () => {\n    if (classification.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return classification.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Classification\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Classification\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Classification Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? showClassification() : <Typography>Loading ...</Typography>}\n    </Fragment>\n  );\n};\n\nexport default Classification;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Typography, Grid, Button, Box } from \"@mui/material\";\n\nimport SubCategory from \"./SubCategory\";\nimport Category from \"./Category\";\nimport Classification from \"./Classification\";\n\nconst ManageCategory = () => {\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={8}>\n          <Typography component=\"h3\" variant=\"h5\">\n            Manage Category, Sub-category, Classification\n          </Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"error\">\n              Delete Checked\n            </Button>\n          </Box>\n        </Grid>\n\n        <Grid item lg={12}>\n          <Grid container spacing={5} mt={1}>\n            <Grid item lg={4}>\n              <Category />\n            </Grid>\n            <Grid item lg={4}>\n              <SubCategory />\n            </Grid>\n            <Grid item lg={4}>\n              <Classification />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageCategory;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Button,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { ActionAlerts, GetTime, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Contact = () => {\n  const [clientNo, setClientNo] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [ssn, setSsn] = useState(\"\");\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [homeNo, setHomeNo] = useState(\"\");\n  const [officeNo, setOfficeNo] = useState(\"\");\n  const [faxNo, setFaxNo] = useState(\"\");\n  const [otherNo, setOtherNo] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [plus4, setPlus4] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [contactData, setContactData] = useState({\n    // company info\n    company_name: \"\",\n    website: \"\",\n    ger_email: \"\",\n    billing_email: \"\",\n    // address\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    note: \"\",\n    f_name: \"\",\n    l_name: \"\",\n    email_1: \"\",\n    email_2: \"\",\n    email_3: \"\",\n    // other address\n    street2: \"\",\n    suite2: \"\",\n    city2: \"\",\n    state2: \"\",\n    office: \"\",\n    team: \"\",\n    member: \"\",\n    assign_to: \"\",\n    contact: \"\",\n    relation: \"\",\n  });\n\n  const {\n    company_name,\n    website,\n    ger_email,\n    billing_email,\n    street,\n    suite,\n    city,\n    state,\n    note,\n    f_name,\n    l_name,\n    email_1,\n    email_2,\n    email_3,\n    street2,\n    suite2,\n    city2,\n    state2,\n    office,\n    team,\n    member,\n    assign_to,\n    contact,\n    relation,\n  } = contactData;\n\n  const onChange = (e) => {\n    e.persist();\n    setContactData({ ...contactData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    //   let date = GetDate(pickDate);\n    //   const body = JSON.stringify({\n    //     company_name,\n    //     website,\n    //     ger_email,\n    //     billing_email,\n    //     street,\n    //     suite,\n    //     city,\n    //     state,\n    //     zip,\n    //     plus4,\n    //     client_no,\n    //     f_name,\n    //     l_name,\n    //     dob,\n    //     ssn,\n    //     mobile_no,\n    //     home_no,\n    //     office_no,\n    //     fax_no,\n    //     other_no,\n    //     email_1,\n    //     email_2,\n    //     email_3,\n    //     street2,\n    //     suite2,\n    //     city2,\n    //     state2,\n    //     zip2,\n    //     plus42,\n    //     office,\n    //     team,\n    //     member,\n    //     assign_to,\n    //     contact,\n    //     relation,\n    //   });\n    //   axios\n    //     .post(`${process.env.REACT_APP_API_URL}/api/contact/`, body, CONFIG)\n    //     .then((res) => {\n    //       <ActionAlerts value={{ status: res.statusText, message: \"Success\" }} />;\n    //     })\n    //     .catch((err) => {\n    //       <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />;\n    //     });\n    //   console.log(body);\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container p={2}>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h5\">\n              Company info\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"company_name\"\n              label=\"Company Name\"\n              type=\"text\"\n              value={company_name}\n              onChange={(e) => onChange(e)}\n              id=\"company_name\"\n              autoComplete=\"company_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Client #\"\n              id=\"clientno\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"clientno\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={clientNo}\n              onValueChange={(e) => setClientNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"First Name\"\n              label=\"f_name\"\n              type=\"text\"\n              value={f_name}\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Last Name\"\n              label=\"l_name\"\n              type=\"text\"\n              value={l_name}\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"DOB\"\n              id=\"dob\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              name=\"dob\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={dob}\n              onValueChange={(e) => setDob(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"#### #### ##\"\n              customInput={TextField}\n              label=\"SSN\"\n              id=\"ssn\"\n              name=\"ssn\"\n              value={ssn}\n              type=\"text\"\n              onValueChange={(e) => setSsn(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobileNo}\n              onValueChange={(e) => setMobileNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={homeNo}\n              onValueChange={(e) => setHomeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Office #\"\n              id=\"offlice_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"office_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={officeNo}\n              onValueChange={(e) => setOfficeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Fax #\"\n              id=\"fax_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"fax_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={faxNo}\n              onValueChange={(value) => setFaxNo(value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Other #\"\n              id=\"other_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"other_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={otherNo}\n              onValueChange={(e) => setOtherNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_1\"\n              label=\"Email 1\"\n              type=\"email\"\n              value={email_1}\n              onChange={(e) => onChange(e)}\n              id=\"email_1\"\n              autoComplete=\"email_1\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_2\"\n              label=\"Email 2\"\n              type=\"email\"\n              value={email_2}\n              onChange={(e) => onChange(e)}\n              id=\"email_2\"\n              autoComplete=\"email_2\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_3\"\n              label=\"Email 3\"\n              value={email_3}\n              type=\"email\"\n              onChange={(e) => onChange(e)}\n              id=\"email_3\"\n              autoComplete=\"email_3\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"street\"\n              type=\"text\"\n              value={street}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              value={city}\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip\"\n              label=\"zip\"\n              type=\"text\"\n              id=\"zip\"\n              type=\"text\"\n              value={zip}\n              onValueChange={(e) => setZip(e.value)}\n            />\n\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus4\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus4\"\n              type=\"text\"\n              value={plus4}\n              onValueChange={(e) => setPlus4(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              multiline\n              rows={5}\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Notes...\"\n              label=\"note\"\n              type=\"text\"\n              value={note}\n              onChange={(e) => onChange(e)}\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h6\">\n              Alternate Information\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"webiste\"\n              label=\"Webiste\"\n              type=\"text\"\n              value={website}\n              onChange={(e) => onChange(e)}\n              id=\"webiste\"\n              autoComplete=\"webiste\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"ger_email\"\n              label=\"General Email\"\n              type=\"text\"\n              value={ger_email}\n              onChange={(e) => onChange(e)}\n              id=\"ger_email\"\n              autoComplete=\"ger_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_email\"\n              label=\"Invoice/ Billing Email\"\n              type=\"text\"\n              value={billing_email}\n              onChange={(e) => onChange(e)}\n              id=\"billing_email\"\n              autoComplete=\"billing_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"Street\"\n              type=\"text\"\n              value={street2}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite2}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              type=\"text\"\n              value={city2}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip2\"\n              label=\"Zip\"\n              type=\"text\"\n              id=\"zip2\"\n              type=\"text\"\n              value={zip2}\n              onValueChange={(e) => setZip2(e.value)}\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus42\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus42\"\n              type=\"text\"\n              value={plus42}\n              onValueChange={(e) => setPlus42(e.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Source\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"office\"\n                  label=\"Office\"\n                  type=\"text\"\n                  value={office}\n                  onChange={(e) => onChange(e)}\n                  id=\"office\"\n                  autoComplete=\"office\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"team\"\n                  label=\"Team\"\n                  type=\"text\"\n                  value={team}\n                  onChange={(e) => onChange(e)}\n                  id=\"team\"\n                  autoComplete=\"team\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"member\"\n                  label=\"Member\"\n                  type=\"text\"\n                  value={member}\n                  onChange={(e) => onChange(e)}\n                  id=\"member\"\n                  autoComplete=\"member\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Assigned To\n                </Typography>\n                <FormControl\n                  size=\"small\"\n                  sx={{ mt: 2, mb: 2, minWidth: \"14rem\" }}\n                >\n                  <InputLabel id=\"demo-simple-select-autowidth-label\">\n                    Assigned To\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-autowidth-label\"\n                    id=\"demo-simple-select-autowidth\"\n                    value={assign_to}\n                    onChange={(e) => onChange(e)}\n                    autoWidth\n                    label=\"assign_to\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>Auto Assign</em>\n                    </MenuItem>\n                    <MenuItem value={10}>Twenty</MenuItem>\n                    <MenuItem value={21}>Twenty one</MenuItem>\n                    <MenuItem value={22}>Twenty one and a half</MenuItem>\n                  </Select>\n                </FormControl>\n\n                <Button variant=\"contained\" color=\"primary\">\n                  Auto Assign\n                </Button>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Linked Contacts\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"Contact\"\n                  type=\"text\"\n                  value={contact}\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"relation\"\n                  label=\"Relation\"\n                  type=\"text\"\n                  value={relation}\n                  onChange={(e) => onChange(e)}\n                  id=\"relation\"\n                  autoComplete=\"relation\"\n                />\n              </Grid>\n            </Grid>\n            <Box sx={{ float: \"right\" }}>\n              <Button variant=\"contained\" type=\"submit\" endIcon={<SaveIcon />}>\n                Save\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Contact;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Button,\n  TextField,\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Tab,\n  Paper,\n  Box,\n  Typography,\n  Switch,\n} from \"@mui/material\";\nimport { TabList, TabContext, TabPanel } from \"@mui/lab\";\nimport { connect } from \"react-redux\";\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport NumberFormat from \"react-number-format\";\n\n// import { update_profile } from \"../../store/actions/profile\";\n\nconst Profile = ({ profile }) => {\n  const [value, setValue] = React.useState(\"1\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [underGradYear, setUnderGradYear] = useState(\"\");\n\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [barNo, setBarNo] = useState(\"\");\n  const [practiceTime, setPracticeTime] = useState(\"\");\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    mobile: 0,\n    phone: 0,\n    state: \"\",\n    city: \"\",\n    language: \"\",\n    locate: false,\n    search_active: false,\n    law_school: \"\",\n    grad_year: \"\",\n    bar_admit_date: \"\",\n    undergrad_school: \"\",\n    undergrad_area: \"\",\n    undergrad_year: \"\",\n    bar_no: 0,\n    admitted_practice: \"\",\n    practice_time: \"\",\n    longest_tenure: \"\",\n    average_tenure: \"\",\n    current_tenure: \"\",\n    past_bar_companies_no: \"\",\n    primary_area: \"\",\n  });\n  const {\n    username,\n    email,\n    mobile,\n    phone,\n    state,\n    city,\n    language,\n    locate,\n    search_active,\n    law_school,\n    grad_year,\n    bar_admit_date,\n    undergrad_school,\n    undergrad_area,\n    undergrad_year,\n    bar_no,\n    admitted_practice,\n    practice_time,\n    longest_tenure,\n    average_tenure,\n    current_tenure,\n    past_bar_companies_no,\n    primary_area,\n  } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let id = profile.id;\n    const body = JSON.stringify({\n      username,\n      email,\n      mobile,\n      phone,\n      state,\n      city,\n      language,\n      locate,\n      search_active,\n      law_school,\n      grad_year,\n      bar_admit_date,\n      undergrad_school,\n      undergrad_area,\n      undergrad_year,\n      bar_no,\n      admitted_practice,\n      practice_time,\n      longest_tenure,\n      average_tenure,\n      current_tenure,\n      past_bar_companies_no,\n      primary_area,\n    });\n    console.log(body);\n    axios\n      .patch(\n        `${process.env.REACT_APP_API_URL}/api/profile/${id}/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Fragment>\n      {/* {profile ? ( */}\n      <Box p={5}>\n        <Paper elevation={5} sx={{ borderRadius: 3 }}>\n          <TabContext value={value} p={8}>\n            <Box component=\"form\" onSubmit={(e) => onSubmit(e)}>\n              <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                <TabList\n                  onChange={handleChange}\n                  aria-label=\"lab API tabs example\"\n                >\n                  <Tab label=\"Profile\" value=\"1\" />\n                  <Tab label=\"Education\" value=\"2\" />\n                  <Tab label=\"Work History\" value=\"3\" />\n                </TabList>\n              </Box>\n              <TabPanel value=\"1\">\n                <Grid container spacing={2}>\n                  <Grid item sx={12} xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Username\"\n                      value={username}\n                      id=\"username\"\n                      name=\"username\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.username}\n                      disabled\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Mobile #\"\n                      id=\"mobile\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"mobile\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={mobileNo}\n                      onValueChange={(e) => setMobileNo(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Phone #\"\n                      id=\"phone\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"phone\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={phoneNo}\n                      onValueChange={(e) => setPhoneNo(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Email\"\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.email}\n                      disabled\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"State\"\n                      id=\"state\"\n                      name=\"state\"\n                      type=\"text\"\n                      value={state}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.state}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"City\"\n                      id=\"city\"\n                      name=\"city\"\n                      type=\"text\"\n                      value={city}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.city}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Language(s)\"\n                      value={language}\n                      id=\"language\"\n                      name=\"language\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.language}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Willing to locate\"\n                      id=\"locate\"\n                      name=\"locate\"\n                      value={locate}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.locate}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Search Type (Active/ Passiv)\"\n                      id=\"search_active\"\n                      name=\"search_active\"\n                      value={search_active}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.search_active}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      m={5}\n                      variant=\"contained\"\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"2\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"2\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Law School\"\n                      id=\"law_school\"\n                      name=\"law_school\"\n                      value={law_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.law_school}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Grad year\"\n                      id=\"grad_year\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      name=\"grad_year\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={gradYear}\n                      onValueChange={(e) => setGradYear(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####/##/##\"\n                      placeholder=\"YYYY/MM/DD\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n                      customInput={TextField}\n                      label=\"Bar Admittance Date\"\n                      id=\"bar_admit_date\"\n                      name=\"bar_admit_date\"\n                      value={barDate}\n                      onValueChange={(e) => setBarDate(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrad school\"\n                      id=\"undergrad_school\"\n                      name=\"undergrad_school\"\n                      value={undergrad_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_school}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrade area of study\"\n                      id=\"undergrad_area\"\n                      name=\"undergrad_area\"\n                      value={undergrad_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_area}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      label=\"Undergrade year\"\n                      id=\"undergrad_year\"\n                      name=\"undergrad_year\"\n                      value={underGradYear}\n                      type=\"text\"\n                      onValueChange={(e) => setUnderGradYear(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"#### #### ##\"\n                      customInput={TextField}\n                      label=\"Bar #\"\n                      id=\"bar_no\"\n                      name=\"bar_no\"\n                      value={barNo}\n                      type=\"text\"\n                      onValueChange={(e) => setBarNo(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Admitted practice (state & District)\"\n                      value={admitted_practice}\n                      id=\"admitted_practice\"\n                      name=\"admitted_practice\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.admitted_practice}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      variant=\"contained\"\n                      mb={5}\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"3\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"3\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Practive Time (months / years)\"\n                      id=\"practice_time\"\n                      name=\"practice_time\"\n                      value={practiceTime}\n                      type=\"text\"\n                      onValueChange={(e) => setPracticeTime(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Longest tenure (months / years)\"\n                      id=\"longest_tenure\"\n                      name=\"longest_tenure\"\n                      value={longestTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setLongestTenure(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Average tenure (months / years)\"\n                      value={averageTenure}\n                      id=\"average_tenure\"\n                      name=\"average_tenure\"\n                      type=\"text\"\n                      onValueChange={(e) => setAverageTenure(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Time at Current Company (months / years)\"\n                      id=\"current_tenure\"\n                      name=\"current_tenure\"\n                      value={currentTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setCurrentTenure(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"# of Companies Post Bar\"\n                      id=\"past_bar_companies_no\"\n                      name=\"past_bar_companies_no\"\n                      value={past_bar_companies_no}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.past_bar_companies_no}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Primary areas of Law\"\n                      id=\"primary_area\"\n                      name=\"primary_area\"\n                      value={primary_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.primary_area}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Button\n                      variant=\"contained\"\n                      type=\"submit\"\n                      sx={{\n                        float: \"right\",\n                        marginTop: \"10rem\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n            </Box>\n          </TabContext>\n        </Paper>\n      </Box>\n      {/* // ) : ( // <Typography>Something wend wrong!</Typography>\n      // )} */}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  profile: state.auth.profile,\n});\n\nexport default connect(mapStateToProps)(Profile);\n","/** @format */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  TextField,\n  Switch,\n  FormControlLabel,\n  Box,\n  Grid,\n  Button,\n  Typography,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport axios from \"axios\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\n\nconst CreateTask = () => {\n  const [dueDate, setDueDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [bill, setBill] = useToggle(true);\n  const [matterData, setMatterData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useToggle(true);\n  const [file, setFile] = useState(\"\");\n  const [taskData, setTaskData] = useState({\n    matter_id: 0,\n    matter_contact: 0,\n    matter: \"\",\n    task: \"\",\n    filename: \"\",\n    assign_to: 0,\n    detail: \"\",\n  });\n\n  const {\n    matter_id,\n    matter_contact,\n    matter,\n    task,\n    filename,\n    assign_to,\n    detail,\n  } = taskData;\n\n  const onChange = (e) =>\n    setTaskData({ ...taskData, [e.target.name]: e.target.value });\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/matter/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setMatterData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log(matter_id, matter_contact, matter, task);\n    let due_at = GetDate(dueDate);\n    let is_billable = bill;\n    let is_private = isPrivate;\n\n    const body = JSON.stringify({\n      matter_id,\n      matter_contact,\n      matter,\n      task,\n      file,\n      is_billable,\n      is_private,\n      due_at,\n      assign_to,\n      detail,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-task/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n          \"& .MuiSelect-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Task\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_id\"\n              label=\"matter_id\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_id}\n              onChange={(e) => onChange(e)}\n              id=\"matter_id\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"matter\"\n              type=\"text\"\n              min=\"0\"\n              value={matter}\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"task\"\n              label=\"Task\"\n              type=\"text\"\n              value={task}\n              onChange={(e) => onChange(e)}\n              id=\"task\"\n              autoComplete=\"task\"\n            />\n            <Box ml={2} mt={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Attach File \"\n                labelPlacement=\"start\"\n                control={\n                  <input\n                    type=\"file\"\n                    name=\"filename\"\n                    id=\"file\"\n                    onChange={(e) => onChange(e)}\n                  />\n                }\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"file\"\n                label=\"please chose any file\"\n                type=\"text\"\n                min=\"0\"\n                value={filename}\n                onChange={(e) => setFile(filename)}\n                id=\"file\"\n                disabled\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_contact\"\n              label=\"matter_contact\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_contact}\n              onChange={(e) => onChange(e)}\n              id=\"matter_contact\"\n            />\n            <Box p={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Billable\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={bill}\n                    onChange={() => setBill(bill)}\n                  />\n                }\n              />\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Private\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={isPrivate}\n                    onChange={() => setIsPrivate(isPrivate)}\n                  />\n                }\n              />\n            </Box>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Due Date\"\n                value={dueDate}\n                name=\"dueDate\"\n                id=\"dueDate\"\n                onChange={(e) => setDueDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"Assign to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              autoComplete=\"assign_to\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              multiline\n              rows={5}\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"Detail\"\n              type=\"text\"\n              value={detail}\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n            />\n\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateTask;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport ViewTasks from \"./ViewTasks\";\nimport CreateTask from \"./CreateTask\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Task\">\n          <ViewTasks />\n        </div>\n        <div label=\"Create Task\">\n          <CreateTask />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport DashBoard from \"../Admin/DashBoard\";\n\nimport {\n  Box,\n  Typography,\n  Tabs,\n  Tab,\n  IconButton,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\n\nimport TabContext from \"@mui/lab/TabContext\";\nimport TabList from \"@mui/lab/TabList\";\n\nimport TabPanel from \"@mui/lab/TabPanel\";\nimport PropTypes from \"prop-types\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\n\n// components of tabs\nimport Invoice from \"../../Invoice\";\nimport Matter from \"../../Matter\";\nimport Ledger from \"../../Ledger\";\nimport Favorite from \"../../Favorite/Favorites\";\nimport Category from \"../../Category/ManageCategory\";\nimport Contact from \"../../Contact/Contact\";\nimport Profile from \"../../Profile/Profile\";\nimport Tasks from \"../../Tasks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport {\n  addNewTab,\n  removeNewTab,\n  removeLastNewTab,\n} from \"../../../redux/features/searchTabSlice\";\nimport { addTab, removeTab } from \"../../../redux/features/tabSlice\";\n\nconst data = [\n  { name: \"invoice\", content: <Invoice /> },\n  { name: \"matter\", content: <Matter /> },\n  { name: \"ledger\", content: <Ledger /> },\n  { name: \"favorite\", content: <Favorite /> },\n  { name: \"category\", content: <Category /> },\n  { name: \"contact\", content: <Contact /> },\n  { name: \"profile\", content: <Profile /> },\n  { name: \"tasks\", content: <Tasks /> },\n];\nconst component = {\n  invoice: <Invoice />,\n  matter: <Matter />,\n  ledger: <Ledger />,\n  favorite: <Favorite />,\n  category: <Category />,\n  contact: <Contact />,\n  profile: <Profile />,\n  tasks: <Tasks />,\n};\n\nconst AdminDashboard = () => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const tabList = useSelector((state) => state.tabs);\n  const newTabList = useSelector((state) => state.newTabs);\n  const dispatch = useDispatch();\n\n  // search tab will match the text and display tab\n  const [wordEntered, setWordEntered] = useState(\"\");\n\n  const searchItem = () => {\n    let selectedItem = data.filter((value) => {\n      if (value.name === wordEntered) {\n        return true;\n      }\n    });\n  };\n  const handleChangeSearch = (e) => {\n    setWordEntered(e.target.value);\n    let id = tabList.length + 1;\n    dispatch(\n      addTab({\n        id: id,\n        tab: e.target.value,\n      }),\n    );\n    dispatch(removeLastNewTab());\n    setValue(id);\n    searchItem();\n  };\n  const handleRemoveTab = (tab) => {\n    dispatch(removeTab(tab));\n    setValue(0);\n  };\n  const handleRemoveNewTab = (tab) => {\n    dispatch(removeNewTab(tab));\n    setValue(0);\n  };\n\n  const addSearchTab = () => {\n    let id = newTabList.length + 10;\n    setTimeout(\n      dispatch(\n        addNewTab({\n          id: id,\n          name: \"newtab\",\n        }),\n      ),\n      5000,\n    );\n\n    setValue(id);\n  };\n  const displayNewTabsName = () => {\n    if (newTabList) {\n      return newTabList.map((tab) => (\n        <Tab\n          key={tab.id}\n          value={tab.id}\n          label={\n            <span>\n              newtab\n              <IconButton\n                component=\"div\"\n                onClick={() => handleRemoveNewTab(tab)}\n              >\n                <CloseIcon />\n              </IconButton>\n            </span>\n          }\n        />\n      ));\n    } else return null;\n  };\n  const displayTabsName = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <Tab\n          key={tab.id}\n          value={tab.id}\n          label={\n            <span>\n              {\" \"}\n              {tab.name}\n              <IconButton component=\"div\" onClick={() => handleRemoveTab(tab)}>\n                <CloseIcon />\n              </IconButton>\n            </span>\n          }\n        />\n      ));\n    } else return null;\n  };\n  const searchTab = () => {\n    return (\n      <Box\n        noValidate\n        sx={{\n          p: \"2px 4px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          width: \"50%\",\n          borderRadius: \"5rem\",\n          backgroundColor: \"#dfdfdf\",\n        }}\n      >\n        <Select\n          fullWidth\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value=\"\"\n          label=\"Search....\"\n          onChange={handleChangeSearch}\n          sx={{\n            \" & .MuiOutlinedInput-notchedOutline\": {\n              border: \"none\",\n            },\n          }}\n        >\n          {data.map((item, index) => (\n            <MenuItem key={index} value={item.name}>\n              {item.name}\n            </MenuItem>\n          ))}\n        </Select>\n\n        <IconButton type=\"submit\" sx={{ p: \"10px\" }} aria-label=\"search\">\n          {wordEntered.length === 0 ? <SearchIcon /> : <CloseIcon />}\n        </IconButton>\n      </Box>\n    );\n  };\n  const displaySearchTabs = () => {\n    if (newTabList) {\n      return newTabList.map((tab) => (\n        <TabPanel value={tab.id}>{searchTab()}</TabPanel>\n      ));\n    } else return null;\n  };\n  const displayTabs = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <TabPanel value={tab.id}>{component[tab.name]}</TabPanel>\n      ));\n    } else return null;\n  };\n\n  const renderTabs = () => {\n    return (\n      <Box sx={{ width: \"100%\" }}>\n        <TabContext value={value}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              variant=\"scrollable\"\n              scrollButtons\n              allowScrollButtonsMobilearia-label=\"lab API tabs example\"\n            >\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label=\"Dashboard\"\n                value={0}\n              />\n\n              {displayTabsName()}\n              {displayNewTabsName()}\n\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label={\n                  <IconButton\n                    component=\"div\"\n                    onClick={() => dispatch(addNewTab())}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                }\n                onClick={addSearchTab}\n                value={100}\n              />\n            </Tabs>\n          </Box>\n          <TabPanel value={0}>\n            <DashBoard />\n          </TabPanel>\n          {displayTabs()}\n          {displaySearchTabs()}\n          <TabPanel value={100}></TabPanel>\n        </TabContext>\n      </Box>\n    );\n  };\n  useEffect(() => {\n    renderTabs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <Fragment>{renderTabs()}</Fragment>;\n};\n\nexport default AdminDashboard;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { LinearProgress, Box, Grid, Typography } from \"@mui/material\";\n\nconst ProgressBar = () => {\n  const [progress, setProgress] = useState(69);\n  return (\n    <Box paddingLeft={3} paddingRight={3}>\n      <Grid container>\n        <Grid item lg={1} xs={12}>\n          <Typography>{progress}%</Typography>\n        </Grid>\n        <Grid item lg={11} xs={12} mt={2} mb={5}>\n          <LinearProgress variant=\"determinate\" value={progress} />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ProgressBar;\n","/** @format */\n\nimport React from \"react\";\n\nimport { Typography, Box, Paper, Grid } from \"@mui/material\";\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from \"@mui/material\";\n\nconst randomDate = (start, end) => {\n  const getDateTime = new Date(\n    start.getTime() + Math.random() * (end.getTime() - start.getTime()),\n  );\n  const date = getDateTime.toLocaleDateString();\n  const hour = getDateTime.getHours();\n  const min = getDateTime.getMinutes();\n\n  return date + \" \" + hour + \":\" + min;\n};\n\nconst Task = () => {\n  return (\n    <Grid container>\n      <Grid item lg={12} xs={12}>\n        <Typography component=\"h5\" variant=\"h6\" color=\"primary\">\n          My Tasks\n        </Typography>\n        <TableContainer component={Paper}>\n          <Table size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    ID\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Date\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Subject\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Detail\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow bgColor=\"#e85355\">\n                <TableCell>\n                  <Typography variant=\"caption\">123452</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Submit Document X</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display first 3 links\n                  </Typography>{\" \"}\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#fd9905\">\n                <TableCell>\n                  <Typography variant=\"caption\">113457</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Y</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display more details\n                  </Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#28c570\">\n                <TableCell>\n                  <Typography variant=\"caption\">113455</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Z</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Note in popup</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"white\">\n                <TableCell>\n                  <Typography variant=\"caption\">113458</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document XY</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display First 3 links\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Task;\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nexport const AdminCards = () => {\n  return (\n    <>\n      <Grid container spacing={1}>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5} xs={12}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    New Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    Lost Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport const LawyerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Projected Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={230} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Annual Trending Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={768} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const FirmCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={6} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Lost Customers\n              </Typography>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const CustomerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={2}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Balance\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Payment Due\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={12345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nconst Cards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                New Matters\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={3425}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n// import axios from 'axios';\n\nimport { Grid } from \"@mui/material\";\n\nimport Calender from \"../Calender\";\nimport ProgressBar from \"../ProgressBar\";\n\nimport Tasks from \"../Tasks\";\nimport { CustomerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={3}>\n        <Grid item lg={2} xs={12}>\n          <CustomerCards />\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Calender />\n        </Grid>\n        <Grid item p={2} lg={6} xs={12}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <ProgressBar />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Button, Grid, Box, List, ListItem, ListItemText } from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst Templates = () => {\n  return (\n    <Fragment>\n      <Grid container mt={1} spacing={1}>\n        <Grid item xs={12} m={2}>\n          <Button variant=\"contained\" size=\"small\">\n            Merge Fields.XLS\n          </Button>\n          <Box sx={{ float: \"right\" }}>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Doc\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New PDF\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Email\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Edit\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Save\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Close\n            </Button>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Word Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Report Money</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - Report Time</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Report Billed hours</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              PDF Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>P001 - Write of Execution</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P002 - Memo of Cost</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P003 - Settlement Letter</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Email Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Invoice Email</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - New Client</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Firing Client</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              padding: \"15rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Templates can be opened here to edit them. user can add/ remove\n            merge fields directly to the document or PDF\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Templates;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Client/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\n\n\nconst ClientDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default ClientDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const PieChart = () => {\n  const state = {\n    series: [86, 14],\n    options: {\n      chart: {\n        height: 500,\n        type: \"pie\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"65%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val + \"%\";\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Prodcutive v. Non-Productive Time\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n        horizontalAlign: \"center\",\n      },\n      colors: [\"#738df5\", \"#eaa3ff\"],\n      labels: [\"Non Productive\", \"Productive\"],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"pie\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            background: \"#aaa\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shade: \"gark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\", \"pink\"],\n        stops: [0, 3],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"user 1\",\n        data: [44, 55, 41, 37, 22, 43, 21],\n      },\n      {\n        name: \"user 2\",\n        data: [53, 32, 33, 52, 13, 43, 32],\n      },\n      {\n        name: \"User 3\",\n        data: [12, 17, 11, 9, 15, 11, 20],\n      },\n      {\n        name: \"User 4\",\n        data: [9, 7, 5, 8, 6, 9, 4],\n      },\n    ],\n    options: {\n      chart: {\n        type: \"bar\",\n        height: 350,\n        stacked: true,\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        borderRadius: 8,\n        colors: [\"#fff\"],\n      },\n\n      title: {\n        text: \"% Indicating User Ranking\",\n      },\n      xaxis: {\n        categories: [\n          \"Word per Min\",\n          \"Matter Completed\",\n          \"Revenue Generated\",\n          \"Articals Submitted\",\n          \"New Client\",\n          \"New Matter\",\n        ],\n        labels: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: undefined,\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      fill: {\n        opacity: 1,\n      },\n      color: [\"#738df5\", \"#eaa3ff\", \"#738df5\", \"#eaa3ff\"],\n      legend: {\n        show: false,\n        position: \"top\",\n        horizontalAlign: \"left\",\n        offsetX: 40,\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Grid } from \"@mui/material\";\nimport Calender from \"../Calender\";\nimport Tasks from \"../Tasks\";\nimport { Chart2, PieChart, BarChart } from \"./Chart\";\nimport { LawyerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={2}>\n          <LawyerCards />\n        </Grid>\n        <Grid item lg={4}>\n          <PieChart />\n        </Grid>\n        <Grid item lg={6}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={4}>\n          <Chart2 />\n        </Grid>\n        <Grid item lg={8}>\n          <BarChart />\n        </Grid>\n        <Grid item>\n          <Calender />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Lawyer/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst LawyerDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default LawyerDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const Chart = () => {\n  const state = {\n    series: [110, 110, 19, 80],\n    options: {\n      chart: {\n        height: 500,\n        type: \"donut\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"55%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Matter by Type\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      colors: [\"#03a5fc\", \"#fcd200\", \"#fca400\", \"#003f5c\"],\n      labels: [\n        \"Business Contacts\",\n        \"Criminal Defence\",\n        \"Personal Injury\",\n        \"Family Law\",\n      ],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"donut\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            // background: \"#333\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"solid\",\n      gradient: {\n        shade: \"dark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\"],\n        stops: [0, 100],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"Profit\",\n        data: [640, 505, 210, 108, 760, 410, 440, 140, 660, 320],\n      },\n      {\n        name: \"Loss\",\n        data: [530, 302, 420, 220, 290, 800, 160, 490, 708, 110],\n      },\n    ],\n\n    options: {\n      colors: [\"#e85355\", \"#28c570\"],\n      chart: {\n        height: 100,\n        type: \"bar\",\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n        },\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function (val) {\n          return \"$\" + val;\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return \"$ \" + val + \"\";\n          },\n        },\n      },\n\n      xaxis: {\n        categories: [\n          \"Jan\",\n          \"Feb\",\n          \"Mar\",\n          \"Apr\",\n          \"May\",\n          \"Jun\",\n          \"July\",\n          \"Aug\",\n          \"Sep\",\n          \"Oct\",\n        ],\n      },\n\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"right\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart2 = () => {\n  const state = {\n    series: [\n      {\n        data: [19, 57, 78, 40, 95, 25],\n      },\n    ],\n\n    options: {\n      chart: {\n        height: 350,\n        type: \"bar\",\n      },\n      colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n      plotOptions: {\n        bar: {\n          columnWidth: \"45%\",\n          distributed: true,\n        },\n      },\n      dataLabels: {\n        enabled: true,\n        formatter: function (val) {\n          return val + \"%\";\n        },\n      },\n      legend: {\n        show: false,\n      },\n      title: {\n        text: \"% of Task Completed by User\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      xaxis: {\n        categories: [\n          \"M. Jones\",\n          \"R. Smith\",\n          \"T.Sweeney\",\n          \"S. Booker\",\n          \"A. Knighter\",\n          \"J. King\",\n        ],\n        labels: {\n          style: {\n            // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n            fontSize: \"12px\",\n          },\n        },\n\n        legend: {\n          show: false,\n          dropShadow: false,\n          position: \"right\",\n          labels: {\n            useSeriesColors: true,\n          },\n          onItemClick: {\n            toggleDataSeries: true,\n          },\n          formatter: function (seriesName, opts) {\n            return (\n              seriesName +\n              \":  <NumberFormat value={\" +\n              opts.w.globals.series[opts.seriesIndex] +\n              \"} displayType={'text'} thousandSeparator={true}/>\"\n            );\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart3 = () => {\n  const state = {\n    // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n    options: {\n      series: [\n        {\n          data: [750, 280, 500, 720],\n        },\n      ],\n      chart: {\n        type: \"bar\",\n        height: 380,\n      },\n      plotOptions: {\n        bar: {\n          barHeight: \"100%\",\n          borderRadius: 8,\n          distributed: true,\n          horizontal: true,\n          dataLabels: {\n            position: \"top\",\n          },\n        },\n      },\n      //       light blue,  yellow, orange, dark blue,\n      colors: [\"#fcd200\", \"#fca400\", \"#003f5c\", \"#03a5fc\"],\n      dataLabels: {\n        enabled: false,\n        textAnchor: \"start\",\n        style: {\n          colors: [\"#fff\"],\n        },\n        formatter: function (val, opt) {\n          return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val;\n        },\n        offsetX: 0,\n        dropShadow: {\n          enabled: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        colors: [\"#fff\"],\n      },\n      xaxis: {\n        categories: [\n          \"Criminal Defense\",\n          \"Personal Injury\",\n          \"Family Law\",\n          \"Business Contract\",\n        ],\n      },\n      yaxis: {\n        labels: {\n          show: true,\n        },\n      },\n      title: {\n        text: \"Revenue By Mater Type\",\n        align: \"center\",\n        floating: true,\n      },\n\n      tooltip: {\n        theme: \"light\",\n        x: {\n          show: false,\n        },\n        y: {\n          formatter: function (val, opt) {\n            return (\n              opt.w.globals.labels[opt.dataPointIndex] + \": $ \" + val + \" k\"\n            );\n          },\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.options.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Paper, Grid, Box } from \"@mui/material\";\n\nimport Tasks from \"../Tasks\";\nimport { FirmCards } from \"../Cards\";\n\nimport { Chart, Chart2, BarChart, BarChart2, BarChart3 } from \"./Charts\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      {/*main dashboard section for display  */}\n      <Box component={Paper} elevation={3} mt={4}>\n        <Grid container spacing={2}>\n          <Grid item lg={8} xs={12}>\n            <FirmCards />\n            <Grid container>\n              <Grid item lg={5} xs={12}>\n                <Chart2 />\n              </Grid>\n              <Grid item lg={7} xs={12}>\n                <Tasks />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Chart />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <BarChart />\n          </Grid>\n          <Grid item lg={6} xs={6}>\n            <BarChart2 />\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <BarChart3 />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Firm/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst FirmDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default FirmDashboard;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport AdminDashboard from \"../components/Dashboard/UserRoles/AdminDashboard\";\nimport ClientDashboard from \"../components/Dashboard/UserRoles/ClientDashboard\";\nimport LawyerDashboard from \"../components/Dashboard/UserRoles/LawyerDashboard\";\nimport FirmDashboard from \"../components/Dashboard/UserRoles/FirmDashboard\";\n\nconst Dashboard = () => {\n    const { user } = useSelector(\n      (state) => state.auth \n    )\n\n  // checker type of user\n  const [localuser, setLocalUser] = useState({\n    username: \"Guest\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: true,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const dashboardRedirect = () => {\n    switch (user.username) {\n      case \"admin\":\n        return <AdminDashboard />;\n      case \"firm\":\n        return <FirmDashboard />;\n      case \"lawyer\":\n        return <LawyerDashboard />;\n      default:\n        return <ClientDashboard />;\n    }\n  };\n  return <>{dashboardRedirect()}</>;\n};\n\nexport default Dashboard;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n} from \"@mui/material\";\nimport AlertMassage from \"../../components/Alerts/Alerts\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/login_light.png\";\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [statusCode, setStatusCode] = useState(0)\n\n  const { username, email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n     login(username, email, password);\n    // setStatusCode(code)\n  \n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"87vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            {/* csrf_token */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              value={username}\n              onChange={(e) => onChange(e)}\n              autoComplete=\"new-password\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              autoComplete=\"new-password\"\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => onChange(e)}\n              id=\"password\"\n              minLength=\"6\"\n              autoComplete=\"password\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n          </Box>\n          <Grid container>\n            <Grid item xs>\n              <Link to=\"/\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../../actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n  FormControlLabel,\n  FormLabel,\n  FormGroup,\n  Checkbox,\n  RadioGroup,\n  Radio,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/signup_light.png\";\n\nconst Signup = ({ register, isAuthenticated }) => {\n  const [accountCreated, setAccountCreated] = useState(false);\n  const [isFirm, setIsFirm] = useState(false);\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    re_password: \"\",\n  });\n\n  const { username, email, first_name, last_name, password, re_password } =\n    formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    let is_firm = isFirm;\n    let is_client = !isFirm;\n\n    if (password === re_password) {\n      register(\n        email,\n        first_name,\n        last_name,\n        username,\n        password,\n        re_password,\n        is_firm,\n        is_client,\n      );\n\n      setAccountCreated(true);\n    } else {\n      console.log(\"Password no match, Please type again!\");\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (accountCreated) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"85vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={(e) => onChange(e)}\n                  autoComplete=\"new-password\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"first_name\"\n                  label=\"First Name\"\n                  name=\"first_name\"\n                  value={first_name}\n                  onChange={(e) => onChange(e)}\n                  autoComplete=\"new-password\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"last_name\"\n                  label=\"Last Name\"\n                  name=\"last_name\"\n                  autoComplete=\"last_name\"\n                  value={last_name}\n                  onChange={(e) => onChange(e)}\n                  autoFocus\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={(e) => onChange(e)}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                value={password}\n                onChange={(e) => onChange(e)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"re_password\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                value={re_password}\n                onChange={(e) => onChange(e)}\n                id=\"re_password\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Sign up as a </FormLabel>\n              <RadioGroup\n                row\n                value={isFirm}\n                onChange={(e) => setIsFirm(e.target.value)}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Firm\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Individual\"\n                />\n              </RadioGroup>\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormGroup>\n                <FormControlLabel\n                  control={<Checkbox />}\n                  label=\"Agreed on Term and Contidions\"\n                />\n              </FormGroup>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Register\n            </Button>\n          </Box>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" variant=\"body2\">\n                {\"Already have an account? Sign in\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { register })(Signup);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  Divider,\n  FormControlLabel,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Company = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate: 0.0,\n    role: \"\",\n    time_zone: \"\",\n    group: \"\",\n    job_title: \"\",\n    bar_no: 0,\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: 0,\n    ext: 0,\n    mobile: 0,\n    home: 0,\n    work_no: 0,\n\n    phone_ext: 0,\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    role,\n    time_zone,\n    group,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      c_email,\n      rate,\n      role,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      p_email,\n      phone_ext,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Box p={3} sx={{ float: \"right\" }}>\n        <LinkButton to=\"/users\">Manage User</LinkButton>\n        <LinkButton to=\"/user-group\">Manage Group</LinkButton>\n        <LinkButton to=\"/user-role\">Manage Role</LinkButton>\n      </Box>\n\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create User\n        </Typography>\n        <Grid container spacing={2} mt={2}>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"f_name\"\n              label=\"f_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"m_name\"\n              label=\"m_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"m_name\"\n              autoComplete=\"m_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"l_name\"\n              label=\"l_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"c_email\"\n              label=\"c_email\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"c_email\"\n              autoComplete=\"c_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"rate\"\n              label=\"rate\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"rate\"\n              autoComplete=\"rate\"\n            />\n            <FormControlLabel\n              label=\"Round Entries (Round [up/down] to nearnest 0.00 fraction of the hour\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n              sx={{ width: \"35rem\" }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"role\"\n              label=\"role\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"role\"\n              autoComplete=\"role\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"time_zone\"\n              label=\"time_zone\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"time_zone\"\n              autoComplete=\"time_zone\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"group\"\n              label=\"group\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"group\"\n              autoComplete=\"group\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"job_title\"\n              label=\"job_title\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"job_title\"\n              autoComplete=\"job_title\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bar_no\"\n              label=\"bar_no\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bar_no\"\n              autoComplete=\"bar_no\"\n            />\n          </Grid>\n          <Grid item mt={2}>\n            <Divider textAlign=\"left\">\n              <Typography component=\"h3\" variant=\"h5\">\n                Contact Info\n              </Typography>\n            </Divider>\n            <Box>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"street\"\n                label=\"street\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"street\"\n                autoComplete=\"street\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"suite\"\n                label=\"suite\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"suite\"\n                autoComplete=\"suite\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"city\"\n                label=\"city\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"city\"\n                autoComplete=\"city\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"state\"\n                label=\"state\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"state\"\n                autoComplete=\"state\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"zip\"\n                label=\"zip\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"zip\"\n                autoComplete=\"zip\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"ext\"\n                label=\"ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"ext\"\n                autoComplete=\"ext\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"mobile\"\n                label=\"mobile\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"mobile\"\n                autoComplete=\"mobile\"\n              />\n              <Button\n                variant=\"contained\"\n                sx={{ background: \"#5cb85c\", marginTop: \"0.5rem\" }}\n              >\n                Set Password Automaticly\n              </Button>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"home\"\n                label=\"home\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"home\"\n                autoComplete=\"home\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"work_no\"\n                label=\"work_no\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"work_no\"\n                autoComplete=\"work_no\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"p_email\"\n                label=\"p_email\"\n                type=\"email\"\n                onChange={(e) => onChange(e)}\n                id=\"p_email\"\n                autoComplete=\"p_email\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"phone_ext\"\n                label=\"phone_ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"phone_ext\"\n                autoComplete=\"phone_ext\"\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Box\n              sx={{\n                \"& .MuiButton-root\": { m: 1 },\n                float: \"right\",\n              }}\n            >\n              <Button variant=\"contained\" type=\"submit\">\n                Create Member\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Company;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\nimport Filters from \"../../components/Matter/Filters\";\nimport MatterCards from \"../../components/Matter/MatterCards\";\nimport MatterListLong from \"../../components/Matter/MatterListLong\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item xs={12}>\n            <Filters />\n          </Grid>\n          <Grid item xs={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item xs={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Matters;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Switch,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Button,\n  TextField,\n  Box,\n  Grid,\n  MenuItem,\n  Typography,\n  Divider,\n  FormControlLabel,\n  Stack,\n} from \"@mui/material\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport NumberFormat from 'react-number-format';\nimport CreateUser from \"./CreateUser\";\nimport {\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useToggle } from \"../../context/useToggle\";\n\nconst User = () => {\n  const [usersData, setUsersData] = useState([]);\n\n  const [isActive, setIsActive] = useToggle(false);\n  const [searchItem, setSearchItem] = useState(\"\")\n\n  const [roles, setRoles] = useState([]);\n  const [role, setRole] = useState(\"\");\n  const [group, setGroup] = useState(\"\");\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [rateType, setRateType] = useState(\"\");\n\n  const handleChange = (event) => {\n    setRateType(event.target.value);\n  };\n\n  const [approvel, setApprovel] = useToggle(false);\n\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate_type: \"\",\n    rate: \" \",\n    time_zone: \"\",\n    job_title: \"\",\n    bar_no: \" \",\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    ext: \"\",\n    mobile: \"\",\n    home: \"\",\n    work_no: \"\",\n    p_email: \"\",\n    phone_ext: \"\",\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    time_zone,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const first_name = f_name;\n    const last_name = l_name;\n    const username = f_name.toLowerCase() + l_name.toLowerCase()\n    const password = username\n    const email = c_email\n    const body1 = JSON.stringify({username, first_name, last_name, email, password})\n    const body2 = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      p_email,\n      role,\n      c_email,\n      rate,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      phone_ext,\n    });\n    const axiosReguest1 = axios.post(`${process.env.REACT_APP_API_URL}/user/auth/register-firm-employee/`,body1, CONFIG)\n    const axiosReguest2 = axios.post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body2, CONFIG)\n      axios.all(axiosReguest1, axiosReguest2)   \n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/create-member/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handlleDeactivate = (id) => {\n    \n    axios\n      .put(\n        `${process.env.REACT_APP_API_URL}/user/auth/is-active-user/${id}/`, false,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchRoleData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, CONFIG)\n      .then((res) => {\n        // console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setRoles(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  const FetchGroupData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/groups/`, CONFIG)\n      .then((res) => {\n        setLoading2(false);\n        console.log(res.data)\n        setGroups(res.data);\n      })\n      .catch((err) => {\n        setLoading2(false);\n      });\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/users-list/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setUsersData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchRoleData();\n    FetchData();\n    FetchGroupData();\n  }, []);\n  const showUsers = () => {\n    if (usersData.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return usersData.filter((val)=>{\n        if (searchItem === \"\"){\n          return val\n        } else if(val.first_name.toLowerCase().includes(searchItem.toLowerCase())) {\n          return val\n        }else if(val.last_name.toLowerCase().includes(searchItem.toLowerCase())) {\n          return val\n        }\n\n      }).map((data) => {if(isActive){\n        return data.is_active ? (<TableRow>\n          <TableCell>{data.first_name}</TableCell>\n          <TableCell>{data.last_name}</TableCell>\n          <TableCell>{data.email}</TableCell>\n          <TableCell>{data.role}</TableCell>\n          <TableCell>{data.group}</TableCell>\n          <TableCell>{data.last_login}</TableCell>\n          <TableCell>{data.is_active ? \"active\":\"inactive\"}</TableCell>\n          {/* <TableCell>\n            <Button\n              variant=\"contained\"\n              value={data.is_active}\n              onClick={() => handlleDeactivate(data.id)}\n              sx={{\n                borderRadius: \"0.5rem\",\n                float: \"right\",\n              }}\n            >\n              <ClearIcon />\n            </Button>\n          </TableCell> */}\n          <TableCell></TableCell>\n        </TableRow>) : null\n      }\n    else return <TableRow>\n          <TableCell>{data.first_name}</TableCell>\n          <TableCell>{data.last_name}</TableCell>\n          <TableCell>{data.email}</TableCell>\n          <TableCell>{data.role}</TableCell>\n          <TableCell>{data.group}</TableCell>\n          <TableCell>{data.last_login}</TableCell>\n          <TableCell>{data.is_active ? \"active\":\"inactive\"}</TableCell>\n          {/* <TableCell>\n            <Button\n              variant=\"contained\"\n              value={data.is_active}\n              onClick={() => handlleDeactivate(data.id)}\n              sx={{\n                borderRadius: \"0.5rem\",\n                float: \"right\",\n              }}\n            >\n              <ClearIcon />\n            </Button>\n          </TableCell> */}\n          <TableCell></TableCell>\n        </TableRow>});\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <Typography component=\"h4\" variant=\"h5\" color=\"primary\" mb={2}>\n          Manage Users\n        </Typography>\n        <Stack p={3} direction=\"row\" spacing={2} sx={{ float: \"right\" }}>\n          <Search sx={{ width: \"15rem\" }}>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange ={e => setSearchItem(e.target.value)}\n            />\n          </Search>\n          <Button\n            color=\"success\"\n            onClick={handleClickOpen}\n            variant=\"contained\"\n            sx={{ color: \"white\", background: \"#28c570\" }}\n          >\n            + Add User\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth=\"true\"\n            maxWidth=\"xl\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New User\"}</DialogTitle>\n            <DialogContent>\n              <Grid\n                container\n                spacing={2}\n                mt={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\", \"input::-webkit-outer-spin-button\": {\n                    webkitAappearance: \"none\"\n                  },  },\n                }}\n\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"f_name\"\n                    label=\"First Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"f_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"m_name\"\n                    label=\"Middle Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"m_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"l_name\"\n                    label=\"Last Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"l_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"c_email\"\n                    label=\"Company Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"c_email\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n              \n                  <NumberFormat\n                      id=\"rate\"\n                      customInput={TextField}\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"rate\"\n                      label=\"Rate $\"\n                      onChange={(e) => onChange(e)}\n                      format=\"####.##\"\n                      type=\"tel\"\n                      autoComplete=\"new-password\"\n                      thousandSeparator={true}\n                    />\n                </Grid>\n                <Grid item lg={6}>\n                  <Stack direction=\"row\" spacing={2} ml={2}>\n                    <FormControlLabel\n                      sx={{ fontSize: \"2rem\" }}\n                      label=\"\"\n                      control={\n                        <Switch\n                          checked={approvel}\n                          onChange={() => setApprovel(approvel)}\n                        />\n                      }\n                    />\n                    <Typography>\n                      Round Entries (Round [up/down] to nearnest\n                      <TextField\n                        margin=\"dense\"\n                        variant=\"standard\"\n                        type=\"text\"\n                        size=\"small\"\n                        placeholder=\"0.00\"\n                        sx={{\n                          maxWidth: \"5rem\",\n                        }}\n                      />\n                      fraction of the hour\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"role\"\n                    label=\"Role\"\n                    onChange={(e) => setRole(e.target.value)}\n                    id=\"role\"\n                    autoComplete=\"new-password\"\n                  >\n                    {!loading ? (\n                      roles.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"time_zone\"\n                    label=\"Time Zone\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"time_zone\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"group\"\n                    label=\"Group\"\n                    type=\"text\"\n                    onChange={(e) => setGroup(e.target.value)}\n                    id=\"group\"\n                    autoComplete=\"new-password\"\n                  >\n                    {!loading2 ? (\n                      groups.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"job_title\"\n                    label=\"Job Title\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"job_title\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                   <NumberFormat\n                      customInput={TextField}\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"bar_no\"\n                      label=\"Bar #\"\n                      onChange={(e) => onChange(e)}\n                      id=\"bar_no\"\n                      autoComplete=\"new-password\"\n                      format=\"######\"\n                      type=\"tel\"\n                    />\n                </Grid>\n              </Grid>\n              <Box mt={4} mb={2}>\n                <Divider />\n                <Typography mt={2} component=\"h3\" color=\"primary\" variant=\"h5\">\n                  Contact Info\n                </Typography>\n              </Box>\n\n              <Grid\n                container\n                spacing={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\" },\n                }}\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"street\"\n                    label=\"Street\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"street\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"suite\"\n                    label=\"Suite\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"suite\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"city\"\n                    label=\"City\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"city\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"state\"\n                    label=\"State\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"state\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"#####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"zip\"\n                      label=\"Zip\"\n                      type=\"tel\"\n                      onChange={(e) => onChange(e)}\n                      id=\"zip\"\n                      autoComplete=\"new-password\"\n                    />\n                </Grid>\n                <Grid item lg={3}> \n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"ext\"\n                      label=\"+4\"\n                      type=\"tel\"\n                      onChange={(e) => onChange(e)}\n                      id=\"ext\"\n                      autoComplete=\"new-password\"\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"p_email\"\n                    label=\"Personal Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"p_email\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <Box mt={1} ml={1}>\n                    <Button variant=\"contained\" color=\"primary\">\n                      Reset Password\n                    </Button>\n                  </Box>\n                </Grid>\n                <Grid item lg={3}>\n                  \n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                       size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"mobile\"\n                      label=\"Mobile #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"mobile\"\n                      autoComplete=\"new-password\"\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                       size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"home\"\n                      label=\"Home #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"home\"\n                      autoComplete=\"new-password\"\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"work\"\n                      label=\"Work #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"work\"\n                      autoComplete=\"new-password\"\n                    />\n                </Grid>\n                <Grid item lg={3}>\n              \n                  <NumberFormat\n                    customInput={TextField}\n                    format=\"####\"\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"phone_ext\"\n                    label=\"Extesion\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"phone_ext\"\n                    autoComplete=\"new-password\"\n                    />\n                </Grid>\n              </Grid>\n              <Grid item lg={12}>\n                <Box\n                  sx={{\n                    \"& .MuiButton-root\": { m: 1, mr:5 },\n                    float: \"right\",\n                    color:\"white\"\n                  }}\n                >\n                  <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    type=\"submit\"\n                    sx={{ color: \"white\" }}\n                    \n                  >\n                    Activate\n                  </Button>\n                  \n                  <Button variant=\"contained\" color=\"warning\"sx={{color:\"#fff\"}}>\n                    Deactivate\n                  </Button>\n                  <Button variant=\"contained\" color=\"error\" sx={{color:\"#fff\"}}>\n                    Delete\n                  </Button>\n                </Box>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n            </DialogActions>\n          </Dialog>\n        </Stack>\n\n        <TableContainer>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  <Typography color=\"white\">First Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Role</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Group</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Login</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Status</Typography>\n                </TableCell>\n                \n                <TableCell>\n                  <Switch\n                    color=\"success\"\n                    value={isActive}\n                    onChange={() => setIsActive()}\n                  />\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {!loading ? showUsers() : <Typography>Loading ...</Typography>}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default User;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  Table,\n  Paper,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Stack,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst ManageUserGroup = () => {\n  const [filter, setFilter] = useState(\"\");\n  const [searchItem, setSearchItem] = useState(\"\")\n\n  const handleChange = (event) => {\n    setFilter(event.target.value);\n  };\n  const [group, setGroup] = useState([]);\n  const [usersData, setUsersData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingUser, setLoadingUser] = useState(true);\n  const [status, setStatus] = useState(\"\")\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchUserData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        // setLoading(false);\n        setStatus(res.statusText);\n        setUsersData(res.data);\n        setLoadingUser(false);\n        console.log(usersData)\n\n      })\n      .catch((err) => {\n        setLoadingUser(false);\n      });\n  };\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/groups/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setGroup(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n    FetchUserData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/user/auth/groups/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/user/auth/groups/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const showGroup = () => {\n    if (group.length === 0) {\n      return <p> No data found...</p>;\n    } else {\n      return group.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n    }\n  };\n  const showUser = () => {\n    if (usersData.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return usersData.filter((val)=>{\n        if (searchItem === \"\"){\n          return val\n        } else if((filter === \"group\") && (val.group.toLowerCase().includes(searchItem.toLowerCase()))) {\n          return val\n        }else if((filter === \"role\") &&(val.role.toLowerCase().includes(searchItem.toLowerCase()))){\n          return val\n        }\n        else if((filter === \"name\") &&(val.l_name.toLowerCase().includes(searchItem.toLowerCase()))){\n          return val\n        }\n        else if((filter === \"name\") &&(val.f_name.toLowerCase().includes(searchItem.toLowerCase()))){\n          return val\n        }\n      }).map((data) => \n          <TableRow>\n            <TableCell>{data.f_name}</TableCell>\n            <TableCell>{data.l_name} </TableCell>\n            <TableCell>{data.role}</TableCell>\n            <TableCell>{data.group}</TableCell>\n          </TableRow>\n  );\n    \n  };\n  return (\n    <Fragment>\n      <Grid container spacing={3}>\n        <Grid item lg={12}>\n          <Grid container spacing={3} direction=\"row\">\n            <Grid item lg={3}>\n              <Typography variant=\"h5\" component=\"h5\" m={1} color=\"primary\">\n                Manage Group\n              </Typography>\n            </Grid>\n            <Grid item lg={9}>\n              <Stack direction=\"row\" sx={{ float: \"right\" }}>\n                <Typography m={2} component=\"span\" color=\"primary\">\n                  Filter & Sort By\n                </Typography>\n                <FormControl sx={{ width: \"10rem\", height: \"2.5rem\" }}>\n                  <InputLabel id=\"demo-simple-select-label\" color=\"primary\">\n                    Custom Sort\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={filter}\n                    label=\"Age\"\n                    onChange={handleChange}\n                  >\n                    <MenuItem value=\"name\">By Name</MenuItem>\n                    <MenuItem value=\"role\">By Role</MenuItem>\n                    <MenuItem value=\"group\">By Group</MenuItem>\n                  </Select>\n                </FormControl>\n                <Search sx={{ width: \"20rem\", height: \"2.5rem\", m: 1 }}>\n                  <SearchIconWrapper>\n                    <SearchIcon />\n                  </SearchIconWrapper>\n                  <StyledInputBase\n                    placeholder=\"Search…\"\n                    inputProps={{ \"aria-label\": \"search\" }}\n                    onChange ={e => setSearchItem(e.target.value)}\n                  />\n                </Search>\n              </Stack>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3} component={Paper} p={3} elevation={3}>\n          <Typography\n            variant=\"h5\"\n            component=\"h5\"\n            color=\"primary\"\n            align=\"center\"\n          >\n            Groups\n          </Typography>\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            fullWidth\n            sx={{\n              borderRadius: \"0.5rem\",\n            }}\n          >\n            + New Group\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New Group\"}</DialogTitle>\n            <DialogContent>\n              <TextField\n                required\n                fullWidth\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"name\"\n                label=\"Group Name\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n              <Button type=\"submit\" autoFocus>\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {!loading ? showGroup() : <Typography>Loading ...</Typography>}\n        </Grid>\n        <Grid item lg={9}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow bgColor=\"#796ef0\">\n                  <TableCell>\n                    <Typography color=\"white\">First Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Last Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Role</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Group</Typography>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>{!loadingUser ? showUser() : <>Loading.. </>}</TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item lg={12}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"success\" sx={{ color: \"white\" }}>\n              Done\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageUserGroup;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport {\n\tTable,\n\tTableCell,\n\tTableContainer,\n\tTableHead,\n\tTableRow,\n\tTableBody,\n\tButton,\n\tList,\n\tGrid,\n\tBox,\n\tTypography,\n\tListItem,\n\tListItemText,\n\tIconButton,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogTitle,\n\tTextField,\n\tPaper,\n} from \"@mui/material\";\nimport RectangleIcon from \"@mui/icons-material/Rectangle\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n\tgetPermissions,\n\treset,\n\tupdateIsView,\n\tupdateIsEdit,\n\tupdateIsCreate,\n\tupdateIsDelete,\n\tupdateIsContacts,\n\tupdateIsTeam,\n\tupdateIsOffice,\n\tupdateIsRegion,\n\tupdateIsAll,\n} from \"../../redux/features/permissionSlice\";\nimport { useToggle } from \"../../context/useToggle\";\n\nconst ManageRole = () => {\n\tconst dispatch = useDispatch();\n\tconst [allValue, setAllValue] = useToggle(false);\n\n\tconst { user } = useSelector((state) => state.auth);\n\tconst { updateData, setUpdateData } = useState([]);\n\tconst { permissions, isLoading, isError, message } = useSelector(\n\t\t(state) => state.permissions,\n\t);\n\n\tconst [roles, setRoles] = useState([]);\n\tconst [role, setRole] = useState(null);\n\tconst [loading, setLoading] = useState(true);\n\tconst [error, setError] = useState(\"\");\n\tconst [status, setStatus] = useState(\"\");\n\n\tconst [formData, setFormData] = useState({\n\t\tname: \"\",\n\t});\n\n\tconst { name } = formData;\n\n\tconst onChange = (e) =>\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n\n\tconst [open, setOpen] = useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\tconst FetchData = () => {\n\t\taxios\n\t\t\t.get(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, CONFIG)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetStatus(res.statusText);\n\t\t\t\tsetRoles(res.data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetError(err.message);\n\t\t\t});\n\t};\n\tuseEffect(() => {\n\t\tFetchData();\n\t}, []);\n\tconst handleDelete = (id) => {\n\t\taxios\n\t\t\t.delete(`${process.env.REACT_APP_API_URL}/user/auth/roles/${id}/`, CONFIG)\n\t\t\t.then((res) => {\n\t\t\t\tFetchData();\n\t\t\t\treturn (\n\t\t\t\t\t<ActionAlerts\n\t\t\t\t\t\tvalue={{ status: res.statusText, message: \"Success\" }}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t});\n\t};\n\tconst selectRole = (id) => {\n\t\tsetRole(id);\n\t\tdispatch(getPermissions(id));\n\t};\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst body = JSON.stringify({ name });\n\t\taxios\n\n\t\t\t.post(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, body, CONFIG)\n\t\t\t.then((res) => {\n\t\t\t\tFetchData();\n\t\t\t\treturn (\n\t\t\t\t\t<ActionAlerts\n\t\t\t\t\t\tvalue={{ status: res.statusText, message: \"Success\" }}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tFetchData();\n\t\t\t\treturn (\n\t\t\t\t\t<ActionAlerts\n\t\t\t\t\t\tvalue={{ status: err.statusText, message: \"Success\" }}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t});\n\t};\n\tconst onClickChange = (id, value, position, permission) => {\n\t\tconst buttons = [\n\t\t\tpermission.is_view,\n\t\t\tpermission.is_edit,\n\t\t\tpermission.is_create,\n\t\t\tpermission.is_delete,\n\t\t\tpermission.is_contacts,\n\t\t\tpermission.is_team,\n\t\t\tpermission.is_office,\n\t\t\tpermission.is_region,\n\t\t];\n\t\tbuttons[position] = value === 1 ? true : false;\n\t\tconst is_view = buttons[0];\n\t\tconst is_edit = buttons[1];\n\t\tconst is_create = buttons[2];\n\t\tconst is_delete = buttons[3];\n\t\tconst is_contacts = buttons[4];\n\t\tconst is_team = buttons[5];\n\t\tconst is_office = buttons[6];\n\t\tconst is_region = buttons[7];\n\t\tconst body = JSON.stringify({\n\t\t\tis_view,\n\t\t\tis_edit,\n\t\t\tis_create,\n\t\t\tis_delete,\n\t\t\tis_contacts,\n\t\t\tis_team,\n\t\t\tis_office,\n\t\t\tis_region,\n\t\t});\n\t\taxios\n\t\t\t.put(\n\t\t\t\t`${process.env.REACT_APP_API_URL}/user/auth/permissions/${id}/`,\n\t\t\t\tbody,\n\t\t\t\tCONFIG,\n\t\t\t)\n\t\t\t.then((res) => {\n\t\t\t\tdispatch(getPermissions(id));\n\t\t\t})\n\t\t\t.catch((err) => {});\n\t};\n\tconst clickAllValue = (id) => {\n\t\tsetAllValue(allValue);\n\t\tdispatch(\n\t\t\tupdateIsAll({\n\t\t\t\tid: id,\n\t\t\t\tvalue: allValue,\n\t\t\t}),\n\t\t);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Grid container spacing={2}>\n\t\t\t\t<Grid item lg={12}></Grid>\n\t\t\t\t<Grid item lg={2} component={Paper} elevation={5}>\n\t\t\t\t\t<Box p={2}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tonClick={handleClickOpen}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tborderRadius: \"0.5rem\",\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t+ New Role\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\tcomponent='form'\n\t\t\t\t\t\t\tValidate\n\t\t\t\t\t\t\tonSubmit={(e) => handleSubmit(e)}\n\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\n\t\t\t\t\t\t\taria-describedby='alert-dialog-description'>\n\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>\n\t\t\t\t\t\t\t\t{\"Add New Role\"}\n\t\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\tlabel='Role Name'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\t\t\tid='name'\n\t\t\t\t\t\t\t\t\tautoComplete='name'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t<Button onClick={handleClose}>Close</Button>\n\t\t\t\t\t\t\t\t<Button type='submit' autoFocus>\n\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\troles.map((data, index) => (\n\t\t\t\t\t\t\t\t<Box key={index}>\n\t\t\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t\t\t<ListItem disablePadding>\n\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.id === role\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? { backgroundColor: \"#796ef0\", color: \"white\" }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => selectRole(data.id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{data.name}\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={data.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleDelete(data.id)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"0.5rem\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfloat: \"right\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ClearIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Typography>Loading ...</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item lg={10}>\n\t\t\t\t\t<TableContainer sx={{ overflowX: \"auto\" }}>\n\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\"fontSize\": \"1rem\",\n\t\t\t\t\t\t\t\t\"&MuiTableCell\": {\n\t\t\t\t\t\t\t\t\tborder: \"solid 2px black\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t\t<TableRow bgColor='#796ef0'>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Function</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>View </Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Edit</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Create</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Delete</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Contacts</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Team</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Office</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Region</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>All</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t{role !== null && permissions.permissions.length > 0 ? (\n\t\t\t\t\t\t\t\t\tpermissions.permissions.map((permission, index) => (\n\t\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>{permission.name}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch(updateIsView(permission.id));\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermission.is_view\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch(updateIsEdit(permission.id));\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermission.is_edit\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch(updateIsCreate(permission.id));\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermission.is_create\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch(updateIsDelete(permission.id));\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermission.is_delete\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\n\t\t\t\t\t\t\t\t\t\t\t{permission.name === \"Contact\" ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch(updateIsContacts(permission.id));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermission.is_contacts\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch(updateIsTeam(permission.id));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermission.is_team\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch(updateIsOffice(permission.id));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermission.is_office\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch(updateIsRegion(permission.id));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermission.is_region\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => clickAllValue(permission.id)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tallValue\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>please selete a role</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</TableContainer>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Fragment>\n\t);\n};\n\nexport default ManageRole;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport CreateUser from \"./CreateUser\";\nimport ManageUser from \"./ManageUser\";\nimport User from \"./User\"\nimport ManageUserGroup from \"./ManageUserGroup\";\n// import UserRole from \"./UserRole\";\nimport ManageRole from \"./ManageRole\"\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <ManageUser/>\n      {/* <Tabs>\n        <div label=\"Manage Users\">\n          <ManageUser />\n        </div>\n\n        <div label=\"User Group\">\n          <ManageUserGroup />\n        </div>\n        <div label=\"User Role\">\n          <ManageRole />\n        </div>\n      </Tabs> */}\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst TimeList = () => {\n  const [timeData, setTimeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTimeData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <Box>\n        <LinkButton to=\"/ledgers\" sx={{ float: \"right\" }}>\n          Ledger Dashboard\n        </LinkButton>\n        <Box p={3}>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Ledger Dashbaord\n          </LinkButton>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Add Time\n          </LinkButton>\n          <LinkButton to=\"/ledger-list\" sx={{ float: \"right\" }}>\n            Ledger List\n          </LinkButton>\n          <LinkButton to=\"/ledger-documents\" sx={{ float: \"right\" }}>\n            Documents\n          </LinkButton>\n        </Box>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Add</TableCell>\n\n                <TableCell>Matter #</TableCell>\n                <TableCell>Matter Name</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Billable Time</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell>Category</TableCell>\n                <TableCell>Activity</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n              ? null\n              : timeData?.map((data) => {\n                  return (\n                    <TableBody id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n\n                      <TableCell>{data.conatact}</TableCell>\n                      <TableCell>{data.date}</TableCell>\n                      <TableCell>{data.time}</TableCell>\n                      <TableCell>{data.rate}</TableCell>\n                      <TableCell>{data.category}</TableCell>\n                      <TableCell>{data.sub_category}</TableCell>\n                    </TableBody>\n                  );\n                })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TimeList;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Switch, FormControlLabel } from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Search = () => {\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [searchData, setSearchData] = useState({\n    state: \"\",\n    city: \"\",\n    practice_area: \"\",\n    law_school: \"\",\n\n    undergrad_study: \"\",\n    lamguages: \"\",\n    admitted_state: \"\",\n    relocate: false,\n  });\n\n  const {\n    state,\n    city,\n    practice_area,\n    law_school,\n\n    undergrad_study,\n    lamguages,\n    admitted_state,\n    relocate,\n  } = searchData;\n\n  const onChange = (e) =>\n    setSearchData({ ...searchData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"number\"\n              min=\"0\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Longest tenure (months / years)\"\n              id=\"longest_tenure\"\n              name=\"longest_tenure\"\n              value={longestTenure}\n              type=\"text\"\n              onValueChange={(e) => setLongestTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Average tenure (months / years)\"\n              value={averageTenure}\n              id=\"average_tenure\"\n              name=\"average_tenure\"\n              type=\"text\"\n              onValueChange={(e) => setAverageTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time at Current Company (months / years)\"\n              id=\"current_tenure\"\n              name=\"current_tenure\"\n              value={currentTenure}\n              type=\"text\"\n              onValueChange={(e) => setCurrentTenure(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"admitted_state\"\n              label=\"admitted_state\"\n              type=\"text\"\n              value={admitted_state}\n              onChange={(e) => onChange(e)}\n              id=\"admitted_state\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={gradYear}\n              onValueChange={(e) => setGradYear(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"undergrad_study\"\n              label=\"undergrad_study\"\n              step=\"0.01\"\n              type=\"text\"\n              value={undergrad_study}\n              onChange={(e) => onChange(e)}\n              id=\"undergrad_study\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"practice_area\"\n              label=\"practice_area\"\n              type=\"text\"\n              value={practice_area}\n              onChange={(e) => onChange(e)}\n              id=\"practice_area\"\n              disabled\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance Date\"\n              id=\"bar_admit_date\"\n              name=\"bar_admit_date\"\n              value={barDate}\n              onValueChange={(e) => setBarDate(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"lamguages\"\n              label=\"lamguages\"\n              type=\"text\"\n              value={lamguages}\n              onChange={(e) => onChange(e)}\n              id=\"lamguages\"\n            />\n            {/* <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Apply\n            </Button> */}\n            <Box m={3}>\n              <LinkButton to=\"/job-result\" sx={{ float: \"right\" }}>\n                Apply\n              </LinkButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Search;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\n// import axios from \"axios\";\n// import { CONFIG } from \"../../api/MatterApi\";\n// import { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Result = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(\"\");\n  // const [status, setStatus] = useState(\"\");\n  //   const FetchData = () => {\n  //     axios\n  //       .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n  //       .then((res) => {\n  //         setLoading(false);\n  //         setStatus(res.statusText);\n  //         setActivityData(res.data);\n  //       })\n  //       .catch((err) => {\n  //         setLoading(false);\n  //         setStatus(err.statusText);\n  //       });\n  //   };\n  //   useEffect(() => {\n  //     FetchData();\n  //   }, []);\n  return (\n    <Fragment>\n      <Box>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Rate</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Name</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">City</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">State</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Active</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Grage Year</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practice Area</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Relocation</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practicing</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading ? (\n              <TableBody>\n                <TableRow>\n                  <TableCell>74%</TableCell>\n                  <TableCell>Smith, John</TableCell>\n                  <TableCell>San Diego</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2000</TableCell>\n                  <TableCell>Criminal</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>22y - 03M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>72%</TableCell>\n                  <TableCell>Cassidy, Butch</TableCell>\n                  <TableCell>Los Angeles</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>2021</TableCell>\n                  <TableCell>Transctional</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>0y - 02M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>50%</TableCell>\n                  <TableCell>Short, Mart</TableCell>\n                  <TableCell>Sacramento</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2013</TableCell>\n                  <TableCell>Civil</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>06y - 11M</TableCell>\n                </TableRow>\n              </TableBody>\n            ) : (\n              activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })\n            )} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Result;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  FormControlLabel,\n  FormGroup,\n  Checkbox,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Saved = () => {\n  const [pickTime, setPickTime] = useState(new Date(\"2021-12-01T21:00:00\"));\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [jobData, setJobData] = useState({\n    name: \"\",\n    state: \"\",\n    city: \"\",\n    email: \"\",\n    mobile: \"\",\n    home: \"\",\n    law_school: \"\",\n    grad_year: \"\",\n    bar_adm_year: \"\",\n    practice_area: \"\",\n    mail_add: \"\",\n    relocate: false,\n    date: \"\",\n    time: \"\",\n    link: \"\",\n    notes: \"\",\n    file: \"\",\n  });\n\n  const {\n    name,\n    state,\n    city,\n    email,\n    mobile,\n    home,\n    law_school,\n    grad_year,\n    bar_adm_year,\n    practice_area,\n    mail_add,\n    relocate,\n    date,\n    time,\n    link,\n    notes,\n    file,\n  } = jobData;\n\n  const onChange = (e) =>\n    setJobData({ ...jobData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <FormGroup aria-label=\"position\" row>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Save\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Contacted\"\n                labelPlacement=\"start\"\n              />\n              <Typography component=\"label\" m={1}>\n                Interested :\n              </Typography>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Yes\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"No\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Interviewed\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Accept\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Reject\"\n                labelPlacement=\"start\"\n              />\n              <Box ml={3}>\n                <Typography component=\"h4\" color=\"success\" variant=\"h5\">\n                  Overall Score: 74%\n                </Typography>\n              </Box>\n            </FormGroup>\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"name\"\n              label=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(e) => onChange(e)}\n              id=\"name\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email\"\n              label=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              id=\"email\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobile}\n              onValueChange={(value) => onChange(value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={home}\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={grad_year}\n              onValueChange={(value) => onChange(value)}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance\"\n              id=\"bar_adm_year\"\n              name=\"bar_adm_year\"\n              value={bar_adm_year}\n              type=\"text\"\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"mail_add\"\n              label=\"mail_add\"\n              type=\"text\"\n              value={mail_add}\n              onChange={(e) => onChange(e)}\n              id=\"mail_add\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xs={4}>\n                <Box m={1}>\n                  <Typography component=\"lable\"> Writing Sample </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <TimePicker\n                    label=\"Pick Time\"\n                    name=\"picktime\"\n                    id=\"picktime\"\n                    value={pickTime}\n                    onChange={(e) => {\n                      setPickTime(e);\n                    }}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    inputFormat=\"yyyy-MM-dd\"\n                    mask=\"____-__-__\"\n                    label=\"Pick Date\"\n                    value={pickDate}\n                    name=\"pickdate\"\n                    id=\"pickdate\"\n                    onChange={(e) => setPickDate(e)}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n\n                <TextField\n                  size=\"small\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"link\"\n                  type=\"link\"\n                  defaultValue=\"2021-12-01\"\n                  value={link}\n                  onChange={(e) => onChange(e)}\n                  id=\"link\"\n                />\n              </Grid>\n              <Grid item xs={8}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={8}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"notes\"\n                  type=\"text\"\n                  value=\"Notes ...\"\n                  id=\"notes\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Saved;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport Search from \"./Search\";\nimport Result from \"./Result\";\nimport Saved from \"./Saved\";\nconst index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Search\">\n          <Search />\n        </div>\n        <div label=\"Result\">\n          <Result />\n        </div>\n        <div label=\"Saved\">\n          <Saved />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default index;\n","/** @format */\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nimport { Provider } from \"react-redux\";\n\nimport store, { persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport Layout from \"./hocs/Layout\";\n\nimport PrivateRoutes from \"./utils/PrivateRoute\";\n\nimport { UserProvider } from \"./context/User\";\n\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"./hocs/Theme\";\n\nimport Home from \"./containers/Home\";\n\n// Authentication links\nimport Login from \"./containers/Auth/Login\";\nimport Signup from \"./containers/Auth/Signup\";\n\nimport Profile from \"./components/Profile/Profile\";\nimport Company from \"./components/Profile/Company\";\n\nimport Matter from \"./components/Matter\";\n\nimport Matters from \"./containers/Matters/Matters\";\nimport MatterDetail from \"./components/Matter/MatterDetail\";\nimport NewMatter from \"./components/Matter/NewMatter\";\n\nimport Invoice from \"./components/Invoice\";\n\nimport CreateInvoice from \"./components/Invoice/CreateInvoice\";\n\nimport Payment from \"./components/Invoice/Payment\";\nimport ManageCategory from \"./components/Category/ManageCategory\";\n\nimport User from \"./components/User\";\n\nimport Time from \"./components/Ledger/Time\";\nimport TimeList from \"./components/Ledger/TimeList\";\n\nimport Ledger from \"./components/Ledger\";\n\nimport LedgerTImeList from \"./components/Ledger/LedgerTImeList\";\nimport LedgerActivity from \"./components/Ledger/LedgerActivity\";\n\nimport Tasks from \"./components/Tasks\";\nimport CreateTask from \"./components/Tasks/CreateTask\";\nimport ViewTasks from \"./components/Tasks/ViewTasks\";\nimport LedgerDoc from \"./components/Ledger/LedgerDoc\";\n\nimport Employee from \"./components/Employee\";\nimport Templates from \"./components/Template/Templates\";\n\nimport Contact from \"./components/Contact/Contact\";\nimport UserRole from \"./components/User/UserRole\";\nimport ManageRole from \"./components/User/ManageRole\";\nimport ManageUserGroup from \"./components/User/ManageUserGroup\";\n\nconst App = () => {\n  const alertOptions = {\n    timeout: 3000,\n    position: \"top center\",\n  };\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <UserProvider>\n          <ThemeProvider theme={theme}>\n            <AlertProvider template={AlertTemplate} {...alertOptions}>\n              <Router>\n                <Layout>\n                  <Switch>\n                    {/* loging regierter routes */}\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/signup\" component={Signup} />\n\n                    {/* private route after login  */}\n\n                    <PrivateRoutes exact path=\"/\" component={Home} />\n                    <PrivateRoutes path=\"/profile\" component={Profile} />\n                    <PrivateRoutes path=\"/company-detail\" component={Company} />\n\n                    <PrivateRoutes\n                      path=\"/matter-dashboard\"\n                      component={Matter}\n                    />\n                    <PrivateRoutes path=\"/matters\" component={Matters} />\n                    <PrivateRoutes\n                      path=\"/matter-detail\"\n                      component={MatterDetail}\n                    />\n                    <PrivateRoutes\n                      path=\"/create-matter\"\n                      component={NewMatter}\n                    />\n\n                    <PrivateRoutes path=\"/invoices\" component={Invoice} />\n                    <PrivateRoutes\n                      path=\"/create-invoice\" \n                      component={CreateInvoice}\n                    />\n                    <PrivateRoutes path=\"/recive-invoice\" component={Payment} />\n\n                    {/* <PrivateRoutes path=\"/create-user\" component={CreateUser} /> */}\n                    <PrivateRoutes path=\"/users\" component={User} />\n                    <PrivateRoutes path=\"/user-roles\" component={ManageRole} />\n                    <PrivateRoutes\n                      path=\"/user-groups\"\n                      component={ManageUserGroup}\n                    />\n\n                    <PrivateRoutes\n                      path=\"/manage-categories\"\n                      component={ManageCategory}\n                    />\n                    <PrivateRoutes\n                      path=\"/ledger-documents\"\n                      component={LedgerDoc}\n                    />\n                    <PrivateRoutes path=\"/time\" component={Time} />\n                    <PrivateRoutes path=\"/time-list\" component={TimeList} />\n                    <PrivateRoutes path=\"/ledgers\" component={Ledger} />\n                    <PrivateRoutes\n                      path=\"/ledger-list\"\n                      component={LedgerTImeList}\n                    />\n                    <PrivateRoutes\n                      path=\"/activity-list\"\n                      component={LedgerActivity}\n                    />\n\n                    <PrivateRoutes path=\"/tasks\" component={Tasks} />\n                    <PrivateRoutes path=\"/create-task\" component={CreateTask} />\n                    <PrivateRoutes path=\"/view-tasks\" component={ViewTasks} />\n\n                    <PrivateRoutes\n                      path=\"/employee-search\"\n                      component={Employee}\n                    />\n\n                    <PrivateRoutes path=\"/templates\" component={Templates} />\n                    <PrivateRoutes path=\"/contact\" component={Contact} />\n                  </Switch>\n                </Layout>\n              </Router>\n            </AlertProvider>\n          </ThemeProvider>\n        </UserProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { Box } from \"@mui/material\";\n// import NumberFormat from \"react-number-format\";\n\nexport const Appointments = () => {\n  const options = {\n    chart: {\n      type: \"bar\",\n      height: 500,\n    },\n    series: [\n      {\n        data: [\n          {\n            x: \"Zoom\",\n            y: 150,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Phone\",\n            y: 250,\n            fillColor: \"#546E7A\",\n            strokeColor: \"#546E7A\",\n          },\n          {\n            x: \"In Person\",\n            y: 500,\n            fillColor: \"#f48024\",\n            strokeColor: \"#f48024\",\n          },\n          {\n            x: \"Met\",\n            y: 300,\n            fillColor: \"#13d8aa\",\n            strokeColor: \"#13d8aa\",\n          },\n          {\n            x: \"Rescheduled\",\n            y: 125,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Canceled\",\n            y: 30,\n            fillColor: \"#A5978B\",\n            strokeColor: \"#A5978B\",\n          },\n        ],\n      },\n    ],\n\n    options: {\n      plotOptions: {\n        bar: {\n          barHeight: \"50%\",\n          borderRadius: 4,\n\n          horizontal: true,\n          dataLabels: {\n            position: \"bottom\",\n          },\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      title: {\n        text: \"Appointments\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n    },\n    xaxis: {\n      style: {\n        fontSize: \"20px\",\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={options.options}\n          series={options.series}\n          height=\"300\"\n          type=\"bar\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\nexport const Marketing = () => {\n  const config = {\n    series: [\n      {\n        name: \"Google\",\n        data: [10, 51, 35, 41, 29, 62, 99, 41, 18],\n      },\n      {\n        name: \"Youtube\",\n        data: [10, 80, 35, 41, 99, 62, 79, 21, 68],\n      },\n      {\n        name: \"Website\",\n        data: [60, 21, 45, 41, 89, 62, 59, 71, 98],\n      },\n    ],\n    options: {\n      chart: {\n        height: 250,\n        toolbar: {\n          show: false,\n        },\n      },\n\n      legend: {\n        position: \"top\",\n        horizontalAlign: \"right\",\n        onItemHover: {\n          highlightDataSeries: true,\n        },\n        labels: {\n          colors: \"#dddddd\",\n          useSeriesColors: true,\n        },\n      },\n\n      dataLabels: {\n        enabled: false,\n      },\n\n      stroke: {\n        curve: \"smooth\",\n        width: 2,\n      },\n\n      title: {\n        text: \"Marketing\",\n        align: \"left\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      xaxis: {\n        categories: [\n          \"31/01\",\n          \"01/02\",\n          \"02/03\",\n          \"03/04\",\n          \"31/05\",\n          \"04/06\",\n          \"06/07\",\n          \"02/08\",\n          \"09/09\",\n        ],\n        style: {\n          fontSize: \"20px\",\n        },\n      },\n\n      yaxis: {},\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={config.options}\n        series={config.series}\n        height=\"250\"\n        type=\"line\"\n      />\n    </Fragment>\n  );\n};\nexport const Calls = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 300,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Calls\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Inbound\", \"Outbound\", \"Sales\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const Email = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total Emails\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Email\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Send\", \"Open\", \"Delete\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueInActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueInCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 460;\n      case \"weekly\":\n        return 3254;\n      case \"monthly\":\n        return 32564;\n      case \"quarterly\":\n        return 130256;\n      case \"yearly\":\n        return 521024;\n      case \"range\":\n        return 1500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue In\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueInCards);\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueOutActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueOutCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 35;\n      case \"weekly\":\n        return 240;\n      case \"monthly\":\n        return 4520;\n      case \"quarterly\":\n        return 18080;\n      case \"yearly\":\n        return 72320;\n      case \"range\":\n        return 500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue out\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueOutCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { newCustomerActive } from \"../../../../redux/features/sidebarSlice\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const NewCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 2;\n      case \"weekly\":\n        return 23;\n      case \"monthly\":\n        return 69;\n      case \"quarterly\":\n        return 200;\n      case \"yearly\":\n        return 610;\n      case \"range\":\n        return 10;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              New Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 23 : 69}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={23}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={69}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={15}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={50}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={200}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(newCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </IconButton>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(NewCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Button,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { lostCustomerActive } from \"../../../../redux/features/sidebarSlice\";\n\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const LostCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 0;\n      case \"weekly\":\n        return 0;\n      case \"monthly\":\n        return 3;\n      case \"quarterly\":\n        return 6;\n      case \"yearly\":\n        return 15;\n      case \"range\":\n        return 3;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              Lost Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 0 : 3}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={3}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={1}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={6}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <Button\n                  component={IconButton}\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(lostCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </Button>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(LostCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport { Circle } from \"@mui/icons-material\";\nimport MAP_STYLE from \"../../../utils/style.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapboxWorker from \"mapbox-gl/dist/mapbox-gl-csp-worker\";\nmapboxgl.workerClass = MapboxWorker;\n\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\";\n\nconst Map = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 38.7577,\n    longitude: -95.4376,\n    zoom: 3,\n  });\n\n  return (\n    <Fragment>\n      <ReactMapGL\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle={MAP_STYLE}\n        onViewportChange={setViewport}\n        mapboxApiAccessToken={\n          \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\"\n        }\n        style={{ zIndex: 200 }}\n      >\n        <Marker\n          latitude={40.7128}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={47.6062}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={41.8781}\n          longitude={-87.6298}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n      </ReactMapGL>\n    </Fragment>\n  );\n};\n\nexport default Map;\n","/** @format */\n\nimport {\n  Paper,\n  Box,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  TableCell,\n} from \"@mui/material\";\nimport React, { Fragment } from \"react\";\n\nconst NewAccounts = () => {\n  return (\n    <Fragment>\n      <Box p={1}>\n        <Typography color=\"blue\">New Accounts</Typography>\n        <TableContainer>\n          <Table fullWidth>\n            <TableHead color=\"blue\">\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"blue\">Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewAccounts;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Box, Grid, Typography } from \"@mui/material\";\n\nimport NumberFormat from \"react-number-format\";\n\nconst EmpOversite = () => {\n  return (\n    <Fragment>\n      <Typography color=\"blue\" sx={{ fontSize: \"1.1rem\" }}>\n        Employee Oversite\n      </Typography>\n      <Typography variant=\"h3\" component=\"h3\" sx={{ fontSize: \"1.8rem\" }}>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.1rem\" }}>\n        Employees logged in\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"purple\" }}> Total ticket issued:</span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"seagreen\" }}>Trouble ticket Resolved: </span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n    </Fragment>\n  );\n};\n\nexport default EmpOversite;\n","/** @format */\n\nimport React from \"react\";\n\nimport {\n  IconButton,\n  Typography,\n  Card,\n  CardContent,\n  CardActions,\n} from \"@mui/material\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { Appointments, Calls, Marketing, Email } from \"../Charts\";\n\nimport RevenueInCards from \"../Cards/RevenueIn\";\nimport RevenueOutCards from \"../Cards/RevenueOut\";\nimport NewCustomerCards from \"../Cards/NewCustomer\";\nimport LostCustomerCards from \"../Cards/LostCustomer\";\n\nimport Map from \"../Map\";\n\nimport NewAccounts from \"../NewAccounts\";\nimport EmpOversite from \"../EmpOversite\";\n\nconst widgetNames = {\n  a: <RevenueInCards />,\n  b: <RevenueOutCards />,\n  c: <NewCustomerCards />,\n  d: <LostCustomerCards />,\n  e: <NewAccounts />,\n  f: <Map />,\n  g: <EmpOversite />,\n  h: <Calls />,\n  i: <Appointments />,\n  j: <Marketing />,\n  k: <Email />,\n};\n\nexport default function Widget({ id, onRemoveItem }) {\n  return (\n    <Card\n      sx={{\n        width: \"100%\",\n        height: \"100%\",\n        paddingTop: \"0.5rem\",\n        padding: \"1rem\",\n      }}\n    >\n      <CardActions>\n        <IconButton\n          aria-label=\"delete\"\n          onClick={() => onRemoveItem(id)}\n          sx={{ position: \"fixed\", right: \"16px\" }}\n        >\n          <CloseIcon fontSize=\"small\" />\n        </IconButton>\n      </CardActions>\n      {widgetNames[id]}\n    </Card>\n  );\n}\n"],"sourceRoot":""}