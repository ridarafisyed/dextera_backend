{"version":3,"sources":["asserts/logo_white copy.png","components/Tabs/tabs.module.css","redux/features/sidebarSlice.js","components/Dashboard/Admin/DashboardLayout/DashboardContent.jsx","asserts/login_light.png","asserts/signup_light.png","reducers/profile.js","reducers/errors.js","reducers/messages.js","reducers/auth.js","reducers/data.js","redux/features/tabSlice.js","redux/features/searchTabSlice.js","redux/features/favoriteSlice.js","api/MatterApi.js","redux/services/roleFnService.js","redux/features/roleFnSlice.js","redux/services/permissionService.js","redux/features/permissionSlice.js","reducers/index.js","actions/types.js","store.js","actions/messages.js","actions/auth.js","context/useToggle.jsx","styles/styles.jsx","actions/data.js","components/Navbars/NavbarResponsive.jsx","components/Navbars/Navbar.jsx","components/Chat/Chat.jsx","components/Dashboard/Calender.jsx","components/Tasks/ViewTasks.jsx","components/Favorite/Favorites.jsx","components/Navbars/DrawerComp.jsx","components/Navbars/NavbarSec.jsx","components/Sidebar/TestingSidebar.jsx","components/Sidebar/Sidebar.jsx","components/Footer/Footer.jsx","hocs/Layout.js","utils/PrivateRoute.js","context/User/reducer.js","context/User/index.js","hocs/Theme.js","components/Dashboard/Admin/DashBoard.jsx","components/Tabs/Tabs.jsx","components/Invoice/CreateInvoice.jsx","components/Invoice/Payment.jsx","components/Invoice/Filters.jsx","components/Invoice/InvoiceList.jsx","components/Invoice/index.jsx","utils/ActionAlerts.js","components/Matter/MatterList.jsx","components/Matter/Cards.jsx","components/Matter/Calendar.jsx","components/Matter/Filters.jsx","components/Matter/MatterCards.jsx","components/Matter/MatterListLong.jsx","components/Matter/NewMatter.jsx","components/Matter/MatterDetail.jsx","components/Matter/index.jsx","components/Ledger/LedgerActivity.jsx","components/Ledger/Fillters.jsx","components/Ledger/LedgerCards.jsx","components/Ledger/LedgerTImeList.jsx","components/Ledger/LedgerDashbard.jsx","components/Ledger/LedgerDoc.jsx","components/Ledger/Time.jsx","components/Ledger/index.jsx","components/Category/SubCategory.jsx","components/Category/Category.jsx","components/Category/Classification.jsx","components/Category/ManageCategory.jsx","components/Contact/Contact.jsx","components/Profile/Profile.js","components/Tasks/CreateTask.jsx","components/Tasks/index.jsx","components/Dashboard/UserRoles/AdminDashboard.jsx","components/Dashboard/ProgressBar.jsx","components/Dashboard/Tasks.jsx","components/Dashboard/Cards.jsx","components/Dashboard/Client/DashBoard.jsx","components/Template/Templates.jsx","components/Dashboard/UserRoles/ClientDashboard.jsx","components/Dashboard/Lawyer/Chart.jsx","components/Dashboard/Lawyer/DashBoard.jsx","components/Dashboard/UserRoles/LawyerDashboard.jsx","components/Dashboard/Firm/Charts.jsx","components/Dashboard/Firm/DashBoard.jsx","components/Dashboard/UserRoles/FirmDashboard.jsx","containers/Home.js","containers/Auth/Login.js","containers/Auth/Signup.js","components/Profile/Company.jsx","containers/Matters/Matters.jsx","components/User/User.jsx","components/User/ManageUserGroup.jsx","components/User/ManageRole.jsx","components/User/index.jsx","components/Ledger/TimeList.jsx","components/Employee/Search.jsx","components/Employee/Result.jsx","components/Employee/Saved.jsx","components/Employee/index.jsx","App.jsx","index.js","components/Dashboard/Admin/Charts.jsx","components/Dashboard/Admin/Cards/RevenueIn.jsx","components/Dashboard/Admin/Cards/RevenueOut.jsx","components/Dashboard/Admin/Cards/NewCustomer.jsx","components/Dashboard/Admin/Cards/LostCustomer.jsx","components/Dashboard/Admin/Map.jsx","components/Dashboard/Admin/NewAccounts.jsx","components/Dashboard/Admin/EmpOversite.jsx","components/Dashboard/Admin/DashboardLayout/Widget.jsx"],"names":["module","exports","__webpack_require__","p","tabs","current","content","d","__webpack_exports__","hideSidebar","showSidebar","revenueInActive","revenueOutActive","newCustomerActive","lostCustomerActive","newAccountActive","appointmentActive","marketingActive","empOversiteActive","emailsActive","callsActive","mapActive","_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__","sidebarSlice","createSlice","name","initialState","revenueIn","revenueOut","newCustomer","lostCustomer","newAccount","appointment","marketing","empOversite","emails","calls","map","display","reducers","isDisplay","state","actions","originalItems","initialLayouts","lg","i","x","y","w","h","md","sm","xs","xxs","withSize","refreshMode","refreshRate","_ref","width","size","sidebar","useSelector","dispatch","useDispatch","components","a","b","c","e","f","g","j","k","fnCall","_useState","useState","_useState2","Object","_home_supersis03_Projects_Dextera_Phase_3_dextera_project_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","items","_useState3","key","ls","global","localStorage","JSON","parse","getItem","getFromLS","_useState4","layouts","setLayouts","onRemoveItem","itemId","displayItemList","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","data-grid","Infinity","style","_Widget__WEBPACK_IMPORTED_MODULE_8__","id","backgroundColor","useEffect","Fragment","react_grid_layout__WEBPACK_IMPORTED_MODULE_4__","breakpoints","cols","rowHeight","onLayoutChange","_","allLayouts","profile","msg","status","token","isAuthenticated","isLoading","user","isWeekly","tabSlice","addTab","action","newTask","payload","tab","push","removeTab","filter","item","reset","newTabSlice","addNewTab","removeNewTab","removeLastNewTab","pop","resetNewTab","favoriteSlice","addFav","newFav","page","favorite","length","isAvailable","removeFav","CONFIG","headers","Content-Type","Accept","API_URL","concat","process","getRoleFn","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","RoleId","response","wrap","_context2","prev","next","axios","get","sent","abrupt","data","stop","_x3","apply","this","arguments","roleFnService","goals","isError","isSuccess","message","createGoal","createAsyncThunk","_callee","goalData","thunkAPI","_context","getState","auth","goalService","t0","toString","rejectWithValue","_x","_x2","getGoals","_x4","deleteGoal","_ref3","_callee3","_context3","_x5","_x6","goalSlice","extraReducers","builder","addCase","pending","fulfilled","rejected","goal","_id","permissionService","createpermission","permissionData","getPermissions","deletePermission","delete","permissions","createPermission","permissionSlice","update","permission","combineReducers","undefined","type","objectSpread","setItem","removeItem","errors","messages","sidebarReducer","favoriteReducer","tabsReducer","newTabs","newTabsReducer","permissionReducer","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","persistor","persistStore","returnErrors","logout","post","tokenConfig","then","res","config","useToggle","slicedToArray","isToggled","setIsToggled","useCallback","SideBarBtn","styled","Button","theme","fontSize","textTransform","color","textAlign","height","margin","borderColor","padding","&:hover","palette","primary","main","&:visited","SecNavbar","boxShadow","overflow","position","FooterBar","bottom","left","alignContent","FooterLink","Link","_ref4","fontFamily","fontWeight","textDecoration","marginTop","FooterButton","_ref5","marginX","paddingX","LinkButton","_ref6","borderRadius","cursor","Search","_ref7","marginRight","spacing","marginLeft","SearchIconWrapper","_ref8","pointerEvents","alignItems","justifyContent","StyledInputBase","InputBase","_ref9","& .MuiInputBase-input","defineProperty","paddingLeft","transition","transitions","create","up","MainSearch","_ref10","MainSearchIconWrapper","_ref12","StyledMainInputBase","_ref13","updateIsWeekly","NavbarResponsive","Intl","DateTimeFormat","resolvedOptions","timeZone","Date","currentTime","_useState5","_useState6","dateValue","setDateValue","timeFormater","checked","toLocaleTimeString","hour","minute","hour12","_useToggle","_useToggle2","_useState7","_useState8","settingAcnchorEl","_useState9","Boolean","_useState10","_React$useState","React","_React$useState2","anchorEl","_React$useState3","_React$useState4","setChecked","handleChange","event","target","handleOnChage","value","_useState11","_useState12","openDrawer","setOpenDrawer","react_default","react","Typography","noWrap","component","sx","react_router_dom","to","src","Logo","alt","variant","Switch","onChange","inputProps","aria-label","transform","IconButton","float","onClick","Menu_default","Drawer","anchor","open","onClose","List","ListItemButton","ListItemIcon","Search_default","placeholder","Select","labelId","label","MenuItem","LocalizationProvider","dateAdapter","AdapterDateFns","DateRangePicker","startText","endText","newValue","renderInput","startProps","endProps","TextField","Box","mx","react_number_format_es","displayType","thousandSeparator","prefix","Navbar","isTabletOrMobile","useMediaQuery","query","redirect","flexGrow","AppBar","border","Toolbar","Navbars_NavbarResponsive","ml","mr","react_router","ChatHistory","Chip","avatar","Avatar","Chatting","Chat_ChatHistory","& .MuiTextField-root","m","endIcon","Send_default","Calender","setValue","tasks","Paper","Grid","container","StaticDatePicker","orientation","openTo","shouldDisableDate","isWeekend","params","task","ViewTasks","Divider","my","Favorites","ListItem","disablePadding","Star","ListItemText","NavBarSecResponsive","openFav","setOpenFav","handleCloseFav","openCal","setOpenCal","handleCloseCal","openChat","setOpenChat","handleCloseChat","useHistory","username","is_firm","is_lawyer","is_client","setLocalUser","setRedirect","_useState13","_useState14","setSettingAcnchorEl","_useState15","_useState16","settingAcnchorEl2","setSettingAcnchorEl2","openSetting2","openSetting","handleClose2","handleClose","_useState17","_useState18","anchorOrigin","vertical","horizontal","Message","Dialog","Validate","aria-labelledby","aria-describedby","right","DialogTitle","DialogContent","Chat","DialogActions","pathname","EmailRounded","CalendarToday","maxWidth","fullWidth","Dashboard_Calender","aria-controls","aria-expanded","aria-haspopup","currentTarget","CheckBox","Menu_Menu","MenuListProps","TransitionComponent","Fade","Favorite_Favorites","autoFocus","Settings","console","log","NotificationAdd","NavbarSec","handleLogout","handleClick","DrawerComp_NavBarSecResponsive","Person","Controls","px","AddCircle","Receipt","FileCopy","MoneyOff","esm_Task","Work","AssignmentTurnedIn","Marketing","Mail","HumanResources","Group","RevenueControls","AccountControls","EmployeeOversite","Phone","accordionData","tiles","TestingSidebar_Controls","TestingSidebar_HumanResources","TestingSidebar_RevenueControls","TestingSidebar_AccountControls","TestingSidebar_Marketing","TestingSidebar_EmployeeOversite","TestingSidebar","accordions","updateAccordions","mt","react_beautiful_dnd_esm","onDragEnd","result","destination","Array","from","_items$splice","splice","source","index","reorderedItem","droppableId","provided","assign","droppableProps","ref","innerRef","draggableId","Accordion","draggableProps","dragHandleProps","AccordionSummary","expandIcon","ExpandMore_default","align","AccordionDetails","connect","Stack","elevation","overflowY","Sidebar_TestingSidebar","Footer","setOpen","handleClickOpen","InnerLayout","children","_useSelector","isDesktopOrLaptop","useTheme","isBigScreen","sidebarToggle","drawerOpen","setDrawerOpen","openPopover","handleSidebarToggle","descriptionElementRef","useRef","descriptionElement","focus","contianer","rowSpacing","columnSpacing","Navbars_NavbarSec","Navbars_Navbar","direction","components_Sidebar_Sidebar","top","components_Footer_Footer","Fab","zIndex","Report","esm_Chat","Popover","transformOrigin","PrivateRoutes","rest","objectWithoutProperties","active","UserContext","createContext","UserProvider","_React$useReducer","useReducer","_React$useReducer2","Provider","createTheme","mode","error","warning","success","contrastThreshold","tonalOffset","typography","htmlFontSize","DashBoard","DashboardContent","Tabs","props","activeTab","setActiveTab","styles","startIcon","MoreVert","newActiveTab","preventDefault","one","CreateInvoice","approvel","setApprovel","matter","contact","billable","date_range","create_date","due_date","template","invoice_no","discount","submit","invoiceData","setInvoiceData","dateRange","setDateRange","onSubmit","autoComplete","FormControlLabel","control","Checkbox","varient","LocalizationProvider_LocalizationProvider","DateRangePicker_DateRangePicker","calendars","InputLabelProps","shrink","TableContainer","Table","TableHead","TableRow","TableCell","PaymentPlan","payment_no","due","amount","late_fee","total_due","payment","posted","method","paymentData","mb","TableBody","paddingInline","InvoicePayment","tax","interest","time","hard","soft","total","Payment","isPlan","setIsPlan","payment_type","date","retainer","menu","bank_account","payment_method","FormControl","RadioGroup","row","defaultValue","Radio","InputLabel","Payment_PaymentPlan","Payment_InvoicePayment","Filters","invoiceToggle","setInvoiceToggle","_useToggle3","_useToggle4","paymentToggle","setPaymentToggle","_useToggle5","_useToggle6","paid","setPaid","age","setAge","& .MuiFormControl-root","DialogContentText","Invoice_CreateInvoice","Invoice_Payment","styles_Search","styles_SearchIconWrapper","styles_StyledInputBase","InvoiceList","Invoice_Filters","Index","Invoice_InvoiceList","ActionAlerts","Alert","severity","TotalDays","date1","date2","dt1","dt2","Math","floor","UTC","getFullYear","getMonth","getDate","GetDate","MatterList","setTasks","setStatus","setLoading","redTask","setRedTask","greenTask","setGreenTask","yellowTask","setYellowTask","myTask","setMyTask","statusText","catch","err","FormGroup","Cards","Card","minWidth","CardContent","gutterBottom","Calendar","Box_Box","MatterCards","bgcolor","MatterListLong","setMatters","NewMatter","mask","openDate","setOpenDate","whenDate","setWhenDate","closeDate","setCloseDate","totalDays","setTotalDays","matter_name","matter_type","matter_source","matter_status","assign_to","assign_by","billing_rate","alerts","jurisdiction","status_limitaion","opposing_counsel","where","involved","witnesses","narrative","matterData","setMatterData","days","open_date","close_date","when","total_days","body","stringify","ActionAlerts_ActionAlerts","min","disabled","step","DatePicker","inputFormat","multiline","rows","Save_default","MatterTask","Activities","MatterDetail","MatterDetail_Activities","MatterDetail_MatterTask","MatterDetail_Cards","Matters","Matter_Filters","Matter_MatterCards","Matter_MatterListLong","MatterDashboard","Matter_MatterList","Matter_Calendar","Matter_Cards","components_Tabs_Tabs","Matter_MatterDashboard","Matter_Matters","Matter_NewMatter","Matter_MatterDetail","LedgerActivity","setActivityData","bgColor","Fillters","billedby","setBilledby","setFilter","LedgerCards","decimalScale","fixedDecimalScale","LedgerTImeList","setLedgerData","LegderDashbard","Ledger_LedgerCards","Ledger_Fillters","Ledger_LedgerTImeList","LedgerDoc","minHeight","Time","pickDate","setPickDate","timeToggle","setTimeToggle","setBillable","setTime","category","sub_category","unit","qty","rate","file","detail","bill_by","note","timeData","setTimeData","labelPlacement","FormLabel","format","customInput","onValueChange","LedgerDashbard","Ledger_LedgerActivity","Ledger_LedgerDoc","Ledger_Time","SubCategory","subCategory","setSubCategory","loading","formData","setFormData","FetchData","handleSubmit","required","Clear_default","Category","setCategory","setError","Classification","classification","setClassification","ManageCategory","components_Category_Category","Category_SubCategory","Category_Classification","Contact","_React$createElement","_React$createElement2","_React$createElement3","_React$createElement4","clientNo","setClientNo","dob","setDob","ssn","setSsn","mobileNo","setMobileNo","homeNo","setHomeNo","officeNo","setOfficeNo","faxNo","setFaxNo","otherNo","setOtherNo","zip","setZip","_useState19","_useState20","plus4","setPlus4","_useState21","_useState22","zip2","setZip2","_useState23","_useState24","plus42","setPlus42","_useState25","company_name","website","ger_email","billing_email","street","suite","city","f_name","l_name","email_1","email_2","email_3","street2","suite2","city2","state2","office","team","member","relation","_useState26","contactData","setContactData","persist","thousandsGroupStyle","autoWidth","gradYear","setGradYear","barDate","setBarDate","underGradYear","setUnderGradYear","phoneNo","setPhoneNo","barNo","setBarNo","practiceTime","setPracticeTime","longestTenure","setLongestTenure","averageTenure","setAverageTenure","currentTenure","setCurrentTenure","email","mobile","phone","language","locate","search_active","law_school","grad_year","bar_admit_date","undergrad_school","undergrad_area","undergrad_year","bar_no","admitted_practice","practice_time","longest_tenure","average_tenure","current_tenure","past_bar_companies_no","primary_area","TabContext","patch","borderBottom","TabList","Tab","TabPanel","defaultChecked","KeyboardArrowRight_default","CreateTask","dueDate","setDueDate","bill","setBill","isPrivate","setIsPrivate","setFile","matter_id","matter_contact","filename","taskData","setTaskData","& .MuiSelect-root","due_at","is_billable","is_private","Tasks_ViewTasks","Tasks_CreateTask","Invoice","Matter","Ledger","Category_ManageCategory","components_Contact_Contact","components_Profile_Profile","Tasks","invoice","ledger","AdminDashboard","tabList","newTabList","wordEntered","setWordEntered","handleChangeSearch","addSearchTab","setTimeout","displayNewTabsName","handleRemoveNewTab","Close_default","displayTabsName","handleRemoveTab","displaySearchTabs","noValidate"," & .MuiOutlinedInput-notchedOutline","renderTabs","Tabs_Tabs","scrollButtons","allowScrollButtonsMobilearia-label","icon","iconPosition","Add_default","Admin_DashBoard","ProgressBar","progress","paddingRight","LinearProgress","randomDate","start","end","getDateTime","getTime","random","toLocaleDateString","getHours","getMinutes","Task","LawyerCards","postfix","FirmCards","CustomerCards","Cards_CustomerCards","Dashboard_Tasks","Dashboard_ProgressBar","Templates","ClientDashboard","Client_DashBoard","Template_Templates","PieChart","series","options","chart","plotOptions","pie","donut","dataLabels","enabled","formatter","val","title","text","horizontalAlign","colors","labels","legend","show","dropShadow","useSeriesColors","onItemClick","toggleDataSeries","seriesName","opts","globals","seriesIndex","react_apexcharts_min_default","Chart2","radialBar","startAngle","endAngle","track","background","hollow","fill","gradient","shade","gradientToColors","stops","BarChart","stacked","bar","stroke","xaxis","categories","yaxis","tooltip","opacity","offsetX","Cards_LawyerCards","Chart_PieChart","Chart_Chart2","Chart_BarChart","LawyerDashboard","Lawyer_DashBoard","Chart","BarChart2","columnWidth","distributed","BarChart3","barHeight","textAnchor","opt","dataPointIndex","floating","Cards_FirmCards","Charts_Chart2","Charts_Chart","Charts_BarChart","Charts_BarChart2","Charts_BarChart3","FirmDashboard","Firm_DashBoard","Dashboard","UserRoles_AdminDashboard","UserRoles_FirmDashboard","UserRoles_LawyerDashboard","UserRoles_ClientDashboard","dashboardRedirect","login","password","LoginSuccess","backgroundImage","BackgroundImage","backgroundRepeat","t","grey","backgroundSize","backgroundPosition","square","flexDirection","LockOutlined_default","minLength","register","accountCreated","setAccountCreated","isFirm","setIsFirm","first_name","last_name","re_password","Company","m_name","c_email","role","time_zone","group","job_title","ext","home","work_no","phone_ext","userData","setUserData","p_email","& .MuiButton-root","User","usersData","setUsersData","isActive","setIsActive","roles","setRoles","setRole","setGroup","groups","setGroups","loading2","setLoading2","rate_type","select","last_login","is_active","ManageUserGroup","loadingUser","setLoadingUser","showUser","ManageRole","_useSelector2","overflowX","&MuiTableCell","is_view","Rectangle_default","is_edit","is_create","is_delete","is_contacts","is_team","is_office","is_region","components_User_User","User_ManageUserGroup","User_ManageRole","TimeList","practice_area","undergrad_study","lamguages","admitted_state","relocate","searchData","setSearchData","Result","Saved","pickTime","setPickTime","bar_adm_year","mail_add","link","notes","jobData","setJobData","TimePicker","Employee_Search","Employee_Result","Employee_Saved","App","es","integration_react","User_UserProvider","ThemeProvider","react_alert","AlertTemplate","timeout","Layout","path","Login","Signup","PrivateRoute","exact","Home","Profile","Employee","ReactDOM","render","StrictMode","CssBaseline","src_App","document","getElementById","Appointments","fillColor","strokeColor","toolbar","onItemHover","highlightDataSeries","curve","Calls","lable","Email","listStyleType","mapboxgl","workerClass","MapboxWorker","Map","latitude","longitude","zoom","viewport","setViewport","esm","mapStyle","MAP_STYLE","onViewportChange","mapboxApiAccessToken","offsetLeft","offsetTop","Circle","NewAccounts","EmpOversite","Widget","widgetNames","RevenueIn","RevenueOut","NewCustomer","LostCustomer","Admin_NewAccounts","Admin_Map","Admin_EmpOversite","Charts_Calls","Charts_Appointments","Charts_Marketing","Charts_Email","paddingTop","CardActions"],"mappings":"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","file":"static/js/main.3d419837.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white copy.aa470428.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"tabs_tabs__2iP2q\",\"current\":\"tabs_current__UH0Eq\",\"content\":\"tabs_content__Vh0J0\"};","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  revenueIn: true,\n  revenueOut: true,\n  newCustomer: true,\n  lostCustomer: true,\n  newAccount: true,\n  appointment: true,\n  marketing: true,\n  empOversite: true,\n  emails: true,\n  calls: true,\n  map: true,\n  display: true,\n};\n\nconst sidebarSlice = createSlice({\n  name: \"sidebar\",\n  initialState,\n  reducers: {\n    isDisplay: (state) => {\n      state.display = !state.display;\n    },\n    hideSidebar: (state) => {\n      state.display = false;\n    },\n    showSidebar: (state) => {\n      state.display = true;\n    },\n    // manageRoleActive: (state) => {\n    //   state.manageRole = !state.manageRole;\n    // },\n    // manageUserActive: (state) => {\n    //   state.manageUser = !state.manageUser;\n    // },\n    // manageGroupActive: (state) => {\n    //   state.manageGroup = !state.manageGroup;\n    // },\n    revenueInActive: (state) => {\n      state.revenueIn = !state.revenueIn;\n    },\n    revenueOutActive: (state) => {\n      state.revenueOut = !state.revenueOut;\n    },\n    newCustomerActive: (state) => {\n      state.newCustomer = !state.newCustomer;\n    },\n    lostCustomerActive: (state) => {\n      state.lostCustomer = !state.lostCustomer;\n    },\n    newAccountActive: (state) => {\n      state.newAccount = !state.newAccount;\n    },\n    appointmentActive: (state) => {\n      state.appointment = !state.appointment;\n    },\n    marketingActive: (state) => {\n      state.marketing = !state.marketing;\n    },\n    empOversiteActive: (state) => {\n      state.empOversite = !state.empOversite;\n    },\n    emailsActive: (state) => {\n      state.emails = !state.emails;\n    },\n    callsActive: (state) => {\n      state.calls = !state.calls;\n    },\n    mapActive: (state) => {\n      state.map = !state.map;\n    },\n  },\n});\n\nexport const {\n  isDisplay,\n  // manageRoleActive,\n  // manageGroupActive,\n  // manageUserActive,\n  hideSidebar,\n  showSidebar,\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} = sidebarSlice.actions;\nexport default sidebarSlice.reducer;\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { Responsive as ResponsiveGridLayout } from \"react-grid-layout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withSize } from \"react-sizeme\";\n\nimport {\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} from \"../../../../redux/features/sidebarSlice\";\n\nimport Widget from \"./Widget\";\n\nconst originalItems = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\"];\n\nconst initialLayouts = {\n  lg: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  md: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  sm: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  xs: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 3 },\n    { i: \"b\", x: 0, y: 4, w: 2, h: 3 },\n    { i: \"c\", x: 0, y: 8, w: 4, h: 6 },\n    { i: \"d\", x: 0, y: 12, w: 4, h: 6 },\n\n    { i: \"e\", x: 0, y: 18, w: 5, h: 6 },\n    { i: \"f\", x: 0, y: 24, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 30, w: 3, h: 4 },\n    { i: \"h\", x: 0, y: 36, w: 3, h: 4 },\n    { i: \"i\", x: 0, y: 42, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 48, w: 8, h: 5 },\n    { i: \"k\", x: 0, y: 53, w: 4, h: 5 },\n  ],\n  xxs: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 3 },\n    { i: \"b\", x: 0, y: 4, w: 2, h: 3 },\n    { i: \"c\", x: 0, y: 8, w: 4, h: 6 },\n    { i: \"d\", x: 0, y: 12, w: 4, h: 6 },\n\n    { i: \"e\", x: 0, y: 18, w: 5, h: 6 },\n    { i: \"f\", x: 0, y: 24, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 30, w: 3, h: 4 },\n    { i: \"h\", x: 0, y: 36, w: 3, h: 4 },\n    { i: \"i\", x: 0, y: 42, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 48, w: 8, h: 5 },\n    { i: \"k\", x: 0, y: 53, w: 4, h: 4 },\n  ],\n};\n\nfunction Content({ size: { width } }) {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  const components = {\n    a: sidebar.revenueIn,\n    b: sidebar.revenueOut,\n    c: sidebar.newCustomer,\n    d: sidebar.lostCustomer,\n    e: sidebar.newAccount,\n    f: sidebar.map,\n    g: sidebar.empOversite,\n    h: sidebar.calls,\n    i: sidebar.appointment,\n    j: sidebar.marketing,\n    k: sidebar.emails,\n  };\n  const fnCall = {\n    a: revenueInActive(),\n    b: revenueOutActive(),\n    c: newCustomerActive(),\n    d: lostCustomerActive(),\n    e: newAccountActive(),\n    f: mapActive(),\n    g: empOversiteActive(),\n    h: callsActive(),\n    i: appointmentActive(),\n    j: marketingActive(),\n    k: emailsActive(),\n  };\n  const [items, setItems] = useState(originalItems);\n  const [layouts, setLayouts] = useState(\n    getFromLS(\"layouts\") || initialLayouts,\n  );\n  const onLayoutChange = (_, allLayouts) => {\n    setLayouts(allLayouts);\n  };\n  const onLayoutSave = () => {\n    saveToLS(\"layouts\", layouts);\n  };\n  const onRemoveItem = (itemId) => {\n    // setItems(items.filter((i) => i !== itemId));\n    dispatch(fnCall[itemId]);\n  };\n  const onAddItem = (itemId) => {\n    setItems([...items, itemId]);\n    dispatch(fnCall[itemId]);\n  };\n  const displayItemList = () => {\n    return items.map((key) => (\n      <div\n        key={key}\n        className=\"widget\"\n        data-grid={{ w: 3, h: 2, x: 0, y: Infinity }}\n        style={components[key] ? { display: \"block\" } : { display: \"none\" }}\n      >\n        <Widget\n          id={key}\n          onRemoveItem={onRemoveItem}\n          backgroundColor=\"#867ae9\"\n        />\n      </div>\n    ));\n  };\n  useEffect(() => {\n    displayItemList();\n  }, [sidebar]);\n\n  return (\n    <>\n      <ResponsiveGridLayout\n        className=\"layout\"\n        layouts={layouts}\n        breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n        cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n        rowHeight={60}\n        width={width}\n        onLayoutChange={onLayoutChange}\n      >\n        {displayItemList()}\n      </ResponsiveGridLayout>\n    </>\n  );\n}\n\nexport default withSize({ refreshMode: \"debounce\", refreshRate: 60 })(Content);\n\nfunction getFromLS(key) {\n  let ls = {};\n  if (global.localStorage) {\n    try {\n      ls = JSON.parse(global.localStorage.getItem(\"rgl-8\")) || {};\n    } catch (e) {}\n  }\n  return ls[key];\n}\n\nfunction saveToLS(key, value) {\n  if (global.localStorage) {\n    global.localStorage.setItem(\n      \"rgl-8\",\n      JSON.stringify({\n        [key]: value,\n      }),\n    );\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/login_light.a12d3677.png\";","module.exports = __webpack_public_path__ + \"static/media/signup_light.181ee8a6.png\";","/** @format */\n\nimport { GET_PROFILE } from \"../actions/types\";\n\nconst initialState = {\n  profile: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {\n  msg: {},\n  status: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { CREATE_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case CREATE_MESSAGE:\n      return (state = action.payload);\n\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload,\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport {\n  GET_IS_WEEKLY,\n  MONTLY_REVENUE,\n  WEEKLY_REVENUE,\n} from \"../actions/types\";\n\nconst initialState = {\n  isWeekly: \"daily\",\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_IS_WEEKLY:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case MONTLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case WEEKLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst tabSlice = createSlice({\n  name: \"tab\",\n  initialState: initialState,\n  reducers: {\n    addTab: (state, action) => {\n      const newTask = {\n        id: action.payload.id,\n        name: action.payload.tab,\n      };\n      state.push(newTask);\n    },\n    removeTab: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n    reset: (state) => initialState,\n  },\n});\n\nexport const { addTab, removeTab, reset } = tabSlice.actions;\nexport default tabSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst newTabSlice = createSlice({\n  name: \"tab\",\n  initialState: initialState,\n  reducers: {\n    addNewTab: (state, action) => {\n      state.push({\n        id: action.payload.id,\n        name: action.payload.name,\n      });\n    },\n    removeNewTab: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n\n    removeLastNewTab: (state) => {\n      state.pop();\n    },\n    resetNewTab: (state) => initialState,\n  },\n});\n\nexport const {\n  addNewTab,\n  removeNewTab,\n  resetNewTab,\n  removeLastNewTab,\n} = newTabSlice.actions;\nexport default newTabSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  favorite: {},\n  isAvailable: true,\n};\n\nconst favoriteSlice = createSlice({\n  name: \"favorite\",\n  initialState: [],\n  reducers: {\n    addFav: (state, action) => {\n      const newFav = {\n        id: action.payload.id,\n        name: action.payload.name,\n        page: action.payload.page,\n      };\n      if (state.favorite.length < 10) {\n        state.favorite.push(newFav);\n      } else state.isAvailable = false;\n    },\n\n    removeFav: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n  },\n});\n\nexport const { addFav, removeFav } = favoriteSlice.actions;\nexport default favoriteSlice.reducer;\n","/** @format */\n\n// import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport const CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nexport const CreateMatter = (\n  contact,\n  matter_name,\n  matter_type,\n  matter_source,\n  matter_status,\n  assign_to,\n  assign_by,\n  billing_rate,\n  alerts,\n  open_date,\n  close_date,\n  total_days,\n  jurisdiction,\n  status_limitaion,\n  opposing_counsel,\n  where,\n  when,\n  involved,\n  witnesses,\n  narrative,\n) => {\n  let status = \"\";\n  const body = JSON.stringify({\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n    open_date,\n    close_date,\n    total_days,\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    when,\n    involved,\n    witnesses,\n    narrative,\n  });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n    .then((res) => {\n      status = res.statusText;\n    })\n    .catch((err) => {\n      status = err.message;\n    });\n\n  return status;\n};\n\nexport const retrive_matter = () => {};\n","import axios from 'axios'\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/user/auth/`\n\n// Create new goal\nconst createRole = async (roleData, token) => {\n  // const config = {\n  //   headers: {\n  //     Authorization: `Bearer ${token}`,\n  //   },\n  // }\n\n  const response = await axios.post(API_URL, roleData, CONFIG)\n\n  return response.data\n}\n\n// Get user goals\nconst getRoleFn = async (RoleId) => {\n\n  const response = await axios.get(API_URL + RoleId , CONFIG)\n\n  return response.data\n}\n\n// Delete user goal\nconst deleteGoal = async (goalId, token) => {\n\n  const response = await axios.delete(API_URL + goalId, CONFIG)\n\n  return response.data\n}\n\nconst roleFnService = {\n  // createGoal,\n  getRoleFn,\n  // deleteGoal,\n}\n\nexport default roleFnService","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport goalService from '../services/roleFnService'\n\nconst initialState = {\n  goals: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: '',\n}\n\n// Create new goal\nexport const createGoal = createAsyncThunk(\n  'goals/create',\n  async (goalData, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      return await goalService.createGoal(goalData, token)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// Get user goals\nexport const getGoals = createAsyncThunk(\n  'goals/getAll',\n  async (_, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      return await goalService.getGoals(token)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// Delete user goal\nexport const deleteGoal = createAsyncThunk(\n  'goals/delete',\n  async (id, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      return await goalService.deleteGoal(id, token)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\nexport const goalSlice = createSlice({\n  name: 'goal',\n  initialState,\n  reducers: {\n    reset: (state) => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(createGoal.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(createGoal.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.goals.push(action.payload)\n      })\n      .addCase(createGoal.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n      .addCase(getGoals.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(getGoals.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.goals = action.payload\n      })\n      .addCase(getGoals.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n      .addCase(deleteGoal.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(deleteGoal.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.goals = state.goals.filter(\n          (goal) => goal._id !== action.payload.id\n        )\n      })\n      .addCase(deleteGoal.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n  },\n})\n\nexport const { reset } = goalSlice.actions\nexport default goalSlice.reducer","import axios from 'axios'\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/user/auth/role-permissions/`\n// Create new permission\nconst createpermission = async (permissionData, token) => {\n//   const config = {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//     },\n//   }\n\n//   const response = await axios.post(API_URL, permissionData, config)\n\n//   return response.data\n}\n\n// Get user permissions\nconst getPermissions = async (id) => {\n\n  const response = await axios.get(`${process.env.REACT_APP_API_URL}/user/auth/role-permissions/${id}/`, CONFIG)\n\n  return response.data\n}\n\n// Delete user permission\nconst deletePermission = async (id) => {\n\n  const response = await axios.delete(`${process.env.REACT_APP_API_URL}/user/auth/role-permissions/${id}/`, CONFIG)\n\n  return response.data\n}\n\nconst permissionService = {\n  createpermission,\n  getPermissions,\n  deletePermission,\n}\n\nexport default permissionService","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport permissionService from '../services/permissionService'\n\nconst initialState = {\n  permissions: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: '',\n}\n\n// Create new permissions\nexport const createPermission = createAsyncThunk(\n  'permissions/create',\n  async (permissionData, thunkAPI) => {\n    try {\n      return await permissionService.createPermission(permissionData)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// Get user permissions\nexport const getPermissions = createAsyncThunk(\n  'permissions/getAll',\n  async (id, thunkAPI) => {\n    try {\n      return await permissionService.getPermissions(id)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// Delete user permission\nexport const deletePermission = createAsyncThunk(\n  'permissions/delete',\n  async (id, thunkAPI) => {\n    try {\n \n      return await permissionService.deletePermission(id)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\nexport const permissionSlice = createSlice({\n  name: 'permission',\n  initialState,\n  reducers: {\n    reset: (state) => initialState,\n    update: (state, action)=>{\n     \n    }, \n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(createPermission.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(createPermission.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.permissions.push(action.payload)\n      })\n      .addCase(createPermission.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n      .addCase(getPermissions.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(getPermissions.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.permissions = action.payload\n      })\n      .addCase(getPermissions.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n      .addCase(deletePermission.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(deletePermission.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.permissions = state.permissions.filter(\n          (permission) => permission._id !== action.payload.id\n        )\n      })\n      .addCase(deletePermission.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n  },\n})\n\nexport const { reset } = permissionSlice.actions\nexport default permissionSlice.reducer","/** @format */\n\nimport { combineReducers } from \"redux\";\n// import leads from \"./leads\";\nimport profile from \"./profile\";\nimport errors from \"./errors\";\nimport messages from \"./messages\";\nimport auth from \"./auth\";\nimport data from \"./data\";\nimport sidebarReducer from \"../redux/features/sidebarSlice\";\nimport tabsReducer from \"../redux/features/tabSlice\";\nimport newTabsReducer from \"../redux/features/searchTabSlice\";\nimport favoriteReducer from \"../redux/features/favoriteSlice\";\nimport rolefnsReducer from \"../redux/features/roleFnSlice\";\nimport permissionReducer from \"../redux/features/permissionSlice\"\n// import auth from \"../redux/features/authSlice\"\n\nexport default combineReducers({\n  auth,\n  profile,\n  errors,\n  messages,\n  data,\n  sidebar: sidebarReducer,\n  favorite: favoriteReducer ,\n  tabs: tabsReducer,\n  newTabs: newTabsReducer,\n  permissions: permissionReducer, \n});\n","/** @format */\n\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const DELETE_PROFILE = \"DELETE_PROFILE\";\nexport const ADD_PROFILE = \"ADD_PROFILE\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const CLEAR_PROFILES = \"CLEAR_PROFILES\";\nexport const MONTLY_REVENUE = \"GET_MONTLY_REVENUE\";\nexport const WEEKLY_REVENUE = \"GET_WEEKLY_REVENUE\";\nexport const GET_IS_WEEKLY = \"GET_IS_WEEKLY\";\nexport const UPDATE_IS_WEEKLY = \"UPDATE_IS_WEEKLY\";\n\nexport const CREATE_MEMBER_SUCCESS = \"CREATE_MEMBER_SUCCESS\";\nexport const CREATE_MEMBER_FAIL = \"CREATE_MEMBER_FAIL\";\n\nexport const GET_MEMBER_SUCCESS = \"GET_MEMBER_SUCCESS\";\nexport const GET_MEMBER_FAIL = \"GET_MEMBER_FAIL\";\n\nexport const GET_TIMEZONE_SUCCESS = \"GET_TIMEZONE_SUCCESS\";\nexport const GET_TIMEZONE_FAIL = \"GET_TIMEZONE_FAIL\";\nexport const GET_CURRENT_TIME_SCUSSESS = \"GET_CURRENT_TIME_SCUSSESS\";\nexport const GET_CURRENT_TIME_FAIL = \"GET_CURRENT_TIME_FAIL\";\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\n// export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\n// export const SIGNUP_FAIL = 'SIGNUP_FAIL';\n// export const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\n// export const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\n// export const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\n// export const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\n// export const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\n// export const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\n// export const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\n// export const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\n// export const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\n// export const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\n// export const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\n// export const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\n// export const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\n// export const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\n// export const LOGOUT = 'LOGOUT';\n\n// export const PROFILE_CREATED_SUCCESS = 'PROFILE_CREATED_SUCCESS';\n// export const PROFILE_CREATED_FAIL = 'PROFILE_CREATED_FAIL';\n\n// export const PROFILE_LOADED_SUCCESS = 'PROFILE_LOADED_SUCCESS';\n// export const PROFILE_LOADED_FAIL = 'PROFILE_LOADED_FAIL';\n\n// export const PROFILE_UPDATE_SUCCESS = 'PROFILE_UPDATE_SUCCESS';\n// export const PROFILE_UPDATE_FAIL = 'PROFILE_UPDATE_FAIL';\n","/** @format */\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./reducers\";\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({ reducer: persistedReducer,});\n\nexport const persistor = persistStore(store);\n\nexport default store;\n","/** @format */\n\nimport { CREATE_MESSAGE, GET_ERRORS } from \"./types\";\n\n// CREATE MESSAGE\nexport const createMessage = (msg) => {\n  return {\n    type: CREATE_MESSAGE,\n    payload: msg,\n  };\n};\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status },\n  };\n};\n","/** @format */\n\nimport axios from \"axios\";\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from \"./types\";\nimport { createMessage, returnErrors } from \"./messages\";\nimport { useSelector } from \"react-redux\";\nimport { reset } from \"../redux/features/tabSlice\";\nimport { resetNewTab } from \"../redux/features/searchTabSlice\";\n\n// CHECK TOKEN & LOAD USER\nexport const loadUser = () => (dispatch, getState) => {\n  // User Loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get(\n      `${process.env.REACT_APP_API_URL}/user/auth/user`,\n      tokenConfig(getState),\n    )\n    .then((res) => {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data.message, err.response.status));\n      dispatch({\n        type: AUTH_ERROR,\n      });\n    });\n};\n\n// LOGIN USER\nexport const login = (username, email, password) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ username, password });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/user/auth/login`, body, config)\n    .then(function(response) {\n      console.log(response);\n      dispatch(createMessage({ LoginSuccess: \"Login Successful\" }));\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: response.data,\n      });\n    })\n    .catch(function(error) {\n      dispatch(returnErrors(error.response.data, error.response.status));\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n      console.log(error);\n    });\n};\n\n// REGISTER USER\nexport const register = ({ username, email, password }) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ username, email, password });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/user/auth/register`, body, config)\n    .then((res) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n    });\n};\n\n// LOGOUT USER\nexport const logout = () => (dispatch, getState) => {\n  axios\n    .post(\n      `${process.env.REACT_APP_API_URL}/user/auth/logout`,\n      null,\n      tokenConfig(getState),\n    )\n    .then((res) => {\n      localStorage.removeItem(\"token\");\n      dispatch(reset());\n      dispatch(resetNewTab());\n      dispatch({\n        type: LOGOUT_SUCCESS,\n      });\n    });\n};\n\n// Setup config with token - helper function\nexport const tokenConfig = (getState) => {\n  // const token = useSelector((state) => state.auth.token);\n  // Get token from state\n  const token = getState().auth.token;\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // If token, add to headers config\n  if (token) {\n    config.headers[\"Authorization\"] = `Token ${token}`;\n  }\n\n  return config;\n};\n","/** @format */\n\nimport { useState, useCallback } from \"react\";\n\nexport const useToggle = (initialState) => {\n  const [isToggled, setIsToggled] = useState(initialState);\n\n  // put [setIsToggled] into the useCallback's dependencies array\n  // this value never changes so the callback is not going to be ever re-created\n  const toggle = useCallback(\n    () => setIsToggled((state) => !state),\n    [setIsToggled],\n  );\n\n  return [isToggled, toggle];\n};\n","/** @format */\n\n// import * as React from 'react';\nimport { styled } from \"@mui/material/styles\";\nimport { Link } from \"react-router-dom\";\nimport { Button, InputBase } from \"@mui/material\";\n\nexport const SideBarBtn = styled(Button)(({ theme }) => ({\n  fontSize: \"0.6em\",\n  textTransform: \"none\",\n  // color: theme.palette.primary.main,\n  color: \"#eee\",\n  textAlign: \"center\",\n  width: \"8em\",\n  height: \"8em\",\n  margin: \"0.7em\",\n  borderColor: \"#eee\",\n  padding: \"1em\",\n  \"&:hover\": {\n    backgroundColor: \"white\",\n    color: theme.palette.primary.main,\n  },\n  \"&:visited\": {\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport const SecNavbar = styled(\"nav\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  overflow: \"hidden\",\n  color: \"#eee\",\n  position: \"reletive\",\n  padding: \"0\",\n  margin: \"0\",\n  height: \"3.5rem\",\n  width: \"100%\",\n}));\n\nexport const FooterBar = styled(\"footer\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  color: \"#eee\",\n  position: \"fixed\",\n  bottom: \"0\",\n  left: \"0\",\n\n  margin: \"0\",\n  height: \"2.5rem\",\n  textAlign: \"center\",\n  alignContent: \"center\",\n  width: \"100%\",\n}));\n\nexport const FooterLink = styled(Link)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  fontSize: \"1rem\",\n  textTransform: \"uppercase\",\n  fontWeight: 500,\n  textDecoration: \"none\",\n  marginTop: \"0.7rem\",\n  padding: \" 2rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\nexport const FooterButton = styled(Button)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  fontSize: \"1rem\",\n  fontWeight: 500,\n  marginX: \"2rem\",\n  paddingX: \"3rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\n\nexport const LinkButton = styled(Link)(({ theme }) => ({\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  margin: \"0.7em\",\n  backgroundColor: theme.palette.primary.main,\n  borderColor: \"#2979ff\",\n  color: \"white\",\n  padding: \"0.65rem 1.2rem\",\n  borderRadius: \"0.5rem\",\n  \"&:hover\": {\n    backgroundColor: \"#1c54b2\",\n    cursor: \"pointer\",\n    color: \"white\",\n  },\n}));\n\nexport const Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#ddd\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"40%\",\n}));\n\nexport const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\nexport const MainSearch = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#eee\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(3),\n    width: \"auto\",\n  },\n}));\n\nexport const MainSearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledMainInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n","/** @format */\n\n/** @format */ // import axios from \"axios\";\n\nimport { GET_IS_WEEKLY, MONTLY_REVENUE, WEEKLY_REVENUE } from \"./types\";\n// GET LEADS\nexport const updateIsWeekly = (data) => (dispatch) => {\n  if (data) {\n    dispatch({\n      type: WEEKLY_REVENUE,\n      payload: data,\n    });\n  } else {\n    dispatch({\n      type: MONTLY_REVENUE,\n    });\n  }\n};\n\nexport const getIsWeekly = () => (dispatch) =>\n  dispatch({\n    type: GET_IS_WEEKLY,\n    // payload: this.state,\n  });\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport NumberFormat from \"react-number-format\";\nimport { useToggle } from \"../../context/useToggle\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  ListSubheader,\n  TextField,\n} from \"@mui/material\";\nimport {\n  MainSearch,\n  MainSearchIconWrapper,\n  StyledMainInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Logo from \"../../asserts/logo_white copy.png\";\nimport { updateIsWeekly } from \"../../actions/data\";\nimport {\n  IconButton,\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\n\nconst NavbarResponsive = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const [today, setToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [dateValue, setDateValue] = useState([null, null]);\n\n  const timeFormater = () => {\n    if (checked) {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n    } else {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: false,\n      });\n    }\n  };\n  const [isChecked, setIsChecked] = useToggle(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOnChage = (e) => {\n    dispatch(updateIsWeekly(e.target.value));\n  };\n\n  const logout_user = () => {\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Typography variant=\"h5\" component=\"h5\">\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          color=\"primary\"\n          style={{ marginRight: \"0.5rem\" }}\n        >\n          Expected Balance :\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">\n              Expected Balance\n            </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={isWeekly}\n              label=\"Expected Balance\"\n              onChange={handleOnChage}\n            >\n              <MenuItem value=\"daily\">Daily</MenuItem>\n              <MenuItem value=\"weekly\">Weekly</MenuItem>\n              <MenuItem value=\"monthly\">Monthly</MenuItem>\n              <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n              <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n              <MenuItem value=\"range\">Custom Range</MenuItem>\n              {isWeekly === \"range\" ? (\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              ) : null}\n            </Select>\n          </FormControl>\n        </Typography>\n        <NumberFormat\n          value={isWeekly ? 3254 : 32564}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix=\"$\"\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" ml={1} mr={1}>\n        {\" \"}\n        |{\" \"}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h5\">\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          \n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n    </Fragment>\n  );\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <Typography noWrap component=\"div\" sx={{ display: \"block\" }}>\n        <Link to=\"/\">\n          <img\n            src={Logo}\n            alt=\"logo\"\n            style={{ height: \"2rem\", width: \"auto\" }}\n          />\n        </Link>\n      </Typography>\n      {isAuthenticated ? (\n        <>\n          <Typography variant=\"h5\" component=\"h5\" sx={{ marginLeft: \"1rem\" }}>\n            {timeFormater()}\n            <Switch\n              size=\"small\"\n              \n              checked={checked}\n              onChange={handleChange}\n              inputProps={{ \"aria-label\": \"controlled\" }}\n              sx={{ transform: \"rotate(90deg)\" }}\n            />\n          </Typography>\n          <IconButton\n            sx={{ color: \"#7a4ebf\", float: \"right\" }}\n            onClick={() => setOpenDrawer(!openDrawer)}\n          >\n            <MenuIcon color=\"#7a4ebf\" />\n          </IconButton>\n        </>\n      ) : (\n        guestLinks()\n      )}\n\n      <Drawer\n        anchor=\"right\"\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <MainSearch>\n                <MainSearchIconWrapper>\n                  <SearchIcon />\n                </MainSearchIconWrapper>\n                <StyledMainInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </MainSearch>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <Typography variant=\"h5\" component=\"h5\">\n                <Typography\n                  component=\"span\"\n                  variant=\"h5\"\n                  color=\"primary\"\n                  style={{ marginRight: \"0.5rem\" }}\n                >\n                  Set Interval :\n                  <Select\n                    size=\"small\"\n                    sx={{ marginX: \"1rem\" }}\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={isWeekly}\n                    label=\"Expected Balance\"\n                    onChange={handleOnChage}\n                  >\n                    <MenuItem value=\"daily\">Daily</MenuItem>\n                    <MenuItem value=\"weekly\">Weekly</MenuItem>\n                    <MenuItem value=\"monthly\">Monthly</MenuItem>\n                    <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n                    <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n                    <MenuItem value=\"range\">Custom Range</MenuItem>\n                    {isWeekly === \"range\" ? (\n                      <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DateRangePicker\n                          startText=\"Start Date\"\n                          endText=\"End Date\"\n                          value={dateValue}\n                          onChange={(newValue) => {\n                            setDateValue(newValue);\n                          }}\n                          renderInput={(startProps, endProps) => (\n                            <Fragment>\n                              <TextField {...startProps} />\n                              <Box sx={{ mx: 2 }}> to </Box>\n                              <TextField {...endProps} />\n                            </Fragment>\n                          )}\n                        />\n                      </LocalizationProvider>\n                    ) : null}\n                  </Select>\n                </Typography>\n              </Typography>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              {\" \"}\n              <Typography variant=\"h5\" component=\"h5\">\n                Expected Balance :{\" \"}\n                <NumberFormat\n                  value={isWeekly ? 3254 : 32564}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon></ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon></ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <MainSearch>\n                <MainSearchIconWrapper>\n                  <SearchIcon />\n                </MainSearchIconWrapper>\n                <StyledMainInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </MainSearch>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n      </Drawer>\n    </Fragment>\n  );\n};\n\nexport default NavbarResponsive;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport NumberFormat from \"react-number-format\";\nimport { useToggle } from \"../../context/useToggle\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  ListSubheader,\n  TextField,\n} from \"@mui/material\";\nimport {\n  MainSearch,\n  MainSearchIconWrapper,\n  StyledMainInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Logo from \"../../asserts/logo_white copy.png\";\nimport { updateIsWeekly } from \"../../actions/data\";\nimport { useMediaQuery } from \"react-responsive\";\nimport NavbarResponsive from \"./NavbarResponsive\";\n\nconst Navbar = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const [today, setToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [dateValue, setDateValue] = useState([null, null]);\n\n  const timeFormater = () => {\n    if (checked) {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n    } else {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: false,\n      });\n    }\n  };\n  const [isChecked, setIsChecked] = useToggle(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOnChage = (e) => {\n    dispatch(updateIsWeekly(e.target.value));\n  };\n\n  const logout_user = () => {\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Typography variant=\"h5\" component=\"h5\">\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          color=\"primary\"\n          style={{ marginRight: \"0.8rem\" }}\n        >\n          Expected Balance :\n          <Select\n            sx={{ marginX: \"1rem\" }}\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={isWeekly}\n            label=\"Expected Balance\"\n            onChange={handleOnChage}\n          >\n            <MenuItem value=\"daily\">Daily</MenuItem>\n            <MenuItem value=\"weekly\">Weekly</MenuItem>\n            <MenuItem value=\"monthly\">Monthly</MenuItem>\n            <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n            <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n            <MenuItem value=\"range\">Custom Range</MenuItem>\n            {isWeekly === \"range\" ? (\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateRangePicker\n                  startText=\"Start Date\"\n                  endText=\"End Date\"\n                  value={dateValue}\n                  onChange={(newValue) => {\n                    setDateValue(newValue);\n                  }}\n                  renderInput={(startProps, endProps) => (\n                    <Fragment>\n                      <TextField {...startProps} />\n                      <Box sx={{ mx: 2 }}> to </Box>\n                      <TextField {...endProps} />\n                    </Fragment>\n                  )}\n                />\n              </LocalizationProvider>\n            ) : null}\n          </Select>\n        </Typography>\n        <NumberFormat\n          value={isWeekly ? 3254 : 32564}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix=\"$\"\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" ml={1} mr={1}>\n        {\" \"}\n        |{\" \"}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h5\">\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          \n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n    </Fragment>\n  );\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <Box sx={{ flexGrow: 1, backgroundColor: \"white\" }} component=\"nav\">\n        <AppBar position=\"static\" color=\"transparent\" sx={{ border: \"none\" }}>\n          <Toolbar>\n            {isTabletOrMobile ? (\n              <>\n                <NavbarResponsive />\n              </>\n            ) : (\n              <>\n                <Typography\n                  noWrap\n                  component=\"div\"\n                  sx={{ display: { xs: \"none\", sm: \"block\" } }}\n                >\n                  <Link to=\"/\">\n                    <img\n                      src={Logo}\n                      alt=\"logo\"\n                      style={{ height: \"2rem\", width: \"auto\" }}\n                    />\n                  </Link>\n                </Typography>\n                <MainSearch>\n                  <MainSearchIconWrapper>\n                    <SearchIcon />\n                  </MainSearchIconWrapper>\n                  <StyledMainInputBase\n                    placeholder=\"Search…\"\n                    inputProps={{ \"aria-label\": \"search\" }}\n                  />\n                </MainSearch>\n                <Box sx={{ flexGrow: 1 }} />\n                <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\n                  {isAuthenticated ? authLinks() : guestLinks()}\n                </Box>\n              </>\n            )}\n          </Toolbar>\n        </AppBar>\n      </Box>\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\n\nexport default Navbar;\n","/** @format */\n\nimport { Box, Typography, Button, TextField, Chip } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport React, { Fragment } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\n\nconst ChatHistory = () => {\n  return (\n    <Typography>\n      <Box\n        p={2}\n        sx={{\n          border: \"1px solid lightgray\",\n          borderRadius: \"1rem\",\n        }}\n      >\n        <Chip\n          label=\"Hi\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          size=\"large\"\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip label=\"Hello\" variant=\"outlined\" avatar={<Avatar>M</Avatar>} />\n        <br />\n        <Chip\n          label=\"Message by M\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"Message by D\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"this is just a ui design\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{ marginTop: \"1rem\" }}\n        />\n        <br />\n        <Chip\n          label=\"the chat feature is not working at backend\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n\n        <br />\n      </Box>\n    </Typography>\n  );\n};\n\nconst Chatting = () => {\n  return (\n    <Fragment>\n      <ChatHistory />\n      <br />\n      <Box\n        component=\"form\"\n        sx={{\n          //   border: \"1px solid lightgray\",\n          //   borderRadius: \"1rem\",\n          \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n        }}\n      >\n        <TextField type=\"text\" size=\"small\" variant=\"outlined\" />\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          endIcon={<SendIcon />}\n          type=\"submit\"\n          sx={{\n            m: 1,\n          }}\n        >\n          Send\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Chatting;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport isWeekend from \"date-fns/isWeekend\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { StaticDatePicker } from \"@mui/x-date-pickers/StaticDatePicker\";\nimport { TextField, Box, Paper, Grid } from \"@mui/material\";\n\nconst Calender = () => {\n  const [value, setValue] = useState(new Date());\n  const [tasks, setTasks] = useState([]);\n\n  return (\n    <Box component={Paper} m={2}>\n      <Grid container>\n        {\" \"}\n        <Grid item lg={6} xs={12}>\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <StaticDatePicker\n              orientation=\"landscape\"\n              openTo=\"day\"\n              value={value}\n              shouldDisableDate={isWeekend}\n              onChange={(newValue) => {\n                setValue(newValue);\n              }}\n              renderInput={(params) => <TextField {...params} />}\n            />\n          </LocalizationProvider>\n        </Grid>{\" \"}\n        <Grid item lg={6} xs={12}>\n          {tasks.length !== 0 ? (\n            tasks.map((task) => (\n              <li>\n                {task.id} - {task.name}\n              </li>\n            ))\n          ) : (\n            <h4> No record found</h4>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Calender;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Menu, MenuItem, Divider } from \"@mui/material\";\n\nconst ViewTasks = () => {\n  return (\n    <Fragment>\n      <MenuItem>Profile</MenuItem>\n      <MenuItem>Account</MenuItem>\n      <MenuItem>Setting</MenuItem>\n      <Divider sx={{ my: 0.5 }} />\n      <MenuItem>Logout</MenuItem>\n    </Fragment>\n  );\n};\n\nexport default ViewTasks;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nimport { Star } from \"@mui/icons-material\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Favorites = () => {\n  const favList = useSelector((state) => state.favorite.favorite);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <List>\n        <ListItem disablePadding>\n          <ListItemButton>\n            <ListItemIcon>\n              <Star sx={{ color: \"orange\" }} />\n            </ListItemIcon>\n          </ListItemButton>\n          <ListItemText primary=\"Favorite 1\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Favorites;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport Chatting from \"../Chat/Chat\";\n\n// styling imports\nimport {\n  Box,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  Fade,\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { SecNavbar } from \"../../styles/styles\";\n\nimport {\n  Message,\n  EmailRounded,\n  CalendarToday,\n  CheckBox,\n  Person,\n  NotificationAdd,\n  Settings,\n  Star,\n  StarBorder,\n} from \"@mui/icons-material/\";\nimport { useToggle } from \"../../context/useToggle\";\nimport Calender from \"../Dashboard/Calender\";\nimport ViewTasks from \"../Tasks/ViewTasks\";\nimport Favorites from \"../Favorite/Favorites\";\nimport serverTime from \"../../utils/ServerTime\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { useMediaQuery } from \"react-responsive\";\nimport {\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nexport const NavBarSecResponsive = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  const [openFav, setOpenFav] = useState(false);\n\n  const handleClickOpenFav = () => {\n    setOpenFav(true);\n  };\n\n  const handleCloseFav = () => {\n    setOpenFav(false);\n  };\n  const [openTask, setOpenTask] = useState(false);\n\n  const handleClickOpenTask = () => {\n    setOpenTask(true);\n  };\n\n  const handleCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const [openCal, setOpenCal] = useState(false);\n\n  const handleClickOpenCal = () => {\n    setOpenCal(true);\n  };\n\n  const handleCloseCal = () => {\n    setOpenCal(false);\n  };\n\n  const [openChat, setOpenChat] = useState(false);\n\n  const handleClickOpenChat = () => {\n    setOpenChat(true);\n  };\n\n  const handleCloseChat = () => {\n    setOpenChat(false);\n  };\n\n  const history = useHistory();\n  const [isLogout, setIsLogout] = useToggle(false);\n  const today = new Date();\n  const time = today.toLocaleTimeString();\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n  const [redirect, setRedirect] = useState(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [settingAcnchorEl2, setSettingAcnchorEl2] = useState(null);\n\n  const [anchorEl2, setAnchorEl2] = React.useState(null);\n\n  const handleLogout = () => {\n    console.log(\"logout button just clicked\");\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const open = Boolean(anchorEl);\n  const open2 = Boolean(anchorEl);\n\n  const userRoleChecker = () => {\n    switch (user.username) {\n      case \"admin\":\n        return \"Admin\";\n      case \"firm\":\n        return \"Firm\";\n      case \"lawyer\":\n        return \"Lawyer\";\n      default:\n        return \"Client\";\n    }\n  };\n\n  const openSetting2 = Boolean(settingAcnchorEl2);\n\n  const handleClick2 = (event) => {\n    setSettingAcnchorEl2(event.currentTarget);\n  };\n  const openSetting = Boolean(settingAcnchorEl);\n  const handleClose2 = () => {\n    setSettingAcnchorEl2(null);\n  };\n\n  const handleClick = (event) => {\n    setSettingAcnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setSettingAcnchorEl(null);\n  };\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <IconButton\n        sx={{ color: \"white\" }}\n        onClick={() => setOpenDrawer(!openDrawer)}\n      >\n        <MenuIcon color=\"white\" />\n      </IconButton>\n      <Drawer\n        anchor=\"left\"\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                className=\"nav-items\"\n                size=\"large\"\n                onClick={handleClickOpenChat}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"#fff\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n              >\n                <Message />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          className=\"nav-items\"\n          Validate\n          open={openChat}\n          onClose={handleCloseChat}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          sx={{\n            position: \"absolute\",\n            right: \"20px\",\n            bottom: \"150px\",\n          }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Chatting Application\"}\n          </DialogTitle>\n          <DialogContent>\n            <Chatting />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseChat}>Close</Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                size=\"large\"\n                className=\"nav-items\"\n                component={Link}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n                to={{\n                  pathname:\n                    \"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=someone@gmail.com\",\n                }}\n                target=\"_blank\"\n              >\n                <EmailRounded />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                size=\"large\"\n                className=\"nav-items\"\n                onClick={handleClickOpenCal}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <CalendarToday />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          Validate\n          open={openCal}\n          maxWidth=\"lg\"\n          fullWidth\n          onClose={handleCloseCal}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          sx={{\n            position: \"absolute\",\n            right: \"20px\",\n            bottom: \"150px\",\n          }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Calender\"}</DialogTitle>\n          <DialogContent>\n            <Calender />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseCal}>Close</Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                aria-label=\"more\"\n                className=\"nav-items\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting2 ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick2}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <CheckBox />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Menu\n          id=\"fade-menu\"\n          MenuListProps={{\n            \"aria-labelledby\": \"fade-button\",\n          }}\n          className=\"nav-items\"\n          anchorEl={settingAcnchorEl2}\n          open={openSetting2}\n          onClose={handleClose2}\n          TransitionComponent={Fade}\n        >\n          <MenuItem onClick={handleClose2}>Task 1: This is task one</MenuItem>\n          <MenuItem onClick={handleClose2}>Task 2: This is task two</MenuItem>\n          <MenuItem onClick={handleClose2}>Task 3: This is task three</MenuItem>\n          <Divider sx={{ my: 0.5 }} />\n          <MenuItem onClick={handleClose2}>Task 4: This is task four</MenuItem>\n        </Menu>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                className=\"nav-items\"\n                aria-expanded={openSetting2 ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClickOpenFav}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <Star />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          open={openFav}\n          onClose={handleCloseFav}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n          <DialogContent>\n            <Favorites />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseFav} autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                className=\"nav-items\"\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                <MenuItem component={Link} to=\"/profile\">\n                  Profile\n                </MenuItem>\n                {/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n              </Menu>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                sx={{\n                  color: \"#7a4ebf\",\n                }}\n              >\n                <Settings />\n              </IconButton>\n              <Menu\n                id=\"fade-menu\"\n                MenuListProps={{\n                  \"aria-labelledby\": \"fade-button\",\n                }}\n                anchorEl={settingAcnchorEl}\n                open={openSetting}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Account</MenuItem>\n                <MenuItem onClick={handleClose}>Setting</MenuItem>\n                <Divider sx={{ my: 0.5 }} />\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n              </Menu>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n      </Drawer>\n\n      <NotificationAdd mr={2} />\n    </Fragment>\n  );\n};\n","/** @format */\n/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport Chatting from \"../Chat/Chat\";\n\n// styling imports\nimport {\n  Box,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  Fade,\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { SecNavbar } from \"../../styles/styles\";\n\nimport {\n  Message,\n  EmailRounded,\n  CalendarToday,\n  CheckBox,\n  Person,\n  NotificationAdd,\n  Settings,\n  Star,\n  StarBorder,\n} from \"@mui/icons-material/\";\nimport { useToggle } from \"../../context/useToggle\";\nimport Calender from \"../Dashboard/Calender\";\nimport ViewTasks from \"../Tasks/ViewTasks\";\nimport Favorites from \"../Favorite/Favorites\";\nimport serverTime from \"../../utils/ServerTime\";\n\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { NavBarSecResponsive } from \"./DrawerComp\";\n\nconst NavbarSec = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const { user } = useSelector(\n    (state) => state.auth\n  )\n\n  \n\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  \n\n  const dispatch = useDispatch();\n\n  const [openFav, setOpenFav] = useState(false);\n\n  const handleClickOpenFav = () => {\n    setOpenFav(true);\n  };\n\n  const handleCloseFav = () => {\n    setOpenFav(false);\n  };\n  const [openTask, setOpenTask] = useState(false);\n\n  const handleClickOpenTask = () => {\n    setOpenTask(true);\n  };\n\n  const handleCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const [openCal, setOpenCal] = useState(false);\n\n  const handleClickOpenCal = () => {\n    setOpenCal(true);\n  };\n\n  const handleCloseCal = () => {\n    setOpenCal(false);\n  };\n\n  const [openChat, setOpenChat] = useState(false);\n\n  const handleClickOpenChat = () => {\n    setOpenChat(true);\n  };\n\n  const handleCloseChat = () => {\n    setOpenChat(false);\n  };\n\n  const history = useHistory();\n  const [isLogout, setIsLogout] = useToggle(false);\n  const today = new Date();\n  const time = today.toLocaleTimeString();\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n  const [redirect, setRedirect] = useState(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [settingAcnchorEl2, setSettingAcnchorEl2] = useState(null);\n\n  const [anchorEl2, setAnchorEl2] = React.useState(null);\n\n  const handleLogout = () => {\n    console.log(\"logout button just clicked\");\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const open = Boolean(anchorEl);\n  const open2 = Boolean(anchorEl);\n\n  const userRoleChecker = () => {\n    switch (user.username) {\n      case \"admin\":\n        return \"Admin\";\n      case \"firm\":\n        return \"Firm\";\n      case \"lawyer\":\n        return \"Lawyer\";\n      default:\n        return \"Client\";\n    }\n  };\n\n  const openSetting2 = Boolean(settingAcnchorEl2);\n\n  const handleClick2 = (event) => {\n    setSettingAcnchorEl2(event.currentTarget);\n  };\n  const openSetting = Boolean(settingAcnchorEl);\n  const handleClose2 = () => {\n    setSettingAcnchorEl2(null);\n  };\n\n  const handleClick = (event) => {\n    setSettingAcnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setSettingAcnchorEl(null);\n  };\n\n  return (\n    <Fragment>\n      <SecNavbar>\n        <Toolbar>\n          {isTabletOrMobile ? (\n            <>\n              <NavBarSecResponsive />\n            </>\n          ) : (\n            <>\n              <Box component=\"div\" sx={{ flexGrow: 1 }}>\n                <IconButton\n                  className=\"nav-items\"\n                  size=\"large\"\n                  onClick={handleClickOpenChat}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"#eee\",\n                    \"&:hover\": {\n                      color: \"#fff\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                  anchorOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"left\",\n                  }}\n                >\n                  <Message />\n                </IconButton>\n                <Dialog\n                  className=\"nav-items\"\n                  Validate\n                  open={openChat}\n                  onClose={handleCloseChat}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                  sx={{\n                    position: \"absolute\",\n                    right: \"20px\",\n                    bottom: \"150px\",\n                  }}\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    {\"Chatting Application\"}\n                  </DialogTitle>\n                  <DialogContent>\n                    <Chatting />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleCloseChat}>Close</Button>\n                  </DialogActions>\n                </Dialog>\n\n                <IconButton\n                  size=\"large\"\n                  className=\"nav-items\"\n                  component={Link}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"white\",\n                    \"&:hover\": {\n                      color: \"white\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                  to={{\n                    pathname:\n                      \"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=someone@gmail.com\",\n                  }}\n                  target=\"_blank\"\n                >\n                  <EmailRounded />\n                </IconButton>\n\n                <IconButton\n                  size=\"large\"\n                  className=\"nav-items\"\n                  onClick={handleClickOpenCal}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"white\",\n                    \"&:hover\": {\n                      color: \"white\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                >\n                  <CalendarToday />\n                </IconButton>\n                <Dialog\n                  Validate\n                  open={openCal}\n                  maxWidth=\"lg\"\n                  fullWidth\n                  onClose={handleCloseCal}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                  sx={{\n                    position: \"absolute\",\n                    right: \"20px\",\n                    bottom: \"150px\",\n                  }}\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    {\"Calender\"}\n                  </DialogTitle>\n                  <DialogContent>\n                    <Calender />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleCloseCal}>Close</Button>\n                  </DialogActions>\n                </Dialog>\n                <IconButton\n                  aria-label=\"more\"\n                  className=\"nav-items\"\n                  id=\"long-button\"\n                  aria-controls=\"long-menu\"\n                  aria-expanded={openSetting2 ? \"true\" : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={handleClick2}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"white\",\n                    \"&:hover\": {\n                      color: \"white\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                >\n                  <CheckBox />\n                </IconButton>\n                <Menu\n                  id=\"fade-menu\"\n                  MenuListProps={{\n                    \"aria-labelledby\": \"fade-button\",\n                  }}\n                  className=\"nav-items\"\n                  anchorEl={settingAcnchorEl2}\n                  open={openSetting2}\n                  onClose={handleClose2}\n                  TransitionComponent={Fade}\n                >\n                  <MenuItem onClick={handleClose2}>\n                    Task 1: This is task one\n                  </MenuItem>\n                  <MenuItem onClick={handleClose2}>\n                    Task 2: This is task two\n                  </MenuItem>\n                  <MenuItem onClick={handleClose2}>\n                    Task 3: This is task three\n                  </MenuItem>\n                  <Divider sx={{ my: 0.5 }} />\n                  <MenuItem onClick={handleClose2}>\n                    Task 4: This is task four\n                  </MenuItem>\n                </Menu>\n                <IconButton\n                  aria-label=\"more\"\n                  id=\"long-button\"\n                  aria-controls=\"long-menu\"\n                  className=\"nav-items\"\n                  aria-expanded={openSetting2 ? \"true\" : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={handleClickOpenFav}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"white\",\n                    \"&:hover\": {\n                      color: \"white\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                >\n                  <Star />\n                </IconButton>\n                <Dialog\n                  open={openFav}\n                  onClose={handleCloseFav}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    {\"Favorites\"}\n                  </DialogTitle>\n                  <DialogContent>\n                    <Favorites />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleCloseFav} autoFocus>\n                      Close\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </Box>\n              <NotificationAdd mr={2} />\n              <Typography component=\"h5\" variant=\"h6\" ml={2} mr={2}>\n                |\n              </Typography>\n\n              <Button\n                color=\"inherit\"\n                aria-controls=\"basic-menu\"\n                aria-haspopup=\"true\"\n                className=\"nav-items\"\n                aria-expanded={open ? \"true\" : undefined}\n                onClick={handleClick}\n              >\n                <Person /> {user.username} - ({user.username} )\n              </Button>\n              <Button\n                color=\"inherit\"\n                className=\"nav-items\"\n                onClick={handleLogout}\n              >\n                Logout\n              </Button>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                className=\"nav-items\"\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                <MenuItem component={Link} to=\"/profile\">\n                  Profile\n                </MenuItem>\n                {/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n              </Menu>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                sx={{\n                  color: \"white\",\n                }}\n              >\n                <Settings />\n              </IconButton>\n              <Menu\n                id=\"fade-menu\"\n                MenuListProps={{\n                  \"aria-labelledby\": \"fade-button\",\n                }}\n                anchorEl={settingAcnchorEl}\n                open={openSetting}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Account</MenuItem>\n                <MenuItem onClick={handleClose}>Setting</MenuItem>\n                <Divider sx={{ my: 0.5 }} />\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n              </Menu>\n            </>\n          )}\n        </Toolbar>\n      </SecNavbar>\n\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\n\nexport default NavbarSec;\n","/** @format */\n\nimport React, { useState, Fragment } from \"react\";\nimport {\n  Box,\n  Accordion,\n  AccordionSummary,\n  Typography,\n  AccordionDetails,\n  Grid,\n} from \"@mui/material\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  Mail,\n  Phone,\n  Group,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  marketingActive,\n  appointmentActive,\n  empOversiteActive,\n  emailsActive,\n  mapActive,\n  callsActive,\n} from \"../../redux/features/sidebarSlice\";\n\nimport \"./style.css\";\n\nconst Controls = () => {\n  return (\n    <Fragment>\n      <Box px={3} sx={{ color: \"#796ef0\" }}>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/\">\n              <Grid item>\n                <AddCircle fontSize=\"medium\" />\n              </Grid>\n              <Grid item>DashBoard</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/invoices\">\n              <Grid item>\n                <Receipt fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Invoices</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/manage-categories\">\n              <Grid item>\n                <FileCopy fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Categories</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/ledgers\">\n              <Grid item>\n                <MoneyOff fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Ledger</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/create-task\">\n              <Grid item>\n                <Task fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Task</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/employee-search\">\n              <Grid item>\n                <Work fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Search</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/matter-dashboard\">\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Matters</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/contact\">\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Contact</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Marketing = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(marketingActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.marketing ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Marketing</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(emailsActive())}>\n          <Grid>\n            <Box sx={sidebar.emails ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Email</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst HumanResources = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageUserActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/users\">\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage User</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageRoleActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/user-roles\">\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Role</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageGroupActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/user-groups\">\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Group</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst RevenueControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueInActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueIn ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue In</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueOutActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueOut ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue Out</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst AccountControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.newCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Customers</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(lostCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.lostCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Lost Customer</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newAccountActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.newAccount ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Accounts</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(mapActive())}>\n          <Grid>\n            <Box sx={sidebar.map ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Trouble Ticket Map</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\nconst EmployeeOversite = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(empOversiteActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.empOversite ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Oversite</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(callsActive())}>\n          <Grid>\n            <Box sx={sidebar.calls ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Phone fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Calls</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(appointmentActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.appointment ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Appointments</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const accordionData = [\n  {\n    name: \"Controls\",\n    id: \"controls\",\n    tiles: <Controls />,\n  },\n\n  {\n    name: \"Human Resources\",\n    id: \"human_resource\",\n    tiles: <HumanResources />,\n  },\n  {\n    name: \"Revenue\",\n    id: \"revenue\",\n    tiles: <RevenueControls />,\n  },\n  {\n    name: \"Customers\",\n    id: \"customers\",\n    tiles: <AccountControls />,\n  },\n  {\n    name: \"Marketing\",\n    id: \"marketing\",\n    tiles: <Marketing />,\n  },\n  {\n    name: \"Employee Oversite\",\n    id: \"empOversite\",\n    tiles: <EmployeeOversite />,\n  },\n];\n\nconst TestingSidebar = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n\n  const [accordions, updateAccordions] = useState(accordionData);\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n\n    const items = Array.from(accordions);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    updateAccordions(items);\n  }\n\n  return (\n    <Fragment>\n      <Box mt={5}>\n        <DragDropContext onDragEnd={handleOnDragEnd}>\n          <Droppable droppableId=\"accordions\">\n            {(provided) => (\n              <Box\n                className=\"accordions\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {accordions.map((item, index) => {\n                  return (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <Accordion\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          <AccordionSummary\n                            expandIcon={<ExpandMoreIcon color=\"primary\" />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                          >\n                            <Typography\n                              align=\"center\"\n                              color=\"primary\"\n                              sx={{ textTransform: \"uppercase\" }}\n                            >\n                              {item.name}\n                            </Typography>\n                          </AccordionSummary>\n                          <AccordionDetails>{item.tiles}</AccordionDetails>\n                        </Accordion>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </Box>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TestingSidebar;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  Box,\n  Paper,\n  Link,\n  Grid,\n  Container,\n  Stack,\n} from \"@mui/material\";\n\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\n\nimport { useToggle } from \"../../context/useToggle\";\nimport AdminSidebar from \"./AdminSidebar\";\nimport LawyerSidebar from \"./LawyerSidebar\";\nimport FirmSidebar from \"./FirmSidebar\";\nimport CustomerSidebar from \"./CutomerSidebar\";\nimport \"./style.css\";\nimport TestingSidebar from \"./TestingSidebar\";\n\nconst Sidebar = ({ user }) => {\n  const [controlToggle, setControlToggle] = useToggle(true);\n\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: true,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const SidebarRedirect = () => {\n    switch (user.username) {\n      case \"admin\":\n        return <AdminSidebar />;\n      case \"firm\":\n        return <FirmSidebar />;\n      case \"lawyer\":\n        return <LawyerSidebar />;\n      default:\n        return <CustomerSidebar />;\n    }\n  };\n\n  // const [state, dispatch] = useContext(UserContext);\n  return (\n    <Fragment>\n      <Paper component={Stack} elevation={3} spacing={1}>\n        <Box\n          sx={{\n            height: \"calc(83vh - 40px)\",\n            overflowY: \"scroll\",\n          }}\n        >\n          {/* {SidebarRedirect()} */}\n          <TestingSidebar />\n        </Box>\n        {/* <Box p={2}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"error\"\n            style={{\n              padding: \"1rem\",\n              \"&:hover\": {\n                color: \"#fff\",\n              },\n            }}\n          >\n            Report\n          </Button>\n        </Box> */}\n      </Paper>\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Sidebar);\n\n// export default Sidebar;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  BottomNavigation,\n  BottomNavigationAction,\n  Link,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@mui/material\";\nimport { FooterBar, FooterLink, FooterButton } from \"../../styles/styles\";\nimport {\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport Favorites from \"../Favorite/Favorites\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst Footer = () => {\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <Box mt={3}>\n        {isTabletOrMobile ? (\n          <Box sx={{ color: \"#eee\", backgroundColor: \"#7a4ebf\" }}>\n            <List>\n              <FooterLink to={\"/ledgers\"}>Accounting</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}> Calendar</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}>Contacts</FooterLink>\n            </List>\n            <List>\n              <FooterButton\n                sx={{\n                  color: \"#eee\",\n                  marginLeft: \"1.2rem\",\n                  textTransform: \"uppercase\",\n                  textDecoration: \"none\",\n                  \"&:visited\": {\n                    color: \"#eee\",\n                  },\n                }}\n                variant=\"text\"\n                onClick={handleClickOpen}\n              >\n                Favorites\n              </FooterButton>\n            </List>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n              <DialogContent>\n                <Favorites />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} autoFocus>\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n            <List>\n              <FooterLink to={\"/matters\"}>Matters</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/tasks\"}>Tasks</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}>Workflow</FooterLink>\n            </List>\n          </Box>\n        ) : (\n          <FooterBar>\n            <FooterLink to={\"/ledgers\"}>Accounting</FooterLink> |\n            <FooterLink to={\"/\"}> Calendar</FooterLink> |\n            <FooterLink to={\"/\"}>Contacts</FooterLink> |\n            <FooterButton\n              sx={{\n                color: \"#eee\",\n                textTransform: \"uppercase\",\n                textDecoration: \"none\",\n                \"&:visited\": {\n                  color: \"#eee\",\n                },\n              }}\n              variant=\"text\"\n              onClick={handleClickOpen}\n            >\n              Favorites\n            </FooterButton>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n              <DialogContent>\n                <Favorites />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} autoFocus>\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n            |<FooterLink to={\"/matters\"}>Matters</FooterLink> |\n            <FooterLink to={\"/tasks\"}>Tasks</FooterLink> |\n            <FooterLink to={\"/\"}>Workflow</FooterLink>\n          </FooterBar>\n        )}\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Footer;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Navbar from \"../components/Navbars/Navbar\";\nimport NavbarSec from \"../components/Navbars/NavbarSec\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport { connect } from \"react-redux\";\nimport Chatting from \"../components/Chat/Chat\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  isDisplay,\n  hideSidebar,\n  showSidebar,\n} from \"../redux/features/sidebarSlice\";\n\nimport { Paper, Fab, Popover } from \"@mui/material\";\nimport { Grid, Box, Button } from \"@mui/material\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { Chat, Report } from \"@mui/icons-material\";\n\nimport Footer from \"../components/Footer/Footer\";\n\nconst InnerLayout = ({ children }) => {\n  const { user, isAuthenticated} = useSelector(\n    (state) => state.auth\n  )\n\n  const theme = useTheme();\n\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  const sidebarToggle = useSelector((state) => state.sidebar.display);\n  const dispatch = useDispatch();\n\n  const [drawerOpen, setDrawerOpen] = React.useState(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setDrawerOpen(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setDrawerOpen(null);\n  };\n\n  const openPopover = Boolean(drawerOpen);\n  const id = openPopover ? \"simple-popover\" : undefined;\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleSidebarToggle = () => {\n    if (sidebarToggle) {\n      dispatch(hideSidebar());\n    } else {\n      dispatch(showSidebar());\n    }\n  };\n  const descriptionElementRef = React.useRef(null);\n\n  useEffect(() => {\n    if (isBigScreen) {\n      dispatch(showSidebar());\n    } else if (isTabletOrMobile) {\n      dispatch(hideSidebar());\n    }\n  }, []);\n  useEffect(() => {\n    if (drawerOpen) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [drawerOpen]);\n\n  return (\n    <Paper style={{ margin: \"0\" }}>\n      <Grid contianer rowSpacing={2} columnSpacing={2}>\n        <Grid item lg={12} md={12}>\n          {isAuthenticated ? (\n            <Fragment>\n              <NavbarSec />\n            </Fragment>\n          ) : (\n            <Navbar />\n          )}\n        </Grid>\n\n        {isAuthenticated ? (\n          <Fragment>\n            <Grid item lg={12}>\n              <Navbar />\n            </Grid>\n            <Grid container direction=\"row\" wrap=\"nowrap\">\n              {sidebarToggle ? (\n                <Fragment>\n                  <Grid item lg={2} xs={12} m={3}>\n                    <Sidebar />\n                  </Grid>\n                  <Grid item lg={10} xs={12} p={1}>\n                    <Box>\n                      <Button\n                        onClick={handleSidebarToggle}\n                        p={5}\n                        sx={{\n                          left: \"-8rem\",\n                          top: \"2rem\",\n                        }}\n                      >\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <Grid item lg={12} xs={12} p={1}>\n                    <Box>\n                      <Button onClick={handleSidebarToggle}>\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              )}\n            </Grid>\n            <Grid item lg={12}>\n              <Footer />\n            </Grid>\n          </Fragment>\n        ) : (\n          <Grid item lg={12} xs={12}>\n            {children}\n          </Grid>\n        )}\n        {isAuthenticated? \n        <>\n        <Fab\n          size=\"large\"\n          sx={\n            isDesktopOrLaptop\n              ? {\n                  borderRadius: \"50%\",\n                  backgroundColor: \"#edb4b6\",\n                  position: \"fixed\",\n                  bottom: \"16px\",\n                  left: \"16px\",\n                  color: \"red\",\n                  zIndex: \"200\",\n                  \"&:hover\": {\n                    color: \"red\",\n                  },\n                }\n              : { display: \"none\" }\n          }\n          aria-label=\"report\"\n        >\n          <Report />\n        </Fab>\n        <Fab\n          size=\"large\"\n          onClick={handlePopoverOpen}\n          sx={\n            isDesktopOrLaptop\n              ? {\n                  borderRadius: \"50%\",\n                  backgroundColor: \"#eee\",\n                  position: \"fixed\",\n                  bottom: \"16px\",\n                  right: \"16px\",\n                  color: \"#461594\",\n                  zIndex: \"200\",\n                  \"&:hover\": {\n                    color: \"#7a4ebf\",\n                  },\n                }\n              : { display: \"none\" }\n          }\n          aria-label=\"chat\"\n        >\n          <Chat />\n        </Fab>\n        <Popover\n          open={openPopover}\n          anchorEl={drawerOpen}\n          onClose={handlePopoverClose}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          sx={{ margin: \"-2rem\" }}\n        >\n          <Chatting />\n        </Popover>\n        </>\n        : null}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default InnerLayout;\n","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport { useSelector } from 'react-redux';\n\n\nconst PrivateRoutes = ({ children, ...rest}) => {\n    const { isAuthenticated } = useSelector(\n    (state) => state.auth\n  )\n\n\n    return (\n        <Route {...rest}>\n            {isAuthenticated ? children: <Redirect to=\"/login\"/>}\n        </Route>\n    )\n}\n\n\nexport default PrivateRoutes;","/** @format */\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'toggle_button':\n      return {\n        ...state,\n        active: !state.active,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initialState = {\n  active: false,\n};\n","/** @format */\n\nimport React from 'react';\nimport { reducer, initialState } from './reducer';\n\nexport const UserContext = React.createContext({\n  state: initialState,\n  dispatch: () => null,\n});\n\nexport const UserProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <UserContext.Provider value={[state, dispatch]}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","/** @format */\n\n// import styled from \"styled-components\";\nimport { createTheme } from \"@mui/material/styles\";\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    mode: \"light\",\n    primary: {\n      main: \"#796ef0\", //blueish purple\n    },\n    // secondary: {\n    //   main: \"\",\n    // },\n    error: {\n      main: \"#e85355\", //red\n    },\n    warning: {\n      main: \"#fd9905\", // orange\n    },\n    success: {\n      main: \"#28c570\", //green\n    },\n\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n  typography: {\n    htmlFontSize: 14,\n    fontSize: 12,\n    color: \"#333\",\n  },\n});\n\nexport default theme;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport \"./DashboardLayout/style.css\";\n\nimport DashboardContent from \"./DashboardLayout/DashboardContent\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <DashboardContent />\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\nimport { Button, Stack, IconButton } from \"@mui/material\";\nimport styles from \"./tabs.module.css\";\n\nconst Tabs = ({ children }) => {\n  const [activeTab, setActiveTab] = useState(children[0].props.label);\n  const handleClick = (e, newActiveTab) => {\n    e.preventDefault();\n    setActiveTab(newActiveTab);\n  };\n  return (\n    <Fragment>\n      <Stack direction=\"row\" spacing={1}>\n        <ul className={styles.tabs}>\n          {children.map((tab) => (\n            <li\n              className={tab.props.label === activeTab ? styles.current : \"\"}\n              key={tab.props.label}\n            >\n              <Button\n                variant=\"text\"\n                size=\"small\"\n                startIcon={<MoreVert />}\n                onClick={(e) => handleClick(e, tab.props.label)}\n              >\n                {tab.props.label}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      </Stack>\n\n      {children.map((one) =>\n        one.props.label === activeTab ? (\n          <div className={styles.content} key={one.props.label}>\n            {one.props.children}\n          </div>\n        ) : (\n          \"\"\n        ),\n      )}\n    </Fragment>\n  );\n};\n\nexport default Tabs;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  FormControlLabel,\n  Switch,\n  Button,\n  Stack,\n} from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst CreateInvoice = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    matter: \"\",\n    contact: \"\",\n    billable: false,\n    date_range: \"\",\n    create_date: \"\",\n    due_date: \"\",\n    template: \"\",\n    invoice_no: \"\",\n    discount: \"\",\n    submit: false,\n  });\n\n  // const {\n  //   matter,\n  //   contact,\n  //   billable,\n  //   date_range,\n  //   create_date,\n  //   due_date,\n  //   template,\n  //   invoice_no,\n  //   discount,\n  //   submit,\n  // } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  const [invoice, setInvoice] = useState(null);\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoice`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  const [dateRange, setDateRange] = React.useState([null, null]);\n  return (\n    <Fragment>\n      {/* <Typography component=\"h3\" variant=\"h4\">\n        Create New Invoice\n      </Typography>\n      <Box p={3}>\n        <LinkButton to=\"/invoices\" sx={{ float: \"right\" }}>\n          Invoice Dashboard\n        </LinkButton>\n      </Box> */}\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Grid\n          spacing={3}\n          container\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"Matter\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n              autoComplete=\"matter\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"Contact\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              autoComplete=\"contact\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <FormControlLabel\n              sx={{ fontSize: \"12px\", marginLeft: \"1rem\" }}\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Unbillable\"\n            />\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Stack direction=\"row\">\n              <Typography varient=\"caption\" sx={{ marginTop: \"0.7rem\" }}>\n                Range:\n              </Typography>\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateRangePicker\n                  calendars={1}\n                  value={dateRange}\n                  onChange={(newValue) => {\n                    setDateRange(newValue);\n                  }}\n                  renderInput={(startProps, endProps) => (\n                    <Fragment>\n                      <TextField size=\"small\" {...startProps} />\n                      <Box sx={{ mx: 2 }}> to </Box>\n                      <TextField size=\"small\" {...endProps} />\n                    </Fragment>\n                  )}\n                />\n              </LocalizationProvider>\n            </Stack>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          spacing={3}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"create_date\"\n              label=\"Create Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"due_date\"\n              label=\"Due Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"template\"\n              label=\"Template\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"template\"\n              autoComplete=\"template\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"invoice_no\"\n              label=\"Invoice #\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"invoice_no\"\n              autoComplete=\"invoice_no\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"discount\"\n              label=\"Discount\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"discount\"\n              autoComplete=\"discount\"\n            />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <FormControlLabel\n              label=\"Submit For Approvel\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n            />\n          </Grid>\n        </Grid>\n\n        <Grid item lg={12} mt={2}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Sub-Category</TableCell>\n                  <TableCell>Description</TableCell>\n                  <TableCell>Date</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Rate</TableCell>\n                  <TableCell>Sub</TableCell>\n                  <TableCell>Tax</TableCell>\n                  <TableCell>int</TableCell>\n                  <TableCell>Disc.</TableCell>\n                  <TableCell>Total</TableCell>\n                  <TableCell>Biller</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                {/* {invoice?.map((invoice) => (\n                  <TableRow id={invoice.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n\n                    <TableCell>{invoice.sub_cat}</TableCell>\n                    <TableCell>{invoice.discription}</TableCell>\n                    <TableCell>{invoice.date}</TableCell>\n                    <TableCell>{invoice.hours}</TableCell>\n                    <TableCell>{invoice.rate}</TableCell>\n                    <TableCell>{invoice.sub}</TableCell>\n                    <TableCell>{invoice.tax}</TableCell>\n                    <TableCell>{invoice.int}</TableCell>\n                    <TableCell>{invoice.dics}</TableCell>\n                    <TableCell>{invoice.total}</TableCell>\n                    <TableCell>{invoice.biller}</TableCell>\n                  </TableRow>\n                ))} */}\n              </TableHead>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item mt={3} direction=\"row\">\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Notes\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"Accept Online Payment\"\n              />\n            }\n            label=\"Accept Online Payment\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Accept Payments for Less\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (Compound / Simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Terms and Conditions\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (compund/ simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Use Trust Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add all unpaid invoices\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"use Operating Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Send Reminders Every\"\n          />\n          <TextField size=\"small\" sx={{ width: \"5rem\" }} />\n          <Typography\n            varient=\"caption\"\n            component=\"span\"\n            sx={{ marginLeft: \"0.5rem \" }}\n          >\n            day(s)/week(s)\n          </Typography>\n\n          {/* <Button\n            variant=\"contained\"\n            sx={{ float: \"right\" }}\n            endIcon={<SaveIcon />}\n          >\n            Send\n          </Button> */}\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateInvoice;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Grid,\n  Box,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormControl,\n  Checkbox,\n  Typography,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  MenuItem,\n  InputLabel,\n  Select,\n  Button,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst PaymentPlan = () => {\n  const [paymentData, setPaymentData] = useState({\n    payment_no: \"File# - 001\",\n    due: \"2020/07/01\",\n    amount: \"$ 750.00\",\n    late_fee: \"$22.00\",\n    total_due: \"$ 775.00\",\n    payment: \"$775.00\",\n    posted: \"$2020/07/05\",\n    method: \"Check\",\n  });\n\n  return (\n    <Fragment>\n      <Grid container mt={3} mb={3}>\n        <Grid item lg={4}>\n          <Typography>Start Balance:</Typography>\n          <Typography>Start Date:</Typography>\n          <Typography>Interest Rate:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Amout:</Typography>\n          <Typography>Payment Date:</Typography>\n          <Typography>No Payments:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Remaining:</Typography>\n          <Typography>Last Payment:</Typography>\n          <Typography>Last Payment $:</Typography>\n        </Grid>\n      </Grid>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Payment #</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Amout</TableCell>\n            <TableCell>Late Fee</TableCell>\n            <TableCell>Total Due</TableCell>\n            <TableCell>Payment</TableCell>\n            <TableCell>Posted</TableCell>\n            <TableCell>Method</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{paymentData.payment_no}</TableCell>\n          <TableCell>{paymentData.due}</TableCell>\n          <TableCell>{paymentData.amount} </TableCell>\n          <TableCell>{paymentData.late_fee}</TableCell>\n          <TableCell>{paymentData.total_due}</TableCell>\n          <TableCell>{paymentData.payment}</TableCell>\n          <TableCell>{paymentData.posted}</TableCell>\n          <TableCell>{paymentData.method}</TableCell>\n        </TableBody>\n      </Table>\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Close\n      </Button>\n      <Grid container>\n        <Grid item lg={6}>\n          <Typography>Post agreement Balance:</Typography>\n        </Grid>\n        <Grid item lg={6}>\n          <Typography>Start Date:</Typography>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst InvoicePayment = () => {\n  const [invoiceData, setInvoiceData] = useState({\n    invoice_no: \"i-2106-0004542\",\n    due: \"2020/07/01\",\n    tax: \"$ 15.00\",\n    interest: \"$2.35\",\n    time: \"$ 1,234.50\",\n    hard: \"$457.00\",\n    soft: \"$45.00\",\n    total: \"$ 1,753.85\",\n  });\n\n  return (\n    <Fragment>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Invoice</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Tax</TableCell>\n            <TableCell>Interest</TableCell>\n            <TableCell>Time</TableCell>\n            <TableCell>Hard</TableCell>\n            <TableCell>Soft</TableCell>\n            <TableCell>Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{invoiceData.invoice_no}</TableCell>\n          <TableCell>{invoiceData.due}</TableCell>\n          <TableCell>{invoiceData.tax} </TableCell>\n          <TableCell>{invoiceData.interest}</TableCell>\n          <TableCell>{invoiceData.time}</TableCell>\n          <TableCell>{invoiceData.hard}</TableCell>\n          <TableCell>{invoiceData.soft}</TableCell>\n          <TableCell>{invoiceData.total}</TableCell>\n        </TableBody>\n      </Table>{\" \"}\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Pay\n      </Button>{\" \"}\n    </Fragment>\n  );\n};\n\nconst Payment = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [isPlan, setIsPlan] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    payment_type: \"\",\n    date: \"\",\n    retainer: \"\",\n    payment: \"\",\n    date_range: \"\",\n    menu: \"\",\n    bank_account: \"\",\n    payment_method: \"\",\n  });\n\n  const {\n    payment_type,\n    date,\n    retainer,\n    payment,\n    date_range,\n    menu,\n    bank_account,\n    payment_method,\n  } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{\n              \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n            }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"payment_type\"\n                defaultValue=\"cash\"\n                name=\"payment_type\"\n                onChange={(e) => onChange(e)}\n                id=\"payment_type\"\n                autoComplete=\"payment_type\"\n              >\n                <FormControlLabel\n                  value=\"cash\"\n                  control={<Radio />}\n                  label=\"Cash\"\n                />\n                <FormControlLabel value=\"cc\" control={<Radio />} label=\"CC\" />\n                <FormControlLabel\n                  value=\"wire\"\n                  control={<Radio />}\n                  label=\"Wire\"\n                />\n                <FormControlLabel\n                  value=\"check\"\n                  control={<Radio />}\n                  label=\"Check\"\n                />\n              </RadioGroup>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              id=\"date\"\n              label=\"date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <FormControlLabel\n              value=\"retainer\"\n              control={<Checkbox />}\n              label=\"Retainer\"\n            />\n            <FormControlLabel\n              value=\"payment\"\n              control={<Checkbox />}\n              label=\"Payment\"\n            />\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n              <DateRangePicker\n                calendars={1}\n                value={dateRange}\n                onChange={(newValue) => {\n                  setDateRange(newValue);\n                }}\n                renderInput={(startProps, endProps) => (\n                  <Fragment>\n                    <TextField size=\"small\" {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField size=\"small\" {...endProps} />\n                  </Fragment>\n                )}\n              />\n            </LocalizationProvider> */}\n            <FormControl sx={{ width: \"12rem\" }}>\n              <InputLabel id=\"demo-simple-select-label\">Date Range</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={date_range}\n                label=\"Age\"\n                onChange={(e) => onChange(e)}\n              >\n                <MenuItem value={10}>Ten</MenuItem>\n                <MenuItem value={20}>Twenty</MenuItem>\n                <MenuItem value={30}>Thirty</MenuItem>\n              </Select>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"menu\"\n              label=\"menu\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"menu\"\n              autoComplete=\"menu\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bank_account\"\n              label=\"bank_account\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"bank_account\"\n              autoComplete=\"bank_account\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"payment_method\"\n              label=\"payment_method\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"payment_method\"\n              autoComplete=\"payment_method\"\n            />\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"isPlan\"\n                defaultValue={isPlan}\n                name=\"isPlan\"\n                onChange={(e) => setIsPlan(e)}\n                id=\"isPlan\"\n                autoComplete=\"isPlan\"\n              >\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Invoice Payment\"\n                />\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Payment Plan\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Box>\n        </Grid>\n        <Grid item lg={12}>\n          <TableContainer>\n            {isPlan ? <PaymentPlan /> : <InvoicePayment />}\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Payment;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  FormControlLabel,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  Button,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport { styled } from \"@mui/material/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\nimport CreateInvoice from \"./CreateInvoice\";\nimport Payment from \"./Payment\";\n\nconst Filters = () => {\n  const [invoiceToggle, setInvoiceToggle] = useToggle(false);\n  const [paymentToggle, setPaymentToggle] = useToggle(false);\n  const [paid, setPaid] = useToggle(false);\n\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid\n          spacing={2}\n          item\n          lg={12}\n          direction=\"Row\"\n          sx={{\n            \"& .MuiTextField-root\": { m: 1 },\n            \"& .MuiFormControl-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            onClick={() => setInvoiceToggle(invoiceToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Create Invoice\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={invoiceToggle}\n            onClose={() => setInvoiceToggle(invoiceToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {\"Create Invoice\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <CreateInvoice />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <Button\n            variant=\"contained\"\n            onClick={() => setPaymentToggle(paymentToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Receive Money\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={paymentToggle}\n            onClose={() => setPaymentToggle(paymentToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Receive Money\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <Payment />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <FormControlLabel\n            label=\" Paid/ Unpaid\"\n            control={<Switch checked={paid} onChange={() => setPaid(paid)} />}\n          />\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Invoice</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Bill Date</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Times</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <Typography\n            component=\"span\"\n            variant=\"caption\"\n            sx={{ width: \"8rem\", m: 2, fontSize: \"1.2rem\" }}\n          >\n            Status:\n          </Typography>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Any </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Dropd-own</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n} from \"@mui/material\";\nimport Filters from \"./Filters\";\n\nconst InvoiceList = () => {\n  const [invoice, setInvoice] = useState(null);\n\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoices`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  return (\n    <Fragment>\n      <Filters />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Invoice</TableCell>\n              <TableCell>Created</TableCell>\n              <TableCell>Due</TableCell>\n              <TableCell>Tax</TableCell>\n              <TableCell>Interest</TableCell>\n              <TableCell>Discount</TableCell>\n              <TableCell>Total</TableCell>\n              <TableCell>Balance</TableCell>\n              <TableCell>Last Payment</TableCell>\n              <TableCell>Approval Date</TableCell>\n              <TableCell>Approval by</TableCell>\n              <TableCell>Created by</TableCell>\n            </TableRow>\n            {/* {invoice?.map((invoice) => (\n              <TableRow id={invoice.id}>\n                <TableCell>\n                  <Checkbox />\n                </TableCell>\n                <TableCell>{invoice.id}</TableCell>\n                <TableCell>{invoice.created}</TableCell>\n                <TableCell>{invoice.due}</TableCell>\n                <TableCell>{invoice.tax}</TableCell>\n                <TableCell>{invoice.interest}</TableCell>\n                <TableCell>{invoice.discount}</TableCell>\n                <TableCell>{invoice.total}</TableCell>\n                <TableCell>{invoice.balance}</TableCell>\n                <TableCell>{invoice.last_payment}</TableCell>\n                <TableCell>{invoice.approvel_date}</TableCell>\n                <TableCell>{invoice.approvel.by}</TableCell>\n                <TableCell>{invoice.created_by}</TableCell>\n              </TableRow>\n            ))} */}\n          </TableHead>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default InvoiceList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport InvoiceList from \"./InvoiceList\";\nimport Payment from \"./Payment\";\nimport CreateInvoice from \"./CreateInvoice\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <InvoiceList />\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React from \"react\";\nimport { Alert } from \"@mui/material\";\n\nexport const ActionAlerts = (status) => {\n  return <Alert severity=\"error\">{status}</Alert>;\n};\n\nexport const TotalDays = (date1, date2) => {\n  let dt1 = new Date(date1);\n  let dt2 = new Date(date2);\n  return Math.floor(\n    (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) -\n      Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) /\n      (1000 * 60 * 60 * 24),\n  );\n};\n\nexport const GetDate = (date) => {\n  let newDate =\n    date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n  return newDate;\n};\n\nexport const GetTime = (time) => {\n  let newTime =\n    time.getHours() + \":\" + time.getMinutes() + \":\" + time.getSeconds();\n  return newTime;\n};\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Box,\n  containerClasses,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\n\nconst MatterList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const [redTask, setRedTask] = useState(false);\n  const [greenTask, setGreenTask] = useState(false);\n  const [yellowTask, setYellowTask] = useState(false);\n  const [myTask, setMyTask] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/tasks/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTasks(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Box component={Paper} p={2}>\n      <FormGroup aria-label=\"position\" row>\n        <FormControlLabel\n          control={\n            <Checkbox value={myTask} onChange={() => setMyTask(!myTask)} />\n          }\n          label=\"My Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox value={redTask} onChange={() => setRedTask(!redTask)} />\n          }\n          label=\"Red Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={greenTask}\n              onChange={() => setGreenTask(!greenTask)}\n            />\n          }\n          label=\"Green Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={yellowTask}\n              onChange={() => setYellowTask(!yellowTask)}\n            />\n          }\n          label=\"Yellow Tasks\"\n        />\n      </FormGroup>\n      <Typography component=\"h3\">All Matters Task's List</Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assign To</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : tasks?.map((data) => {\n                  return (\n                    <TableRow id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        {data.task_nature === \"urgent\" ? (\n                          <CircleIcon color=\"error\" />\n                        ) : (\n                          <CircleIcon color=\"success\" />\n                        )}\n                      </TableCell>\n                      <TableCell>{data.matter}</TableCell>\n                      <TableCell>\n                        {data.last_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>\n                        {data.next_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default MatterList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, CardContent, Typography } from \"@mui/material\";\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Tasks cleared Last day\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Goal Today\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Personal Best\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Company Record\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Link, Typography, List, ListItem, Paper } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nconst Calendar = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography variant=\"h6\" component=\"h7\">\n          My Calendar at a Glance\n        </Typography>\n        <List>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Start motion for trail</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Calendar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  Typography,\n} from \"@mui/material\";\n\nconst Filters = () => {\n  // const [user, setUser] = useState(\"Any user\");\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item>\n          <Typography>Assign To</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Organized By</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Status</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, Button, Typography } from \"@mui/material\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst MatterCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2} mt={1.5}>\n        <Grid item lg={9}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"error.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Urgent\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"warning.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Concern\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"success.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Start\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"white\",\n                  color: \"black\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      New\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3}>\n          <Button\n            variant=\"outlined\"\n            sx={{\n              minWidth: 100,\n              height: 40,\n              borderRadius: \"0.5rem\",\n              bgcolor: \"white\",\n              color: \"black\",\n            }}\n          >\n            Import\n          </Button>\n          <LinkButton to=\"/create-matter\"> + New </LinkButton>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterCards;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  TableBody,\n} from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst MatterListLong = () => {\n  const [matters, setMatters] = useState([]);\n\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/new-matter/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setMatters(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Matter Contact</TableCell>\n              <TableCell>Matter Type</TableCell>\n              <TableCell>Bill Rate</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assigned to</TableCell>\n              <TableCell>Billable</TableCell>\n              <TableCell>Open Invoice</TableCell>\n              <TableCell>Trust Account</TableCell>\n              <TableCell>Last Payment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : matters?.map((data, index) => {\n                  return (\n                    <TableRow id={index}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        <CircleIcon color=\"error\" />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n                      <TableCell>{data.contact}</TableCell>\n                      <TableCell>{data.matter_type}</TableCell>\n                      <TableCell>{data.billing_rate}</TableCell>\n                      <TableCell>{data.open_date}</TableCell>\n                      <TableCell>{data.close_date}</TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 100)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {\" \"}\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />{\" \"}\n                        - {data.close_date}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default MatterListLong;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Button, Typography } from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\n\nimport { LocalizationProvider, DateRangePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { CreateMatter, CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, TotalDays, GetDate } from \"../../utils/ActionAlerts\";\n\nconst NewMatter = () => {\n  // const matter_number = Math.floor(Math.random() * 10000000);\n  const mask = \"____-__-__\";\n  const matter_number = 23568;\n  const [openDate, setOpenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [whenDate, setWhenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [closeDate, setCloseDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [totalDays, setTotalDays] = useState(0);\n  const [matterData, setMatterData] = useState({\n    contact: 0,\n    matter_name: \"\",\n    matter_type: \"\",\n    matter_source: \"\",\n    matter_status: \"\",\n    assign_to: 0,\n    assign_by: 0,\n    billing_rate: 0,\n    alerts: \"\",\n\n    jurisdiction: \"\",\n    status_limitaion: null,\n    opposing_counsel: \"\",\n    where: \"\",\n    involved: \"\",\n    witnesses: \"\",\n    narrative: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    involved,\n    witnesses,\n    narrative,\n  } = matterData;\n\n  const onChange = (e) =>\n    setMatterData({ ...matterData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let open_date = GetDate(openDate);\n    let close_date = GetDate(closeDate);\n    let when = GetDate(whenDate);\n    let total_days = totalDays;\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      matter_type,\n      matter_source,\n      matter_status,\n      assign_to,\n      assign_by,\n      billing_rate,\n      alerts,\n      open_date,\n      close_date,\n      total_days,\n      jurisdiction,\n      status_limitaion,\n      opposing_counsel,\n      where,\n      when,\n      involved,\n      witnesses,\n      narrative,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  useEffect(() => {\n    let days = TotalDays(openDate, closeDate);\n    setTotalDays(days);\n  }, [openDate, closeDate]);\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Matter\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item lg={8}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"contact\"\n              type=\"number\"\n              min=\"0\"\n              value={contact}\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_number\"\n              label=\"matter_number\"\n              type=\"text\"\n              value={matter_number}\n              // onChange={(e) => onChange(e)}\n              id=\"matter_number\"\n              disabled\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_name\"\n              label=\"matter_name\"\n              type=\"text\"\n              value={matter_name}\n              onChange={(e) => onChange(e)}\n              id=\"matter_name\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"alerts\"\n              label=\"alerts\"\n              type=\"text\"\n              value={alerts}\n              onChange={(e) => onChange(e)}\n              id=\"alerts\"\n              autoComplete=\"alerts\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_type\"\n              label=\"matter_type\"\n              type=\"text\"\n              value={matter_type}\n              onChange={(e) => onChange(e)}\n              id=\"matter_type\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_source\"\n              label=\"matter_source\"\n              type=\"text\"\n              value={matter_source}\n              onChange={(e) => onChange(e)}\n              id=\"matter_source\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_status\"\n              label=\"matter_status\"\n              type=\"text\"\n              value={matter_status}\n              onChange={(e) => onChange(e)}\n              id=\"matter_status\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"assign_to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_rate\"\n              label=\"billing_rate\"\n              step=\"0.01\"\n              type=\"number\"\n              value={billing_rate}\n              onChange={(e) => onChange(e)}\n              id=\"billing_rate\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Open Date\"\n                value={openDate}\n                name=\"open\"\n                id=\"open\"\n                onChange={(e) => setOpenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Close Date\"\n                value={closeDate}\n                name=\"closed\"\n                id=\"closed\"\n                onChange={(e) => setCloseDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"total_days\"\n              label=\"total_days\"\n              type=\"number\"\n              value={totalDays}\n              onChange={(e) => setTotalDays(TotalDays(openDate, closeDate))}\n              id=\"total_days\"\n              disabled\n            />\n          </Grid>\n\n          <Grid item lg={4}>\n            <br />\n            <Typography component=\"h5\" variant=\"h6\">\n              Legal Concerns\n            </Typography>\n            <br />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"jurisdiction\"\n              label=\"jurisdiction\"\n              type=\"text\"\n              value={jurisdiction}\n              onChange={(e) => onChange(e)}\n              id=\"jurisdiction\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"status_limitaion\"\n              label=\"status_limitaion\"\n              type=\"text\"\n              value={status_limitaion}\n              onChange={(e) => onChange(e)}\n              id=\"status_limitaion\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"opposing_counsel\"\n              label=\"opposing_counsel\"\n              type=\"text\"\n              value={opposing_counsel}\n              onChange={(e) => onChange(e)}\n              id=\"opposing_counsel\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <Typography component=\"h5\" variant=\"h6\" sx={{ fontSize: \"1rem\" }}>\n              Event Detail\n            </Typography>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"where\"\n              label=\"where\"\n              type=\"text\"\n              value={where}\n              onChange={(e) => onChange(e)}\n              id=\"where\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"When\"\n                value={whenDate}\n                name=\"when\"\n                id=\"when\"\n                onChange={(e) => setWhenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"involved\"\n              label=\"Who was involved\"\n              type=\"text\"\n              value={involved}\n              onChange={(e) => onChange(e)}\n              id=\"involved\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"witnesses\"\n              label=\"witnesses\"\n              type=\"text\"\n              value={witnesses}\n              onChange={(e) => onChange(e)}\n              id=\"witnesses\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              label=\"Customer Narrative of the Event\"\n              multiline\n              type=\"text\"\n              rows={10}\n              value={narrative}\n              onChange={(e) => onChange(e)}\n              defaultValue=\"Narrative\"\n              name=\"narrative\"\n              id=\"narrative\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewMatter;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { styled } from \"@mui/material/styles\";\n\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  CardContent,\n  Typography,\n  Card,\n  Grid,\n  Box,\n  List,\n  ListItem,\n  Paper,\n  InputBase,\n} from \"@mui/material\";\n\nconst MatterTask = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components=\"p\">\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components=\"p\">\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components=\"p\">YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Activities = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components={Typography}>\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components={Typography}>\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components={Typography}>YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Classification\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                % time spent\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Matter Completion\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst MatterDetail = () => {\n  const Search = styled(\"div\")(({ theme }) => ({\n    position: \"relative\",\n    borderRadius: \"1.5rem\",\n    backgroundColor: \"#eee\",\n    \"&:hover\": {\n      backgroundColor: \"#ddd\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"40%\",\n  }));\n\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }));\n\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: \"inherit\",\n    \"& .MuiInputBase-input\": {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"md\")]: {\n        width: \"20ch\",\n      },\n    },\n  }));\n  // const [matters, setMatters] = useState(null);\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n        </Grid>\n        <Grid item lg={12}>\n          <Grid container spacing={2}>\n            <Grid item mt={2} lg={7}>\n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Recent Document</TableCell>\n                      <TableCell>Version</TableCell>\n                      <TableCell>Last Open</TableCell>\n                      <TableCell>User</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>1</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>2</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>3</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableContainer>\n              <Grid container spacing={3}>\n                <Grid item>\n                  <Activities />\n                </Grid>\n                <Grid item>\n                  <MatterTask />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item mt={2} lg={5}>\n              <Cards />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterDetail;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport MatterList from \"./MatterList\";\nimport { Grid, Box } from \"@mui/material\";\nimport Cards from \"./Cards\";\nimport Calendar from \"./Calendar\";\nimport Filters from \"./Filters\";\nimport MatterCards from \"./MatterCards\";\nimport MatterListLong from \"./MatterListLong\";\nimport NewMatter from \"./NewMatter\";\nimport MatterDetail from \"./MatterDetail\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item lg={12}>\n            <Filters />\n          </Grid>\n          <Grid item lg={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item lg={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst MatterDashboard = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container spacing={2}>\n          <Grid item lg={7}>\n            <MatterList />\n            <Calendar />\n          </Grid>\n          <Grid item lg={5}>\n            <Cards />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashboard\">\n          <MatterDashboard />\n        </div>\n        <div label=\"Matter\">\n          <Matters />\n        </div>\n        <div label=\"New Matter\">\n          <NewMatter />\n        </div>\n        <div label=\"Smith vs. Jhon\">\n          <MatterDetail />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerActivity = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setActivityData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow bgColor=\"#796ef0\">\n              <TableCell>\n                <Typography color=\"white\">Date</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Files</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Sub-Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Notes</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Source</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">User</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">In/Out</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          {/* {loading\n            ? null\n            : activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })} */}\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default LedgerActivity;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  TextField,\n  FormControlLabel,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Fillters = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [billedby, setBilledby] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Filter By</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={filter}\n            label=\"Filter By\"\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Billed by</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={billedby}\n            label=\"Billed By\"\n            onChange={(e) => setBilledby(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={status}\n            label=\"Age\"\n            onChange={(e) => setStatus(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n          <DateRangePicker\n            calendars={1}\n            value={dateRange}\n            onChange={(newValue) => {\n              setDateRange(newValue);\n            }}\n            renderInput={(startProps, endProps) => (\n              <Fragment>\n                <TextField size=\"small\" {...startProps} />\n                <Box sx={{ mx: 2 }}> to </Box>\n                <TextField size=\"small\" {...endProps} />\n              </Fragment>\n            )}\n          />\n        </LocalizationProvider>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Fillters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={7}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Time Entries\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={200}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      f\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Soft Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={65000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Hard Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={5000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={70000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Trust\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={4000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Due\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={100000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item={5}>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>User</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell> Jhon Johnson</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={74.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={39007.05}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Mark MacCalloff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={4.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={800.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Cindy Madenuff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={127.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={41372.5}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerCards;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n  Button,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { LinkButton } from \"../../styles/styles\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerTImeList = () => {\n  const [ledgerData, setLedgerData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setLedgerData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <Box>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Print\n        </Button>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Export\n        </Button>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>Cateagory</TableCell>\n                <TableCell>Sub-Category</TableCell>\n                <TableCell>Detail</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Qty</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Total</TableCell>\n                <TableCell>BillBy</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n                ? null\n                : ledgerData?.map((data) => {\n                    return (\n                      <TableBody id={data.id}>\n                        <TableCell>\n                          <Checkbox />\n                        </TableCell>\n                        <TableCell>{data.category}</TableCell>\n                        <TableCell>{data.sub_category}</TableCell>\n                        <TableCell>{data.detail}</TableCell>\n                        <TableCell>{data.date}</TableCell>\n                        <TableCell>{data.qty}</TableCell>\n                        <TableCell>\n                          {data.billable ? \"Billable\" : \"Paid\"}\n                        </TableCell>\n                        <TableCell>\n                          <NumberFormat\n                            value={data.qty * 25}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix=\"$\"\n                          />\n                        </TableCell>\n                        <TableCell>{data.bill_by}</TableCell>\n                      </TableBody>\n                    );\n                  })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default LedgerTImeList;\n","/** @format */\n\nimport { Typography, Box, Grid } from \"@mui/material\";\nimport React, { Fragment } from \"react\";\nimport Fillters from \"./Fillters\";\nimport LedgerCards from \"./LedgerCards\";\nimport LedgerTimeList from \"./LedgerTImeList\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LegderDashbard = () => {\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <Box>\n          <LedgerCards />\n          <Fillters />\n          <LedgerTimeList />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LegderDashbard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box, Typography, Paper, TextField } from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerDoc = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={1}>\n        <Grid item lg={4} sx={{}}>\n          <Box\n            sx={{\n              width: \"80%\",\n              minHeight: \"25rem\",\n              padding: \"5rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            MS Word Document On Pleading or Non Pleading Paper\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Box\n            sx={{\n              padding: \"5rem 2rem 5rem 2rem\",\n              minHeight: \"25rem\",\n              width: \"80%\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Space for 2nd Document to be opend if user wants it\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Grid container>\n            <Grid item lg={12}>\n              <Box component={Paper} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n              </Box>\n            </Grid>\n            <Grid item lg={12}>\n              <Box component={Paper} mt={2} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={5}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"filled\"\n                  name=\"detail\"\n                  type=\"text\"\n                  value=\"Quick Notes\"\n                  id=\"detail\"\n                  sx={{ borderRadius: \"1rem\" }}\n                />\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerDoc;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  RadioGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Radio,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst Time = () => {\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [timeToggle, setTimeToggle] = useToggle(true);\n  const [billable, setBillable] = useToggle(false);\n\n  // const [bill, setBill] = useToggle(false);\n  const [time, setTime] = useState(\"\");\n  const [timeData, setTimeData] = useState({\n    contact: 0,\n    matter_name: 0,\n    category: \"\",\n    sub_category: \"\",\n    // time: \"\",\n    hard: false,\n    soft: false,\n    unit: 0,\n    qty: 0,\n    rate: 0,\n    file: \"\",\n    detail: \"\",\n    bill_by: 0,\n    note: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    category,\n    sub_category,\n    hard,\n    soft,\n    unit,\n    // time,\n    qty,\n    rate,\n    file,\n    detail,\n    bill_by,\n\n    note,\n  } = timeData;\n  const onChange = (e) =>\n    setTimeData({ ...timeData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    let date = GetDate(pickDate);\n\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      category,\n      sub_category,\n      hard,\n      soft,\n      unit,\n      qty,\n      rate,\n      time,\n      date,\n      detail,\n      bill_by,\n      billable,\n      note,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/add-time/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Typography component=\"h3\" variant=\"h4\">\n          Time\n        </Typography>\n        <Grid\n          container\n          spacing={2}\n          mt={2}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n          }}\n        >\n          <Grid item xs={12}>\n            <Grid container p={3}>\n              <Grid item xs={6}>\n                <FormControlLabel\n                  size=\"large\"\n                  label=\"Time\"\n                  labelPlacement=\"start\"\n                  control={\n                    <Switch\n                      size=\"large\"\n                      checked={timeToggle}\n                      onChange={(e) => setTimeToggle(e)}\n                    />\n                  }\n                />\n                {timeToggle ? null : (\n                  <Box>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">Expense</FormLabel>\n                      <RadioGroup\n                        row\n                        aria-label=\"expense\"\n                        defaultValue=\"\"\n                        name=\"expense\"\n                        id=\"expense\"\n                      >\n                        <FormControlLabel\n                          value=\"hard\"\n                          control={<Radio />}\n                          label=\"Hard\"\n                        />\n                        <FormControlLabel\n                          value=\"soft\"\n                          control={<Radio />}\n                          label=\"Soft\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  </Box>\n                )}\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"matter\"\n                  label=\"matter\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"matter\"\n                  autoComplete=\"matter\"\n                  disabled\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"contact\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                  disabled\n                />\n              </Grid>\n            </Grid>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"category\"\n              label=\"category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"category\"\n              autoComplete=\"category\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"sub_category\"\n              label=\"sub_category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"sub_category\"\n              autoComplete=\"sub_category\"\n            />\n            {timeToggle ? (\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"rate\"\n                label=\"rate\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"rate\"\n                autoComplete=\"rate\"\n              />\n            ) : (\n              <Fragment>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"unit\"\n                  label=\"unit\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"unit\"\n                  autoComplete=\"unit\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"qty\"\n                  label=\"Qty\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"qty\"\n                  autoComplete=\"qty\"\n                />\n                <Box m={1}>\n                  <Typography component=\"lable\"> Receipt(s) </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n              </Fragment>\n            )}\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"HH:MM\"\n              mask={[\"H\", \"H\", \"M\", \"M\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time\"\n              name=\"time\"\n              id=\"time\"\n              value={time}\n              type=\"text\"\n              onValueChange={(e) => setTime(e.value)}\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Date\"\n                value={pickDate}\n                name=\"pickdate\"\n                id=\"pickdate\"\n                onChange={(e) => setPickDate(e)}\n                renderInput={(params) => <TextField size=\"small\" {...params} />}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"detail\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n              autoComplete=\"detail\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bill_by\"\n              label=\"bill_by\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bill_by\"\n              autoComplete=\"bill_by\"\n            />\n            <FormControlLabel\n              size=\"large\"\n              label=\"Billable\"\n              labelPlacement=\"start\"\n              control={\n                <Switch\n                  size=\"large\"\n                  checked={billable}\n                  onChange={() => setBillable(billable)}\n                />\n              }\n            />\n            <br />\n          </Grid>\n        </Grid>\n        <Grid container>\n          <Grid item lg={12}>\n            <TextField\n              fullWidth\n              multiline\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"note\"\n              rows={4}\n              // label=\"note\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              placeholder=\"Private / internal notes\"\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Time;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport LedgerActivity from \"./LedgerActivity\";\nimport LegderDashbard from \"./LedgerDashbard\";\nimport LedgerDoc from \"./LedgerDoc\";\nimport LedgerTImeList from \"./LedgerTImeList\";\nimport Time from \"./Time\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Ledger\">\n          <LegderDashbard />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Documents\">\n          <LedgerDoc />\n        </div>\n        <div label=\"Time\">\n          <Time />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst SubCategory = () => {\n  const [subCategory, setSubCategory] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/sub-category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setSubCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/sub-category/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n      })\n      .catch((err) => setStatus(err.statusText));\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/sub-category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n      })\n      .catch((err) => {\n        FetchData();\n      });\n  };\n  const showSubcategory = () => {\n    if (subCategory.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return subCategory.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Sub-Category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Sub-Category\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Sub-Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? showSubcategory() : <Typography>Loading ...</Typography>}\n    </Fragment>\n  );\n};\n\nexport default SubCategory;\n","/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst catHandler = (id) => {\n  console.log(id);\n};\n\nconst Category = () => {\n  const [category, setCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/category/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const showCategory = () => {\n    if (category.length === 0) {\n      return <p> no data found...</p>;\n    } else\n      return category.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Add New Category\"}</DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? showCategory() : <Typography>Loading ...</Typography>}\n    </Fragment>\n  );\n};\n\nexport default Category;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Classification = () => {\n  const [classification, setClassification] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/classification/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setClassification(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/classification/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n        return <ActionAlerts value={{ status: status }} />;\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/api/classification/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return <ActionAlerts value={{ status: res.statusText }} />;\n      })\n      .catch((err) => {\n        FetchData();\n        return <ActionAlerts value={{ status: err.statusText }} />;\n      });\n  };\n  const showClassification = () => {\n    if (classification.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return classification.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Classification\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Classification\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Classification Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? showClassification() : <Typography>Loading ...</Typography>}\n    </Fragment>\n  );\n};\n\nexport default Classification;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Typography, Grid, Button, Box } from \"@mui/material\";\n\nimport SubCategory from \"./SubCategory\";\nimport Category from \"./Category\";\nimport Classification from \"./Classification\";\n\nconst ManageCategory = () => {\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={8}>\n          <Typography component=\"h3\" variant=\"h5\">\n            Manage Category, Sub-category, Classification\n          </Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"error\">\n              Delete Checked\n            </Button>\n          </Box>\n        </Grid>\n\n        <Grid item lg={12}>\n          <Grid container spacing={5} mt={1}>\n            <Grid item lg={4}>\n              <Category />\n            </Grid>\n            <Grid item lg={4}>\n              <SubCategory />\n            </Grid>\n            <Grid item lg={4}>\n              <Classification />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageCategory;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Button,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { ActionAlerts, GetTime, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Contact = () => {\n  const [clientNo, setClientNo] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [ssn, setSsn] = useState(\"\");\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [homeNo, setHomeNo] = useState(\"\");\n  const [officeNo, setOfficeNo] = useState(\"\");\n  const [faxNo, setFaxNo] = useState(\"\");\n  const [otherNo, setOtherNo] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [plus4, setPlus4] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [contactData, setContactData] = useState({\n    // company info\n    company_name: \"\",\n    website: \"\",\n    ger_email: \"\",\n    billing_email: \"\",\n    // address\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    note: \"\",\n    f_name: \"\",\n    l_name: \"\",\n    email_1: \"\",\n    email_2: \"\",\n    email_3: \"\",\n    // other address\n    street2: \"\",\n    suite2: \"\",\n    city2: \"\",\n    state2: \"\",\n    office: \"\",\n    team: \"\",\n    member: \"\",\n    assign_to: \"\",\n    contact: \"\",\n    relation: \"\",\n  });\n\n  const {\n    company_name,\n    website,\n    ger_email,\n    billing_email,\n    street,\n    suite,\n    city,\n    state,\n    note,\n    f_name,\n    l_name,\n    email_1,\n    email_2,\n    email_3,\n    street2,\n    suite2,\n    city2,\n    state2,\n    office,\n    team,\n    member,\n    assign_to,\n    contact,\n    relation,\n  } = contactData;\n\n  const onChange = (e) => {\n    e.persist();\n    setContactData({ ...contactData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    //   let date = GetDate(pickDate);\n    //   const body = JSON.stringify({\n    //     company_name,\n    //     website,\n    //     ger_email,\n    //     billing_email,\n    //     street,\n    //     suite,\n    //     city,\n    //     state,\n    //     zip,\n    //     plus4,\n    //     client_no,\n    //     f_name,\n    //     l_name,\n    //     dob,\n    //     ssn,\n    //     mobile_no,\n    //     home_no,\n    //     office_no,\n    //     fax_no,\n    //     other_no,\n    //     email_1,\n    //     email_2,\n    //     email_3,\n    //     street2,\n    //     suite2,\n    //     city2,\n    //     state2,\n    //     zip2,\n    //     plus42,\n    //     office,\n    //     team,\n    //     member,\n    //     assign_to,\n    //     contact,\n    //     relation,\n    //   });\n    //   axios\n    //     .post(`${process.env.REACT_APP_API_URL}/api/contact/`, body, CONFIG)\n    //     .then((res) => {\n    //       <ActionAlerts value={{ status: res.statusText, message: \"Success\" }} />;\n    //     })\n    //     .catch((err) => {\n    //       <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />;\n    //     });\n    //   console.log(body);\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container p={2}>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h5\">\n              Company info\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"company_name\"\n              label=\"Company Name\"\n              type=\"text\"\n              value={company_name}\n              onChange={(e) => onChange(e)}\n              id=\"company_name\"\n              autoComplete=\"company_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Client #\"\n              id=\"clientno\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"clientno\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={clientNo}\n              onValueChange={(e) => setClientNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"First Name\"\n              label=\"f_name\"\n              type=\"text\"\n              value={f_name}\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Last Name\"\n              label=\"l_name\"\n              type=\"text\"\n              value={l_name}\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"DOB\"\n              id=\"dob\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              name=\"dob\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={dob}\n              onValueChange={(e) => setDob(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"#### #### ##\"\n              customInput={TextField}\n              label=\"SSN\"\n              id=\"ssn\"\n              name=\"ssn\"\n              value={ssn}\n              type=\"text\"\n              onValueChange={(e) => setSsn(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobileNo}\n              onValueChange={(e) => setMobileNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={homeNo}\n              onValueChange={(e) => setHomeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Office #\"\n              id=\"offlice_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"office_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={officeNo}\n              onValueChange={(e) => setOfficeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Fax #\"\n              id=\"fax_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"fax_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={faxNo}\n              onValueChange={(value) => setFaxNo(value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Other #\"\n              id=\"other_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"other_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={otherNo}\n              onValueChange={(e) => setOtherNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_1\"\n              label=\"Email 1\"\n              type=\"email\"\n              value={email_1}\n              onChange={(e) => onChange(e)}\n              id=\"email_1\"\n              autoComplete=\"email_1\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_2\"\n              label=\"Email 2\"\n              type=\"email\"\n              value={email_2}\n              onChange={(e) => onChange(e)}\n              id=\"email_2\"\n              autoComplete=\"email_2\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_3\"\n              label=\"Email 3\"\n              value={email_3}\n              type=\"email\"\n              onChange={(e) => onChange(e)}\n              id=\"email_3\"\n              autoComplete=\"email_3\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"street\"\n              type=\"text\"\n              value={street}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              value={city}\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip\"\n              label=\"zip\"\n              type=\"text\"\n              id=\"zip\"\n              type=\"text\"\n              value={zip}\n              onValueChange={(e) => setZip(e.value)}\n            />\n\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus4\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus4\"\n              type=\"text\"\n              value={plus4}\n              onValueChange={(e) => setPlus4(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              multiline\n              rows={5}\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Notes...\"\n              label=\"note\"\n              type=\"text\"\n              value={note}\n              onChange={(e) => onChange(e)}\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h6\">\n              Alternate Information\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"webiste\"\n              label=\"Webiste\"\n              type=\"text\"\n              value={website}\n              onChange={(e) => onChange(e)}\n              id=\"webiste\"\n              autoComplete=\"webiste\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"ger_email\"\n              label=\"General Email\"\n              type=\"text\"\n              value={ger_email}\n              onChange={(e) => onChange(e)}\n              id=\"ger_email\"\n              autoComplete=\"ger_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_email\"\n              label=\"Invoice/ Billing Email\"\n              type=\"text\"\n              value={billing_email}\n              onChange={(e) => onChange(e)}\n              id=\"billing_email\"\n              autoComplete=\"billing_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"Street\"\n              type=\"text\"\n              value={street2}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite2}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              type=\"text\"\n              value={city2}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip2\"\n              label=\"Zip\"\n              type=\"text\"\n              id=\"zip2\"\n              type=\"text\"\n              value={zip2}\n              onValueChange={(e) => setZip2(e.value)}\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus42\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus42\"\n              type=\"text\"\n              value={plus42}\n              onValueChange={(e) => setPlus42(e.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Source\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"office\"\n                  label=\"Office\"\n                  type=\"text\"\n                  value={office}\n                  onChange={(e) => onChange(e)}\n                  id=\"office\"\n                  autoComplete=\"office\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"team\"\n                  label=\"Team\"\n                  type=\"text\"\n                  value={team}\n                  onChange={(e) => onChange(e)}\n                  id=\"team\"\n                  autoComplete=\"team\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"member\"\n                  label=\"Member\"\n                  type=\"text\"\n                  value={member}\n                  onChange={(e) => onChange(e)}\n                  id=\"member\"\n                  autoComplete=\"member\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Assigned To\n                </Typography>\n                <FormControl\n                  size=\"small\"\n                  sx={{ mt: 2, mb: 2, minWidth: \"14rem\" }}\n                >\n                  <InputLabel id=\"demo-simple-select-autowidth-label\">\n                    Assigned To\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-autowidth-label\"\n                    id=\"demo-simple-select-autowidth\"\n                    value={assign_to}\n                    onChange={(e) => onChange(e)}\n                    autoWidth\n                    label=\"assign_to\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>Auto Assign</em>\n                    </MenuItem>\n                    <MenuItem value={10}>Twenty</MenuItem>\n                    <MenuItem value={21}>Twenty one</MenuItem>\n                    <MenuItem value={22}>Twenty one and a half</MenuItem>\n                  </Select>\n                </FormControl>\n\n                <Button variant=\"contained\" color=\"primary\">\n                  Auto Assign\n                </Button>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Linked Contacts\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"Contact\"\n                  type=\"text\"\n                  value={contact}\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"relation\"\n                  label=\"Relation\"\n                  type=\"text\"\n                  value={relation}\n                  onChange={(e) => onChange(e)}\n                  id=\"relation\"\n                  autoComplete=\"relation\"\n                />\n              </Grid>\n            </Grid>\n            <Box sx={{ float: \"right\" }}>\n              <Button variant=\"contained\" type=\"submit\" endIcon={<SaveIcon />}>\n                Save\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Contact;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Button,\n  TextField,\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Tab,\n  Paper,\n  Box,\n  Typography,\n  Switch,\n} from \"@mui/material\";\nimport { TabList, TabContext, TabPanel } from \"@mui/lab\";\nimport { connect } from \"react-redux\";\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport NumberFormat from \"react-number-format\";\n\n// import { update_profile } from \"../../store/actions/profile\";\n\nconst Profile = ({ profile }) => {\n  const [value, setValue] = React.useState(\"1\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [underGradYear, setUnderGradYear] = useState(\"\");\n\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [barNo, setBarNo] = useState(\"\");\n  const [practiceTime, setPracticeTime] = useState(\"\");\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    mobile: 0,\n    phone: 0,\n    state: \"\",\n    city: \"\",\n    language: \"\",\n    locate: false,\n    search_active: false,\n    law_school: \"\",\n    grad_year: \"\",\n    bar_admit_date: \"\",\n    undergrad_school: \"\",\n    undergrad_area: \"\",\n    undergrad_year: \"\",\n    bar_no: 0,\n    admitted_practice: \"\",\n    practice_time: \"\",\n    longest_tenure: \"\",\n    average_tenure: \"\",\n    current_tenure: \"\",\n    past_bar_companies_no: \"\",\n    primary_area: \"\",\n  });\n  const {\n    username,\n    email,\n    mobile,\n    phone,\n    state,\n    city,\n    language,\n    locate,\n    search_active,\n    law_school,\n    grad_year,\n    bar_admit_date,\n    undergrad_school,\n    undergrad_area,\n    undergrad_year,\n    bar_no,\n    admitted_practice,\n    practice_time,\n    longest_tenure,\n    average_tenure,\n    current_tenure,\n    past_bar_companies_no,\n    primary_area,\n  } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let id = profile.id;\n    const body = JSON.stringify({\n      username,\n      email,\n      mobile,\n      phone,\n      state,\n      city,\n      language,\n      locate,\n      search_active,\n      law_school,\n      grad_year,\n      bar_admit_date,\n      undergrad_school,\n      undergrad_area,\n      undergrad_year,\n      bar_no,\n      admitted_practice,\n      practice_time,\n      longest_tenure,\n      average_tenure,\n      current_tenure,\n      past_bar_companies_no,\n      primary_area,\n    });\n    console.log(body);\n    axios\n      .patch(\n        `${process.env.REACT_APP_API_URL}/api/profile/${id}/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Fragment>\n      {/* {profile ? ( */}\n      <Box p={5}>\n        <Paper elevation={5} sx={{ borderRadius: 3 }}>\n          <TabContext value={value} p={8}>\n            <Box component=\"form\" onSubmit={(e) => onSubmit(e)}>\n              <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                <TabList\n                  onChange={handleChange}\n                  aria-label=\"lab API tabs example\"\n                >\n                  <Tab label=\"Profile\" value=\"1\" />\n                  <Tab label=\"Education\" value=\"2\" />\n                  <Tab label=\"Work History\" value=\"3\" />\n                </TabList>\n              </Box>\n              <TabPanel value=\"1\">\n                <Grid container spacing={2}>\n                  <Grid item sx={12} xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Username\"\n                      value={username}\n                      id=\"username\"\n                      name=\"username\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.username}\n                      disabled\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Mobile #\"\n                      id=\"mobile\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"mobile\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={mobileNo}\n                      onValueChange={(e) => setMobileNo(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Phone #\"\n                      id=\"phone\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"phone\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={phoneNo}\n                      onValueChange={(e) => setPhoneNo(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Email\"\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.email}\n                      disabled\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"State\"\n                      id=\"state\"\n                      name=\"state\"\n                      type=\"text\"\n                      value={state}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.state}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"City\"\n                      id=\"city\"\n                      name=\"city\"\n                      type=\"text\"\n                      value={city}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.city}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Language(s)\"\n                      value={language}\n                      id=\"language\"\n                      name=\"language\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.language}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Willing to locate\"\n                      id=\"locate\"\n                      name=\"locate\"\n                      value={locate}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.locate}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Search Type (Active/ Passiv)\"\n                      id=\"search_active\"\n                      name=\"search_active\"\n                      value={search_active}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.search_active}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      m={5}\n                      variant=\"contained\"\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"2\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"2\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Law School\"\n                      id=\"law_school\"\n                      name=\"law_school\"\n                      value={law_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.law_school}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Grad year\"\n                      id=\"grad_year\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      name=\"grad_year\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={gradYear}\n                      onValueChange={(e) => setGradYear(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####/##/##\"\n                      placeholder=\"YYYY/MM/DD\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n                      customInput={TextField}\n                      label=\"Bar Admittance Date\"\n                      id=\"bar_admit_date\"\n                      name=\"bar_admit_date\"\n                      value={barDate}\n                      onValueChange={(e) => setBarDate(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrad school\"\n                      id=\"undergrad_school\"\n                      name=\"undergrad_school\"\n                      value={undergrad_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_school}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrade area of study\"\n                      id=\"undergrad_area\"\n                      name=\"undergrad_area\"\n                      value={undergrad_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_area}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      label=\"Undergrade year\"\n                      id=\"undergrad_year\"\n                      name=\"undergrad_year\"\n                      value={underGradYear}\n                      type=\"text\"\n                      onValueChange={(e) => setUnderGradYear(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"#### #### ##\"\n                      customInput={TextField}\n                      label=\"Bar #\"\n                      id=\"bar_no\"\n                      name=\"bar_no\"\n                      value={barNo}\n                      type=\"text\"\n                      onValueChange={(e) => setBarNo(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Admitted practice (state & District)\"\n                      value={admitted_practice}\n                      id=\"admitted_practice\"\n                      name=\"admitted_practice\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.admitted_practice}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      variant=\"contained\"\n                      mb={5}\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"3\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"3\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Practive Time (months / years)\"\n                      id=\"practice_time\"\n                      name=\"practice_time\"\n                      value={practiceTime}\n                      type=\"text\"\n                      onValueChange={(e) => setPracticeTime(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Longest tenure (months / years)\"\n                      id=\"longest_tenure\"\n                      name=\"longest_tenure\"\n                      value={longestTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setLongestTenure(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Average tenure (months / years)\"\n                      value={averageTenure}\n                      id=\"average_tenure\"\n                      name=\"average_tenure\"\n                      type=\"text\"\n                      onValueChange={(e) => setAverageTenure(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Time at Current Company (months / years)\"\n                      id=\"current_tenure\"\n                      name=\"current_tenure\"\n                      value={currentTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setCurrentTenure(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"# of Companies Post Bar\"\n                      id=\"past_bar_companies_no\"\n                      name=\"past_bar_companies_no\"\n                      value={past_bar_companies_no}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.past_bar_companies_no}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Primary areas of Law\"\n                      id=\"primary_area\"\n                      name=\"primary_area\"\n                      value={primary_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.primary_area}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Button\n                      variant=\"contained\"\n                      type=\"submit\"\n                      sx={{\n                        float: \"right\",\n                        marginTop: \"10rem\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n            </Box>\n          </TabContext>\n        </Paper>\n      </Box>\n      {/* // ) : ( // <Typography>Something wend wrong!</Typography>\n      // )} */}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  profile: state.auth.profile,\n});\n\nexport default connect(mapStateToProps)(Profile);\n","/** @format */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  TextField,\n  Switch,\n  FormControlLabel,\n  Box,\n  Grid,\n  Button,\n  Typography,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport axios from \"axios\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\n\nconst CreateTask = () => {\n  const [dueDate, setDueDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [bill, setBill] = useToggle(true);\n  const [matterData, setMatterData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useToggle(true);\n  const [file, setFile] = useState(\"\");\n  const [taskData, setTaskData] = useState({\n    matter_id: 0,\n    matter_contact: 0,\n    matter: \"\",\n    task: \"\",\n    filename: \"\",\n    assign_to: 0,\n    detail: \"\",\n  });\n\n  const {\n    matter_id,\n    matter_contact,\n    matter,\n    task,\n    filename,\n    assign_to,\n    detail,\n  } = taskData;\n\n  const onChange = (e) =>\n    setTaskData({ ...taskData, [e.target.name]: e.target.value });\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/matter/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setMatterData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log(matter_id, matter_contact, matter, task);\n    let due_at = GetDate(dueDate);\n    let is_billable = bill;\n    let is_private = isPrivate;\n\n    const body = JSON.stringify({\n      matter_id,\n      matter_contact,\n      matter,\n      task,\n      file,\n      is_billable,\n      is_private,\n      due_at,\n      assign_to,\n      detail,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-task/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n          \"& .MuiSelect-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Task\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_id\"\n              label=\"matter_id\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_id}\n              onChange={(e) => onChange(e)}\n              id=\"matter_id\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"matter\"\n              type=\"text\"\n              min=\"0\"\n              value={matter}\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"task\"\n              label=\"Task\"\n              type=\"text\"\n              value={task}\n              onChange={(e) => onChange(e)}\n              id=\"task\"\n              autoComplete=\"task\"\n            />\n            <Box ml={2} mt={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Attach File \"\n                labelPlacement=\"start\"\n                control={\n                  <input\n                    type=\"file\"\n                    name=\"filename\"\n                    id=\"file\"\n                    onChange={(e) => onChange(e)}\n                  />\n                }\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"file\"\n                label=\"please chose any file\"\n                type=\"text\"\n                min=\"0\"\n                value={filename}\n                onChange={(e) => setFile(filename)}\n                id=\"file\"\n                disabled\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_contact\"\n              label=\"matter_contact\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_contact}\n              onChange={(e) => onChange(e)}\n              id=\"matter_contact\"\n            />\n            <Box p={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Billable\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={bill}\n                    onChange={() => setBill(bill)}\n                  />\n                }\n              />\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Private\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={isPrivate}\n                    onChange={() => setIsPrivate(isPrivate)}\n                  />\n                }\n              />\n            </Box>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Due Date\"\n                value={dueDate}\n                name=\"dueDate\"\n                id=\"dueDate\"\n                onChange={(e) => setDueDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"Assign to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              autoComplete=\"assign_to\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              multiline\n              rows={5}\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"Detail\"\n              type=\"text\"\n              value={detail}\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n            />\n\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateTask;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport ViewTasks from \"./ViewTasks\";\nimport CreateTask from \"./CreateTask\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Task\">\n          <ViewTasks />\n        </div>\n        <div label=\"Create Task\">\n          <CreateTask />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport DashBoard from \"../Admin/DashBoard\";\n\nimport {\n  Box,\n  Typography,\n  Tabs,\n  Tab,\n  IconButton,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\n\nimport TabContext from \"@mui/lab/TabContext\";\nimport TabList from \"@mui/lab/TabList\";\n\nimport TabPanel from \"@mui/lab/TabPanel\";\nimport PropTypes from \"prop-types\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\n\n// components of tabs\nimport Invoice from \"../../Invoice\";\nimport Matter from \"../../Matter\";\nimport Ledger from \"../../Ledger\";\nimport Favorite from \"../../Favorite/Favorites\";\nimport Category from \"../../Category/ManageCategory\";\nimport Contact from \"../../Contact/Contact\";\nimport Profile from \"../../Profile/Profile\";\nimport Tasks from \"../../Tasks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport {\n  addNewTab,\n  removeNewTab,\n  removeLastNewTab,\n} from \"../../../redux/features/searchTabSlice\";\nimport { addTab, removeTab } from \"../../../redux/features/tabSlice\";\n\nconst data = [\n  { name: \"invoice\", content: <Invoice /> },\n  { name: \"matter\", content: <Matter /> },\n  { name: \"ledger\", content: <Ledger /> },\n  { name: \"favorite\", content: <Favorite /> },\n  { name: \"category\", content: <Category /> },\n  { name: \"contact\", content: <Contact /> },\n  { name: \"profile\", content: <Profile /> },\n  { name: \"tasks\", content: <Tasks /> },\n];\nconst component = {\n  invoice: <Invoice />,\n  matter: <Matter />,\n  ledger: <Ledger />,\n  favorite: <Favorite />,\n  category: <Category />,\n  contact: <Contact />,\n  profile: <Profile />,\n  tasks: <Tasks />,\n};\n\nconst AdminDashboard = () => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const tabList = useSelector((state) => state.tabs);\n  const newTabList = useSelector((state) => state.newTabs);\n  const dispatch = useDispatch();\n\n  // search tab will match the text and display tab\n  const [wordEntered, setWordEntered] = useState(\"\");\n\n  const searchItem = () => {\n    let selectedItem = data.filter((value) => {\n      if (value.name === wordEntered) {\n        return true;\n      }\n    });\n  };\n  const handleChangeSearch = (e) => {\n    setWordEntered(e.target.value);\n    let id = tabList.length + 1;\n    dispatch(\n      addTab({\n        id: id,\n        tab: e.target.value,\n      }),\n    );\n    dispatch(removeLastNewTab());\n    setValue(id);\n    searchItem();\n  };\n  const handleRemoveTab = (tab) => {\n    dispatch(removeTab(tab));\n    setValue(0);\n  };\n  const handleRemoveNewTab = (tab) => {\n    dispatch(removeNewTab(tab));\n    setValue(0);\n  };\n\n  const addSearchTab = () => {\n    let id = newTabList.length + 10;\n    setTimeout(\n      dispatch(\n        addNewTab({\n          id: id,\n          name: \"newtab\",\n        }),\n      ),\n      5000,\n    );\n\n    setValue(id);\n  };\n  const displayNewTabsName = () => {\n    if (newTabList) {\n      return newTabList.map((tab) => (\n        <Tab\n          key={tab.id}\n          value={tab.id}\n          label={\n            <span>\n              newtab\n              <IconButton\n                component=\"div\"\n                onClick={() => handleRemoveNewTab(tab)}\n              >\n                <CloseIcon />\n              </IconButton>\n            </span>\n          }\n        />\n      ));\n    } else return null;\n  };\n  const displayTabsName = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <Tab\n          key={tab.id}\n          value={tab.id}\n          label={\n            <span>\n              {\" \"}\n              {tab.name}\n              <IconButton component=\"div\" onClick={() => handleRemoveTab(tab)}>\n                <CloseIcon />\n              </IconButton>\n            </span>\n          }\n        />\n      ));\n    } else return null;\n  };\n  const searchTab = () => {\n    return (\n      <Box\n        noValidate\n        sx={{\n          p: \"2px 4px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          width: \"50%\",\n          borderRadius: \"5rem\",\n          backgroundColor: \"#dfdfdf\",\n        }}\n      >\n        <Select\n          fullWidth\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value=\"\"\n          label=\"Search....\"\n          onChange={handleChangeSearch}\n          sx={{\n            \" & .MuiOutlinedInput-notchedOutline\": {\n              border: \"none\",\n            },\n          }}\n        >\n          {data.map((item, index) => (\n            <MenuItem key={index} value={item.name}>\n              {item.name}\n            </MenuItem>\n          ))}\n        </Select>\n\n        <IconButton type=\"submit\" sx={{ p: \"10px\" }} aria-label=\"search\">\n          {wordEntered.length === 0 ? <SearchIcon /> : <CloseIcon />}\n        </IconButton>\n      </Box>\n    );\n  };\n  const displaySearchTabs = () => {\n    if (newTabList) {\n      return newTabList.map((tab) => (\n        <TabPanel value={tab.id}>{searchTab()}</TabPanel>\n      ));\n    } else return null;\n  };\n  const displayTabs = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <TabPanel value={tab.id}>{component[tab.name]}</TabPanel>\n      ));\n    } else return null;\n  };\n\n  const renderTabs = () => {\n    return (\n      <Box sx={{ width: \"100%\" }}>\n        <TabContext value={value}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              variant=\"scrollable\"\n              scrollButtons\n              allowScrollButtonsMobilearia-label=\"lab API tabs example\"\n            >\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label=\"Dashboard\"\n                value={0}\n              />\n\n              {displayTabsName()}\n              {displayNewTabsName()}\n\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label={\n                  <IconButton\n                    component=\"div\"\n                    onClick={() => dispatch(addNewTab())}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                }\n                onClick={addSearchTab}\n                value={100}\n              />\n            </Tabs>\n          </Box>\n          <TabPanel value={0}>\n            <DashBoard />\n          </TabPanel>\n          {displayTabs()}\n          {displaySearchTabs()}\n          <TabPanel value={100}></TabPanel>\n        </TabContext>\n      </Box>\n    );\n  };\n  useEffect(() => {\n    renderTabs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <Fragment>{renderTabs()}</Fragment>;\n};\n\nexport default AdminDashboard;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { LinearProgress, Box, Grid, Typography } from \"@mui/material\";\n\nconst ProgressBar = () => {\n  const [progress, setProgress] = useState(69);\n  return (\n    <Box paddingLeft={3} paddingRight={3}>\n      <Grid container>\n        <Grid item lg={1} xs={12}>\n          <Typography>{progress}%</Typography>\n        </Grid>\n        <Grid item lg={11} xs={12} mt={2} mb={5}>\n          <LinearProgress variant=\"determinate\" value={progress} />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ProgressBar;\n","/** @format */\n\nimport React from \"react\";\n\nimport { Typography, Box, Paper, Grid } from \"@mui/material\";\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from \"@mui/material\";\n\nconst randomDate = (start, end) => {\n  const getDateTime = new Date(\n    start.getTime() + Math.random() * (end.getTime() - start.getTime()),\n  );\n  const date = getDateTime.toLocaleDateString();\n  const hour = getDateTime.getHours();\n  const min = getDateTime.getMinutes();\n\n  return date + \" \" + hour + \":\" + min;\n};\n\nconst Task = () => {\n  return (\n    <Grid container>\n      <Grid item lg={12} xs={12}>\n        <Typography component=\"h5\" variant=\"h6\" color=\"primary\">\n          My Tasks\n        </Typography>\n        <TableContainer component={Paper}>\n          <Table size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    ID\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Date\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Subject\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Detail\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow bgColor=\"#e85355\">\n                <TableCell>\n                  <Typography variant=\"caption\">123452</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Submit Document X</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display first 3 links\n                  </Typography>{\" \"}\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#fd9905\">\n                <TableCell>\n                  <Typography variant=\"caption\">113457</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Y</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display more details\n                  </Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#28c570\">\n                <TableCell>\n                  <Typography variant=\"caption\">113455</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Z</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Note in popup</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"white\">\n                <TableCell>\n                  <Typography variant=\"caption\">113458</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document XY</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display First 3 links\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Task;\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nexport const AdminCards = () => {\n  return (\n    <>\n      <Grid container spacing={1}>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5} xs={12}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    New Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    Lost Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport const LawyerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Projected Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={230} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Annual Trending Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={768} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const FirmCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={6} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Lost Customers\n              </Typography>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const CustomerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={2}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Balance\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Payment Due\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={12345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nconst Cards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                New Matters\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={3425}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n// import axios from 'axios';\n\nimport { Grid } from \"@mui/material\";\n\nimport Calender from \"../Calender\";\nimport ProgressBar from \"../ProgressBar\";\n\nimport Tasks from \"../Tasks\";\nimport { CustomerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={3}>\n        <Grid item lg={2} xs={12}>\n          <CustomerCards />\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Calender />\n        </Grid>\n        <Grid item p={2} lg={6} xs={12}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <ProgressBar />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Button, Grid, Box, List, ListItem, ListItemText } from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst Templates = () => {\n  return (\n    <Fragment>\n      <Grid container mt={1} spacing={1}>\n        <Grid item xs={12} m={2}>\n          <Button variant=\"contained\" size=\"small\">\n            Merge Fields.XLS\n          </Button>\n          <Box sx={{ float: \"right\" }}>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Doc\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New PDF\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Email\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Edit\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Save\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Close\n            </Button>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Word Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Report Money</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - Report Time</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Report Billed hours</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              PDF Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>P001 - Write of Execution</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P002 - Memo of Cost</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P003 - Settlement Letter</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Email Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Invoice Email</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - New Client</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Firing Client</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              padding: \"15rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Templates can be opened here to edit them. user can add/ remove\n            merge fields directly to the document or PDF\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Templates;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Client/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\n\n\nconst ClientDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default ClientDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const PieChart = () => {\n  const state = {\n    series: [86, 14],\n    options: {\n      chart: {\n        height: 500,\n        type: \"pie\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"65%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val + \"%\";\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Prodcutive v. Non-Productive Time\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n        horizontalAlign: \"center\",\n      },\n      colors: [\"#738df5\", \"#eaa3ff\"],\n      labels: [\"Non Productive\", \"Productive\"],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"pie\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            background: \"#aaa\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shade: \"gark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\", \"pink\"],\n        stops: [0, 3],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"user 1\",\n        data: [44, 55, 41, 37, 22, 43, 21],\n      },\n      {\n        name: \"user 2\",\n        data: [53, 32, 33, 52, 13, 43, 32],\n      },\n      {\n        name: \"User 3\",\n        data: [12, 17, 11, 9, 15, 11, 20],\n      },\n      {\n        name: \"User 4\",\n        data: [9, 7, 5, 8, 6, 9, 4],\n      },\n    ],\n    options: {\n      chart: {\n        type: \"bar\",\n        height: 350,\n        stacked: true,\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        borderRadius: 8,\n        colors: [\"#fff\"],\n      },\n\n      title: {\n        text: \"% Indicating User Ranking\",\n      },\n      xaxis: {\n        categories: [\n          \"Word per Min\",\n          \"Matter Completed\",\n          \"Revenue Generated\",\n          \"Articals Submitted\",\n          \"New Client\",\n          \"New Matter\",\n        ],\n        labels: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: undefined,\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      fill: {\n        opacity: 1,\n      },\n      color: [\"#738df5\", \"#eaa3ff\", \"#738df5\", \"#eaa3ff\"],\n      legend: {\n        show: false,\n        position: \"top\",\n        horizontalAlign: \"left\",\n        offsetX: 40,\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Grid } from \"@mui/material\";\nimport Calender from \"../Calender\";\nimport Tasks from \"../Tasks\";\nimport { Chart2, PieChart, BarChart } from \"./Chart\";\nimport { LawyerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={2}>\n          <LawyerCards />\n        </Grid>\n        <Grid item lg={4}>\n          <PieChart />\n        </Grid>\n        <Grid item lg={6}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={4}>\n          <Chart2 />\n        </Grid>\n        <Grid item lg={8}>\n          <BarChart />\n        </Grid>\n        <Grid item>\n          <Calender />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Lawyer/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst LawyerDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default LawyerDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const Chart = () => {\n  const state = {\n    series: [110, 110, 19, 80],\n    options: {\n      chart: {\n        height: 500,\n        type: \"donut\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"55%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Matter by Type\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      colors: [\"#03a5fc\", \"#fcd200\", \"#fca400\", \"#003f5c\"],\n      labels: [\n        \"Business Contacts\",\n        \"Criminal Defence\",\n        \"Personal Injury\",\n        \"Family Law\",\n      ],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"donut\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            // background: \"#333\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"solid\",\n      gradient: {\n        shade: \"dark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\"],\n        stops: [0, 100],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"Profit\",\n        data: [640, 505, 210, 108, 760, 410, 440, 140, 660, 320],\n      },\n      {\n        name: \"Loss\",\n        data: [530, 302, 420, 220, 290, 800, 160, 490, 708, 110],\n      },\n    ],\n\n    options: {\n      colors: [\"#e85355\", \"#28c570\"],\n      chart: {\n        height: 100,\n        type: \"bar\",\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n        },\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function (val) {\n          return \"$\" + val;\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return \"$ \" + val + \"\";\n          },\n        },\n      },\n\n      xaxis: {\n        categories: [\n          \"Jan\",\n          \"Feb\",\n          \"Mar\",\n          \"Apr\",\n          \"May\",\n          \"Jun\",\n          \"July\",\n          \"Aug\",\n          \"Sep\",\n          \"Oct\",\n        ],\n      },\n\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"right\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart2 = () => {\n  const state = {\n    series: [\n      {\n        data: [19, 57, 78, 40, 95, 25],\n      },\n    ],\n\n    options: {\n      chart: {\n        height: 350,\n        type: \"bar\",\n      },\n      colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n      plotOptions: {\n        bar: {\n          columnWidth: \"45%\",\n          distributed: true,\n        },\n      },\n      dataLabels: {\n        enabled: true,\n        formatter: function (val) {\n          return val + \"%\";\n        },\n      },\n      legend: {\n        show: false,\n      },\n      title: {\n        text: \"% of Task Completed by User\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      xaxis: {\n        categories: [\n          \"M. Jones\",\n          \"R. Smith\",\n          \"T.Sweeney\",\n          \"S. Booker\",\n          \"A. Knighter\",\n          \"J. King\",\n        ],\n        labels: {\n          style: {\n            // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n            fontSize: \"12px\",\n          },\n        },\n\n        legend: {\n          show: false,\n          dropShadow: false,\n          position: \"right\",\n          labels: {\n            useSeriesColors: true,\n          },\n          onItemClick: {\n            toggleDataSeries: true,\n          },\n          formatter: function (seriesName, opts) {\n            return (\n              seriesName +\n              \":  <NumberFormat value={\" +\n              opts.w.globals.series[opts.seriesIndex] +\n              \"} displayType={'text'} thousandSeparator={true}/>\"\n            );\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart3 = () => {\n  const state = {\n    // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n    options: {\n      series: [\n        {\n          data: [750, 280, 500, 720],\n        },\n      ],\n      chart: {\n        type: \"bar\",\n        height: 380,\n      },\n      plotOptions: {\n        bar: {\n          barHeight: \"100%\",\n          borderRadius: 8,\n          distributed: true,\n          horizontal: true,\n          dataLabels: {\n            position: \"top\",\n          },\n        },\n      },\n      //       light blue,  yellow, orange, dark blue,\n      colors: [\"#fcd200\", \"#fca400\", \"#003f5c\", \"#03a5fc\"],\n      dataLabels: {\n        enabled: false,\n        textAnchor: \"start\",\n        style: {\n          colors: [\"#fff\"],\n        },\n        formatter: function (val, opt) {\n          return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val;\n        },\n        offsetX: 0,\n        dropShadow: {\n          enabled: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        colors: [\"#fff\"],\n      },\n      xaxis: {\n        categories: [\n          \"Criminal Defense\",\n          \"Personal Injury\",\n          \"Family Law\",\n          \"Business Contract\",\n        ],\n      },\n      yaxis: {\n        labels: {\n          show: true,\n        },\n      },\n      title: {\n        text: \"Revenue By Mater Type\",\n        align: \"center\",\n        floating: true,\n      },\n\n      tooltip: {\n        theme: \"light\",\n        x: {\n          show: false,\n        },\n        y: {\n          formatter: function (val, opt) {\n            return (\n              opt.w.globals.labels[opt.dataPointIndex] + \": $ \" + val + \" k\"\n            );\n          },\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.options.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Paper, Grid, Box } from \"@mui/material\";\n\nimport Tasks from \"../Tasks\";\nimport { FirmCards } from \"../Cards\";\n\nimport { Chart, Chart2, BarChart, BarChart2, BarChart3 } from \"./Charts\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      {/*main dashboard section for display  */}\n      <Box component={Paper} elevation={3} mt={4}>\n        <Grid container spacing={2}>\n          <Grid item lg={8} xs={12}>\n            <FirmCards />\n            <Grid container>\n              <Grid item lg={5} xs={12}>\n                <Chart2 />\n              </Grid>\n              <Grid item lg={7} xs={12}>\n                <Tasks />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Chart />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <BarChart />\n          </Grid>\n          <Grid item lg={6} xs={6}>\n            <BarChart2 />\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <BarChart3 />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Firm/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst FirmDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default FirmDashboard;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport AdminDashboard from \"../components/Dashboard/UserRoles/AdminDashboard\";\nimport ClientDashboard from \"../components/Dashboard/UserRoles/ClientDashboard\";\nimport LawyerDashboard from \"../components/Dashboard/UserRoles/LawyerDashboard\";\nimport FirmDashboard from \"../components/Dashboard/UserRoles/FirmDashboard\";\n\nconst Dashboard = () => {\n    const { user } = useSelector(\n      (state) => state.auth \n    )\n\n  // checker type of user\n  const [localuser, setLocalUser] = useState({\n    username: \"Guest\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: true,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const dashboardRedirect = () => {\n    switch (user.username) {\n      case \"admin\":\n        return <AdminDashboard />;\n      case \"firm\":\n        return <FirmDashboard />;\n      case \"lawyer\":\n        return <LawyerDashboard />;\n      default:\n        return <ClientDashboard />;\n    }\n  };\n  return <>{dashboardRedirect()}</>;\n};\n\nexport default Dashboard;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n} from \"@mui/material\";\nimport AlertMassage from \"../../components/Alerts/Alerts\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/login_light.png\";\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [statusCode, setStatusCode] = useState(0)\n\n  const { username, email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n     login(username, email, password);\n    // setStatusCode(code)\n  \n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"87vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            {/* csrf_token */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              value={username}\n              onChange={(e) => onChange(e)}\n              autoComplete=\"new-password\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              autoComplete=\"new-password\"\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => onChange(e)}\n              id=\"password\"\n              minLength=\"6\"\n              autoComplete=\"password\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n          </Box>\n          <Grid container>\n            <Grid item xs>\n              <Link to=\"/\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../../actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n  FormControlLabel,\n  FormLabel,\n  FormGroup,\n  Checkbox,\n  RadioGroup,\n  Radio,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/signup_light.png\";\n\nconst Signup = ({ register, isAuthenticated }) => {\n  const [accountCreated, setAccountCreated] = useState(false);\n  const [isFirm, setIsFirm] = useState(false);\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    re_password: \"\",\n  });\n\n  const { username, email, first_name, last_name, password, re_password } =\n    formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    let is_firm = isFirm;\n    let is_client = !isFirm;\n\n    if (password === re_password) {\n      register(\n        email,\n        first_name,\n        last_name,\n        username,\n        password,\n        re_password,\n        is_firm,\n        is_client,\n      );\n\n      setAccountCreated(true);\n    } else {\n      console.log(\"Password no match, Please type again!\");\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (accountCreated) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"85vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={(e) => onChange(e)}\n                  autoComplete=\"new-password\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"first_name\"\n                  label=\"First Name\"\n                  name=\"first_name\"\n                  value={first_name}\n                  onChange={(e) => onChange(e)}\n                  autoComplete=\"new-password\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"last_name\"\n                  label=\"Last Name\"\n                  name=\"last_name\"\n                  autoComplete=\"last_name\"\n                  value={last_name}\n                  onChange={(e) => onChange(e)}\n                  autoFocus\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={(e) => onChange(e)}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                value={password}\n                onChange={(e) => onChange(e)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"re_password\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                value={re_password}\n                onChange={(e) => onChange(e)}\n                id=\"re_password\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Sign up as a </FormLabel>\n              <RadioGroup\n                row\n                value={isFirm}\n                onChange={(e) => setIsFirm(e.target.value)}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Firm\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Individual\"\n                />\n              </RadioGroup>\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormGroup>\n                <FormControlLabel\n                  control={<Checkbox />}\n                  label=\"Agreed on Term and Contidions\"\n                />\n              </FormGroup>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Register\n            </Button>\n          </Box>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" variant=\"body2\">\n                {\"Already have an account? Sign in\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { register })(Signup);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  Divider,\n  FormControlLabel,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Company = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate: 0.0,\n    role: \"\",\n    time_zone: \"\",\n    group: \"\",\n    job_title: \"\",\n    bar_no: 0,\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: 0,\n    ext: 0,\n    mobile: 0,\n    home: 0,\n    work_no: 0,\n\n    phone_ext: 0,\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    role,\n    time_zone,\n    group,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      c_email,\n      rate,\n      role,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      p_email,\n      phone_ext,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Box p={3} sx={{ float: \"right\" }}>\n        <LinkButton to=\"/users\">Manage User</LinkButton>\n        <LinkButton to=\"/user-group\">Manage Group</LinkButton>\n        <LinkButton to=\"/user-role\">Manage Role</LinkButton>\n      </Box>\n\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create User\n        </Typography>\n        <Grid container spacing={2} mt={2}>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"f_name\"\n              label=\"f_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"m_name\"\n              label=\"m_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"m_name\"\n              autoComplete=\"m_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"l_name\"\n              label=\"l_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"c_email\"\n              label=\"c_email\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"c_email\"\n              autoComplete=\"c_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"rate\"\n              label=\"rate\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"rate\"\n              autoComplete=\"rate\"\n            />\n            <FormControlLabel\n              label=\"Round Entries (Round [up/down] to nearnest 0.00 fraction of the hour\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n              sx={{ width: \"35rem\" }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"role\"\n              label=\"role\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"role\"\n              autoComplete=\"role\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"time_zone\"\n              label=\"time_zone\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"time_zone\"\n              autoComplete=\"time_zone\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"group\"\n              label=\"group\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"group\"\n              autoComplete=\"group\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"job_title\"\n              label=\"job_title\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"job_title\"\n              autoComplete=\"job_title\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bar_no\"\n              label=\"bar_no\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bar_no\"\n              autoComplete=\"bar_no\"\n            />\n          </Grid>\n          <Grid item mt={2}>\n            <Divider textAlign=\"left\">\n              <Typography component=\"h3\" variant=\"h5\">\n                Contact Info\n              </Typography>\n            </Divider>\n            <Box>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"street\"\n                label=\"street\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"street\"\n                autoComplete=\"street\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"suite\"\n                label=\"suite\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"suite\"\n                autoComplete=\"suite\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"city\"\n                label=\"city\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"city\"\n                autoComplete=\"city\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"state\"\n                label=\"state\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"state\"\n                autoComplete=\"state\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"zip\"\n                label=\"zip\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"zip\"\n                autoComplete=\"zip\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"ext\"\n                label=\"ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"ext\"\n                autoComplete=\"ext\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"mobile\"\n                label=\"mobile\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"mobile\"\n                autoComplete=\"mobile\"\n              />\n              <Button\n                variant=\"contained\"\n                sx={{ background: \"#5cb85c\", marginTop: \"0.5rem\" }}\n              >\n                Set Password Automaticly\n              </Button>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"home\"\n                label=\"home\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"home\"\n                autoComplete=\"home\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"work_no\"\n                label=\"work_no\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"work_no\"\n                autoComplete=\"work_no\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"p_email\"\n                label=\"p_email\"\n                type=\"email\"\n                onChange={(e) => onChange(e)}\n                id=\"p_email\"\n                autoComplete=\"p_email\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"phone_ext\"\n                label=\"phone_ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"phone_ext\"\n                autoComplete=\"phone_ext\"\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Box\n              sx={{\n                \"& .MuiButton-root\": { m: 1 },\n                float: \"right\",\n              }}\n            >\n              <Button variant=\"contained\" type=\"submit\">\n                Create Member\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Company;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\nimport Filters from \"../../components/Matter/Filters\";\nimport MatterCards from \"../../components/Matter/MatterCards\";\nimport MatterListLong from \"../../components/Matter/MatterListLong\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item xs={12}>\n            <Filters />\n          </Grid>\n          <Grid item xs={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item xs={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Matters;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Switch,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Button,\n  TextField,\n  Box,\n  Grid,\n  MenuItem,\n  Typography,\n  Divider,\n  FormControlLabel,\n  Stack,\n} from \"@mui/material\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport CreateUser from \"./CreateUser\";\nimport {\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useToggle } from \"../../context/useToggle\";\n\nconst User = () => {\n  const [usersData, setUsersData] = useState([]);\n\n  const [isActive, setIsActive] = useToggle(false);\n\n  const [roles, setRoles] = useState([]);\n  const [role, setRole] = useState(\"\");\n  const [group, setGroup] = useState(\"\");\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [rateType, setRateType] = useState(\"\");\n\n  const handleChange = (event) => {\n    setRateType(event.target.value);\n  };\n\n  const [approvel, setApprovel] = useToggle(false);\n\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate_type: \"\",\n    rate: \" \",\n    time_zone: \"\",\n    job_title: \"\",\n    bar_no: \" \",\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    ext: \"\",\n    mobile: \"\",\n    home: \"\",\n    work_no: \"\",\n    p_email: \"\",\n    phone_ext: \"\",\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    time_zone,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      p_email,\n      role,\n      c_email,\n      rate,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      phone_ext,\n    });\n\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/create-member/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchRoleData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/get-role-list/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setRoles(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  const FetchGroupData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/group/`, CONFIG)\n      .then((res) => {\n        setLoading2(false);\n        setGroups(res.data);\n      })\n      .catch((err) => {\n        setLoading2(false);\n      });\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/users-list/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setUsersData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchRoleData();\n    FetchData();\n    FetchGroupData();\n  }, []);\n  const showUsers = () => {\n    if (usersData.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return usersData.map((data) => (\n        <TableRow>\n          <TableCell>{data.first_name}</TableCell>\n          <TableCell>{data.last_name}</TableCell>\n          <TableCell>{data.email}</TableCell>\n          <TableCell>{data.role}</TableCell>\n          <TableCell>{data.group}</TableCell>\n          <TableCell>{data.last_login}</TableCell>\n          <TableCell>{data.is_active ? \"active\":\"inactive\"}</TableCell>\n          <TableCell>\n            <Button\n              variant=\"contained\"\n              value={data.id}\n              onClick={() => handleDelete(data.id)}\n              sx={{\n                borderRadius: \"0.5rem\",\n                float: \"right\",\n              }}\n            >\n              <ClearIcon />\n            </Button>\n          </TableCell>\n        </TableRow>\n      ));\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <Typography component=\"h4\" variant=\"h5\" color=\"primary\" mb={2}>\n          Manage Users\n        </Typography>\n        <Stack p={3} direction=\"row\" spacing={2} sx={{ float: \"right\" }}>\n          <Search sx={{ width: \"15rem\" }}>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n          <Button\n            color=\"success\"\n            onClick={handleClickOpen}\n            variant=\"contained\"\n            sx={{ color: \"white\", background: \"#28c570\" }}\n          >\n            + Add User\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth=\"true\"\n            maxWidth=\"xl\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New User\"}</DialogTitle>\n            <DialogContent>\n              <Grid\n                container\n                spacing={2}\n                mt={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\" },\n                }}\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"f_name\"\n                    label=\"First Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"f_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"m_name\"\n                    label=\"Middle Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"m_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"l_name\"\n                    label=\"Last Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"l_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"c_email\"\n                    label=\"Company Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"c_email\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"rate\"\n                    label=\"Rate $\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"rate\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={6}>\n                  <Stack direction=\"row\" spacing={2} ml={2}>\n                    <FormControlLabel\n                      sx={{ fontSize: \"2rem\" }}\n                      label=\"\"\n                      control={\n                        <Switch\n                          checked={approvel}\n                          onChange={() => setApprovel(approvel)}\n                        />\n                      }\n                    />\n                    <Typography>\n                      Round Entries (Round [up/down] to nearnest\n                      <TextField\n                        margin=\"dense\"\n                        variant=\"standard\"\n                        type=\"text\"\n                        size=\"small\"\n                        placeholder=\"0.00\"\n                        sx={{\n                          maxWidth: \"5rem\",\n                        }}\n                      />\n                      fraction of the hour\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"role\"\n                    label=\"Role\"\n                    onChange={(e) => setRole(e.target.value)}\n                    id=\"role\"\n                    autoComplete=\"new-password\"\n                  >\n                    {!loading ? (\n                      roles.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"time_zone\"\n                    label=\"Time Zone\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"time_zone\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"group\"\n                    label=\"Group\"\n                    type=\"text\"\n                    onChange={(e) => setGroup(e.target.value)}\n                    id=\"group\"\n                    autoComplete=\"new-password\"\n                  >\n                    {!loading2 ? (\n                      groups.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"job_title\"\n                    label=\"Job Title\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"job_title\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"bar_no\"\n                    label=\"Bar #\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"bar_no\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={4} mb={2}>\n                <Divider />\n                <Typography mt={2} component=\"h3\" color=\"primary\" variant=\"h5\">\n                  Contact Info\n                </Typography>\n              </Box>\n\n              <Grid\n                container\n                spacing={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\" },\n                }}\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"street\"\n                    label=\"Street\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"street\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"suite\"\n                    label=\"Suite\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"suite\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"city\"\n                    label=\"City\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"city\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"state\"\n                    label=\"State\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"state\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"zip\"\n                    label=\"Zip\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"zip\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"ext\"\n                    label=\"+4\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"ext\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"p_email\"\n                    label=\"Personal Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"p_email\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <Box mt={1} ml={1}>\n                    <Button variant=\"contained\" color=\"primary\">\n                      Reset Password\n                    </Button>\n                  </Box>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"mobile\"\n                    label=\"Mobile #\"\n                    type=\"phone\"\n                    onChange={(e) => onChange(e)}\n                    id=\"mobile\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"home\"\n                    label=\"Home #\"\n                    type=\"phone\"\n                    onChange={(e) => onChange(e)}\n                    id=\"home\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"work_no\"\n                    label=\"Work #\"\n                    type=\"phone\"\n                    onChange={(e) => onChange(e)}\n                    id=\"work_no\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"phone_ext\"\n                    label=\"Extesion\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"phone_ext\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n              </Grid>\n              <Grid item lg={12}>\n                <Box\n                  sx={{\n                    \"& .MuiButton-root\": { m: 1, mr: 8 },\n                    float: \"right\",\n                  }}\n                >\n                  <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    type=\"submit\"\n                    sx={{ color: \"white\" }}\n                  >\n                    Activate\n                  </Button>\n                  <Button variant=\"contained\" color=\"error\">\n                    Deactivate\n                  </Button>\n                </Box>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n            </DialogActions>\n          </Dialog>\n        </Stack>\n\n        <TableContainer>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  <Typography color=\"white\">First Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Role</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Group</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Login</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Status</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Deactivate</Typography>\n                </TableCell>\n                <TableCell>\n                  <Switch\n                    color=\"success\"\n                    value={isActive}\n                    onChange={() => setIsActive()}\n                  />\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {!loading ? showUsers() : <Typography>Loading ...</Typography>}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default User;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Stack,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst ManageUserGroup = () => {\n  const [filter, setFilter] = useState(\"\");\n\n  const handleChange = (event) => {\n    setFilter(event.target.value);\n  };\n  const [group, setGroup] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingUser, setLoadingUser] = useState(true);\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchUserData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        setLoadingUser(false);\n\n        setUserData(res.data);\n      })\n      .catch((err) => {\n        setLoadingUser(false);\n      });\n  };\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/group/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setGroup(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n    FetchUserData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/group/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/group/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const showGroup = () => {\n    if (group.length === 0) {\n      return <p> No data found...</p>;\n    } else {\n      return group.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n    }\n  };\n  const showUser = () => {\n    if (userData.length === 0) return <p>No Data Found</p>;\n    else\n      userData.map((data) => {\n        return (\n          <TableRow>\n            <TableCell>{data.f_name}</TableCell>\n            <TableCell>{data.l_name}</TableCell>\n            <TableCell>{data.role}</TableCell>\n            <TableCell>{data.group}</TableCell>\n          </TableRow>\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={12}>\n          <Grid container spacing={2} direction=\"row\">\n            <Grid item lg={3}>\n              <Typography variant=\"h5\" component=\"h5\" m={1} color=\"primary\">\n                Manage Group\n              </Typography>\n            </Grid>\n            <Grid item lg={9}>\n              <Stack direction=\"row\" sx={{ float: \"right\" }}>\n                <Typography m={2} component=\"span\" color=\"primary\">\n                  Filter & Sort By\n                </Typography>\n                <FormControl sx={{ width: \"10rem\", height: \"2.5rem\" }}>\n                  <InputLabel id=\"demo-simple-select-label\" color=\"primary\">\n                    Custom Sort\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={filter}\n                    label=\"Age\"\n                    onChange={handleChange}\n                  >\n                    <MenuItem value=\"name\">By Name</MenuItem>\n                    <MenuItem value=\"role\">By Role</MenuItem>\n                    <MenuItem value=\"gorup\">By Group</MenuItem>\n                  </Select>\n                </FormControl>\n                <Search sx={{ width: \"20rem\", height: \"2.5rem\", m: 1 }}>\n                  <SearchIconWrapper>\n                    <SearchIcon />\n                  </SearchIconWrapper>\n                  <StyledInputBase\n                    placeholder=\"Search…\"\n                    inputProps={{ \"aria-label\": \"search\" }}\n                  />\n                </Search>\n              </Stack>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3}>\n          <Typography\n            variant=\"h5\"\n            component=\"h5\"\n            color=\"primary\"\n            align=\"center\"\n          >\n            Groups\n          </Typography>\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            fullWidth\n            sx={{\n              borderRadius: \"0.5rem\",\n            }}\n          >\n            + New Group\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New Group\"}</DialogTitle>\n            <DialogContent>\n              <TextField\n                required\n                fullWidth\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"name\"\n                label=\"Group Name\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n              <Button type=\"submit\" autoFocus>\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {!loading ? showGroup() : <Typography>Loading ...</Typography>}\n        </Grid>\n        <Grid item lg={9}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow bgColor=\"#796ef0\">\n                  <TableCell>\n                    <Typography color=\"white\">First Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Last Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Role</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Group</Typography>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>{loadingUser ? null : showUser()}</TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item lg={12}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"success\" sx={{ color: \"white\" }}>\n              Done\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageUserGroup;\n","import  React,{ Fragment, useState,  useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\n\nimport axios from \"axios\";\nimport {\n   Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,TableBody,\n  Button,\n  List,\n  Grid,\n  Box,\n  Typography,\n  ListItem,\n  ListItemText,\n  IconButton,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Paper,\n} from \"@mui/material\";\nimport RectangleIcon from '@mui/icons-material/Rectangle';\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getPermissions, reset } from '../../redux/features/permissionSlice';\n\n\nconst ManageRole = () => {\n    const dispatch = useDispatch()\n\n  const { user } = useSelector((state) => state.auth)\n  const { permissions, isLoading, isError, message } = useSelector((state) => state.permissions)\n\n  const [roles, setRoles] = useState([]);\n  const [role, setRole] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n//   useEffect(() => {\n//     if (isError) {\n//       console.log(message)\n//     }\n\n   \n//     if (role !== null){\n//         dispatch(getPermissions(role))\n//     }\n    \n\n//     return () => {\n//       dispatch(reset())\n//     }\n//   }, [role,  isError, message, dispatch])\n\n const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setRoles(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/role/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const selectRole = (id) => {\n    \n    setRole(id);\n    dispatch(getPermissions(id))\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n  <Fragment>\n    <Grid container spacing={2}>\n        <Grid item lg={12}></Grid>\n        <Grid item lg={2} component={Paper} elevation={5}>\n          <Box p={2}>\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            fullWidth\n            sx={{\n              borderRadius: \"0.5rem\",\n            }}\n          >\n            + New Role\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New Role\"}</DialogTitle>\n            <DialogContent>\n              <TextField\n                required\n                fullWidth\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"name\"\n                label=\"Role Name\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n              <Button type=\"submit\" autoFocus>\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {!loading ? (\n            roles.map((data, index) => (\n              <Box key={index}>\n                <List>\n                  <ListItem disablePadding>\n                    <span>\n                      <Button sx={data.id === role ? {backgroundColor: \"#796ef0\", color:\"white\"}: null} onClick={() => selectRole(data.id)}>\n                        {data.name}\n                      </Button>\n                      <IconButton\n                        variant=\"contained\"\n                        value={data.id}\n                        size=\"small\"\n                        onClick={() => handleDelete(data.id)}\n                        sx={{\n                          borderRadius: \"0.5rem\",\n                          float: \"right\",\n                        }}\n                      >\n                        <ClearIcon />\n                      </IconButton>\n                    </span>\n                  </ListItem>\n                </List>\n              </Box>\n            ))\n          ) : (\n            <Typography>Loading ...</Typography>\n          )}\n          </Box>\n        </Grid>\n        <Grid item lg={10}>\n          <TableContainer sx={{ overflowX: \"auto\" }}>\n        <Table size=\"small\" sx={{ fontSize: \"1rem\", \n        \"&MuiTableCell\": {\n          border: \"solid 2px black\"\n        } }}>\n          <TableHead>\n            <TableRow bgColor=\"#796ef0\">\n              <TableCell>\n                <Typography color=\"white\">Function</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">View </Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Edit</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Create</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Delete</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Contacts</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Team</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Office</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Region</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">All</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n             { permissions.permissions.length > 0 && role !== null ?\n                  permissions.permissions.map((permission)=>(\n                       <TableRow>\n                         <TableCell >{permission.name}</TableCell>\n            <TableCell sx={permission.is_view ? {backgroundColor:\"green\"}:null}>\n              <Button sx={ permission.is_view ?  \n                {color:\"#4BB543\", backgroundColor:\"#4BB543\",\n                  \"&:hover\":{\n                backgroundColor:\"#4BB545\", color:\"#4BB545\"\n              }}:\n              {color:\"#D3D3D3\", backgroundColor:\"#D3D3D3\",\n                  \"&:hover\":{\n                backgroundColor:\"#D3D3D3\", color:\"#D3D3D3\"\n              }}\n              \n              } size=\"large\" aria-label=\"toggle\">\n                <RectangleIcon  />\n              </Button>\n            </TableCell>\n            <TableCell sx={permission.is_edit ? {backgroundColor:\"green\"}:null}>\n              <Button sx={ permission.is_view ?  \n                {color:\"#4BB543\", backgroundColor:\"#4BB543\",\n                  \"&:hover\":{\n                backgroundColor:\"#4BB545\", color:\"#4BB545\"\n              }}:\n              {color:\"#D3D3D3\", backgroundColor:\"#D3D3D3\",\n                  \"&:hover\":{\n                backgroundColor:\"#D3D3D3\", color:\"#D3D3D3\"\n              }}} size=\"large\" aria-label=\"toggle\">\n                <RectangleIcon/>\n              </Button>\n            </TableCell>\n            <TableCell sx={permission.is_create ? {backgroundColor:\"green\"}:null}>\n              <Button sx={ permission.is_view ?  \n                {color:\"#4BB543\", backgroundColor:\"#4BB543\",\n                  \"&:hover\":{\n                backgroundColor:\"#4BB545\", color:\"#4BB545\"\n              }}:\n              {color:\"#D3D3D3\", backgroundColor:\"#D3D3D3\",\n                  \"&:hover\":{\n                backgroundColor:\"#D3D3D3\", color:\"#D3D3D3\"\n              }}}  size= \"large\"aria-label=\"toggle\">\n                <RectangleIcon />\n              </Button></TableCell>\n            <TableCell sx={permission.is_delete ? {backgroundColor:\"green\"}:null}>\n              <Button sx={ permission.is_view ?  \n                {color:\"#4BB543\", backgroundColor:\"#4BB543\",\n                  \"&:hover\":{\n                backgroundColor:\"#4BB545\", color:\"#4BB545\"\n              }}:\n              {color:\"#D3D3D3\", backgroundColor:\"#D3D3D3\",\n                  \"&:hover\":{\n                backgroundColor:\"#D3D3D3\", color:\"#D3D3D3\"\n              }}} size=\"large\" aria-label=\"toggle\">\n                <RectangleIcon />\n              </Button></TableCell>\n            <TableCell sx={permission.is_contacts ? {backgroundColor:\"green\"}:null}>\n              <Button sx={ permission.is_view ?  \n                {color:\"#4BB543\", backgroundColor:\"#4BB543\",\n                  \"&:hover\":{\n                backgroundColor:\"#4BB545\", color:\"#4BB545\"\n              }}:\n              {color:\"#D3D3D3\", backgroundColor:\"#D3D3D3\",\n                  \"&:hover\":{\n                backgroundColor:\"#D3D3D3\", color:\"#D3D3D3\"\n              }}} size=\"large\" aria-label=\"toggle\">\n                <RectangleIcon />\n              </Button></TableCell>\n            <TableCell sx={permission.is_team ? {backgroundColor:\"green\"}:null}>\n              <Button sx={ permission.is_view ?  \n                {color:\"#4BB543\", backgroundColor:\"#4BB543\",\n                  \"&:hover\":{\n                backgroundColor:\"#4BB545\", color:\"#4BB545\"\n              }}:\n              {color:\"#D3D3D3\", backgroundColor:\"#D3D3D3\",\n                  \"&:hover\":{\n                backgroundColor:\"#D3D3D3\", color:\"#D3D3D3\"\n              }}} size=\"large\" aria-label=\"toggle\">\n                <RectangleIcon />\n              </Button></TableCell>\n            <TableCell sx={permission.is_office ? {backgroundColor:\"green\"}:null}>\n              <Button sx={ permission.is_view ?  \n                {color:\"#4BB543\", backgroundColor:\"#4BB543\",\n                  \"&:hover\":{\n                backgroundColor:\"#4BB545\", color:\"#4BB545\"\n              }}:\n              {color:\"#D3D3D3\", backgroundColor:\"#D3D3D3\",\n                  \"&:hover\":{\n                backgroundColor:\"#D3D3D3\", color:\"#D3D3D3\"\n              }}} size=\"large\" aria-label=\"toggle\">\n                <RectangleIcon />\n              </Button></TableCell>\n            <TableCell sx={permission.is_region ? {backgroundColor:\"green\"}:null}>\n              <Button sx={ permission.is_view ?  \n                {color:\"#4BB543\", backgroundColor:\"#4BB543\",\n                  \"&:hover\":{\n                backgroundColor:\"#4BB545\", color:\"#4BB545\"\n              }}:\n              {color:\"#D3D3D3\", backgroundColor:\"#D3D3D3\",\n                  \"&:hover\":{\n                backgroundColor:\"#D3D3D3\", color:\"#D3D3D3\"\n              }}} size=\"large\" aria-label=\"toggle\">\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n            <TableCell><Button sx={ permission.is_view ?  \n                {color:\"#4BB543\", backgroundColor:\"#4BB543\",\n                  \"&:hover\":{\n                backgroundColor:\"#4BB545\", color:\"#4BB545\"\n              }}:\n              {color:\"#D3D3D3\", backgroundColor:\"#D3D3D3\",\n                  \"&:hover\":{\n                backgroundColor:\"#D3D3D3\", color:\"#D3D3D3\"\n              }}} size=\"large\" aria-label=\"toggle\">\n                <RectangleIcon />\n              </Button></TableCell>\n                       </TableRow>\n                    )) : <>please selete a role</>} \n           \n            \n         </TableBody>\n          \n        </Table>\n      </TableContainer>\n          \n        </Grid>\n      </Grid>\n    </Fragment>\n\n  )\n}\n\nexport default ManageRole\n\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport CreateUser from \"./CreateUser\";\nimport ManageUser from \"./ManageUser\";\nimport User from \"./User\"\nimport ManageUserGroup from \"./ManageUserGroup\";\n// import UserRole from \"./UserRole\";\nimport ManageRole from \"./ManageRole\"\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Manage Users\">\n          <User />\n        </div>\n\n        <div label=\"User Group\">\n          <ManageUserGroup />\n        </div>\n        <div label=\"User Role\">\n          <ManageRole />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst TimeList = () => {\n  const [timeData, setTimeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTimeData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <Box>\n        <LinkButton to=\"/ledgers\" sx={{ float: \"right\" }}>\n          Ledger Dashboard\n        </LinkButton>\n        <Box p={3}>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Ledger Dashbaord\n          </LinkButton>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Add Time\n          </LinkButton>\n          <LinkButton to=\"/ledger-list\" sx={{ float: \"right\" }}>\n            Ledger List\n          </LinkButton>\n          <LinkButton to=\"/ledger-documents\" sx={{ float: \"right\" }}>\n            Documents\n          </LinkButton>\n        </Box>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Add</TableCell>\n\n                <TableCell>Matter #</TableCell>\n                <TableCell>Matter Name</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Billable Time</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell>Category</TableCell>\n                <TableCell>Activity</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n              ? null\n              : timeData?.map((data) => {\n                  return (\n                    <TableBody id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n\n                      <TableCell>{data.conatact}</TableCell>\n                      <TableCell>{data.date}</TableCell>\n                      <TableCell>{data.time}</TableCell>\n                      <TableCell>{data.rate}</TableCell>\n                      <TableCell>{data.category}</TableCell>\n                      <TableCell>{data.sub_category}</TableCell>\n                    </TableBody>\n                  );\n                })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TimeList;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Switch, FormControlLabel } from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Search = () => {\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [searchData, setSearchData] = useState({\n    state: \"\",\n    city: \"\",\n    practice_area: \"\",\n    law_school: \"\",\n\n    undergrad_study: \"\",\n    lamguages: \"\",\n    admitted_state: \"\",\n    relocate: false,\n  });\n\n  const {\n    state,\n    city,\n    practice_area,\n    law_school,\n\n    undergrad_study,\n    lamguages,\n    admitted_state,\n    relocate,\n  } = searchData;\n\n  const onChange = (e) =>\n    setSearchData({ ...searchData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"number\"\n              min=\"0\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Longest tenure (months / years)\"\n              id=\"longest_tenure\"\n              name=\"longest_tenure\"\n              value={longestTenure}\n              type=\"text\"\n              onValueChange={(e) => setLongestTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Average tenure (months / years)\"\n              value={averageTenure}\n              id=\"average_tenure\"\n              name=\"average_tenure\"\n              type=\"text\"\n              onValueChange={(e) => setAverageTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time at Current Company (months / years)\"\n              id=\"current_tenure\"\n              name=\"current_tenure\"\n              value={currentTenure}\n              type=\"text\"\n              onValueChange={(e) => setCurrentTenure(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"admitted_state\"\n              label=\"admitted_state\"\n              type=\"text\"\n              value={admitted_state}\n              onChange={(e) => onChange(e)}\n              id=\"admitted_state\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={gradYear}\n              onValueChange={(e) => setGradYear(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"undergrad_study\"\n              label=\"undergrad_study\"\n              step=\"0.01\"\n              type=\"text\"\n              value={undergrad_study}\n              onChange={(e) => onChange(e)}\n              id=\"undergrad_study\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"practice_area\"\n              label=\"practice_area\"\n              type=\"text\"\n              value={practice_area}\n              onChange={(e) => onChange(e)}\n              id=\"practice_area\"\n              disabled\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance Date\"\n              id=\"bar_admit_date\"\n              name=\"bar_admit_date\"\n              value={barDate}\n              onValueChange={(e) => setBarDate(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"lamguages\"\n              label=\"lamguages\"\n              type=\"text\"\n              value={lamguages}\n              onChange={(e) => onChange(e)}\n              id=\"lamguages\"\n            />\n            {/* <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Apply\n            </Button> */}\n            <Box m={3}>\n              <LinkButton to=\"/job-result\" sx={{ float: \"right\" }}>\n                Apply\n              </LinkButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Search;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\n// import axios from \"axios\";\n// import { CONFIG } from \"../../api/MatterApi\";\n// import { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Result = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(\"\");\n  // const [status, setStatus] = useState(\"\");\n  //   const FetchData = () => {\n  //     axios\n  //       .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n  //       .then((res) => {\n  //         setLoading(false);\n  //         setStatus(res.statusText);\n  //         setActivityData(res.data);\n  //       })\n  //       .catch((err) => {\n  //         setLoading(false);\n  //         setStatus(err.statusText);\n  //       });\n  //   };\n  //   useEffect(() => {\n  //     FetchData();\n  //   }, []);\n  return (\n    <Fragment>\n      <Box>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Rate</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Name</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">City</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">State</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Active</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Grage Year</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practice Area</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Relocation</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practicing</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading ? (\n              <TableBody>\n                <TableRow>\n                  <TableCell>74%</TableCell>\n                  <TableCell>Smith, John</TableCell>\n                  <TableCell>San Diego</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2000</TableCell>\n                  <TableCell>Criminal</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>22y - 03M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>72%</TableCell>\n                  <TableCell>Cassidy, Butch</TableCell>\n                  <TableCell>Los Angeles</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>2021</TableCell>\n                  <TableCell>Transctional</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>0y - 02M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>50%</TableCell>\n                  <TableCell>Short, Mart</TableCell>\n                  <TableCell>Sacramento</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2013</TableCell>\n                  <TableCell>Civil</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>06y - 11M</TableCell>\n                </TableRow>\n              </TableBody>\n            ) : (\n              activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })\n            )} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Result;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  FormControlLabel,\n  FormGroup,\n  Checkbox,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Saved = () => {\n  const [pickTime, setPickTime] = useState(new Date(\"2021-12-01T21:00:00\"));\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [jobData, setJobData] = useState({\n    name: \"\",\n    state: \"\",\n    city: \"\",\n    email: \"\",\n    mobile: \"\",\n    home: \"\",\n    law_school: \"\",\n    grad_year: \"\",\n    bar_adm_year: \"\",\n    practice_area: \"\",\n    mail_add: \"\",\n    relocate: false,\n    date: \"\",\n    time: \"\",\n    link: \"\",\n    notes: \"\",\n    file: \"\",\n  });\n\n  const {\n    name,\n    state,\n    city,\n    email,\n    mobile,\n    home,\n    law_school,\n    grad_year,\n    bar_adm_year,\n    practice_area,\n    mail_add,\n    relocate,\n    date,\n    time,\n    link,\n    notes,\n    file,\n  } = jobData;\n\n  const onChange = (e) =>\n    setJobData({ ...jobData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <FormGroup aria-label=\"position\" row>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Save\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Contacted\"\n                labelPlacement=\"start\"\n              />\n              <Typography component=\"label\" m={1}>\n                Interested :\n              </Typography>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Yes\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"No\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Interviewed\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Accept\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Reject\"\n                labelPlacement=\"start\"\n              />\n              <Box ml={3}>\n                <Typography component=\"h4\" color=\"success\" variant=\"h5\">\n                  Overall Score: 74%\n                </Typography>\n              </Box>\n            </FormGroup>\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"name\"\n              label=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(e) => onChange(e)}\n              id=\"name\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email\"\n              label=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              id=\"email\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobile}\n              onValueChange={(value) => onChange(value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={home}\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={grad_year}\n              onValueChange={(value) => onChange(value)}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance\"\n              id=\"bar_adm_year\"\n              name=\"bar_adm_year\"\n              value={bar_adm_year}\n              type=\"text\"\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"mail_add\"\n              label=\"mail_add\"\n              type=\"text\"\n              value={mail_add}\n              onChange={(e) => onChange(e)}\n              id=\"mail_add\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xs={4}>\n                <Box m={1}>\n                  <Typography component=\"lable\"> Writing Sample </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <TimePicker\n                    label=\"Pick Time\"\n                    name=\"picktime\"\n                    id=\"picktime\"\n                    value={pickTime}\n                    onChange={(e) => {\n                      setPickTime(e);\n                    }}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    inputFormat=\"yyyy-MM-dd\"\n                    mask=\"____-__-__\"\n                    label=\"Pick Date\"\n                    value={pickDate}\n                    name=\"pickdate\"\n                    id=\"pickdate\"\n                    onChange={(e) => setPickDate(e)}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n\n                <TextField\n                  size=\"small\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"link\"\n                  type=\"link\"\n                  defaultValue=\"2021-12-01\"\n                  value={link}\n                  onChange={(e) => onChange(e)}\n                  id=\"link\"\n                />\n              </Grid>\n              <Grid item xs={8}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={8}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"notes\"\n                  type=\"text\"\n                  value=\"Notes ...\"\n                  id=\"notes\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Saved;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport Search from \"./Search\";\nimport Result from \"./Result\";\nimport Saved from \"./Saved\";\nconst index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Search\">\n          <Search />\n        </div>\n        <div label=\"Result\">\n          <Result />\n        </div>\n        <div label=\"Saved\">\n          <Saved />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default index;\n","/** @format */\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nimport { Provider } from \"react-redux\";\n\nimport store, { persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport Layout from \"./hocs/Layout\";\n\nimport PrivateRoutes from \"./utils/PrivateRoute\";\n\nimport { UserProvider } from \"./context/User\";\n\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"./hocs/Theme\";\n\nimport Home from \"./containers/Home\";\n\n// Authentication links\nimport Login from \"./containers/Auth/Login\";\nimport Signup from \"./containers/Auth/Signup\";\n\nimport Profile from \"./components/Profile/Profile\";\nimport Company from \"./components/Profile/Company\";\n\nimport Matter from \"./components/Matter\";\n\nimport Matters from \"./containers/Matters/Matters\";\nimport MatterDetail from \"./components/Matter/MatterDetail\";\nimport NewMatter from \"./components/Matter/NewMatter\";\n\nimport Invoice from \"./components/Invoice\";\n\nimport CreateInvoice from \"./components/Invoice/CreateInvoice\";\n\nimport Payment from \"./components/Invoice/Payment\";\nimport ManageCategory from \"./components/Category/ManageCategory\";\n\nimport User from \"./components/User\";\n\nimport Time from \"./components/Ledger/Time\";\nimport TimeList from \"./components/Ledger/TimeList\";\n\nimport Ledger from \"./components/Ledger\";\n\nimport LedgerTImeList from \"./components/Ledger/LedgerTImeList\";\nimport LedgerActivity from \"./components/Ledger/LedgerActivity\";\n\nimport Tasks from \"./components/Tasks\";\nimport CreateTask from \"./components/Tasks/CreateTask\";\nimport ViewTasks from \"./components/Tasks/ViewTasks\";\nimport LedgerDoc from \"./components/Ledger/LedgerDoc\";\n\nimport Employee from \"./components/Employee\";\nimport Templates from \"./components/Template/Templates\";\n\nimport Contact from \"./components/Contact/Contact\";\nimport UserRole from \"./components/User/UserRole\";\nimport ManageRole from \"./components/User/ManageRole\";\nimport ManageUserGroup from \"./components/User/ManageUserGroup\";\n\nconst App = () => {\n  const alertOptions = {\n    timeout: 3000,\n    position: \"top center\",\n  };\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <UserProvider>\n          <ThemeProvider theme={theme}>\n            <AlertProvider template={AlertTemplate} {...alertOptions}>\n              <Router>\n                <Layout>\n                  <Switch>\n                    {/* loging regierter routes */}\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/signup\" component={Signup} />\n\n                    {/* private route after login  */}\n\n                    <PrivateRoutes exact path=\"/\" component={Home} />\n                    <PrivateRoutes path=\"/profile\" component={Profile} />\n                    <PrivateRoutes path=\"/company-detail\" component={Company} />\n\n                    <PrivateRoutes\n                      path=\"/matter-dashboard\"\n                      component={Matter}\n                    />\n                    <PrivateRoutes path=\"/matters\" component={Matters} />\n                    <PrivateRoutes\n                      path=\"/matter-detail\"\n                      component={MatterDetail}\n                    />\n                    <PrivateRoutes\n                      path=\"/create-matter\"\n                      component={NewMatter}\n                    />\n\n                    <PrivateRoutes path=\"/invoices\" component={Invoice} />\n                    <PrivateRoutes\n                      path=\"/create-invoice\" \n                      component={CreateInvoice}\n                    />\n                    <PrivateRoutes path=\"/recive-invoice\" component={Payment} />\n\n                    {/* <PrivateRoutes path=\"/create-user\" component={CreateUser} /> */}\n                    <PrivateRoutes path=\"/users\" component={User} />\n                    <PrivateRoutes path=\"/user-roles\" component={ManageRole} />\n                    <PrivateRoutes\n                      path=\"/user-groups\"\n                      component={ManageUserGroup}\n                    />\n\n                    <PrivateRoutes\n                      path=\"/manage-categories\"\n                      component={ManageCategory}\n                    />\n                    <PrivateRoutes\n                      path=\"/ledger-documents\"\n                      component={LedgerDoc}\n                    />\n                    <PrivateRoutes path=\"/time\" component={Time} />\n                    <PrivateRoutes path=\"/time-list\" component={TimeList} />\n                    <PrivateRoutes path=\"/ledgers\" component={Ledger} />\n                    <PrivateRoutes\n                      path=\"/ledger-list\"\n                      component={LedgerTImeList}\n                    />\n                    <PrivateRoutes\n                      path=\"/activity-list\"\n                      component={LedgerActivity}\n                    />\n\n                    <PrivateRoutes path=\"/tasks\" component={Tasks} />\n                    <PrivateRoutes path=\"/create-task\" component={CreateTask} />\n                    <PrivateRoutes path=\"/view-tasks\" component={ViewTasks} />\n\n                    <PrivateRoutes\n                      path=\"/employee-search\"\n                      component={Employee}\n                    />\n\n                    <PrivateRoutes path=\"/templates\" component={Templates} />\n                    <PrivateRoutes path=\"/contact\" component={Contact} />\n                  </Switch>\n                </Layout>\n              </Router>\n            </AlertProvider>\n          </ThemeProvider>\n        </UserProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { Box } from \"@mui/material\";\n// import NumberFormat from \"react-number-format\";\n\nexport const Appointments = () => {\n  const options = {\n    chart: {\n      type: \"bar\",\n      height: 500,\n    },\n    series: [\n      {\n        data: [\n          {\n            x: \"Zoom\",\n            y: 150,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Phone\",\n            y: 250,\n            fillColor: \"#546E7A\",\n            strokeColor: \"#546E7A\",\n          },\n          {\n            x: \"In Person\",\n            y: 500,\n            fillColor: \"#f48024\",\n            strokeColor: \"#f48024\",\n          },\n          {\n            x: \"Met\",\n            y: 300,\n            fillColor: \"#13d8aa\",\n            strokeColor: \"#13d8aa\",\n          },\n          {\n            x: \"Rescheduled\",\n            y: 125,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Canceled\",\n            y: 30,\n            fillColor: \"#A5978B\",\n            strokeColor: \"#A5978B\",\n          },\n        ],\n      },\n    ],\n\n    options: {\n      plotOptions: {\n        bar: {\n          barHeight: \"50%\",\n          borderRadius: 4,\n\n          horizontal: true,\n          dataLabels: {\n            position: \"bottom\",\n          },\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      title: {\n        text: \"Appointments\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n    },\n    xaxis: {\n      style: {\n        fontSize: \"20px\",\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={options.options}\n          series={options.series}\n          height=\"300\"\n          type=\"bar\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\nexport const Marketing = () => {\n  const config = {\n    series: [\n      {\n        name: \"Google\",\n        data: [10, 51, 35, 41, 29, 62, 99, 41, 18],\n      },\n      {\n        name: \"Youtube\",\n        data: [10, 80, 35, 41, 99, 62, 79, 21, 68],\n      },\n      {\n        name: \"Website\",\n        data: [60, 21, 45, 41, 89, 62, 59, 71, 98],\n      },\n    ],\n    options: {\n      chart: {\n        height: 250,\n        toolbar: {\n          show: false,\n        },\n      },\n\n      legend: {\n        position: \"top\",\n        horizontalAlign: \"right\",\n        onItemHover: {\n          highlightDataSeries: true,\n        },\n        labels: {\n          colors: \"#dddddd\",\n          useSeriesColors: true,\n        },\n      },\n\n      dataLabels: {\n        enabled: false,\n      },\n\n      stroke: {\n        curve: \"smooth\",\n        width: 2,\n      },\n\n      title: {\n        text: \"Marketing\",\n        align: \"left\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      xaxis: {\n        categories: [\n          \"31/01\",\n          \"01/02\",\n          \"02/03\",\n          \"03/04\",\n          \"31/05\",\n          \"04/06\",\n          \"06/07\",\n          \"02/08\",\n          \"09/09\",\n        ],\n        style: {\n          fontSize: \"20px\",\n        },\n      },\n\n      yaxis: {},\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={config.options}\n        series={config.series}\n        height=\"250\"\n        type=\"line\"\n      />\n    </Fragment>\n  );\n};\nexport const Calls = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 300,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Calls\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Inbound\", \"Outbound\", \"Sales\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const Email = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total Emails\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Email\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Send\", \"Open\", \"Delete\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueInActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueInCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 460;\n      case \"weekly\":\n        return 3254;\n      case \"monthly\":\n        return 32564;\n      case \"quarterly\":\n        return 130256;\n      case \"yearly\":\n        return 521024;\n      case \"range\":\n        return 1500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue In\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueInCards);\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueOutActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueOutCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 35;\n      case \"weekly\":\n        return 240;\n      case \"monthly\":\n        return 4520;\n      case \"quarterly\":\n        return 18080;\n      case \"yearly\":\n        return 72320;\n      case \"range\":\n        return 500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue out\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueOutCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { newCustomerActive } from \"../../../../redux/features/sidebarSlice\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const NewCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 2;\n      case \"weekly\":\n        return 23;\n      case \"monthly\":\n        return 69;\n      case \"quarterly\":\n        return 200;\n      case \"yearly\":\n        return 610;\n      case \"range\":\n        return 10;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              New Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 23 : 69}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={23}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={69}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={15}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={50}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={200}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(newCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </IconButton>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(NewCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Button,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { lostCustomerActive } from \"../../../../redux/features/sidebarSlice\";\n\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const LostCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 0;\n      case \"weekly\":\n        return 0;\n      case \"monthly\":\n        return 3;\n      case \"quarterly\":\n        return 6;\n      case \"yearly\":\n        return 15;\n      case \"range\":\n        return 3;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              Lost Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 0 : 3}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={3}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={1}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={6}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <Button\n                  component={IconButton}\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(lostCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </Button>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(LostCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport { Circle } from \"@mui/icons-material\";\nimport MAP_STYLE from \"../../../utils/style.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapboxWorker from \"mapbox-gl/dist/mapbox-gl-csp-worker\";\nmapboxgl.workerClass = MapboxWorker;\n\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\";\n\nconst Map = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 38.7577,\n    longitude: -95.4376,\n    zoom: 3,\n  });\n\n  return (\n    <Fragment>\n      <ReactMapGL\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle={MAP_STYLE}\n        onViewportChange={setViewport}\n        mapboxApiAccessToken={\n          \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\"\n        }\n        style={{ zIndex: 200 }}\n      >\n        <Marker\n          latitude={40.7128}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={47.6062}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={41.8781}\n          longitude={-87.6298}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n      </ReactMapGL>\n    </Fragment>\n  );\n};\n\nexport default Map;\n","/** @format */\n\nimport {\n  Paper,\n  Box,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  TableCell,\n} from \"@mui/material\";\nimport React, { Fragment } from \"react\";\n\nconst NewAccounts = () => {\n  return (\n    <Fragment>\n      <Box p={1}>\n        <Typography color=\"blue\">New Accounts</Typography>\n        <TableContainer>\n          <Table fullWidth>\n            <TableHead color=\"blue\">\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"blue\">Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewAccounts;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Box, Grid, Typography } from \"@mui/material\";\n\nimport NumberFormat from \"react-number-format\";\n\nconst EmpOversite = () => {\n  return (\n    <Fragment>\n      <Typography color=\"blue\" sx={{ fontSize: \"1.1rem\" }}>\n        Employee Oversite\n      </Typography>\n      <Typography variant=\"h3\" component=\"h3\" sx={{ fontSize: \"1.8rem\" }}>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.1rem\" }}>\n        Employees logged in\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"purple\" }}> Total ticket issued:</span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"seagreen\" }}>Trouble ticket Resolved: </span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n    </Fragment>\n  );\n};\n\nexport default EmpOversite;\n","/** @format */\n\nimport React from \"react\";\n\nimport {\n  IconButton,\n  Typography,\n  Card,\n  CardContent,\n  CardActions,\n} from \"@mui/material\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { Appointments, Calls, Marketing, Email } from \"../Charts\";\n\nimport RevenueInCards from \"../Cards/RevenueIn\";\nimport RevenueOutCards from \"../Cards/RevenueOut\";\nimport NewCustomerCards from \"../Cards/NewCustomer\";\nimport LostCustomerCards from \"../Cards/LostCustomer\";\n\nimport Map from \"../Map\";\n\nimport NewAccounts from \"../NewAccounts\";\nimport EmpOversite from \"../EmpOversite\";\n\nconst widgetNames = {\n  a: <RevenueInCards />,\n  b: <RevenueOutCards />,\n  c: <NewCustomerCards />,\n  d: <LostCustomerCards />,\n  e: <NewAccounts />,\n  f: <Map />,\n  g: <EmpOversite />,\n  h: <Calls />,\n  i: <Appointments />,\n  j: <Marketing />,\n  k: <Email />,\n};\n\nexport default function Widget({ id, onRemoveItem }) {\n  return (\n    <Card\n      sx={{\n        width: \"100%\",\n        height: \"100%\",\n        paddingTop: \"0.5rem\",\n        padding: \"1rem\",\n      }}\n    >\n      <CardActions>\n        <IconButton\n          aria-label=\"delete\"\n          onClick={() => onRemoveItem(id)}\n          sx={{ position: \"fixed\", right: \"16px\" }}\n        >\n          <CloseIcon fontSize=\"small\" />\n        </IconButton>\n      </CardActions>\n      {widgetNames[id]}\n    </Card>\n  );\n}\n"],"sourceRoot":""}