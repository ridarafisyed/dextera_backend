{"version":3,"sources":["components/Tabs/tabs.module.css","asserts/login_light.png","asserts/signup_light.png","reducers/profile.js","reducers/errors.js","reducers/messages.js","reducers/auth.js","reducers/data.js","redux/features/tabSlice.js","reducers/index.js","actions/types.js","store.js","actions/messages.js","actions/auth.js","context/useToggle.jsx","styles/styles.jsx","components/Navbars/Navbar.jsx","actions/data.js","components/Chat/Chat.jsx","components/Dashboard/Calender.jsx","components/Tasks/ViewTasks.jsx","components/Favorite/Favorites.jsx","components/Navbars/NavbarSec.jsx","components/Sidebar/TestingSidebar.jsx","components/Sidebar/Sidebar.jsx","components/Footer/Footer.jsx","hocs/Layout.js","utils/PrivateRoute.js","context/User/reducer.js","context/User/index.js","hocs/Theme.js","components/Dashboard/Admin/DashBoard.jsx","components/Tabs/Tabs.jsx","components/Invoice/CreateInvoice.jsx","components/Invoice/Payment.jsx","components/Invoice/Filters.jsx","components/Invoice/InvoiceList.jsx","components/Invoice/index.jsx","api/MatterApi.js","utils/ActionAlerts.js","components/Matter/MatterList.jsx","components/Matter/Cards.jsx","components/Matter/Calendar.jsx","components/Matter/Filters.jsx","components/Matter/MatterCards.jsx","components/Matter/MatterListLong.jsx","components/Matter/NewMatter.jsx","components/Matter/MatterDetail.jsx","components/Matter/index.jsx","components/Ledger/LedgerActivity.jsx","components/Ledger/Fillters.jsx","components/Ledger/LedgerCards.jsx","components/Ledger/LedgerTImeList.jsx","components/Ledger/LedgerDashbard.jsx","components/Ledger/LedgerDoc.jsx","components/Ledger/Time.jsx","components/Ledger/index.jsx","components/Category/SubCategory.jsx","components/Category/Category.jsx","components/Category/Classification.jsx","components/Category/ManageCategory.jsx","components/Contact/Contact.jsx","components/Profile/Profile.js","components/Tasks/CreateTask.jsx","components/Tasks/index.jsx","components/Dashboard/UserRoles/AdminDashboard.jsx","components/Dashboard/ProgressBar.jsx","components/Dashboard/Tasks.jsx","components/Dashboard/Cards.jsx","components/Dashboard/Client/DashBoard.jsx","components/Template/Templates.jsx","components/Dashboard/UserRoles/ClientDashboard.jsx","components/Dashboard/Lawyer/Chart.jsx","components/Dashboard/Lawyer/DashBoard.jsx","components/Dashboard/UserRoles/LawyerDashboard.jsx","components/Dashboard/Firm/Charts.jsx","components/Dashboard/Firm/DashBoard.jsx","components/Dashboard/UserRoles/FirmDashboard.jsx","containers/Home.js","containers/Auth/Login.js","containers/Auth/Signup.js","components/Profile/Company.jsx","containers/Matters/Matters.jsx","components/User/ManageUser.jsx","components/User/ManageUserGroup.jsx","components/User/RoleFuncions.jsx","components/User/UserRole.jsx","components/User/index.jsx","components/Ledger/TimeList.jsx","components/Employee/Search.jsx","components/Employee/Result.jsx","components/Employee/Saved.jsx","components/Employee/index.jsx","App.jsx","index.js","components/Dashboard/Admin/Charts.jsx","components/Dashboard/Admin/Cards/RevenueIn.jsx","components/Dashboard/Admin/Cards/RevenueOut.jsx","components/Dashboard/Admin/Cards/NewCustomer.jsx","components/Dashboard/Admin/Cards/LostCustomer.jsx","components/Dashboard/Admin/Map.jsx","components/Dashboard/Admin/NewAccounts.jsx","components/Dashboard/Admin/EmpOversite.jsx","components/Dashboard/Admin/DashboardLayout/Widget.jsx","redux/features/sidebarSlice.js","asserts/logo_white copy.png","components/Dashboard/Admin/DashboardLayout/DashboardContent.jsx"],"names":["module","exports","tabs","current","content","__webpack_require__","p","initialState","profile","msg","status","token","localStorage","getItem","isAuthenticated","isLoading","user","isWeekly","tabSlice","createSlice","name","reducers","addTab","state","action","newTask","id","payload","tab","push","removeTab","filter","item","actions","combineReducers","auth","arguments","length","undefined","type","Object","objectSpread","setItem","removeItem","errors","messages","data","sidebar","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","persistor","persistStore","returnErrors","logout","dispatch","getState","axios","post","concat","process","tokenConfig","then","res","catch","err","response","config","headers","Content-Type","useToggle","_useState","useState","_useState2","slicedToArray","isToggled","setIsToggled","useCallback","SideBarBtn","styled","Button","_ref","theme","fontSize","textTransform","color","textAlign","width","height","margin","borderColor","padding","&:hover","backgroundColor","palette","primary","main","&:visited","SecNavbar","_ref2","boxShadow","position","FooterBar","_ref3","bottom","left","alignContent","FooterLink","Link","_ref4","fontFamily","fontWeight","textDecoration","marginTop","FooterButton","_ref5","marginX","paddingX","LinkButton","_ref6","borderRadius","cursor","Search","_ref7","marginRight","spacing","marginLeft","SearchIconWrapper","_ref8","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","_ref9","& .MuiInputBase-input","defineProperty","paddingLeft","transition","transitions","create","breakpoints","up","MainSearch","_ref10","MainSearchIconWrapper","_ref12","StyledMainInputBase","_ref13","connect","updateIsWeekly","Intl","DateTimeFormat","resolvedOptions","timeZone","_useState3","Date","_useState4","currentTime","_useState5","_useState6","dateValue","setDateValue","_useToggle","_useToggle2","_useState7","_useState8","settingAcnchorEl","_useState9","Boolean","_useState10","redirect","_React$useState","React","_React$useState2","anchorEl","_React$useState3","_React$useState4","checked","setChecked","handleChange","event","target","react_default","a","createElement","react","Box","sx","flexGrow","component","AppBar","border","Toolbar","Typography","noWrap","xs","sm","react_router_dom","to","src","Logo","alt","style","Search_default","placeholder","inputProps","aria-label","md","variant","FormControl","InputLabel","Select","size","labelId","value","label","onChange","e","MenuItem","LocalizationProvider","dateAdapter","AdapterDateFns","DateRangePicker","startText","endText","newValue","renderInput","startProps","endProps","TextField","mx","react_number_format_es","displayType","thousandSeparator","prefix","ml","mr","toLocaleTimeString","hour","minute","hour12","Switch","defaultChecked","transform","react_router","ChatHistory","Chip","avatar","Avatar","float","Chatting","Chat_ChatHistory","& .MuiTextField-root","m","endIcon","Send_default","Calender","setValue","tasks","Paper","Grid","container","lg","LocalizationProvider_LocalizationProvider","StaticDatePicker","shouldDisableDate","isWeekend","handleOnChange","params","map","task","ViewTasks","Divider","my","Favorites","List","ListItem","disablePadding","ListItemButton","ListItemIcon","Star","ListItemText","href","openFav","setOpenFav","handleCloseFav","openCal","setOpenCal","handleCloseCal","openChat","setOpenChat","handleCloseChat","useHistory","username","is_firm","is_lawyer","is_client","localuser","setLocalUser","useEffect","_useState11","_useState12","_useState13","_useState14","setSettingAcnchorEl","_useState15","_useState16","settingAcnchorEl2","setSettingAcnchorEl2","open","openSetting2","openSetting","handleClose2","handleClick","currentTarget","handleClose","useDispatch","IconButton","onClick","anchorOrigin","vertical","horizontal","Message","Dialog","Validate","onClose","aria-labelledby","aria-describedby","right","DialogTitle","DialogContent","Chat","DialogActions","pathname","EmailRounded","CalendarToday","maxWidth","fullWidth","Dashboard_Calender","aria-controls","aria-expanded","aria-haspopup","CheckBox","Menu","MenuListProps","TransitionComponent","Fade","Favorite_Favorites","autoFocus","NotificationAdd","Person","Settings","Controls","px","AddCircle","Receipt","FileCopy","MoneyOff","esm_Task","Work","AssignmentTurnedIn","Marketing","useSelector","marketingActive","marketing","emailsActive","emails","Mail","HumanResources","manageUserActive","manageUser","manageRoleActive","manageRole","manageGroupActive","manageGroup","Group","RevenueControls","revenueInActive","revenueIn","revenueOutActive","revenueOut","AccountControls","newCustomerActive","newCustomer","lostCustomerActive","lostCustomer","newAccountActive","newAccount","mapActive","EmployeeOversite","empOversiteActive","empOversite","callsActive","calls","Phone","appointmentActive","appointment","accordionData","tiles","TestingSidebar_Controls","TestingSidebar_HumanResources","TestingSidebar_RevenueControls","TestingSidebar_AccountControls","TestingSidebar_Marketing","TestingSidebar_EmployeeOversite","TestingSidebar","accordions","updateAccordions","mt","react_beautiful_dnd_esm","onDragEnd","result","destination","items","Array","from","_items$splice","splice","source","index","reorderedItem","droppableId","provided","assign","className","droppableProps","ref","innerRef","draggableId","Accordion","draggableProps","dragHandleProps","AccordionSummary","expandIcon","ExpandMore_default","align","AccordionDetails","Stack","elevation","overflowY","Sidebar_TestingSidebar","Footer","setOpen","children","sidebarToggle","useTheme","drawerOpen","setDrawerOpen","openPopover","descriptionElementRef","useRef","descriptionElement","focus","contianer","rowSpacing","columnSpacing","Navbars_NavbarSec","Navbars_Navbar","direction","wrap","components_Sidebar_Sidebar","isDisplay","top","components_Footer_Footer","Fab","zIndex","esm_Chat","Popover","transformOrigin","rest","objectWithoutProperties","active","UserContext","createContext","UserProvider","_React$useReducer","useReducer","_React$useReducer2","Provider","createTheme","mode","error","warning","success","contrastThreshold","tonalOffset","typography","htmlFontSize","DashBoard","DashboardContent","Tabs","props","activeTab","setActiveTab","styles","startIcon","MoreVert","newActiveTab","preventDefault","one","CreateInvoice","approvel","setApprovel","matter","contact","billable","date_range","create_date","due_date","template","invoice_no","discount","submit","invoiceData","setInvoiceData","dateRange","setDateRange","onSubmit","autoComplete","FormControlLabel","control","Checkbox","varient","DateRangePicker_DateRangePicker","calendars","InputLabelProps","shrink","TableContainer","Table","TableHead","TableRow","TableCell","PaymentPlan","payment_no","due","amount","late_fee","total_due","payment","posted","method","paymentData","mb","TableBody","paddingInline","InvoicePayment","tax","interest","time","hard","soft","total","Payment","isPlan","setIsPlan","payment_type","date","retainer","menu","bank_account","payment_method","RadioGroup","row","defaultValue","Radio","Payment_PaymentPlan","Payment_InvoicePayment","Filters","invoiceToggle","setInvoiceToggle","_useToggle3","_useToggle4","paymentToggle","setPaymentToggle","_useToggle5","_useToggle6","paid","setPaid","age","setAge","& .MuiFormControl-root","DialogContentText","Invoice_CreateInvoice","Invoice_Payment","styles_Search","styles_SearchIconWrapper","styles_StyledInputBase","InvoiceList","Invoice_Filters","Index","Invoice_InvoiceList","CONFIG","Accept","ActionAlerts","Alert","severity","TotalDays","date1","date2","dt1","dt2","Math","floor","UTC","getFullYear","getMonth","getDate","GetDate","MatterList","setTasks","setStatus","setLoading","redTask","setRedTask","greenTask","setGreenTask","yellowTask","setYellowTask","myTask","setMyTask","get","statusText","FormGroup","Cards","Card","minWidth","CardContent","gutterBottom","Calendar","Box_Box","MatterCards","bgcolor","MatterListLong","setMatters","console","log","NewMatter","mask","openDate","setOpenDate","whenDate","setWhenDate","closeDate","setCloseDate","totalDays","setTotalDays","matter_name","matter_type","matter_source","matter_status","assign_to","assign_by","billing_rate","alerts","jurisdiction","status_limitaion","opposing_counsel","where","involved","witnesses","narrative","matterData","setMatterData","days","open_date","close_date","when","total_days","body","JSON","stringify","ActionAlerts_ActionAlerts","message","min","disabled","step","DatePicker","inputFormat","multiline","rows","Save_default","MatterTask","components","Activities","MatterDetail","MatterDetail_Activities","MatterDetail_MatterTask","MatterDetail_Cards","Matters","Matter_Filters","Matter_MatterCards","Matter_MatterListLong","MatterDashboard","Matter_MatterList","Matter_Calendar","Matter_Cards","components_Tabs_Tabs","Matter_MatterDashboard","Matter_Matters","Matter_NewMatter","Matter_MatterDetail","LedgerActivity","setActivityData","bgColor","Fillters","billedby","setBilledby","setFilter","LedgerCards","f","decimalScale","fixedDecimalScale","LedgerTImeList","setLedgerData","LegderDashbard","Ledger_LedgerCards","Ledger_Fillters","Ledger_LedgerTImeList","LedgerDoc","minHeight","Time","pickDate","setPickDate","timeToggle","setTimeToggle","setBillable","setTime","category","sub_category","unit","qty","rate","file","detail","bill_by","note","timeData","setTimeData","labelPlacement","FormLabel","format","customInput","onValueChange","LedgerDashbard","Ledger_LedgerActivity","Ledger_LedgerDoc","Ledger_Time","SubCategory","subCategory","setSubCategory","loading","formData","setFormData","FetchData","handleSubmit","required","delete","Clear_default","Category","setCategory","setError","Classification","classification","setClassification","ManageCategory","components_Category_Category","Category_SubCategory","Category_Classification","Contact","_React$createElement","_React$createElement2","_React$createElement3","_React$createElement4","clientNo","setClientNo","dob","setDob","ssn","setSsn","mobileNo","setMobileNo","homeNo","setHomeNo","officeNo","setOfficeNo","faxNo","setFaxNo","otherNo","setOtherNo","_useState17","_useState18","zip","setZip","_useState19","_useState20","plus4","setPlus4","_useState21","_useState22","zip2","setZip2","_useState23","_useState24","plus42","setPlus42","_useState25","company_name","website","ger_email","billing_email","street","suite","city","f_name","l_name","email_1","email_2","email_3","street2","suite2","city2","state2","office","team","member","relation","_useState26","contactData","setContactData","persist","thousandsGroupStyle","autoWidth","gradYear","setGradYear","barDate","setBarDate","underGradYear","setUnderGradYear","phoneNo","setPhoneNo","barNo","setBarNo","practiceTime","setPracticeTime","longestTenure","setLongestTenure","averageTenure","setAverageTenure","currentTenure","setCurrentTenure","email","mobile","phone","language","locate","search_active","law_school","grad_year","bar_admit_date","undergrad_school","undergrad_area","undergrad_year","bar_no","admitted_practice","practice_time","longest_tenure","average_tenure","current_tenure","past_bar_companies_no","primary_area","TabContext","patch","borderBottom","TabList","Tab","TabPanel","KeyboardArrowRight_default","CreateTask","dueDate","setDueDate","bill","setBill","isPrivate","setIsPrivate","setFile","matter_id","matter_contact","filename","taskData","setTaskData","& .MuiSelect-root","due_at","is_billable","is_private","Tasks_ViewTasks","Tasks_CreateTask","Invoice","Matter","Ledger","Category_ManageCategory","components_Contact_Contact","components_Profile_Profile","Tasks","invoice","ledger","favorite","AdminDashboard","tabList","wordEntered","setWordEntered","handleChangeSearch","renderTabs","icon","iconPosition","esm_Close","Admin_DashBoard","noValidate","Close_default","ProgressBar","progress","paddingRight","LinearProgress","randomDate","start","end","getDateTime","getTime","random","toLocaleDateString","getHours","getMinutes","Task","LawyerCards","Fragment","postfix","FirmCards","CustomerCards","Cards_CustomerCards","Dashboard_Tasks","Dashboard_ProgressBar","Templates","ClientDashboard","Client_DashBoard","Template_Templates","PieChart","series","options","chart","plotOptions","pie","donut","dataLabels","enabled","formatter","val","title","text","horizontalAlign","colors","labels","legend","show","dropShadow","useSeriesColors","onItemClick","toggleDataSeries","seriesName","opts","w","globals","seriesIndex","react_apexcharts_min_default","Chart2","radialBar","startAngle","endAngle","track","background","hollow","fill","gradient","shade","gradientToColors","stops","BarChart","stacked","bar","stroke","xaxis","categories","yaxis","tooltip","y","opacity","offsetX","Cards_LawyerCards","Chart_PieChart","Chart_Chart2","Chart_BarChart","LawyerDashboard","Lawyer_DashBoard","Chart","BarChart2","columnWidth","distributed","BarChart3","barHeight","textAnchor","opt","dataPointIndex","floating","x","Cards_FirmCards","Charts_Chart2","Charts_Chart","Charts_BarChart","Charts_BarChart2","Charts_BarChart3","FirmDashboard","Firm_DashBoard","UserRoles_AdminDashboard","UserRoles_FirmDashboard","UserRoles_LawyerDashboard","UserRoles_ClientDashboard","dashboardRedirect","login","password","LoginSuccess","backgroundImage","BackgroundImage","backgroundRepeat","t","grey","backgroundSize","backgroundPosition","square","flexDirection","LockOutlined_default","minLength","register","accountCreated","setAccountCreated","isFirm","setIsFirm","first_name","last_name","re_password","Company","m_name","c_email","role","time_zone","group","job_title","ext","home","work_no","phone_ext","userData","setUserData","p_email","& .MuiButton-root","ManageUser","isActive","setIsActive","roles","setRoles","setRole","setGroup","groups","setGroups","loading2","setLoading2","rate_type","select","ManageUserGroup","setLoadingUser","RoleFuncions","overflowX","UserRole","User_RoleFuncions","User_ManageUser","User_ManageUserGroup","User_UserRole","TimeList","practice_area","undergrad_study","lamguages","admitted_state","relocate","searchData","setSearchData","Result","Saved","pickTime","setPickTime","bar_adm_year","mail_add","link","notes","jobData","setJobData","TimePicker","Employee_Search","Employee_Result","Employee_Saved","App","es","integration_react","User_UserProvider","ThemeProvider","react_alert","AlertTemplate","timeout","Layout","path","Login","Signup","PrivateRoute","exact","Home","Profile","User","Employee","ReactDOM","render","StrictMode","CssBaseline","src_App","document","getElementById","Appointments","fillColor","strokeColor","toolbar","onItemHover","highlightDataSeries","curve","Calls","lable","Email","Typography_Typography","listStyleType","mapboxgl","workerClass","MapboxWorker","Map","latitude","longitude","zoom","viewport","setViewport","esm","mapStyle","MAP_STYLE","onViewportChange","mapboxApiAccessToken","offsetLeft","offsetTop","Circle","NewAccounts","EmpOversite","d","__webpack_exports__","Widget","useStyles","makeStyles","root","header","spacer","widgetNames","RevenueIn","b","RevenueOut","c","NewCustomer","LostCustomer","Admin_NewAccounts","Admin_Map","g","Admin_EmpOversite","h","Charts_Calls","i","Charts_Appointments","j","Charts_Marketing","k","Charts_Email","onRemoveItem","classes","_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__","sidebarSlice","originalItems","initialLayouts","withSize","refreshMode","refreshRate","fnCall","_home_supersis03_Projects_Dextera_Phase_3_dextera_project_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","ls","global","parse","getFromLS","layouts","setLayouts","itemId","displayItemList","react__WEBPACK_IMPORTED_MODULE_3___default","data-grid","Infinity","_Widget__WEBPACK_IMPORTED_MODULE_8__","react_grid_layout__WEBPACK_IMPORTED_MODULE_4__","xxs","cols","rowHeight","onLayoutChange","_","allLayouts"],"mappings":"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","file":"static/js/main.01fc1f9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"tabs_tabs__2iP2q\",\"current\":\"tabs_current__UH0Eq\",\"content\":\"tabs_content__Vh0J0\"};","module.exports = __webpack_public_path__ + \"static/media/login_light.a12d3677.png\";","module.exports = __webpack_public_path__ + \"static/media/signup_light.181ee8a6.png\";","/** @format */\n\nimport { GET_PROFILE } from \"../actions/types\";\n\nconst initialState = {\n  profile: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {\n  msg: {},\n  status: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { CREATE_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CREATE_MESSAGE:\n      return (state = action.payload);\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload,\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport {\n  GET_IS_WEEKLY,\n  MONTLY_REVENUE,\n  WEEKLY_REVENUE,\n} from \"../actions/types\";\n\nconst initialState = {\n  isWeekly: \"daily\",\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_IS_WEEKLY:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case MONTLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case WEEKLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst tabSlice = createSlice({\n  name: \"tab\",\n  initialState: [],\n  reducers: {\n    addTab: (state, action) => {\n      const newTask = {\n        id: action.payload.id,\n        name: action.payload.tab,\n      };\n      state.push(newTask);\n    },\n    removeTab: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n  },\n});\n\nexport const { addTab, removeTab } = tabSlice.actions;\nexport default tabSlice.reducer;\n","/** @format */\n\nimport { combineReducers } from \"redux\";\n// import leads from \"./leads\";\nimport profile from \"./profile\";\nimport errors from \"./errors\";\nimport messages from \"./messages\";\nimport auth from \"./auth\";\nimport data from \"./data\";\nimport sidebar from \"../redux/features/sidebarSlice\";\nimport tabs from \"../redux/features/tabSlice\";\n\nexport default combineReducers({\n  auth,\n  profile,\n  errors,\n  messages,\n  data,\n  sidebar,\n  tabs,\n});\n","/** @format */\n\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const DELETE_PROFILE = \"DELETE_PROFILE\";\nexport const ADD_PROFILE = \"ADD_PROFILE\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const CLEAR_PROFILES = \"CLEAR_PROFILES\";\nexport const MONTLY_REVENUE = \"GET_MONTLY_REVENUE\";\nexport const WEEKLY_REVENUE = \"GET_WEEKLY_REVENUE\";\nexport const GET_IS_WEEKLY = \"GET_IS_WEEKLY\";\nexport const UPDATE_IS_WEEKLY = \"UPDATE_IS_WEEKLY\";\n\nexport const CREATE_MEMBER_SUCCESS = \"CREATE_MEMBER_SUCCESS\";\nexport const CREATE_MEMBER_FAIL = \"CREATE_MEMBER_FAIL\";\n\nexport const GET_MEMBER_SUCCESS = \"GET_MEMBER_SUCCESS\";\nexport const GET_MEMBER_FAIL = \"GET_MEMBER_FAIL\";\n\nexport const GET_TIMEZONE_SUCCESS = \"GET_TIMEZONE_SUCCESS\";\nexport const GET_TIMEZONE_FAIL = \"GET_TIMEZONE_FAIL\";\nexport const GET_CURRENT_TIME_SCUSSESS = \"GET_CURRENT_TIME_SCUSSESS\";\nexport const GET_CURRENT_TIME_FAIL = \"GET_CURRENT_TIME_FAIL\";\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\n// export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\n// export const SIGNUP_FAIL = 'SIGNUP_FAIL';\n// export const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\n// export const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\n// export const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\n// export const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\n// export const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\n// export const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\n// export const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\n// export const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\n// export const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\n// export const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\n// export const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\n// export const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\n// export const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\n// export const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\n// export const LOGOUT = 'LOGOUT';\n\n// export const PROFILE_CREATED_SUCCESS = 'PROFILE_CREATED_SUCCESS';\n// export const PROFILE_CREATED_FAIL = 'PROFILE_CREATED_FAIL';\n\n// export const PROFILE_LOADED_SUCCESS = 'PROFILE_LOADED_SUCCESS';\n// export const PROFILE_LOADED_FAIL = 'PROFILE_LOADED_FAIL';\n\n// export const PROFILE_UPDATE_SUCCESS = 'PROFILE_UPDATE_SUCCESS';\n// export const PROFILE_UPDATE_FAIL = 'PROFILE_UPDATE_FAIL';\n","/** @format */\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./reducers\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({ reducer: persistedReducer });\n\nexport const persistor = persistStore(store);\n\nexport default store;\n","/** @format */\n\nimport { CREATE_MESSAGE, GET_ERRORS } from \"./types\";\n\n// CREATE MESSAGE\nexport const createMessage = (msg) => {\n  return {\n    type: CREATE_MESSAGE,\n    payload: msg,\n  };\n};\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status },\n  };\n};\n","/** @format */\n\nimport axios from \"axios\";\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from \"./types\";\nimport { createMessage, returnErrors } from \"./messages\";\n\n// CHECK TOKEN & LOAD USER\nexport const loadUser = () => (dispatch, getState) => {\n  // User Loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get(\n      `${process.env.REACT_APP_API_URL}/user/auth/user`,\n      tokenConfig(getState),\n    )\n    .then((res) => {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_ERROR,\n      });\n    });\n};\n\n// LOGIN USER\nexport const login = (username, email, password) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ username, password });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/user/auth/login`, body, config)\n    .then((res) => {\n      dispatch(createMessage({ LoginSuccess: \"Login Successful\" }));\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n      dispatch({});\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n    });\n};\n\n// REGISTER USER\nexport const register = ({ username, email, password }) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ username, email, password });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/user/auth/register`, body, config)\n    .then((res) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n    });\n};\n\n// LOGOUT USER\nexport const logout = () => (dispatch, getState) => {\n  axios\n    .post(\n      `${process.env.REACT_APP_API_URL}/user/auth/logout`,\n      null,\n      tokenConfig(getState),\n    )\n    .then((res) => {\n      dispatch({ type: \"CLEAR_LEADS\" });\n      dispatch({\n        type: LOGOUT_SUCCESS,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n    });\n};\n\n// Setup config with token - helper function\nexport const tokenConfig = (getState) => {\n  // Get token from state\n  const token = getState().auth.token;\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // If token, add to headers config\n  if (token) {\n    config.headers[\"Authorization\"] = `Token ${token}`;\n  }\n\n  return config;\n};\n","/** @format */\n\nimport { useState, useCallback } from \"react\";\n\nexport const useToggle = (initialState) => {\n  const [isToggled, setIsToggled] = useState(initialState);\n\n  // put [setIsToggled] into the useCallback's dependencies array\n  // this value never changes so the callback is not going to be ever re-created\n  const toggle = useCallback(\n    () => setIsToggled((state) => !state),\n    [setIsToggled],\n  );\n\n  return [isToggled, toggle];\n};\n","/** @format */\n\n// import * as React from 'react';\nimport { styled } from \"@mui/material/styles\";\nimport { Link } from \"react-router-dom\";\nimport { Button, InputBase } from \"@mui/material\";\n\nexport const SideBarBtn = styled(Button)(({ theme }) => ({\n  fontSize: \"0.6em\",\n  textTransform: \"none\",\n  // color: theme.palette.primary.main,\n  color: \"#eee\",\n  textAlign: \"center\",\n  width: \"8em\",\n  height: \"8em\",\n  margin: \"0.7em\",\n  borderColor: \"#eee\",\n  padding: \"1em\",\n  \"&:hover\": {\n    backgroundColor: \"white\",\n    color: theme.palette.primary.main,\n  },\n  \"&:visited\": {\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport const SecNavbar = styled(\"nav\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  color: \"#eee\",\n  position: \"reletive\",\n  padding: \"0\",\n  margin: \"0\",\n  height: \"3.5rem\",\n  width: \"100%\",\n}));\n\nexport const FooterBar = styled(\"footer\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  color: \"#eee\",\n  position: \"fixed\",\n  bottom: \"0\",\n  left: \"0\",\n\n  margin: \"0\",\n  height: \"2.5rem\",\n  textAlign: \"center\",\n  alignContent: \"center\",\n  width: \"100%\",\n}));\n\nexport const FooterLink = styled(Link)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  fontSize: \"1rem\",\n  textTransform: \"uppercase\",\n  fontWeight: 500,\n  textDecoration: \"none\",\n  marginTop: \"0.7rem\",\n  padding: \" 2rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\nexport const FooterButton = styled(Button)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  fontSize: \"1rem\",\n  fontWeight: 500,\n  marginX: \"2rem\",\n  paddingX: \"3rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\n\nexport const LinkButton = styled(Link)(({ theme }) => ({\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  margin: \"0.7em\",\n  backgroundColor: theme.palette.primary.main,\n  borderColor: \"#2979ff\",\n  color: \"white\",\n  padding: \"0.65rem 1.2rem\",\n  borderRadius: \"0.5rem\",\n  \"&:hover\": {\n    backgroundColor: \"#1c54b2\",\n    cursor: \"pointer\",\n    color: \"white\",\n  },\n}));\n\nexport const Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#ddd\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"40%\",\n}));\n\nexport const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\nexport const MainSearch = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#eee\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(3),\n    width: \"auto\",\n  },\n}));\n\nexport const MainSearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledMainInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport NumberFormat from \"react-number-format\";\nimport { useToggle } from \"../../context/useToggle\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  ListSubheader,\n  TextField,\n} from \"@mui/material\";\nimport {\n  MainSearch,\n  MainSearchIconWrapper,\n  StyledMainInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Logo from \"../../asserts/logo_white copy.png\";\nimport { updateIsWeekly } from \"../../actions/data\";\n\nconst Navbar = ({\n  logout,\n  isAuthenticated,\n  user,\n  updateIsWeekly,\n  isWeekly,\n}) => {\n  let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const [today, setToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [dateValue, setDateValue] = useState([null, null]);\n\n  const timeFormater = () => {\n    if (checked) {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n    } else {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: false,\n      });\n    }\n  };\n  const [isChecked, setIsChecked] = useToggle(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOnChage = (e) => {\n    updateIsWeekly(e.target.value);\n  };\n\n  const logout_user = () => {\n    logout();\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Typography variant=\"h5\" component=\"h5\">\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          color=\"primary\"\n          style={{ marginRight: \"0.5rem\" }}\n        >\n          Expected Balance :\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">\n              Expected Balance\n            </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={isWeekly}\n              label=\"Expected Balance\"\n              onChange={handleOnChage}\n            >\n              <MenuItem value=\"daily\">Daily</MenuItem>\n              <MenuItem value=\"weekly\">Weekly</MenuItem>\n              <MenuItem value=\"monthly\">Monthly</MenuItem>\n              <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n              <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n              <MenuItem value=\"range\">Custom Range</MenuItem>\n              {isWeekly === \"range\" ? (\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              ) : null}\n            </Select>\n          </FormControl>\n        </Typography>\n        <NumberFormat\n          value={isWeekly ? 3254 : 32564}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix=\"$\"\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" ml={1} mr={1}>\n        {\" \"}\n        |{\" \"}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h5\">\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          defaultChecked\n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n    </Fragment>\n  );\n  return (\n    <Fragment>\n      <Box sx={{ flexGrow: 1, backgroundColor: \"white\" }} component=\"nav\">\n        <AppBar position=\"static\" color=\"transparent\" sx={{ border: \"none\" }}>\n          <Toolbar>\n            <Typography\n              noWrap\n              component=\"div\"\n              sx={{ display: { xs: \"none\", sm: \"block\" } }}\n            >\n              <Link to=\"/\">\n                <img\n                  src={Logo}\n                  alt=\"logo\"\n                  style={{ height: \"2rem\", width: \"auto\" }}\n                />\n              </Link>\n            </Typography>\n            <MainSearch>\n              <MainSearchIconWrapper>\n                <SearchIcon />\n              </MainSearchIconWrapper>\n              <StyledMainInputBase\n                placeholder=\"Search…\"\n                inputProps={{ \"aria-label\": \"search\" }}\n              />\n            </MainSearch>\n            <Box sx={{ flexGrow: 1 }} />\n            <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\n              {isAuthenticated ? authLinks() : guestLinks()}\n            </Box>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps, { logout, updateIsWeekly })(Navbar);\n","/** @format */\n\n/** @format */ // import axios from \"axios\";\n\nimport { GET_IS_WEEKLY, MONTLY_REVENUE, WEEKLY_REVENUE } from \"./types\";\n// GET LEADS\nexport const updateIsWeekly = (data) => (dispatch) => {\n  if (data) {\n    dispatch({\n      type: WEEKLY_REVENUE,\n      payload: data,\n    });\n  } else {\n    dispatch({\n      type: MONTLY_REVENUE,\n    });\n  }\n};\n\nexport const getIsWeekly = () => (dispatch) =>\n  dispatch({\n    type: GET_IS_WEEKLY,\n    // payload: this.state,\n  });\n","/** @format */\n\nimport { Box, Typography, Button, TextField, Chip } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport React, { Fragment } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\n\nconst ChatHistory = () => {\n  return (\n    <Typography>\n      <Box\n        p={2}\n        sx={{\n          border: \"1px solid lightgray\",\n          borderRadius: \"1rem\",\n        }}\n      >\n        <Chip\n          label=\"Hi\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          size=\"large\"\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip label=\"Hello\" variant=\"outlined\" avatar={<Avatar>M</Avatar>} />\n        <br />\n        <Chip\n          label=\"Message by M\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"Message by D\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"this is just a ui design\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{ marginTop: \"1rem\" }}\n        />\n        <br />\n        <Chip\n          label=\"the chat feature is not working at backend\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n\n        <br />\n      </Box>\n    </Typography>\n  );\n};\n\nconst Chatting = () => {\n  return (\n    <Fragment>\n      <ChatHistory />\n      <br />\n      <Box\n        component=\"form\"\n        sx={{\n          //   border: \"1px solid lightgray\",\n          //   borderRadius: \"1rem\",\n          \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n        }}\n      >\n        <TextField type=\"text\" size=\"small\" variant=\"outlined\" />\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          endIcon={<SendIcon />}\n          type=\"submit\"\n          sx={{\n            m: 1,\n          }}\n        >\n          Send\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Chatting;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport isWeekend from \"date-fns/isWeekend\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport StaticDatePicker from \"@mui/lab/StaticDatePicker\";\nimport { TextField, Box, Paper, Grid } from \"@mui/material\";\n\nconst Calender = () => {\n  const [value, setValue] = useState(new Date());\n  const [tasks, setTasks] = useState([]);\n\n  const handleOnChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <Box component={Paper} m={2}>\n      <Grid container>\n        {\" \"}\n        <Grid item lg={6} xs={12}>\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <StaticDatePicker\n              value={value}\n              shouldDisableDate={isWeekend}\n              onChange={(e) => {\n                handleOnChange(e);\n              }}\n              renderInput={(params) => <TextField {...params} />}\n            />\n          </LocalizationProvider>\n        </Grid>{\" \"}\n        <Grid item lg={6} xs={12}>\n          {tasks.length !== 0 ? (\n            tasks.map((task) => (\n              <li>\n                {task.id} - {task.name}\n              </li>\n            ))\n          ) : (\n            <h4> No record found</h4>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Calender;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Menu, MenuItem, Divider } from \"@mui/material\";\n\nconst ViewTasks = () => {\n  return (\n    <Fragment>\n      <MenuItem>Profile</MenuItem>\n      <MenuItem>Account</MenuItem>\n      <MenuItem>Setting</MenuItem>\n      <Divider sx={{ my: 0.5 }} />\n      <MenuItem>Logout</MenuItem>\n    </Fragment>\n  );\n};\n\nexport default ViewTasks;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nimport { Star } from \"@mui/icons-material\";\n\nconst Favorites = () => {\n  return (\n    <div>\n      <List>\n        <ListItem disablePadding>\n          <ListItemButton>\n            <ListItemIcon>\n              <Star sx={{ color: \"orange\" }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Favorite 1\" />\n          </ListItemButton>\n        </ListItem>\n        <ListItem disablePadding>\n          <ListItemButton component=\"a\" href=\"#simple-list\">\n            <ListItemIcon>\n              <Star sx={{ color: \"orange\" }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Favorite 2\" />\n          </ListItemButton>\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Favorites;\n","/** @format */\n/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport Chatting from \"../Chat/Chat\";\n\n// styling imports\nimport {\n  Box,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  Fade,\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { SecNavbar } from \"../../styles/styles\";\n\nimport {\n  Message,\n  EmailRounded,\n  CalendarToday,\n  CheckBox,\n  Person,\n  NotificationAdd,\n  Settings,\n  Star,\n  StarBorder,\n} from \"@mui/icons-material/\";\nimport { useToggle } from \"../../context/useToggle\";\nimport Calender from \"../Dashboard/Calender\";\nimport ViewTasks from \"../Tasks/ViewTasks\";\nimport Favorites from \"../Favorite/Favorites\";\nimport serverTime from \"../../utils/ServerTime\";\n\nconst NavbarSec = ({ logout, isAuthenticated, user }) => {\n  const [openFav, setOpenFav] = useState(false);\n\n  const handleClickOpenFav = () => {\n    setOpenFav(true);\n  };\n\n  const handleCloseFav = () => {\n    setOpenFav(false);\n  };\n  const [openTask, setOpenTask] = useState(false);\n\n  const handleClickOpenTask = () => {\n    setOpenTask(true);\n  };\n\n  const handleCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const [openCal, setOpenCal] = useState(false);\n\n  const handleClickOpenCal = () => {\n    setOpenCal(true);\n  };\n\n  const handleCloseCal = () => {\n    setOpenCal(false);\n  };\n\n  const [openChat, setOpenChat] = useState(false);\n\n  const handleClickOpenChat = () => {\n    setOpenChat(true);\n  };\n\n  const handleCloseChat = () => {\n    setOpenChat(false);\n  };\n\n  const history = useHistory();\n  const [isLogout, setIsLogout] = useToggle(false);\n  const today = new Date();\n  const time = today.toLocaleTimeString();\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n  const [redirect, setRedirect] = useState(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [settingAcnchorEl2, setSettingAcnchorEl2] = useState(null);\n\n  const [anchorEl2, setAnchorEl2] = React.useState(null);\n\n  const logout_user = () => {\n    logout();\n    setRedirect(true);\n  };\n\n  const open = Boolean(anchorEl);\n  const open2 = Boolean(anchorEl);\n\n  const userRoleChecker = () => {\n    switch (user.username) {\n      case \"admin\":\n        return \"Admin\";\n      case \"firm\":\n        return \"Firm\";\n      case \"lawyer\":\n        return \"Lawyer\";\n      default:\n        return \"Client\";\n    }\n  };\n\n  const openSetting2 = Boolean(settingAcnchorEl2);\n\n  const handleClick2 = (event) => {\n    setSettingAcnchorEl2(event.currentTarget);\n  };\n  const openSetting = Boolean(settingAcnchorEl);\n  const handleClose2 = () => {\n    setSettingAcnchorEl2(null);\n  };\n\n  const handleClick = (event) => {\n    setSettingAcnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setSettingAcnchorEl(null);\n  };\n  const dispatch = useDispatch();\n\n  return (\n    <Fragment>\n      <SecNavbar>\n        <Toolbar>\n          <Box component=\"div\" sx={{ flexGrow: 1 }}>\n            <IconButton\n              size=\"large\"\n              onClick={handleClickOpenChat}\n              sx={{\n                fontSize: \"2rem\",\n                color: \"#eee\",\n                \"&:hover\": {\n                  color: \"#fff\",\n                  backgroundColor: \"#7a4ebf\",\n                },\n              }}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n            >\n              <Message />\n            </IconButton>\n            <Dialog\n              Validate\n              open={openChat}\n              onClose={handleCloseChat}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n              sx={{\n                position: \"absolute\",\n                right: \"20px\",\n                bottom: \"150px\",\n              }}\n            >\n              <DialogTitle id=\"alert-dialog-title\">\n                {\"Chatting Application\"}\n              </DialogTitle>\n              <DialogContent>\n                <Chatting />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleCloseChat}>Close</Button>\n              </DialogActions>\n            </Dialog>\n\n            <IconButton\n              size=\"large\"\n              component={Link}\n              sx={{\n                fontSize: \"2rem\",\n                color: \"white\",\n                \"&:hover\": {\n                  color: \"white\",\n                  backgroundColor: \"#7a4ebf\",\n                },\n              }}\n              to={{\n                pathname:\n                  \"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=someone@gmail.com\",\n              }}\n              target=\"_blank\"\n            >\n              <EmailRounded />\n            </IconButton>\n\n            <IconButton\n              size=\"large\"\n              onClick={handleClickOpenCal}\n              sx={{\n                fontSize: \"2rem\",\n                color: \"white\",\n                \"&:hover\": {\n                  color: \"white\",\n                  backgroundColor: \"#7a4ebf\",\n                },\n              }}\n            >\n              <CalendarToday />\n            </IconButton>\n            <Dialog\n              Validate\n              open={openCal}\n              maxWidth=\"lg\"\n              fullWidth\n              onClose={handleCloseCal}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n              sx={{\n                position: \"absolute\",\n                right: \"20px\",\n                bottom: \"150px\",\n              }}\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Calender\"}</DialogTitle>\n              <DialogContent>\n                <Calender />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleCloseCal}>Close</Button>\n              </DialogActions>\n            </Dialog>\n            <IconButton\n              aria-label=\"more\"\n              id=\"long-button\"\n              aria-controls=\"long-menu\"\n              aria-expanded={openSetting2 ? \"true\" : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleClick2}\n              sx={{\n                fontSize: \"2rem\",\n                color: \"white\",\n                \"&:hover\": {\n                  color: \"white\",\n                  backgroundColor: \"#7a4ebf\",\n                },\n              }}\n            >\n              <CheckBox />\n            </IconButton>\n            <Menu\n              id=\"fade-menu\"\n              MenuListProps={{\n                \"aria-labelledby\": \"fade-button\",\n              }}\n              anchorEl={settingAcnchorEl2}\n              open={openSetting2}\n              onClose={handleClose2}\n              TransitionComponent={Fade}\n            >\n              <MenuItem onClick={handleClose2}>\n                Task 1: This is task one\n              </MenuItem>\n              <MenuItem onClick={handleClose2}>\n                Task 2: This is task two\n              </MenuItem>\n              <MenuItem onClick={handleClose2}>\n                Task 3: This is task three\n              </MenuItem>\n              <Divider sx={{ my: 0.5 }} />\n              <MenuItem onClick={handleClose2}>\n                Task 4: This is task four\n              </MenuItem>\n            </Menu>\n            <IconButton\n              aria-label=\"more\"\n              id=\"long-button\"\n              aria-controls=\"long-menu\"\n              aria-expanded={openSetting2 ? \"true\" : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleClickOpenFav}\n              sx={{\n                fontSize: \"2rem\",\n                color: \"white\",\n                \"&:hover\": {\n                  color: \"white\",\n                  backgroundColor: \"#7a4ebf\",\n                },\n              }}\n            >\n              <Star />\n            </IconButton>\n            <Dialog\n              open={openFav}\n              onClose={handleCloseFav}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n              <DialogContent>\n                <Favorites />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleCloseFav} autoFocus>\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Box>\n          <NotificationAdd mr={2} />\n          <Typography component=\"h5\" variant=\"h6\" ml={2} mr={2}>\n            |\n          </Typography>\n\n          <Button\n            color=\"inherit\"\n            aria-controls=\"basic-menu\"\n            aria-haspopup=\"true\"\n            aria-expanded={open ? \"true\" : undefined}\n            onClick={handleClick}\n          >\n            <Person /> {localuser.username} - ({localuser.username} )\n          </Button>\n          <Button color=\"inherit\" onClick={() => dispatch(logout())}>\n            Logout\n          </Button>\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleClose}\n            MenuListProps={{\n              \"aria-labelledby\": \"basic-button\",\n            }}\n          >\n            <MenuItem component={Link} to=\"/profile\">\n              Profile\n            </MenuItem>\n            {/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n          </Menu>\n          <IconButton\n            aria-label=\"more\"\n            id=\"long-button\"\n            aria-controls=\"long-menu\"\n            aria-expanded={openSetting ? \"true\" : undefined}\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n            sx={{\n              color: \"white\",\n            }}\n          >\n            <Settings />\n          </IconButton>\n          <Menu\n            id=\"fade-menu\"\n            MenuListProps={{\n              \"aria-labelledby\": \"fade-button\",\n            }}\n            anchorEl={settingAcnchorEl}\n            open={openSetting}\n            onClose={handleClose}\n            TransitionComponent={Fade}\n          >\n            <MenuItem onClick={handleClose}>Profile</MenuItem>\n            <MenuItem onClick={handleClose}>Account</MenuItem>\n            <MenuItem onClick={handleClose}>Setting</MenuItem>\n            <Divider sx={{ my: 0.5 }} />\n            <MenuItem onClick={handleClose}>Logout</MenuItem>\n          </Menu>\n        </Toolbar>\n      </SecNavbar>\n\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps, { logout })(NavbarSec);\n","/** @format */\n\nimport React, { useState, Fragment } from \"react\";\nimport {\n  Box,\n  Accordion,\n  AccordionSummary,\n  Typography,\n  AccordionDetails,\n  Grid,\n} from \"@mui/material\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  Mail,\n  Phone,\n  Group,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  manageRoleActive,\n  manageGroupActive,\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  manageUserActive,\n  lostCustomerActive,\n  newAccountActive,\n  marketingActive,\n  appointmentActive,\n  empOversiteActive,\n  emailsActive,\n  mapActive,\n  callsActive,\n} from \"../../redux/features/sidebarSlice\";\n\nimport \"./style.css\";\n\nconst Controls = () => {\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/\">\n              <Grid item>\n                <AddCircle fontSize=\"medium\" />\n              </Grid>\n              <Grid item>DashBoard</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/invoices\">\n              <Grid item>\n                <Receipt fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Invoices</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/manage-categories\">\n              <Grid item>\n                <FileCopy fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Categories</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/ledgers\">\n              <Grid item>\n                <MoneyOff fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Ledger</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/create-task\">\n              <Grid item>\n                <Task fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Task</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/employee-search\">\n              <Grid item>\n                <Work fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Search</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/matter-dashboard\">\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Matters</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/contact\">\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Contact</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\nconst Marketing = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(marketingActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.marketing ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Marketing</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(emailsActive())}>\n          <Grid>\n            <Box sx={sidebar.emails ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Email</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst HumanResources = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(manageUserActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.manageUser ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage User</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(manageRoleActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.manageRole ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Role</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(manageGroupActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.manageGroup ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Group</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst RevenueControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueInActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueIn ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue In</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueOutActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueOut ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue Out</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst AccountControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.newCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Customers</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(lostCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.lostCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Lost Customer</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newAccountActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.newAccount ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Accounts</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(mapActive())}>\n          <Grid>\n            <Box sx={sidebar.map ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Trouble Ticket Map</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\nconst EmployeeOversite = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(empOversiteActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.empOversite ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Oversite</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(callsActive())}>\n          <Grid>\n            <Box sx={sidebar.calls ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Phone fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Calls</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(appointmentActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.appointment ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Appointments</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const accordionData = [\n  {\n    name: \"Controls\",\n    id: \"controls\",\n    tiles: <Controls />,\n  },\n\n  {\n    name: \"Human Resources\",\n    id: \"human_resource\",\n    tiles: <HumanResources />,\n  },\n  {\n    name: \"Revenue\",\n    id: \"revenue\",\n    tiles: <RevenueControls />,\n  },\n  {\n    name: \"Customers\",\n    id: \"customers\",\n    tiles: <AccountControls />,\n  },\n  {\n    name: \"Marketing\",\n    id: \"marketing\",\n    tiles: <Marketing />,\n  },\n  {\n    name: \"Employee Oversite\",\n    id: \"empOversite\",\n    tiles: <EmployeeOversite />,\n  },\n];\n\nconst TestingSidebar = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n\n  const [accordions, updateAccordions] = useState(accordionData);\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n\n    const items = Array.from(accordions);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    updateAccordions(items);\n  }\n\n  return (\n    <Fragment>\n      <Box mt={5}>\n        <DragDropContext onDragEnd={handleOnDragEnd}>\n          <Droppable droppableId=\"accordions\">\n            {(provided) => (\n              <Box\n                className=\"accordions\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {accordions.map((item, index) => {\n                  return (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <Accordion\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          <AccordionSummary\n                            expandIcon={<ExpandMoreIcon color=\"primary\" />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                          >\n                            <Typography\n                              align=\"center\"\n                              color=\"primary\"\n                              sx={{ textTransform: \"uppercase\" }}\n                            >\n                              {item.name}\n                            </Typography>\n                          </AccordionSummary>\n                          <AccordionDetails>{item.tiles}</AccordionDetails>\n                        </Accordion>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </Box>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TestingSidebar;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  Box,\n  Paper,\n  Link,\n  Grid,\n  Container,\n  Stack,\n} from \"@mui/material\";\n\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\n\nimport { useToggle } from \"../../context/useToggle\";\nimport AdminSidebar from \"./AdminSidebar\";\nimport LawyerSidebar from \"./LawyerSidebar\";\nimport FirmSidebar from \"./FirmSidebar\";\nimport CustomerSidebar from \"./CutomerSidebar\";\nimport \"./style.css\";\nimport TestingSidebar from \"./TestingSidebar\";\n\nconst Sidebar = ({ user }) => {\n  const [controlToggle, setControlToggle] = useToggle(true);\n\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: true,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const SidebarRedirect = () => {\n    switch (user.username) {\n      case \"admin\":\n        return <AdminSidebar />;\n      case \"firm\":\n        return <FirmSidebar />;\n      case \"lawyer\":\n        return <LawyerSidebar />;\n      default:\n        return <CustomerSidebar />;\n    }\n  };\n\n  // const [state, dispatch] = useContext(UserContext);\n  return (\n    <Fragment>\n      <Paper component={Stack} elevation={3} spacing={1}>\n        <Box\n          sx={{\n            height: \"calc(83vh - 40px)\",\n            overflowY: \"scroll\",\n          }}\n        >\n          {/* {SidebarRedirect()} */}\n          <TestingSidebar />\n        </Box>\n        <Box p={2}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"error\"\n            style={{\n              padding: \"1rem\",\n              \"&:hover\": {\n                color: \"#fff\",\n              },\n            }}\n          >\n            Report\n          </Button>\n        </Box>\n      </Paper>\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Sidebar);\n\n// export default Sidebar;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  BottomNavigation,\n  BottomNavigationAction,\n  Link,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@mui/material\";\nimport { FooterBar, FooterLink, FooterButton } from \"../../styles/styles\";\nimport Favorites from \"../Favorite/Favorites\";\n\nconst Footer = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <FooterBar>\n          <FooterLink to={\"/ledgers\"}>Accounting</FooterLink> |\n          <FooterLink to={\"/\"}> Calendar</FooterLink> |\n          <FooterLink to={\"/\"}>Contacts</FooterLink> |\n          <FooterButton\n            sx={{\n              color: \"#eee\",\n              textTransform: \"uppercase\",\n              textDecoration: \"none\",\n              \"&:visited\": {\n                color: \"#eee\",\n              },\n            }}\n            variant=\"text\"\n            onClick={handleClickOpen}\n          >\n            Favorites\n          </FooterButton>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n            <DialogContent>\n              <Favorites />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} autoFocus>\n                Close\n              </Button>\n            </DialogActions>\n          </Dialog>\n          |<FooterLink to={\"/matters\"}>Matters</FooterLink> |\n          <FooterLink to={\"/tasks\"}>Tasks</FooterLink> |\n          <FooterLink to={\"/\"}>Workflow</FooterLink>\n        </FooterBar>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Footer;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport Navbar from \"../components/Navbars/Navbar\";\nimport NavbarSec from \"../components/Navbars/NavbarSec\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport { connect } from \"react-redux\";\nimport Chatting from \"../components/Chat/Chat\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { isDisplay } from \"../redux/features/sidebarSlice\";\n\nimport { Paper, Fab, Popover } from \"@mui/material\";\nimport { Grid, Box, Button } from \"@mui/material\";\n\nimport { Chat } from \"@mui/icons-material\";\n\nimport Footer from \"../components/Footer/Footer\";\n\nconst InnerLayout = ({ isAuthenticated, children }) => {\n  const theme = useTheme();\n\n  const sidebarToggle = useSelector((state) => state.sidebar.display);\n  const dispatch = useDispatch();\n\n  const [drawerOpen, setDrawerOpen] = React.useState(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setDrawerOpen(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setDrawerOpen(null);\n  };\n\n  const openPopover = Boolean(drawerOpen);\n  const id = openPopover ? \"simple-popover\" : undefined;\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (drawerOpen) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [drawerOpen]);\n\n  return (\n    <Paper style={{ margin: \"0\" }}>\n      <Grid contianer rowSpacing={2} columnSpacing={2}>\n        <Grid item lg={12} md={12}>\n          {isAuthenticated ? (\n            <Fragment>\n              <NavbarSec />\n            </Fragment>\n          ) : (\n            <Navbar />\n          )}\n        </Grid>\n\n        {isAuthenticated ? (\n          <Fragment>\n            <Grid item lg={12}>\n              <Navbar />\n            </Grid>\n            <Grid container direction=\"row\" wrap=\"nowrap\">\n              {sidebarToggle ? (\n                <Fragment>\n                  <Grid item lg={2} xs={12} m={3}>\n                    <Sidebar />\n                  </Grid>\n                  <Grid item lg={10} xs={12} p={1}>\n                    <Box>\n                      <Button\n                        onClick={() => dispatch(isDisplay())}\n                        p={5}\n                        sx={{\n                          left: \"-8rem\",\n                          top: \"2rem\",\n                        }}\n                      >\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <Grid item lg={12} xs={12} p={1}>\n                    <Box>\n                      <Button onClick={() => dispatch(isDisplay())}>\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              )}\n            </Grid>\n            <Grid item lg={12}>\n              <Footer />\n            </Grid>\n          </Fragment>\n        ) : (\n          <Grid item lg={12} xs={12}>\n            {children}\n          </Grid>\n        )}\n        <Fab\n          size=\"large\"\n          onClick={handlePopoverOpen}\n          style={{\n            borderRadius: \"50%\",\n            backgroundColor: \"#eee\",\n            position: \"fixed\",\n            bottom: \"16px\",\n            right: \"16px\",\n            color: \"#461594\",\n            zIndex: \"200\",\n            \"&:hover\": {\n              color: \"#7a4ebf\",\n            },\n          }}\n          aria-label=\"chat\"\n        >\n          <Chat />\n        </Fab>\n        <Popover\n          open={openPopover}\n          anchorEl={drawerOpen}\n          onClose={handlePopoverClose}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          sx={{ margin: \"-2rem\" }}\n        >\n          <Chatting />\n        </Popover>\n      </Grid>\n    </Paper>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps)(InnerLayout);\n","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nconst PrivateRoutes = ({ isAuthenticated, children, ...rest}) => {\n    \n\n    return (\n        <Route {...rest}>\n            {isAuthenticated ? children: <Redirect to=\"/login\"/>}\n        </Route>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(PrivateRoutes);","/** @format */\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'toggle_button':\n      return {\n        ...state,\n        active: !state.active,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initialState = {\n  active: false,\n};\n","/** @format */\n\nimport React from 'react';\nimport { reducer, initialState } from './reducer';\n\nexport const UserContext = React.createContext({\n  state: initialState,\n  dispatch: () => null,\n});\n\nexport const UserProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <UserContext.Provider value={[state, dispatch]}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","/** @format */\n\n// import styled from \"styled-components\";\nimport { createTheme } from \"@mui/material/styles\";\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    mode: \"light\",\n    primary: {\n      main: \"#796ef0\", //blueish purple\n    },\n    // secondary: {\n    //   main: \"\",\n    // },\n    error: {\n      main: \"#e85355\", //red\n    },\n    warning: {\n      main: \"#fd9905\", // orange\n    },\n    success: {\n      main: \"#28c570\", //green\n    },\n\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n  typography: {\n    htmlFontSize: 14,\n    fontSize: 12,\n    color: \"#333\",\n  },\n});\n\nexport default theme;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport \"./DashboardLayout/style.css\";\n\nimport DashboardContent from \"./DashboardLayout/DashboardContent\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <DashboardContent />\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\nimport { Button, Stack, IconButton } from \"@mui/material\";\nimport styles from \"./tabs.module.css\";\n\nconst Tabs = ({ children }) => {\n  const [activeTab, setActiveTab] = useState(children[0].props.label);\n  const handleClick = (e, newActiveTab) => {\n    e.preventDefault();\n    setActiveTab(newActiveTab);\n  };\n  return (\n    <Fragment>\n      <Stack direction=\"row\" spacing={1}>\n        <ul className={styles.tabs}>\n          {children.map((tab) => (\n            <li\n              className={tab.props.label === activeTab ? styles.current : \"\"}\n              key={tab.props.label}\n            >\n              <Button\n                variant=\"text\"\n                size=\"small\"\n                startIcon={<MoreVert />}\n                onClick={(e) => handleClick(e, tab.props.label)}\n              >\n                {tab.props.label}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      </Stack>\n\n      {children.map((one) =>\n        one.props.label === activeTab ? (\n          <div className={styles.content} key={one.props.label}>\n            {one.props.children}\n          </div>\n        ) : (\n          \"\"\n        ),\n      )}\n    </Fragment>\n  );\n};\n\nexport default Tabs;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  FormControlLabel,\n  Switch,\n  Button,\n  Stack,\n} from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst CreateInvoice = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    matter: \"\",\n    contact: \"\",\n    billable: false,\n    date_range: \"\",\n    create_date: \"\",\n    due_date: \"\",\n    template: \"\",\n    invoice_no: \"\",\n    discount: \"\",\n    submit: false,\n  });\n\n  // const {\n  //   matter,\n  //   contact,\n  //   billable,\n  //   date_range,\n  //   create_date,\n  //   due_date,\n  //   template,\n  //   invoice_no,\n  //   discount,\n  //   submit,\n  // } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  const [invoice, setInvoice] = useState(null);\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoice`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  const [dateRange, setDateRange] = React.useState([null, null]);\n  return (\n    <Fragment>\n      {/* <Typography component=\"h3\" variant=\"h4\">\n        Create New Invoice\n      </Typography>\n      <Box p={3}>\n        <LinkButton to=\"/invoices\" sx={{ float: \"right\" }}>\n          Invoice Dashboard\n        </LinkButton>\n      </Box> */}\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Grid\n          spacing={3}\n          container\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"Matter\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n              autoComplete=\"matter\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"Contact\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              autoComplete=\"contact\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <FormControlLabel\n              sx={{ fontSize: \"12px\", marginLeft: \"1rem\" }}\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Unbillable\"\n            />\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Stack direction=\"row\">\n              <Typography varient=\"caption\" sx={{ marginTop: \"0.7rem\" }}>\n                Range:\n              </Typography>\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateRangePicker\n                  calendars={1}\n                  value={dateRange}\n                  onChange={(newValue) => {\n                    setDateRange(newValue);\n                  }}\n                  renderInput={(startProps, endProps) => (\n                    <Fragment>\n                      <TextField size=\"small\" {...startProps} />\n                      <Box sx={{ mx: 2 }}> to </Box>\n                      <TextField size=\"small\" {...endProps} />\n                    </Fragment>\n                  )}\n                />\n              </LocalizationProvider>\n            </Stack>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          spacing={3}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"create_date\"\n              label=\"Create Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"due_date\"\n              label=\"Due Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"template\"\n              label=\"Template\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"template\"\n              autoComplete=\"template\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"invoice_no\"\n              label=\"Invoice #\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"invoice_no\"\n              autoComplete=\"invoice_no\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"discount\"\n              label=\"Discount\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"discount\"\n              autoComplete=\"discount\"\n            />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <FormControlLabel\n              label=\"Submit For Approvel\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n            />\n          </Grid>\n        </Grid>\n\n        <Grid item lg={12} mt={2}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Sub-Category</TableCell>\n                  <TableCell>Description</TableCell>\n                  <TableCell>Date</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Rate</TableCell>\n                  <TableCell>Sub</TableCell>\n                  <TableCell>Tax</TableCell>\n                  <TableCell>int</TableCell>\n                  <TableCell>Disc.</TableCell>\n                  <TableCell>Total</TableCell>\n                  <TableCell>Biller</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                {/* {invoice?.map((invoice) => (\n                  <TableRow id={invoice.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n\n                    <TableCell>{invoice.sub_cat}</TableCell>\n                    <TableCell>{invoice.discription}</TableCell>\n                    <TableCell>{invoice.date}</TableCell>\n                    <TableCell>{invoice.hours}</TableCell>\n                    <TableCell>{invoice.rate}</TableCell>\n                    <TableCell>{invoice.sub}</TableCell>\n                    <TableCell>{invoice.tax}</TableCell>\n                    <TableCell>{invoice.int}</TableCell>\n                    <TableCell>{invoice.dics}</TableCell>\n                    <TableCell>{invoice.total}</TableCell>\n                    <TableCell>{invoice.biller}</TableCell>\n                  </TableRow>\n                ))} */}\n              </TableHead>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item mt={3} direction=\"row\">\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Notes\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"Accept Online Payment\"\n              />\n            }\n            label=\"Accept Online Payment\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Accept Payments for Less\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (Compound / Simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Terms and Conditions\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (compund/ simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Use Trust Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add all unpaid invoices\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"use Operating Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Send Reminders Every\"\n          />\n          <TextField size=\"small\" sx={{ width: \"5rem\" }} />\n          <Typography\n            varient=\"caption\"\n            component=\"span\"\n            sx={{ marginLeft: \"0.5rem \" }}\n          >\n            day(s)/week(s)\n          </Typography>\n\n          {/* <Button\n            variant=\"contained\"\n            sx={{ float: \"right\" }}\n            endIcon={<SaveIcon />}\n          >\n            Send\n          </Button> */}\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateInvoice;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Grid,\n  Box,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormControl,\n  Checkbox,\n  Typography,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  MenuItem,\n  InputLabel,\n  Select,\n  Button,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst PaymentPlan = () => {\n  const [paymentData, setPaymentData] = useState({\n    payment_no: \"File# - 001\",\n    due: \"2020/07/01\",\n    amount: \"$ 750.00\",\n    late_fee: \"$22.00\",\n    total_due: \"$ 775.00\",\n    payment: \"$775.00\",\n    posted: \"$2020/07/05\",\n    method: \"Check\",\n  });\n\n  return (\n    <Fragment>\n      <Grid container mt={3} mb={3}>\n        <Grid item lg={4}>\n          <Typography>Start Balance:</Typography>\n          <Typography>Start Date:</Typography>\n          <Typography>Interest Rate:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Amout:</Typography>\n          <Typography>Payment Date:</Typography>\n          <Typography>No Payments:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Remaining:</Typography>\n          <Typography>Last Payment:</Typography>\n          <Typography>Last Payment $:</Typography>\n        </Grid>\n      </Grid>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Payment #</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Amout</TableCell>\n            <TableCell>Late Fee</TableCell>\n            <TableCell>Total Due</TableCell>\n            <TableCell>Payment</TableCell>\n            <TableCell>Posted</TableCell>\n            <TableCell>Method</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{paymentData.payment_no}</TableCell>\n          <TableCell>{paymentData.due}</TableCell>\n          <TableCell>{paymentData.amount} </TableCell>\n          <TableCell>{paymentData.late_fee}</TableCell>\n          <TableCell>{paymentData.total_due}</TableCell>\n          <TableCell>{paymentData.payment}</TableCell>\n          <TableCell>{paymentData.posted}</TableCell>\n          <TableCell>{paymentData.method}</TableCell>\n        </TableBody>\n      </Table>\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Close\n      </Button>\n      <Grid container>\n        <Grid item lg={6}>\n          <Typography>Post agreement Balance:</Typography>\n        </Grid>\n        <Grid item lg={6}>\n          <Typography>Start Date:</Typography>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst InvoicePayment = () => {\n  const [invoiceData, setInvoiceData] = useState({\n    invoice_no: \"i-2106-0004542\",\n    due: \"2020/07/01\",\n    tax: \"$ 15.00\",\n    interest: \"$2.35\",\n    time: \"$ 1,234.50\",\n    hard: \"$457.00\",\n    soft: \"$45.00\",\n    total: \"$ 1,753.85\",\n  });\n\n  return (\n    <Fragment>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Invoice</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Tax</TableCell>\n            <TableCell>Interest</TableCell>\n            <TableCell>Time</TableCell>\n            <TableCell>Hard</TableCell>\n            <TableCell>Soft</TableCell>\n            <TableCell>Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{invoiceData.invoice_no}</TableCell>\n          <TableCell>{invoiceData.due}</TableCell>\n          <TableCell>{invoiceData.tax} </TableCell>\n          <TableCell>{invoiceData.interest}</TableCell>\n          <TableCell>{invoiceData.time}</TableCell>\n          <TableCell>{invoiceData.hard}</TableCell>\n          <TableCell>{invoiceData.soft}</TableCell>\n          <TableCell>{invoiceData.total}</TableCell>\n        </TableBody>\n      </Table>{\" \"}\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Pay\n      </Button>{\" \"}\n    </Fragment>\n  );\n};\n\nconst Payment = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [isPlan, setIsPlan] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    payment_type: \"\",\n    date: \"\",\n    retainer: \"\",\n    payment: \"\",\n    date_range: \"\",\n    menu: \"\",\n    bank_account: \"\",\n    payment_method: \"\",\n  });\n\n  const {\n    payment_type,\n    date,\n    retainer,\n    payment,\n    date_range,\n    menu,\n    bank_account,\n    payment_method,\n  } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{\n              \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n            }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"payment_type\"\n                defaultValue=\"cash\"\n                name=\"payment_type\"\n                onChange={(e) => onChange(e)}\n                id=\"payment_type\"\n                autoComplete=\"payment_type\"\n              >\n                <FormControlLabel\n                  value=\"cash\"\n                  control={<Radio />}\n                  label=\"Cash\"\n                />\n                <FormControlLabel value=\"cc\" control={<Radio />} label=\"CC\" />\n                <FormControlLabel\n                  value=\"wire\"\n                  control={<Radio />}\n                  label=\"Wire\"\n                />\n                <FormControlLabel\n                  value=\"check\"\n                  control={<Radio />}\n                  label=\"Check\"\n                />\n              </RadioGroup>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              id=\"date\"\n              label=\"date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <FormControlLabel\n              value=\"retainer\"\n              control={<Checkbox />}\n              label=\"Retainer\"\n            />\n            <FormControlLabel\n              value=\"payment\"\n              control={<Checkbox />}\n              label=\"Payment\"\n            />\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n              <DateRangePicker\n                calendars={1}\n                value={dateRange}\n                onChange={(newValue) => {\n                  setDateRange(newValue);\n                }}\n                renderInput={(startProps, endProps) => (\n                  <Fragment>\n                    <TextField size=\"small\" {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField size=\"small\" {...endProps} />\n                  </Fragment>\n                )}\n              />\n            </LocalizationProvider> */}\n            <FormControl sx={{ width: \"12rem\" }}>\n              <InputLabel id=\"demo-simple-select-label\">Date Range</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={date_range}\n                label=\"Age\"\n                onChange={(e) => onChange(e)}\n              >\n                <MenuItem value={10}>Ten</MenuItem>\n                <MenuItem value={20}>Twenty</MenuItem>\n                <MenuItem value={30}>Thirty</MenuItem>\n              </Select>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"menu\"\n              label=\"menu\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"menu\"\n              autoComplete=\"menu\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bank_account\"\n              label=\"bank_account\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"bank_account\"\n              autoComplete=\"bank_account\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"payment_method\"\n              label=\"payment_method\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"payment_method\"\n              autoComplete=\"payment_method\"\n            />\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"isPlan\"\n                defaultValue={isPlan}\n                name=\"isPlan\"\n                onChange={(e) => setIsPlan(e)}\n                id=\"isPlan\"\n                autoComplete=\"isPlan\"\n              >\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Invoice Payment\"\n                />\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Payment Plan\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Box>\n        </Grid>\n        <Grid item lg={12}>\n          <TableContainer>\n            {isPlan ? <PaymentPlan /> : <InvoicePayment />}\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Payment;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  FormControlLabel,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  Button,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport { styled } from \"@mui/material/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\nimport CreateInvoice from \"./CreateInvoice\";\nimport Payment from \"./Payment\";\n\nconst Filters = () => {\n  const [invoiceToggle, setInvoiceToggle] = useToggle(false);\n  const [paymentToggle, setPaymentToggle] = useToggle(false);\n  const [paid, setPaid] = useToggle(false);\n\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid\n          spacing={2}\n          item\n          lg={12}\n          direction=\"Row\"\n          sx={{\n            \"& .MuiTextField-root\": { m: 1 },\n            \"& .MuiFormControl-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            onClick={() => setInvoiceToggle(invoiceToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Create Invoice\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={invoiceToggle}\n            onClose={() => setInvoiceToggle(invoiceToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {\"Create Invoice\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <CreateInvoice />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <Button\n            variant=\"contained\"\n            onClick={() => setPaymentToggle(paymentToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Receive Money\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={paymentToggle}\n            onClose={() => setPaymentToggle(paymentToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Receive Money\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <Payment />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <FormControlLabel\n            label=\" Paid/ Unpaid\"\n            control={<Switch checked={paid} onChange={() => setPaid(paid)} />}\n          />\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Invoice</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Bill Date</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Times</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <Typography\n            component=\"span\"\n            variant=\"caption\"\n            sx={{ width: \"8rem\", m: 2, fontSize: \"1.2rem\" }}\n          >\n            Status:\n          </Typography>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Any </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Dropd-own</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n} from \"@mui/material\";\nimport Filters from \"./Filters\";\n\nconst InvoiceList = () => {\n  const [invoice, setInvoice] = useState(null);\n\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoices`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  return (\n    <Fragment>\n      <Filters />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Invoice</TableCell>\n              <TableCell>Created</TableCell>\n              <TableCell>Due</TableCell>\n              <TableCell>Tax</TableCell>\n              <TableCell>Interest</TableCell>\n              <TableCell>Discount</TableCell>\n              <TableCell>Total</TableCell>\n              <TableCell>Balance</TableCell>\n              <TableCell>Last Payment</TableCell>\n              <TableCell>Approval Date</TableCell>\n              <TableCell>Approval by</TableCell>\n              <TableCell>Created by</TableCell>\n            </TableRow>\n            {/* {invoice?.map((invoice) => (\n              <TableRow id={invoice.id}>\n                <TableCell>\n                  <Checkbox />\n                </TableCell>\n                <TableCell>{invoice.id}</TableCell>\n                <TableCell>{invoice.created}</TableCell>\n                <TableCell>{invoice.due}</TableCell>\n                <TableCell>{invoice.tax}</TableCell>\n                <TableCell>{invoice.interest}</TableCell>\n                <TableCell>{invoice.discount}</TableCell>\n                <TableCell>{invoice.total}</TableCell>\n                <TableCell>{invoice.balance}</TableCell>\n                <TableCell>{invoice.last_payment}</TableCell>\n                <TableCell>{invoice.approvel_date}</TableCell>\n                <TableCell>{invoice.approvel.by}</TableCell>\n                <TableCell>{invoice.created_by}</TableCell>\n              </TableRow>\n            ))} */}\n          </TableHead>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default InvoiceList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport InvoiceList from \"./InvoiceList\";\nimport Payment from \"./Payment\";\nimport CreateInvoice from \"./CreateInvoice\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <InvoiceList />\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\n// import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport const CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nexport const CreateMatter = (\n  contact,\n  matter_name,\n  matter_type,\n  matter_source,\n  matter_status,\n  assign_to,\n  assign_by,\n  billing_rate,\n  alerts,\n  open_date,\n  close_date,\n  total_days,\n  jurisdiction,\n  status_limitaion,\n  opposing_counsel,\n  where,\n  when,\n  involved,\n  witnesses,\n  narrative,\n) => {\n  let status = \"\";\n  const body = JSON.stringify({\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n    open_date,\n    close_date,\n    total_days,\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    when,\n    involved,\n    witnesses,\n    narrative,\n  });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n    .then((res) => {\n      status = res.statusText;\n    })\n    .catch((err) => {\n      status = err.message;\n    });\n\n  return status;\n};\n\nexport const retrive_matter = () => {};\n","/** @format */\n\nimport React from \"react\";\nimport { Alert } from \"@mui/material\";\n\nexport const ActionAlerts = (status) => {\n  return <Alert severity=\"error\">{status}</Alert>;\n};\n\nexport const TotalDays = (date1, date2) => {\n  let dt1 = new Date(date1);\n  let dt2 = new Date(date2);\n  return Math.floor(\n    (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) -\n      Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) /\n      (1000 * 60 * 60 * 24),\n  );\n};\n\nexport const GetDate = (date) => {\n  let newDate =\n    date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n  return newDate;\n};\n\nexport const GetTime = (time) => {\n  let newTime =\n    time.getHours() + \":\" + time.getMinutes() + \":\" + time.getSeconds();\n  return newTime;\n};\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Box,\n  containerClasses,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\n\nconst MatterList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const [redTask, setRedTask] = useState(false);\n  const [greenTask, setGreenTask] = useState(false);\n  const [yellowTask, setYellowTask] = useState(false);\n  const [myTask, setMyTask] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/tasks/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTasks(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Box component={Paper} p={2}>\n      <FormGroup aria-label=\"position\" row>\n        <FormControlLabel\n          control={\n            <Checkbox value={myTask} onChange={() => setMyTask(!myTask)} />\n          }\n          label=\"My Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox value={redTask} onChange={() => setRedTask(!redTask)} />\n          }\n          label=\"Red Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={greenTask}\n              onChange={() => setGreenTask(!greenTask)}\n            />\n          }\n          label=\"Green Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={yellowTask}\n              onChange={() => setYellowTask(!yellowTask)}\n            />\n          }\n          label=\"Yellow Tasks\"\n        />\n      </FormGroup>\n      <Typography component=\"h3\">All Matters Task's List</Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assign To</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : tasks?.map((data) => {\n                  return (\n                    <TableRow id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        {data.task_nature === \"urgent\" ? (\n                          <CircleIcon color=\"error\" />\n                        ) : (\n                          <CircleIcon color=\"success\" />\n                        )}\n                      </TableCell>\n                      <TableCell>{data.matter}</TableCell>\n                      <TableCell>\n                        {data.last_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>\n                        {data.next_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default MatterList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, CardContent, Typography } from \"@mui/material\";\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Tasks cleared Last day\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Goal Today\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Personal Best\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Company Record\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Link, Typography, List, ListItem, Paper } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nconst Calendar = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography variant=\"h6\" component=\"h7\">\n          My Calendar at a Glance\n        </Typography>\n        <List>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Start motion for trail</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Calendar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  Typography,\n} from \"@mui/material\";\n\nconst Filters = () => {\n  // const [user, setUser] = useState(\"Any user\");\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item>\n          <Typography>Assign To</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Organized By</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Status</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, Button, Typography } from \"@mui/material\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst MatterCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2} mt={1.5}>\n        <Grid item lg={9}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"error.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Urgent\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"warning.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Concern\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"success.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Start\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"white\",\n                  color: \"black\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      New\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3}>\n          <Button\n            variant=\"outlined\"\n            sx={{\n              minWidth: 100,\n              height: 40,\n              borderRadius: \"0.5rem\",\n              bgcolor: \"white\",\n              color: \"black\",\n            }}\n          >\n            Import\n          </Button>\n          <LinkButton to=\"/create-matter\"> + New </LinkButton>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterCards;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  TableBody,\n} from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst MatterListLong = () => {\n  const [matters, setMatters] = useState([]);\n\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/new-matter/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setMatters(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Matter Contact</TableCell>\n              <TableCell>Matter Type</TableCell>\n              <TableCell>Bill Rate</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assigned to</TableCell>\n              <TableCell>Billable</TableCell>\n              <TableCell>Open Invoice</TableCell>\n              <TableCell>Trust Account</TableCell>\n              <TableCell>Last Payment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : matters?.map((data, index) => {\n                  return (\n                    <TableRow id={index}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        <CircleIcon color=\"error\" />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n                      <TableCell>{data.contact}</TableCell>\n                      <TableCell>{data.matter_type}</TableCell>\n                      <TableCell>{data.billing_rate}</TableCell>\n                      <TableCell>{data.open_date}</TableCell>\n                      <TableCell>{data.close_date}</TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 100)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {\" \"}\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />{\" \"}\n                        - {data.close_date}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default MatterListLong;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Button, Typography } from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\n\nimport { LocalizationProvider, DateRangePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { CreateMatter, CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, TotalDays, GetDate } from \"../../utils/ActionAlerts\";\n\nconst NewMatter = () => {\n  // const matter_number = Math.floor(Math.random() * 10000000);\n  const mask = \"____-__-__\";\n  const matter_number = 23568;\n  const [openDate, setOpenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [whenDate, setWhenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [closeDate, setCloseDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [totalDays, setTotalDays] = useState(0);\n  const [matterData, setMatterData] = useState({\n    contact: 0,\n    matter_name: \"\",\n    matter_type: \"\",\n    matter_source: \"\",\n    matter_status: \"\",\n    assign_to: 0,\n    assign_by: 0,\n    billing_rate: 0,\n    alerts: \"\",\n\n    jurisdiction: \"\",\n    status_limitaion: null,\n    opposing_counsel: \"\",\n    where: \"\",\n    involved: \"\",\n    witnesses: \"\",\n    narrative: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    involved,\n    witnesses,\n    narrative,\n  } = matterData;\n\n  const onChange = (e) =>\n    setMatterData({ ...matterData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let open_date = GetDate(openDate);\n    let close_date = GetDate(closeDate);\n    let when = GetDate(whenDate);\n    let total_days = totalDays;\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      matter_type,\n      matter_source,\n      matter_status,\n      assign_to,\n      assign_by,\n      billing_rate,\n      alerts,\n      open_date,\n      close_date,\n      total_days,\n      jurisdiction,\n      status_limitaion,\n      opposing_counsel,\n      where,\n      when,\n      involved,\n      witnesses,\n      narrative,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  useEffect(() => {\n    let days = TotalDays(openDate, closeDate);\n    setTotalDays(days);\n  }, [openDate, closeDate]);\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Matter\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item lg={8}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"contact\"\n              type=\"number\"\n              min=\"0\"\n              value={contact}\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_number\"\n              label=\"matter_number\"\n              type=\"text\"\n              value={matter_number}\n              // onChange={(e) => onChange(e)}\n              id=\"matter_number\"\n              disabled\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_name\"\n              label=\"matter_name\"\n              type=\"text\"\n              value={matter_name}\n              onChange={(e) => onChange(e)}\n              id=\"matter_name\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"alerts\"\n              label=\"alerts\"\n              type=\"text\"\n              value={alerts}\n              onChange={(e) => onChange(e)}\n              id=\"alerts\"\n              autoComplete=\"alerts\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_type\"\n              label=\"matter_type\"\n              type=\"text\"\n              value={matter_type}\n              onChange={(e) => onChange(e)}\n              id=\"matter_type\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_source\"\n              label=\"matter_source\"\n              type=\"text\"\n              value={matter_source}\n              onChange={(e) => onChange(e)}\n              id=\"matter_source\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_status\"\n              label=\"matter_status\"\n              type=\"text\"\n              value={matter_status}\n              onChange={(e) => onChange(e)}\n              id=\"matter_status\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"assign_to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_rate\"\n              label=\"billing_rate\"\n              step=\"0.01\"\n              type=\"number\"\n              value={billing_rate}\n              onChange={(e) => onChange(e)}\n              id=\"billing_rate\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Open Date\"\n                value={openDate}\n                name=\"open\"\n                id=\"open\"\n                onChange={(e) => setOpenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Close Date\"\n                value={closeDate}\n                name=\"closed\"\n                id=\"closed\"\n                onChange={(e) => setCloseDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"total_days\"\n              label=\"total_days\"\n              type=\"number\"\n              value={totalDays}\n              onChange={(e) => setTotalDays(TotalDays(openDate, closeDate))}\n              id=\"total_days\"\n              disabled\n            />\n          </Grid>\n\n          <Grid item lg={4}>\n            <br />\n            <Typography component=\"h5\" variant=\"h6\">\n              Legal Concerns\n            </Typography>\n            <br />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"jurisdiction\"\n              label=\"jurisdiction\"\n              type=\"text\"\n              value={jurisdiction}\n              onChange={(e) => onChange(e)}\n              id=\"jurisdiction\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"status_limitaion\"\n              label=\"status_limitaion\"\n              type=\"text\"\n              value={status_limitaion}\n              onChange={(e) => onChange(e)}\n              id=\"status_limitaion\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"opposing_counsel\"\n              label=\"opposing_counsel\"\n              type=\"text\"\n              value={opposing_counsel}\n              onChange={(e) => onChange(e)}\n              id=\"opposing_counsel\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <Typography component=\"h5\" variant=\"h6\" sx={{ fontSize: \"1rem\" }}>\n              Event Detail\n            </Typography>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"where\"\n              label=\"where\"\n              type=\"text\"\n              value={where}\n              onChange={(e) => onChange(e)}\n              id=\"where\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"When\"\n                value={whenDate}\n                name=\"when\"\n                id=\"when\"\n                onChange={(e) => setWhenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"involved\"\n              label=\"Who was involved\"\n              type=\"text\"\n              value={involved}\n              onChange={(e) => onChange(e)}\n              id=\"involved\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"witnesses\"\n              label=\"witnesses\"\n              type=\"text\"\n              value={witnesses}\n              onChange={(e) => onChange(e)}\n              id=\"witnesses\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              label=\"Customer Narrative of the Event\"\n              multiline\n              type=\"text\"\n              rows={10}\n              value={narrative}\n              onChange={(e) => onChange(e)}\n              defaultValue=\"Narrative\"\n              name=\"narrative\"\n              id=\"narrative\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewMatter;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { styled } from \"@mui/material/styles\";\n\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  CardContent,\n  Typography,\n  Card,\n  Grid,\n  Box,\n  List,\n  ListItem,\n  Paper,\n  InputBase,\n} from \"@mui/material\";\n\nconst MatterTask = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components=\"p\">\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components=\"p\">\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components=\"p\">YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Activities = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components={Typography}>\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components={Typography}>\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components={Typography}>YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Classification\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                % time spent\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Matter Completion\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst MatterDetail = () => {\n  const Search = styled(\"div\")(({ theme }) => ({\n    position: \"relative\",\n    borderRadius: \"1.5rem\",\n    backgroundColor: \"#eee\",\n    \"&:hover\": {\n      backgroundColor: \"#ddd\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"40%\",\n  }));\n\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }));\n\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: \"inherit\",\n    \"& .MuiInputBase-input\": {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"md\")]: {\n        width: \"20ch\",\n      },\n    },\n  }));\n  // const [matters, setMatters] = useState(null);\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n        </Grid>\n        <Grid item lg={12}>\n          <Grid container spacing={2}>\n            <Grid item mt={2} lg={7}>\n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Recent Document</TableCell>\n                      <TableCell>Version</TableCell>\n                      <TableCell>Last Open</TableCell>\n                      <TableCell>User</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>1</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>2</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>3</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableContainer>\n              <Grid container spacing={3}>\n                <Grid item>\n                  <Activities />\n                </Grid>\n                <Grid item>\n                  <MatterTask />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item mt={2} lg={5}>\n              <Cards />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterDetail;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport MatterList from \"./MatterList\";\nimport { Grid, Box } from \"@mui/material\";\nimport Cards from \"./Cards\";\nimport Calendar from \"./Calendar\";\nimport Filters from \"./Filters\";\nimport MatterCards from \"./MatterCards\";\nimport MatterListLong from \"./MatterListLong\";\nimport NewMatter from \"./NewMatter\";\nimport MatterDetail from \"./MatterDetail\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item lg={12}>\n            <Filters />\n          </Grid>\n          <Grid item lg={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item lg={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst MatterDashboard = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container spacing={2}>\n          <Grid item lg={7}>\n            <MatterList />\n            <Calendar />\n          </Grid>\n          <Grid item lg={5}>\n            <Cards />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashboard\">\n          <MatterDashboard />\n        </div>\n        <div label=\"Matter\">\n          <Matters />\n        </div>\n        <div label=\"New Matter\">\n          <NewMatter />\n        </div>\n        <div label=\"Smith vs. Jhon\">\n          <MatterDetail />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerActivity = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setActivityData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow bgColor=\"#796ef0\">\n              <TableCell>\n                <Typography color=\"white\">Date</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Files</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Sub-Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Notes</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Source</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">User</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">In/Out</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          {/* {loading\n            ? null\n            : activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })} */}\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default LedgerActivity;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  TextField,\n  FormControlLabel,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Fillters = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [billedby, setBilledby] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Filter By</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={filter}\n            label=\"Filter By\"\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Billed by</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={billedby}\n            label=\"Billed By\"\n            onChange={(e) => setBilledby(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={status}\n            label=\"Age\"\n            onChange={(e) => setStatus(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n          <DateRangePicker\n            calendars={1}\n            value={dateRange}\n            onChange={(newValue) => {\n              setDateRange(newValue);\n            }}\n            renderInput={(startProps, endProps) => (\n              <Fragment>\n                <TextField size=\"small\" {...startProps} />\n                <Box sx={{ mx: 2 }}> to </Box>\n                <TextField size=\"small\" {...endProps} />\n              </Fragment>\n            )}\n          />\n        </LocalizationProvider>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Fillters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={7}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Time Entries\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={200}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      f\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Soft Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={65000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Hard Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={5000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={70000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Trust\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={4000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Due\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={100000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item={5}>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>User</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell> Jhon Johnson</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={74.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={39007.05}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Mark MacCalloff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={4.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={800.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Cindy Madenuff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={127.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={41372.5}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerCards;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n  Button,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { LinkButton } from \"../../styles/styles\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerTImeList = () => {\n  const [ledgerData, setLedgerData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setLedgerData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <Box>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Print\n        </Button>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Export\n        </Button>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>Cateagory</TableCell>\n                <TableCell>Sub-Category</TableCell>\n                <TableCell>Detail</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Qty</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Total</TableCell>\n                <TableCell>BillBy</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n                ? null\n                : ledgerData?.map((data) => {\n                    return (\n                      <TableBody id={data.id}>\n                        <TableCell>\n                          <Checkbox />\n                        </TableCell>\n                        <TableCell>{data.category}</TableCell>\n                        <TableCell>{data.sub_category}</TableCell>\n                        <TableCell>{data.detail}</TableCell>\n                        <TableCell>{data.date}</TableCell>\n                        <TableCell>{data.qty}</TableCell>\n                        <TableCell>\n                          {data.billable ? \"Billable\" : \"Paid\"}\n                        </TableCell>\n                        <TableCell>\n                          <NumberFormat\n                            value={data.qty * 25}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix=\"$\"\n                          />\n                        </TableCell>\n                        <TableCell>{data.bill_by}</TableCell>\n                      </TableBody>\n                    );\n                  })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default LedgerTImeList;\n","/** @format */\n\nimport { Typography, Box, Grid } from \"@mui/material\";\nimport React, { Fragment } from \"react\";\nimport Fillters from \"./Fillters\";\nimport LedgerCards from \"./LedgerCards\";\nimport LedgerTimeList from \"./LedgerTImeList\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LegderDashbard = () => {\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <Box>\n          <LedgerCards />\n          <Fillters />\n          <LedgerTimeList />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LegderDashbard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box, Typography, Paper, TextField } from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerDoc = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={1}>\n        <Grid item lg={4} sx={{}}>\n          <Box\n            sx={{\n              width: \"80%\",\n              minHeight: \"25rem\",\n              padding: \"5rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            MS Word Document On Pleading or Non Pleading Paper\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Box\n            sx={{\n              padding: \"5rem 2rem 5rem 2rem\",\n              minHeight: \"25rem\",\n              width: \"80%\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Space for 2nd Document to be opend if user wants it\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Grid container>\n            <Grid item lg={12}>\n              <Box component={Paper} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n              </Box>\n            </Grid>\n            <Grid item lg={12}>\n              <Box component={Paper} mt={2} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={5}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"filled\"\n                  name=\"detail\"\n                  type=\"text\"\n                  value=\"Quick Notes\"\n                  id=\"detail\"\n                  sx={{ borderRadius: \"1rem\" }}\n                />\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerDoc;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  RadioGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Radio,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst Time = () => {\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [timeToggle, setTimeToggle] = useToggle(true);\n  const [billable, setBillable] = useToggle(false);\n\n  // const [bill, setBill] = useToggle(false);\n  const [time, setTime] = useState(\"\");\n  const [timeData, setTimeData] = useState({\n    contact: 0,\n    matter_name: 0,\n    category: \"\",\n    sub_category: \"\",\n    // time: \"\",\n    hard: false,\n    soft: false,\n    unit: 0,\n    qty: 0,\n    rate: 0,\n    file: \"\",\n    detail: \"\",\n    bill_by: 0,\n    note: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    category,\n    sub_category,\n    hard,\n    soft,\n    unit,\n    // time,\n    qty,\n    rate,\n    file,\n    detail,\n    bill_by,\n\n    note,\n  } = timeData;\n  const onChange = (e) =>\n    setTimeData({ ...timeData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    let date = GetDate(pickDate);\n\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      category,\n      sub_category,\n      hard,\n      soft,\n      unit,\n      qty,\n      rate,\n      time,\n      date,\n      detail,\n      bill_by,\n      billable,\n      note,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/add-time/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Typography component=\"h3\" variant=\"h4\">\n          Time\n        </Typography>\n        <Grid\n          container\n          spacing={2}\n          mt={2}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n          }}\n        >\n          <Grid item xs={12}>\n            <Grid container p={3}>\n              <Grid item xs={6}>\n                <FormControlLabel\n                  size=\"large\"\n                  label=\"Time\"\n                  labelPlacement=\"start\"\n                  control={\n                    <Switch\n                      size=\"large\"\n                      checked={timeToggle}\n                      onChange={(e) => setTimeToggle(e)}\n                    />\n                  }\n                />\n                {timeToggle ? null : (\n                  <Box>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">Expense</FormLabel>\n                      <RadioGroup\n                        row\n                        aria-label=\"expense\"\n                        defaultValue=\"\"\n                        name=\"expense\"\n                        id=\"expense\"\n                      >\n                        <FormControlLabel\n                          value=\"hard\"\n                          control={<Radio />}\n                          label=\"Hard\"\n                        />\n                        <FormControlLabel\n                          value=\"soft\"\n                          control={<Radio />}\n                          label=\"Soft\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  </Box>\n                )}\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"matter\"\n                  label=\"matter\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"matter\"\n                  autoComplete=\"matter\"\n                  disabled\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"contact\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                  disabled\n                />\n              </Grid>\n            </Grid>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"category\"\n              label=\"category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"category\"\n              autoComplete=\"category\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"sub_category\"\n              label=\"sub_category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"sub_category\"\n              autoComplete=\"sub_category\"\n            />\n            {timeToggle ? (\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"rate\"\n                label=\"rate\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"rate\"\n                autoComplete=\"rate\"\n              />\n            ) : (\n              <Fragment>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"unit\"\n                  label=\"unit\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"unit\"\n                  autoComplete=\"unit\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"qty\"\n                  label=\"Qty\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"qty\"\n                  autoComplete=\"qty\"\n                />\n                <Box m={1}>\n                  <Typography component=\"lable\"> Receipt(s) </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n              </Fragment>\n            )}\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"HH:MM\"\n              mask={[\"H\", \"H\", \"M\", \"M\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time\"\n              name=\"time\"\n              id=\"time\"\n              value={time}\n              type=\"text\"\n              onValueChange={(e) => setTime(e.value)}\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Date\"\n                value={pickDate}\n                name=\"pickdate\"\n                id=\"pickdate\"\n                onChange={(e) => setPickDate(e)}\n                renderInput={(params) => <TextField size=\"small\" {...params} />}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"detail\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n              autoComplete=\"detail\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bill_by\"\n              label=\"bill_by\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bill_by\"\n              autoComplete=\"bill_by\"\n            />\n            <FormControlLabel\n              size=\"large\"\n              label=\"Billable\"\n              labelPlacement=\"start\"\n              control={\n                <Switch\n                  size=\"large\"\n                  checked={billable}\n                  onChange={() => setBillable(billable)}\n                />\n              }\n            />\n            <br />\n          </Grid>\n        </Grid>\n        <Grid container>\n          <Grid item lg={12}>\n            <TextField\n              fullWidth\n              multiline\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"note\"\n              rows={4}\n              // label=\"note\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              placeholder=\"Private / internal notes\"\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Time;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport LedgerActivity from \"./LedgerActivity\";\nimport LegderDashbard from \"./LedgerDashbard\";\nimport LedgerDoc from \"./LedgerDoc\";\nimport LedgerTImeList from \"./LedgerTImeList\";\nimport Time from \"./Time\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Ledger\">\n          <LegderDashbard />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Documents\">\n          <LedgerDoc />\n        </div>\n        <div label=\"Time\">\n          <Time />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst SubCategory = () => {\n  const [subCategory, setSubCategory] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/sub-category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setSubCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/sub-category/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n      })\n      .catch((err) => setStatus(err.statusText));\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/sub-category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n      })\n      .catch((err) => {\n        FetchData();\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Sub-Category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Sub-Category\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Sub-Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? (\n        subCategory.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default SubCategory;\n","/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst catHandler = (id) => {\n  console.log(id);\n};\n\nconst Category = () => {\n  const [category, setCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/category/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Add New Category\"}</DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* {!loading ? (\n        category?.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )} */}\n    </Fragment>\n  );\n};\n\nexport default Category;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Classification = () => {\n  const [classification, setClassification] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/classification/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setClassification(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/classification/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n        return <ActionAlerts value={{ status: status }} />;\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/api/classification/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return <ActionAlerts value={{ status: res.statusText }} />;\n      })\n      .catch((err) => {\n        FetchData();\n        return <ActionAlerts value={{ status: err.statusText }} />;\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Classification\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Classification\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Classification Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? (\n        classification.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Classification;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Typography, Grid, Button, Box } from \"@mui/material\";\n\nimport SubCategory from \"./SubCategory\";\nimport Category from \"./Category\";\nimport Classification from \"./Classification\";\n\nconst ManageCategory = () => {\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={8}>\n          <Typography component=\"h3\" variant=\"h5\">\n            Manage Category, Sub-category, Classification\n          </Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"error\">\n              Delete Checked\n            </Button>\n          </Box>\n        </Grid>\n\n        <Grid item lg={12}>\n          <Grid container spacing={5} mt={1}>\n            <Grid item lg={4}>\n              <Category />\n            </Grid>\n            <Grid item lg={4}>\n              <SubCategory />\n            </Grid>\n            <Grid item lg={4}>\n              <Classification />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageCategory;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Button,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { ActionAlerts, GetTime, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Contact = () => {\n  const [clientNo, setClientNo] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [ssn, setSsn] = useState(\"\");\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [homeNo, setHomeNo] = useState(\"\");\n  const [officeNo, setOfficeNo] = useState(\"\");\n  const [faxNo, setFaxNo] = useState(\"\");\n  const [otherNo, setOtherNo] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [plus4, setPlus4] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [contactData, setContactData] = useState({\n    // company info\n    company_name: \"\",\n    website: \"\",\n    ger_email: \"\",\n    billing_email: \"\",\n    // address\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    note: \"\",\n    f_name: \"\",\n    l_name: \"\",\n    email_1: \"\",\n    email_2: \"\",\n    email_3: \"\",\n    // other address\n    street2: \"\",\n    suite2: \"\",\n    city2: \"\",\n    state2: \"\",\n    office: \"\",\n    team: \"\",\n    member: \"\",\n    assign_to: \"\",\n    contact: \"\",\n    relation: \"\",\n  });\n\n  const {\n    company_name,\n    website,\n    ger_email,\n    billing_email,\n    street,\n    suite,\n    city,\n    state,\n    note,\n    f_name,\n    l_name,\n    email_1,\n    email_2,\n    email_3,\n    street2,\n    suite2,\n    city2,\n    state2,\n    office,\n    team,\n    member,\n    assign_to,\n    contact,\n    relation,\n  } = contactData;\n\n  const onChange = (e) => {\n    e.persist();\n    setContactData({ ...contactData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    //   let date = GetDate(pickDate);\n    //   const body = JSON.stringify({\n    //     company_name,\n    //     website,\n    //     ger_email,\n    //     billing_email,\n    //     street,\n    //     suite,\n    //     city,\n    //     state,\n    //     zip,\n    //     plus4,\n    //     client_no,\n    //     f_name,\n    //     l_name,\n    //     dob,\n    //     ssn,\n    //     mobile_no,\n    //     home_no,\n    //     office_no,\n    //     fax_no,\n    //     other_no,\n    //     email_1,\n    //     email_2,\n    //     email_3,\n    //     street2,\n    //     suite2,\n    //     city2,\n    //     state2,\n    //     zip2,\n    //     plus42,\n    //     office,\n    //     team,\n    //     member,\n    //     assign_to,\n    //     contact,\n    //     relation,\n    //   });\n    //   axios\n    //     .post(`${process.env.REACT_APP_API_URL}/api/contact/`, body, CONFIG)\n    //     .then((res) => {\n    //       <ActionAlerts value={{ status: res.statusText, message: \"Success\" }} />;\n    //     })\n    //     .catch((err) => {\n    //       <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />;\n    //     });\n    //   console.log(body);\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container p={2}>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h5\">\n              Company info\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"company_name\"\n              label=\"Company Name\"\n              type=\"text\"\n              value={company_name}\n              onChange={(e) => onChange(e)}\n              id=\"company_name\"\n              autoComplete=\"company_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Client #\"\n              id=\"clientno\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"clientno\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={clientNo}\n              onValueChange={(e) => setClientNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"First Name\"\n              label=\"f_name\"\n              type=\"text\"\n              value={f_name}\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Last Name\"\n              label=\"l_name\"\n              type=\"text\"\n              value={l_name}\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"DOB\"\n              id=\"dob\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              name=\"dob\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={dob}\n              onValueChange={(e) => setDob(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"#### #### ##\"\n              customInput={TextField}\n              label=\"SSN\"\n              id=\"ssn\"\n              name=\"ssn\"\n              value={ssn}\n              type=\"text\"\n              onValueChange={(e) => setSsn(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobileNo}\n              onValueChange={(e) => setMobileNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={homeNo}\n              onValueChange={(e) => setHomeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Office #\"\n              id=\"offlice_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"office_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={officeNo}\n              onValueChange={(e) => setOfficeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Fax #\"\n              id=\"fax_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"fax_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={faxNo}\n              onValueChange={(value) => setFaxNo(value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Other #\"\n              id=\"other_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"other_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={otherNo}\n              onValueChange={(e) => setOtherNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_1\"\n              label=\"Email 1\"\n              type=\"email\"\n              value={email_1}\n              onChange={(e) => onChange(e)}\n              id=\"email_1\"\n              autoComplete=\"email_1\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_2\"\n              label=\"Email 2\"\n              type=\"email\"\n              value={email_2}\n              onChange={(e) => onChange(e)}\n              id=\"email_2\"\n              autoComplete=\"email_2\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_3\"\n              label=\"Email 3\"\n              value={email_3}\n              type=\"email\"\n              onChange={(e) => onChange(e)}\n              id=\"email_3\"\n              autoComplete=\"email_3\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"street\"\n              type=\"text\"\n              value={street}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              value={city}\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip\"\n              label=\"zip\"\n              type=\"text\"\n              id=\"zip\"\n              type=\"text\"\n              value={zip}\n              onValueChange={(e) => setZip(e.value)}\n            />\n\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus4\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus4\"\n              type=\"text\"\n              value={plus4}\n              onValueChange={(e) => setPlus4(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              multiline\n              rows={5}\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Notes...\"\n              label=\"note\"\n              type=\"text\"\n              value={note}\n              onChange={(e) => onChange(e)}\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h6\">\n              Alternate Information\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"webiste\"\n              label=\"Webiste\"\n              type=\"text\"\n              value={website}\n              onChange={(e) => onChange(e)}\n              id=\"webiste\"\n              autoComplete=\"webiste\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"ger_email\"\n              label=\"General Email\"\n              type=\"text\"\n              value={ger_email}\n              onChange={(e) => onChange(e)}\n              id=\"ger_email\"\n              autoComplete=\"ger_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_email\"\n              label=\"Invoice/ Billing Email\"\n              type=\"text\"\n              value={billing_email}\n              onChange={(e) => onChange(e)}\n              id=\"billing_email\"\n              autoComplete=\"billing_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"Street\"\n              type=\"text\"\n              value={street2}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite2}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              type=\"text\"\n              value={city2}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip2\"\n              label=\"Zip\"\n              type=\"text\"\n              id=\"zip2\"\n              type=\"text\"\n              value={zip2}\n              onValueChange={(e) => setZip2(e.value)}\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus42\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus42\"\n              type=\"text\"\n              value={plus42}\n              onValueChange={(e) => setPlus42(e.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Source\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"office\"\n                  label=\"Office\"\n                  type=\"text\"\n                  value={office}\n                  onChange={(e) => onChange(e)}\n                  id=\"office\"\n                  autoComplete=\"office\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"team\"\n                  label=\"Team\"\n                  type=\"text\"\n                  value={team}\n                  onChange={(e) => onChange(e)}\n                  id=\"team\"\n                  autoComplete=\"team\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"member\"\n                  label=\"Member\"\n                  type=\"text\"\n                  value={member}\n                  onChange={(e) => onChange(e)}\n                  id=\"member\"\n                  autoComplete=\"member\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Assigned To\n                </Typography>\n                <FormControl\n                  size=\"small\"\n                  sx={{ mt: 2, mb: 2, minWidth: \"14rem\" }}\n                >\n                  <InputLabel id=\"demo-simple-select-autowidth-label\">\n                    Assigned To\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-autowidth-label\"\n                    id=\"demo-simple-select-autowidth\"\n                    value={assign_to}\n                    onChange={(e) => onChange(e)}\n                    autoWidth\n                    label=\"assign_to\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>Auto Assign</em>\n                    </MenuItem>\n                    <MenuItem value={10}>Twenty</MenuItem>\n                    <MenuItem value={21}>Twenty one</MenuItem>\n                    <MenuItem value={22}>Twenty one and a half</MenuItem>\n                  </Select>\n                </FormControl>\n\n                <Button variant=\"contained\" color=\"primary\">\n                  Auto Assign\n                </Button>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Linked Contacts\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"Contact\"\n                  type=\"text\"\n                  value={contact}\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"relation\"\n                  label=\"Relation\"\n                  type=\"text\"\n                  value={relation}\n                  onChange={(e) => onChange(e)}\n                  id=\"relation\"\n                  autoComplete=\"relation\"\n                />\n              </Grid>\n            </Grid>\n            <Box sx={{ float: \"right\" }}>\n              <Button variant=\"contained\" type=\"submit\" endIcon={<SaveIcon />}>\n                Save\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Contact;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Button,\n  TextField,\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Tab,\n  Paper,\n  Box,\n  Typography,\n  Switch,\n} from \"@mui/material\";\nimport { TabList, TabContext, TabPanel } from \"@mui/lab\";\nimport { connect } from \"react-redux\";\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport NumberFormat from \"react-number-format\";\n\n// import { update_profile } from \"../../store/actions/profile\";\n\nconst Profile = ({ profile }) => {\n  const [value, setValue] = React.useState(\"1\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [underGradYear, setUnderGradYear] = useState(\"\");\n\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [barNo, setBarNo] = useState(\"\");\n  const [practiceTime, setPracticeTime] = useState(\"\");\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    mobile: 0,\n    phone: 0,\n    state: \"\",\n    city: \"\",\n    language: \"\",\n    locate: false,\n    search_active: false,\n    law_school: \"\",\n    grad_year: \"\",\n    bar_admit_date: \"\",\n    undergrad_school: \"\",\n    undergrad_area: \"\",\n    undergrad_year: \"\",\n    bar_no: 0,\n    admitted_practice: \"\",\n    practice_time: \"\",\n    longest_tenure: \"\",\n    average_tenure: \"\",\n    current_tenure: \"\",\n    past_bar_companies_no: \"\",\n    primary_area: \"\",\n  });\n  const {\n    username,\n    email,\n    mobile,\n    phone,\n    state,\n    city,\n    language,\n    locate,\n    search_active,\n    law_school,\n    grad_year,\n    bar_admit_date,\n    undergrad_school,\n    undergrad_area,\n    undergrad_year,\n    bar_no,\n    admitted_practice,\n    practice_time,\n    longest_tenure,\n    average_tenure,\n    current_tenure,\n    past_bar_companies_no,\n    primary_area,\n  } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let id = profile.id;\n    const body = JSON.stringify({\n      username,\n      email,\n      mobile,\n      phone,\n      state,\n      city,\n      language,\n      locate,\n      search_active,\n      law_school,\n      grad_year,\n      bar_admit_date,\n      undergrad_school,\n      undergrad_area,\n      undergrad_year,\n      bar_no,\n      admitted_practice,\n      practice_time,\n      longest_tenure,\n      average_tenure,\n      current_tenure,\n      past_bar_companies_no,\n      primary_area,\n    });\n    console.log(body);\n    axios\n      .patch(\n        `${process.env.REACT_APP_API_URL}/api/profile/${id}/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Fragment>\n      {/* {profile ? ( */}\n      <Box p={5}>\n        <Paper elevation={5} sx={{ borderRadius: 3 }}>\n          <TabContext value={value} p={8}>\n            <Box component=\"form\" onSubmit={(e) => onSubmit(e)}>\n              <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                <TabList\n                  onChange={handleChange}\n                  aria-label=\"lab API tabs example\"\n                >\n                  <Tab label=\"Profile\" value=\"1\" />\n                  <Tab label=\"Education\" value=\"2\" />\n                  <Tab label=\"Work History\" value=\"3\" />\n                </TabList>\n              </Box>\n              <TabPanel value=\"1\">\n                <Grid container spacing={2}>\n                  <Grid item sx={12} xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Username\"\n                      value={username}\n                      id=\"username\"\n                      name=\"username\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.username}\n                      disabled\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Mobile #\"\n                      id=\"mobile\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"mobile\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={mobileNo}\n                      onValueChange={(e) => setMobileNo(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Phone #\"\n                      id=\"phone\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"phone\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={phoneNo}\n                      onValueChange={(e) => setPhoneNo(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Email\"\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.email}\n                      disabled\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"State\"\n                      id=\"state\"\n                      name=\"state\"\n                      type=\"text\"\n                      value={state}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.state}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"City\"\n                      id=\"city\"\n                      name=\"city\"\n                      type=\"text\"\n                      value={city}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.city}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Language(s)\"\n                      value={language}\n                      id=\"language\"\n                      name=\"language\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.language}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Willing to locate\"\n                      id=\"locate\"\n                      name=\"locate\"\n                      value={locate}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.locate}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Search Type (Active/ Passiv)\"\n                      id=\"search_active\"\n                      name=\"search_active\"\n                      value={search_active}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.search_active}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      m={5}\n                      variant=\"contained\"\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"2\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"2\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Law School\"\n                      id=\"law_school\"\n                      name=\"law_school\"\n                      value={law_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.law_school}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Grad year\"\n                      id=\"grad_year\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      name=\"grad_year\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={gradYear}\n                      onValueChange={(e) => setGradYear(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####/##/##\"\n                      placeholder=\"YYYY/MM/DD\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n                      customInput={TextField}\n                      label=\"Bar Admittance Date\"\n                      id=\"bar_admit_date\"\n                      name=\"bar_admit_date\"\n                      value={barDate}\n                      onValueChange={(e) => setBarDate(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrad school\"\n                      id=\"undergrad_school\"\n                      name=\"undergrad_school\"\n                      value={undergrad_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_school}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrade area of study\"\n                      id=\"undergrad_area\"\n                      name=\"undergrad_area\"\n                      value={undergrad_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_area}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      label=\"Undergrade year\"\n                      id=\"undergrad_year\"\n                      name=\"undergrad_year\"\n                      value={underGradYear}\n                      type=\"text\"\n                      onValueChange={(e) => setUnderGradYear(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"#### #### ##\"\n                      customInput={TextField}\n                      label=\"Bar #\"\n                      id=\"bar_no\"\n                      name=\"bar_no\"\n                      value={barNo}\n                      type=\"text\"\n                      onValueChange={(e) => setBarNo(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Admitted practice (state & District)\"\n                      value={admitted_practice}\n                      id=\"admitted_practice\"\n                      name=\"admitted_practice\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.admitted_practice}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      variant=\"contained\"\n                      mb={5}\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"3\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"3\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Practive Time (months / years)\"\n                      id=\"practice_time\"\n                      name=\"practice_time\"\n                      value={practiceTime}\n                      type=\"text\"\n                      onValueChange={(e) => setPracticeTime(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Longest tenure (months / years)\"\n                      id=\"longest_tenure\"\n                      name=\"longest_tenure\"\n                      value={longestTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setLongestTenure(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Average tenure (months / years)\"\n                      value={averageTenure}\n                      id=\"average_tenure\"\n                      name=\"average_tenure\"\n                      type=\"text\"\n                      onValueChange={(e) => setAverageTenure(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Time at Current Company (months / years)\"\n                      id=\"current_tenure\"\n                      name=\"current_tenure\"\n                      value={currentTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setCurrentTenure(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"# of Companies Post Bar\"\n                      id=\"past_bar_companies_no\"\n                      name=\"past_bar_companies_no\"\n                      value={past_bar_companies_no}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.past_bar_companies_no}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Primary areas of Law\"\n                      id=\"primary_area\"\n                      name=\"primary_area\"\n                      value={primary_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.primary_area}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Button\n                      variant=\"contained\"\n                      type=\"submit\"\n                      sx={{\n                        float: \"right\",\n                        marginTop: \"10rem\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n            </Box>\n          </TabContext>\n        </Paper>\n      </Box>\n      {/* // ) : ( // <Typography>Something wend wrong!</Typography>\n      // )} */}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  profile: state.auth.profile,\n});\n\nexport default connect(mapStateToProps)(Profile);\n","/** @format */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  TextField,\n  Switch,\n  FormControlLabel,\n  Box,\n  Grid,\n  Button,\n  Typography,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport axios from \"axios\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\n\nconst CreateTask = () => {\n  const [dueDate, setDueDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [bill, setBill] = useToggle(true);\n  const [matterData, setMatterData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useToggle(true);\n  const [file, setFile] = useState(\"\");\n  const [taskData, setTaskData] = useState({\n    matter_id: 0,\n    matter_contact: 0,\n    matter: \"\",\n    task: \"\",\n    filename: \"\",\n    assign_to: 0,\n    detail: \"\",\n  });\n\n  const {\n    matter_id,\n    matter_contact,\n    matter,\n    task,\n    filename,\n    assign_to,\n    detail,\n  } = taskData;\n\n  const onChange = (e) =>\n    setTaskData({ ...taskData, [e.target.name]: e.target.value });\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/matter/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setMatterData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log(matter_id, matter_contact, matter, task);\n    let due_at = GetDate(dueDate);\n    let is_billable = bill;\n    let is_private = isPrivate;\n\n    const body = JSON.stringify({\n      matter_id,\n      matter_contact,\n      matter,\n      task,\n      file,\n      is_billable,\n      is_private,\n      due_at,\n      assign_to,\n      detail,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-task/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n          \"& .MuiSelect-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Task\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_id\"\n              label=\"matter_id\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_id}\n              onChange={(e) => onChange(e)}\n              id=\"matter_id\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"matter\"\n              type=\"text\"\n              min=\"0\"\n              value={matter}\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"task\"\n              label=\"Task\"\n              type=\"text\"\n              value={task}\n              onChange={(e) => onChange(e)}\n              id=\"task\"\n              autoComplete=\"task\"\n            />\n            <Box ml={2} mt={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Attach File \"\n                labelPlacement=\"start\"\n                control={\n                  <input\n                    type=\"file\"\n                    name=\"filename\"\n                    id=\"file\"\n                    onChange={(e) => onChange(e)}\n                  />\n                }\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"file\"\n                label=\"please chose any file\"\n                type=\"text\"\n                min=\"0\"\n                value={filename}\n                onChange={(e) => setFile(filename)}\n                id=\"file\"\n                disabled\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_contact\"\n              label=\"matter_contact\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_contact}\n              onChange={(e) => onChange(e)}\n              id=\"matter_contact\"\n            />\n            <Box p={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Billable\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={bill}\n                    onChange={() => setBill(bill)}\n                  />\n                }\n              />\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Private\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={isPrivate}\n                    onChange={() => setIsPrivate(isPrivate)}\n                  />\n                }\n              />\n            </Box>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Due Date\"\n                value={dueDate}\n                name=\"dueDate\"\n                id=\"dueDate\"\n                onChange={(e) => setDueDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"Assign to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              autoComplete=\"assign_to\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              multiline\n              rows={5}\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"Detail\"\n              type=\"text\"\n              value={detail}\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n            />\n\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateTask;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport ViewTasks from \"./ViewTasks\";\nimport CreateTask from \"./CreateTask\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Task\">\n          <ViewTasks />\n        </div>\n        <div label=\"Create Task\">\n          <CreateTask />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport DashBoard from \"../Admin/DashBoard\";\n\nimport {\n  Box,\n  Typography,\n  Tabs,\n  Tab,\n  IconButton,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport TabContext from \"@mui/lab/TabContext\";\nimport TabList from \"@mui/lab/TabList\";\nimport TabPanel from \"@mui/lab/TabPanel\";\nimport PropTypes from \"prop-types\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\n\n// components of tabs\nimport Invoice from \"../../Invoice\";\nimport Matter from \"../../Matter\";\nimport Ledger from \"../../Ledger\";\nimport Favorite from \"../../Favorite/Favorites\";\nimport Category from \"../../Category/ManageCategory\";\nimport Contact from \"../../Contact/Contact\";\nimport Profile from \"../../Profile/Profile\";\nimport Tasks from \"../../Tasks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTab, removeTab } from \"../../../redux/features/tabSlice\";\n\nconst data = [\n  { name: \"invoice\", content: <Invoice /> },\n  { name: \"matter\", content: <Matter /> },\n  { name: \"ledger\", content: <Ledger /> },\n  { name: \"favorite\", content: <Favorite /> },\n  { name: \"category\", content: <Category /> },\n  { name: \"contact\", content: <Contact /> },\n  { name: \"profile\", content: <Profile /> },\n  { name: \"tasks\", content: <Tasks /> },\n];\nconst component = {\n  invoice: <Invoice />,\n  matter: <Matter />,\n  ledger: <Ledger />,\n  favorite: <Favorite />,\n  category: <Category />,\n  contact: <Contact />,\n  profile: <Profile />,\n  tasks: <Tasks />,\n};\n\nconst AdminDashboard = () => {\n  const tabList = useSelector((state) => state.tabs);\n  const dispatch = useDispatch();\n  const [wordEntered, setWordEntered] = useState(\"\");\n  const searchItem = () => {\n    let selectedItem = data.filter((value) => {\n      if (value.name === wordEntered) {\n        return true;\n      }\n    });\n  };\n\n  const handleChangeSearch = (e) => {\n    setWordEntered(e.target.value);\n    dispatch(\n      addTab({\n        id: tabList.length + 1,\n        tab: e.target.value,\n      }),\n    );\n    searchItem();\n  };\n  const displayTabsName = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <Tab\n          icon={<Close />}\n          iconPosition=\"end\"\n          label={tab.name}\n          value={tab.id}\n        />\n      ));\n    } else return null;\n  };\n\n  const displayTabs = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <TabPanel value={tab.id}>{component[tab.name]}</TabPanel>\n      ));\n    } else return null;\n  };\n  const searchTab = () => {\n    return (\n      <Box\n        noValidate\n        sx={{\n          p: \"2px 4px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          width: \"100%\",\n          borderRadius: \"5rem\",\n          backgroundColor: \"#dfdfdf\",\n        }}\n      >\n        <Select\n          fullWidth\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={wordEntered}\n          label=\"Search....\"\n          onChange={handleChangeSearch}\n        >\n          {data.map((item, index) => (\n            <MenuItem key={index} value={item.name}>\n              {item.name}\n            </MenuItem>\n          ))}\n        </Select>\n\n        <IconButton type=\"submit\" sx={{ p: \"10px\" }} aria-label=\"search\">\n          {wordEntered.length === 0 ? <SearchIcon /> : <CloseIcon />}\n        </IconButton>\n      </Box>\n    );\n  };\n\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const renderTabs = () => {\n    return (\n      <Box sx={{ width: \"100%\" }}>\n        <TabContext value={value}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label=\"Dashboard\"\n                value={0}\n              />\n\n              {displayTabsName()}\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label=\"+\"\n                value={10}\n              />\n            </TabList>\n          </Box>\n          <TabPanel value={0}>\n            <DashBoard />\n          </TabPanel>\n          {displayTabs()}\n          <TabPanel value={10}>{searchTab()}</TabPanel>\n        </TabContext>\n      </Box>\n    );\n  };\n  useEffect(() => {\n    renderTabs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <Fragment>{renderTabs()}</Fragment>;\n};\n\nexport default AdminDashboard;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { LinearProgress, Box, Grid, Typography } from \"@mui/material\";\n\nconst ProgressBar = () => {\n  const [progress, setProgress] = useState(69);\n  return (\n    <Box paddingLeft={3} paddingRight={3}>\n      <Grid container>\n        <Grid item lg={1} xs={12}>\n          <Typography>{progress}%</Typography>\n        </Grid>\n        <Grid item lg={11} xs={12} mt={2} mb={5}>\n          <LinearProgress variant=\"determinate\" value={progress} />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ProgressBar;\n","/** @format */\n\nimport React from \"react\";\n\nimport { Typography, Box, Paper, Grid } from \"@mui/material\";\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from \"@mui/material\";\n\nconst randomDate = (start, end) => {\n  const getDateTime = new Date(\n    start.getTime() + Math.random() * (end.getTime() - start.getTime()),\n  );\n  const date = getDateTime.toLocaleDateString();\n  const hour = getDateTime.getHours();\n  const min = getDateTime.getMinutes();\n\n  return date + \" \" + hour + \":\" + min;\n};\n\nconst Task = () => {\n  return (\n    <Grid container>\n      <Grid item lg={12} xs={12}>\n        <Typography component=\"h5\" variant=\"h6\" color=\"primary\">\n          My Tasks\n        </Typography>\n        <TableContainer component={Paper}>\n          <Table size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    ID\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Date\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Subject\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Detail\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow bgColor=\"#e85355\">\n                <TableCell>\n                  <Typography variant=\"caption\">123452</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Submit Document X</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display first 3 links\n                  </Typography>{\" \"}\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#fd9905\">\n                <TableCell>\n                  <Typography variant=\"caption\">113457</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Y</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display more details\n                  </Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#28c570\">\n                <TableCell>\n                  <Typography variant=\"caption\">113455</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Z</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Note in popup</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"white\">\n                <TableCell>\n                  <Typography variant=\"caption\">113458</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document XY</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display First 3 links\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Task;\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nexport const AdminCards = () => {\n  return (\n    <>\n      <Grid container spacing={1}>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5} xs={12}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    New Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    Lost Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport const LawyerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Projected Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={230} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Annual Trending Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={768} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const FirmCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={6} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Lost Customers\n              </Typography>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const CustomerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={2}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Balance\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Payment Due\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={12345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nconst Cards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                New Matters\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={3425}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n// import axios from 'axios';\n\nimport { Grid } from \"@mui/material\";\n\nimport Calender from \"../Calender\";\nimport ProgressBar from \"../ProgressBar\";\n\nimport Tasks from \"../Tasks\";\nimport { CustomerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={3}>\n        <Grid item lg={2} xs={12}>\n          <CustomerCards />\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Calender />\n        </Grid>\n        <Grid item p={2} lg={6} xs={12}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <ProgressBar />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Button, Grid, Box, List, ListItem, ListItemText } from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst Templates = () => {\n  return (\n    <Fragment>\n      <Grid container mt={1} spacing={1}>\n        <Grid item xs={12} m={2}>\n          <Button variant=\"contained\" size=\"small\">\n            Merge Fields.XLS\n          </Button>\n          <Box sx={{ float: \"right\" }}>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Doc\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New PDF\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Email\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Edit\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Save\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Close\n            </Button>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Word Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Report Money</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - Report Time</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Report Billed hours</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              PDF Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>P001 - Write of Execution</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P002 - Memo of Cost</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P003 - Settlement Letter</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Email Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Invoice Email</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - New Client</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Firing Client</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              padding: \"15rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Templates can be opened here to edit them. user can add/ remove\n            merge fields directly to the document or PDF\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Templates;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Client/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst ClientDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default ClientDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const PieChart = () => {\n  const state = {\n    series: [86, 14],\n    options: {\n      chart: {\n        height: 500,\n        type: \"pie\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"65%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val + \"%\";\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Prodcutive v. Non-Productive Time\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n        horizontalAlign: \"center\",\n      },\n      colors: [\"#738df5\", \"#eaa3ff\"],\n      labels: [\"Non Productive\", \"Productive\"],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"pie\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            background: \"#aaa\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shade: \"gark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\", \"pink\"],\n        stops: [0, 3],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"user 1\",\n        data: [44, 55, 41, 37, 22, 43, 21],\n      },\n      {\n        name: \"user 2\",\n        data: [53, 32, 33, 52, 13, 43, 32],\n      },\n      {\n        name: \"User 3\",\n        data: [12, 17, 11, 9, 15, 11, 20],\n      },\n      {\n        name: \"User 4\",\n        data: [9, 7, 5, 8, 6, 9, 4],\n      },\n    ],\n    options: {\n      chart: {\n        type: \"bar\",\n        height: 350,\n        stacked: true,\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        borderRadius: 8,\n        colors: [\"#fff\"],\n      },\n\n      title: {\n        text: \"% Indicating User Ranking\",\n      },\n      xaxis: {\n        categories: [\n          \"Word per Min\",\n          \"Matter Completed\",\n          \"Revenue Generated\",\n          \"Articals Submitted\",\n          \"New Client\",\n          \"New Matter\",\n        ],\n        labels: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: undefined,\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      fill: {\n        opacity: 1,\n      },\n      color: [\"#738df5\", \"#eaa3ff\", \"#738df5\", \"#eaa3ff\"],\n      legend: {\n        show: false,\n        position: \"top\",\n        horizontalAlign: \"left\",\n        offsetX: 40,\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Grid } from \"@mui/material\";\nimport Calender from \"../Calender\";\nimport Tasks from \"../Tasks\";\nimport { Chart2, PieChart, BarChart } from \"./Chart\";\nimport { LawyerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={2}>\n          <LawyerCards />\n        </Grid>\n        <Grid item lg={4}>\n          <PieChart />\n        </Grid>\n        <Grid item lg={6}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={4}>\n          <Chart2 />\n        </Grid>\n        <Grid item lg={8}>\n          <BarChart />\n        </Grid>\n        <Grid item>\n          <Calender />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Lawyer/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst LawyerDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default LawyerDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const Chart = () => {\n  const state = {\n    series: [110, 110, 19, 80],\n    options: {\n      chart: {\n        height: 500,\n        type: \"donut\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"55%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Matter by Type\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      colors: [\"#03a5fc\", \"#fcd200\", \"#fca400\", \"#003f5c\"],\n      labels: [\n        \"Business Contacts\",\n        \"Criminal Defence\",\n        \"Personal Injury\",\n        \"Family Law\",\n      ],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"donut\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            // background: \"#333\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"solid\",\n      gradient: {\n        shade: \"dark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\"],\n        stops: [0, 100],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"Profit\",\n        data: [640, 505, 210, 108, 760, 410, 440, 140, 660, 320],\n      },\n      {\n        name: \"Loss\",\n        data: [530, 302, 420, 220, 290, 800, 160, 490, 708, 110],\n      },\n    ],\n\n    options: {\n      colors: [\"#e85355\", \"#28c570\"],\n      chart: {\n        height: 100,\n        type: \"bar\",\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n        },\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function (val) {\n          return \"$\" + val;\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return \"$ \" + val + \"\";\n          },\n        },\n      },\n\n      xaxis: {\n        categories: [\n          \"Jan\",\n          \"Feb\",\n          \"Mar\",\n          \"Apr\",\n          \"May\",\n          \"Jun\",\n          \"July\",\n          \"Aug\",\n          \"Sep\",\n          \"Oct\",\n        ],\n      },\n\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"right\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart2 = () => {\n  const state = {\n    series: [\n      {\n        data: [19, 57, 78, 40, 95, 25],\n      },\n    ],\n\n    options: {\n      chart: {\n        height: 350,\n        type: \"bar\",\n      },\n      colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n      plotOptions: {\n        bar: {\n          columnWidth: \"45%\",\n          distributed: true,\n        },\n      },\n      dataLabels: {\n        enabled: true,\n        formatter: function (val) {\n          return val + \"%\";\n        },\n      },\n      legend: {\n        show: false,\n      },\n      title: {\n        text: \"% of Task Completed by User\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      xaxis: {\n        categories: [\n          \"M. Jones\",\n          \"R. Smith\",\n          \"T.Sweeney\",\n          \"S. Booker\",\n          \"A. Knighter\",\n          \"J. King\",\n        ],\n        labels: {\n          style: {\n            // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n            fontSize: \"12px\",\n          },\n        },\n\n        legend: {\n          show: false,\n          dropShadow: false,\n          position: \"right\",\n          labels: {\n            useSeriesColors: true,\n          },\n          onItemClick: {\n            toggleDataSeries: true,\n          },\n          formatter: function (seriesName, opts) {\n            return (\n              seriesName +\n              \":  <NumberFormat value={\" +\n              opts.w.globals.series[opts.seriesIndex] +\n              \"} displayType={'text'} thousandSeparator={true}/>\"\n            );\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart3 = () => {\n  const state = {\n    // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n    options: {\n      series: [\n        {\n          data: [750, 280, 500, 720],\n        },\n      ],\n      chart: {\n        type: \"bar\",\n        height: 380,\n      },\n      plotOptions: {\n        bar: {\n          barHeight: \"100%\",\n          borderRadius: 8,\n          distributed: true,\n          horizontal: true,\n          dataLabels: {\n            position: \"top\",\n          },\n        },\n      },\n      //       light blue,  yellow, orange, dark blue,\n      colors: [\"#fcd200\", \"#fca400\", \"#003f5c\", \"#03a5fc\"],\n      dataLabels: {\n        enabled: false,\n        textAnchor: \"start\",\n        style: {\n          colors: [\"#fff\"],\n        },\n        formatter: function (val, opt) {\n          return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val;\n        },\n        offsetX: 0,\n        dropShadow: {\n          enabled: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        colors: [\"#fff\"],\n      },\n      xaxis: {\n        categories: [\n          \"Criminal Defense\",\n          \"Personal Injury\",\n          \"Family Law\",\n          \"Business Contract\",\n        ],\n      },\n      yaxis: {\n        labels: {\n          show: true,\n        },\n      },\n      title: {\n        text: \"Revenue By Mater Type\",\n        align: \"center\",\n        floating: true,\n      },\n\n      tooltip: {\n        theme: \"light\",\n        x: {\n          show: false,\n        },\n        y: {\n          formatter: function (val, opt) {\n            return (\n              opt.w.globals.labels[opt.dataPointIndex] + \": $ \" + val + \" k\"\n            );\n          },\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.options.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Paper, Grid, Box } from \"@mui/material\";\n\nimport Tasks from \"../Tasks\";\nimport { FirmCards } from \"../Cards\";\n\nimport { Chart, Chart2, BarChart, BarChart2, BarChart3 } from \"./Charts\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      {/*main dashboard section for display  */}\n      <Box component={Paper} elevation={3} mt={4}>\n        <Grid container spacing={2}>\n          <Grid item lg={8} xs={12}>\n            <FirmCards />\n            <Grid container>\n              <Grid item lg={5} xs={12}>\n                <Chart2 />\n              </Grid>\n              <Grid item lg={7} xs={12}>\n                <Tasks />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Chart />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <BarChart />\n          </Grid>\n          <Grid item lg={6} xs={6}>\n            <BarChart2 />\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <BarChart3 />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Firm/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst FirmDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default FirmDashboard;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport AdminDashboard from \"../components/Dashboard/UserRoles/AdminDashboard\";\nimport ClientDashboard from \"../components/Dashboard/UserRoles/ClientDashboard\";\nimport LawyerDashboard from \"../components/Dashboard/UserRoles/LawyerDashboard\";\nimport FirmDashboard from \"../components/Dashboard/UserRoles/FirmDashboard\";\n\nconst Dashboard = ({ user }) => {\n  // checker type of user\n  const [localuser, setLocalUser] = useState({\n    username: \"Guest\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: true,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const dashboardRedirect = () => {\n    switch (user.username) {\n      case \"admin\":\n        return <AdminDashboard />;\n      case \"firm\":\n        return <FirmDashboard />;\n      case \"lawyer\":\n        return <LawyerDashboard />;\n      default:\n        return <ClientDashboard />;\n    }\n  };\n  return <>{dashboardRedirect()}</>;\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/login_light.png\";\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const { username, email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    login(username, email, password);\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"87vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            {/* csrf_token */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              value={username}\n              onChange={(e) => onChange(e)}\n              autoComplete=\"new-password\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              autoComplete=\"new-password\"\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => onChange(e)}\n              id=\"password\"\n              minLength=\"6\"\n              autoComplete=\"password\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n          </Box>\n          <Grid container>\n            <Grid item xs>\n              <Link to=\"/\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../../actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n  FormControlLabel,\n  FormLabel,\n  FormGroup,\n  Checkbox,\n  RadioGroup,\n  Radio,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/signup_light.png\";\n\nconst Signup = ({ register, isAuthenticated }) => {\n  const [accountCreated, setAccountCreated] = useState(false);\n  const [isFirm, setIsFirm] = useState(false);\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    re_password: \"\",\n  });\n\n  const { username, email, first_name, last_name, password, re_password } =\n    formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    let is_firm = isFirm;\n    let is_client = !isFirm;\n\n    if (password === re_password) {\n      register(\n        email,\n        first_name,\n        last_name,\n        username,\n        password,\n        re_password,\n        is_firm,\n        is_client,\n      );\n\n      setAccountCreated(true);\n    } else {\n      console.log(\"Password no match, Please type again!\");\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (accountCreated) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"85vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={(e) => onChange(e)}\n                  autoComplete=\"new-password\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"first_name\"\n                  label=\"First Name\"\n                  name=\"first_name\"\n                  value={first_name}\n                  onChange={(e) => onChange(e)}\n                  autoComplete=\"new-password\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"last_name\"\n                  label=\"Last Name\"\n                  name=\"last_name\"\n                  autoComplete=\"last_name\"\n                  value={last_name}\n                  onChange={(e) => onChange(e)}\n                  autoFocus\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={(e) => onChange(e)}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                value={password}\n                onChange={(e) => onChange(e)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"re_password\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                value={re_password}\n                onChange={(e) => onChange(e)}\n                id=\"re_password\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Sign up as a </FormLabel>\n              <RadioGroup\n                row\n                value={isFirm}\n                onChange={(e) => setIsFirm(e.target.value)}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Firm\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Individual\"\n                />\n              </RadioGroup>\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormGroup>\n                <FormControlLabel\n                  control={<Checkbox />}\n                  label=\"Agreed on Term and Contidions\"\n                />\n              </FormGroup>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Register\n            </Button>\n          </Box>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" variant=\"body2\">\n                {\"Already have an account? Sign in\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { register })(Signup);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  Divider,\n  FormControlLabel,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Company = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate: 0.0,\n    role: \"\",\n    time_zone: \"\",\n    group: \"\",\n    job_title: \"\",\n    bar_no: 0,\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: 0,\n    ext: 0,\n    mobile: 0,\n    home: 0,\n    work_no: 0,\n\n    phone_ext: 0,\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    role,\n    time_zone,\n    group,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      c_email,\n      rate,\n      role,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      p_email,\n      phone_ext,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Box p={3} sx={{ float: \"right\" }}>\n        <LinkButton to=\"/users\">Manage User</LinkButton>\n        <LinkButton to=\"/user-group\">Manage Group</LinkButton>\n        <LinkButton to=\"/user-role\">Manage Role</LinkButton>\n      </Box>\n\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create User\n        </Typography>\n        <Grid container spacing={2} mt={2}>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"f_name\"\n              label=\"f_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"m_name\"\n              label=\"m_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"m_name\"\n              autoComplete=\"m_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"l_name\"\n              label=\"l_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"c_email\"\n              label=\"c_email\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"c_email\"\n              autoComplete=\"c_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"rate\"\n              label=\"rate\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"rate\"\n              autoComplete=\"rate\"\n            />\n            <FormControlLabel\n              label=\"Round Entries (Round [up/down] to nearnest 0.00 fraction of the hour\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n              sx={{ width: \"35rem\" }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"role\"\n              label=\"role\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"role\"\n              autoComplete=\"role\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"time_zone\"\n              label=\"time_zone\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"time_zone\"\n              autoComplete=\"time_zone\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"group\"\n              label=\"group\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"group\"\n              autoComplete=\"group\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"job_title\"\n              label=\"job_title\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"job_title\"\n              autoComplete=\"job_title\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bar_no\"\n              label=\"bar_no\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bar_no\"\n              autoComplete=\"bar_no\"\n            />\n          </Grid>\n          <Grid item mt={2}>\n            <Divider textAlign=\"left\">\n              <Typography component=\"h3\" variant=\"h5\">\n                Contact Info\n              </Typography>\n            </Divider>\n            <Box>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"street\"\n                label=\"street\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"street\"\n                autoComplete=\"street\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"suite\"\n                label=\"suite\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"suite\"\n                autoComplete=\"suite\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"city\"\n                label=\"city\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"city\"\n                autoComplete=\"city\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"state\"\n                label=\"state\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"state\"\n                autoComplete=\"state\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"zip\"\n                label=\"zip\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"zip\"\n                autoComplete=\"zip\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"ext\"\n                label=\"ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"ext\"\n                autoComplete=\"ext\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"mobile\"\n                label=\"mobile\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"mobile\"\n                autoComplete=\"mobile\"\n              />\n              <Button\n                variant=\"contained\"\n                sx={{ background: \"#5cb85c\", marginTop: \"0.5rem\" }}\n              >\n                Set Password Automaticly\n              </Button>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"home\"\n                label=\"home\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"home\"\n                autoComplete=\"home\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"work_no\"\n                label=\"work_no\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"work_no\"\n                autoComplete=\"work_no\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"p_email\"\n                label=\"p_email\"\n                type=\"email\"\n                onChange={(e) => onChange(e)}\n                id=\"p_email\"\n                autoComplete=\"p_email\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"phone_ext\"\n                label=\"phone_ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"phone_ext\"\n                autoComplete=\"phone_ext\"\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Box\n              sx={{\n                \"& .MuiButton-root\": { m: 1 },\n                float: \"right\",\n              }}\n            >\n              <Button variant=\"contained\" type=\"submit\">\n                Create Member\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Company;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\nimport Filters from \"../../components/Matter/Filters\";\nimport MatterCards from \"../../components/Matter/MatterCards\";\nimport MatterListLong from \"../../components/Matter/MatterListLong\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item xs={12}>\n            <Filters />\n          </Grid>\n          <Grid item xs={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item xs={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Matters;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Switch,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Button,\n  TextField,\n  Box,\n  Grid,\n  MenuItem,\n  Typography,\n  Divider,\n  FormControlLabel,\n  Stack,\n} from \"@mui/material\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport CreateUser from \"./CreateUser\";\nimport {\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useToggle } from \"../../context/useToggle\";\n\nconst ManageUser = () => {\n  const [activityData, setActivityData] = useState([]);\n\n  const [isActive, setIsActive] = useToggle(false);\n\n  const [roles, setRoles] = useState([]);\n  const [role, setRole] = useState(\"\");\n  const [group, setGroup] = useState(\"\");\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [rateType, setRateType] = useState(\"\");\n\n  const handleChange = (event) => {\n    setRateType(event.target.value);\n  };\n\n  const [approvel, setApprovel] = useToggle(false);\n\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate_type: \"\",\n    rate: \" \",\n    time_zone: \"\",\n    job_title: \"\",\n    bar_no: \" \",\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    ext: \"\",\n    mobile: \"\",\n    home: \"\",\n    work_no: \"\",\n    p_email: \"\",\n    phone_ext: \"\",\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    time_zone,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      p_email,\n      role,\n      c_email,\n      rate,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      phone_ext,\n    });\n\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/create-member/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchRoleData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/role/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setRoles(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  const FetchGroupData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/group/`, CONFIG)\n      .then((res) => {\n        setLoading2(false);\n        setGroups(res.data);\n      })\n      .catch((err) => {\n        setLoading2(false);\n      });\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setActivityData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchRoleData();\n    FetchData();\n    FetchGroupData();\n  }, []);\n\n  return (\n    <Fragment>\n      <Box>\n        <Typography component=\"h4\" variant=\"h5\" color=\"primary\" mb={2}>\n          Manage Users\n        </Typography>\n        <Stack p={3} direction=\"row\" spacing={2} sx={{ float: \"right\" }}>\n          <Search sx={{ width: \"15rem\" }}>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n          <Button\n            color=\"success\"\n            onClick={handleClickOpen}\n            variant=\"contained\"\n            sx={{ color: \"white\", background: \"#28c570\" }}\n          >\n            + Add User\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth=\"true\"\n            maxWidth=\"xl\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New User\"}</DialogTitle>\n            <DialogContent>\n              <Grid\n                container\n                spacing={2}\n                mt={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\" },\n                }}\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"f_name\"\n                    label=\"First Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"f_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"m_name\"\n                    label=\"Middle Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"m_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"l_name\"\n                    label=\"Last Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"l_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"c_email\"\n                    label=\"Company Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"c_email\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"rate\"\n                    label=\"Rate $\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"rate\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={6}>\n                  <Stack direction=\"row\" spacing={2} ml={2}>\n                    <FormControlLabel\n                      sx={{ fontSize: \"2rem\" }}\n                      label=\"\"\n                      control={\n                        <Switch\n                          checked={approvel}\n                          onChange={() => setApprovel(approvel)}\n                        />\n                      }\n                    />\n                    <Typography>\n                      Round Entries (Round [up/down] to nearnest\n                      <TextField\n                        margin=\"dense\"\n                        variant=\"standard\"\n                        type=\"text\"\n                        size=\"small\"\n                        placeholder=\"0.00\"\n                        sx={{\n                          maxWidth: \"5rem\",\n                        }}\n                      />\n                      fraction of the hour\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"role\"\n                    label=\"Role\"\n                    onChange={(e) => setRole(e.target.value)}\n                    id=\"role\"\n                    autoComplete=\"new-password\"\n                  >\n                    {!loading ? (\n                      roles.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"time_zone\"\n                    label=\"Time Zone\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"time_zone\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"group\"\n                    label=\"Group\"\n                    type=\"text\"\n                    onChange={(e) => setGroup(e.target.value)}\n                    id=\"group\"\n                    autoComplete=\"new-password\"\n                  >\n                    {!loading2 ? (\n                      groups.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"job_title\"\n                    label=\"Job Title\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"job_title\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"bar_no\"\n                    label=\"Bar #\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"bar_no\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={4} mb={2}>\n                <Divider />\n                <Typography mt={2} component=\"h3\" color=\"primary\" variant=\"h5\">\n                  Contact Info\n                </Typography>\n              </Box>\n\n              <Grid\n                container\n                spacing={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\" },\n                }}\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"street\"\n                    label=\"Street\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"street\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"suite\"\n                    label=\"Suite\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"suite\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"city\"\n                    label=\"City\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"city\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"state\"\n                    label=\"State\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"state\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"zip\"\n                    label=\"Zip\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"zip\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"ext\"\n                    label=\"+4\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"ext\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"p_email\"\n                    label=\"Personal Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"p_email\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <Box mt={1} ml={1}>\n                    <Button variant=\"contained\" color=\"primary\">\n                      Reset Password\n                    </Button>\n                  </Box>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"mobile\"\n                    label=\"Mobile #\"\n                    type=\"phone\"\n                    onChange={(e) => onChange(e)}\n                    id=\"mobile\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"home\"\n                    label=\"Home #\"\n                    type=\"phone\"\n                    onChange={(e) => onChange(e)}\n                    id=\"home\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"work_no\"\n                    label=\"Work #\"\n                    type=\"phone\"\n                    onChange={(e) => onChange(e)}\n                    id=\"work_no\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"phone_ext\"\n                    label=\"Extesion\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"phone_ext\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n              </Grid>\n              <Grid item lg={12}>\n                <Box\n                  sx={{\n                    \"& .MuiButton-root\": { m: 1, mr: 8 },\n                    float: \"right\",\n                  }}\n                >\n                  <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    type=\"submit\"\n                    sx={{ color: \"white\" }}\n                  >\n                    Activate\n                  </Button>\n                  <Button variant=\"contained\" color=\"error\">\n                    Deactivate\n                  </Button>\n                </Box>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n            </DialogActions>\n          </Dialog>\n        </Stack>\n\n        <TableContainer>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  <Typography color=\"white\">First Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Role</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Group</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Login</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Status</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Deactivate</Typography>\n                </TableCell>\n                <TableCell>\n                  <Switch\n                    color=\"success\"\n                    value={isActive}\n                    onChange={() => setIsActive()}\n                  />\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {/* {loading && isActive\n                ? activityData?.map((data) => (\n                    <TableRow>\n                      <TableCell>{data.f_name}</TableCell>\n                      <TableCell>{data.l_name}</TableCell>\n                      <TableCell>{data.p_email}</TableCell>\n                      <TableCell>{data.role}</TableCell>\n                      <TableCell>{data.group}</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>inactive</TableCell>\n                      <TableCell>\n                        <Button\n                          variant=\"contained\"\n                          value={data.id}\n                          onClick={() => handleDelete(data.id)}\n                          sx={{\n                            borderRadius: \"0.5rem\",\n                            float: \"right\",\n                          }}\n                        >\n                          <ClearIcon />\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                : null} */}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default ManageUser;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Stack,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst ManageUserGroup = () => {\n  const [filter, setFilter] = useState(\"\");\n\n  const handleChange = (event) => {\n    setFilter(event.target.value);\n  };\n  const [group, setGroup] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingUser, setLoadingUser] = useState(true);\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchUserData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        setLoadingUser(false);\n\n        setUserData(res.data);\n      })\n      .catch((err) => {\n        setLoadingUser(false);\n      });\n  };\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/group/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setGroup(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n    FetchUserData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/group/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/group/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={12}>\n          <Grid container spacing={2} direction=\"row\">\n            <Grid item lg={3}>\n              <Typography variant=\"h5\" component=\"h5\" m={1} color=\"primary\">\n                Manage Group\n              </Typography>\n            </Grid>\n            <Grid item lg={9}>\n              <Stack direction=\"row\" sx={{ float: \"right\" }}>\n                <Typography m={2} component=\"span\" color=\"primary\">\n                  Filter & Sort By\n                </Typography>\n                <FormControl sx={{ width: \"10rem\", height: \"2.5rem\" }}>\n                  <InputLabel id=\"demo-simple-select-label\" color=\"primary\">\n                    Custom Sort\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={filter}\n                    label=\"Age\"\n                    onChange={handleChange}\n                  >\n                    <MenuItem value=\"name\">By Name</MenuItem>\n                    <MenuItem value=\"role\">By Role</MenuItem>\n                    <MenuItem value=\"gorup\">By Group</MenuItem>\n                  </Select>\n                </FormControl>\n                <Search sx={{ width: \"20rem\", height: \"2.5rem\", m: 1 }}>\n                  <SearchIconWrapper>\n                    <SearchIcon />\n                  </SearchIconWrapper>\n                  <StyledInputBase\n                    placeholder=\"Search…\"\n                    inputProps={{ \"aria-label\": \"search\" }}\n                  />\n                </Search>\n              </Stack>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3}>\n          <Typography\n            variant=\"h5\"\n            component=\"h5\"\n            color=\"primary\"\n            align=\"center\"\n          >\n            Groups\n          </Typography>\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            fullWidth\n            sx={{\n              borderRadius: \"0.5rem\",\n            }}\n          >\n            + New Group\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New Group\"}</DialogTitle>\n            <DialogContent>\n              <TextField\n                required\n                fullWidth\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"name\"\n                label=\"Group Name\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n              <Button type=\"submit\" autoFocus>\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {/* {!loading ? (\n            group.map((data) => (\n              <Box mt={1}>\n                <List>\n                  <ListItem disablePadding>\n                    <ListItemText>{data.name}</ListItemText>\n                    <Button\n                      variant=\"contained\"\n                      value={data.id}\n                      onClick={() => handleDelete(data.id)}\n                      sx={{\n                        borderRadius: \"0.5rem\",\n                        float: \"right\",\n                      }}\n                    >\n                      <ClearIcon />\n                    </Button>\n                  </ListItem>\n                </List>\n              </Box>\n            ))\n          ) : (\n            <Typography>Loading ...</Typography>\n          )} */}\n        </Grid>\n        <Grid item lg={9}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow bgColor=\"#796ef0\">\n                  <TableCell>\n                    <Typography color=\"white\">First Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Last Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Role</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Group</Typography>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {/* {loadingUser\n                  ? null\n                  : userData?.map((data) => {\n                      return (\n                        <TableRow>\n                          <TableCell>{data.f_name}</TableCell>\n                          <TableCell>{data.l_name}</TableCell>\n                          <TableCell>{data.role}</TableCell>\n                          <TableCell>{data.group}</TableCell>\n                        </TableRow>\n                      );\n                    })} */}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item lg={12}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"success\" sx={{ color: \"white\" }}>\n              Done\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageUserGroup;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TableBody,\n  Typography,\n  Switch,\n} from \"@mui/material\";\n\nconst RoleFuncions = ({ data }) => {\n  const functions = [\n    \"Contacts\",\n    \"Matter\",\n    \"Calendar\",\n    \"Flat Fee\",\n    \"Expenses\",\n    \"Trust\",\n    \"Task(s)\",\n    \"Invoice\",\n    \"Payments\",\n    \"Full DOB\",\n    \"Full SSN\",\n    \"Partial SSN\",\n    \"Partial DOB\",\n    \"Roles\",\n    \"Run Reports\",\n    \"Discounts\",\n    \"Bank Accounts\",\n  ];\n  return (\n    <Fragment>\n      <TableContainer sx={{ overflowX: \"auto\" }}>\n        <Table size=\"small\" sx={{ fontSize: \"1rem\" }}>\n          <TableHead>\n            <TableRow bgColor=\"#796ef0\">\n              <TableCell>\n                <Typography color=\"white\">Function</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">View </Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Edit</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Create</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Delete</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Contacts</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Team</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Office</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Region</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">All</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {functions.map((data) => (\n              <TableRow>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  {data}\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default RoleFuncions;\n","/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  List,\n  Grid,\n  Box,\n  Typography,\n  ListItem,\n  ListItemText,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport RoleFuncions from \"./RoleFuncions\";\n\nconst UserRole = () => {\n  const [roles, setRoles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/role/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setRoles(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/role/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/role/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={12}></Grid>\n        <Grid item lg={2}>\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            fullWidth\n            sx={{\n              borderRadius: \"0.5rem\",\n            }}\n          >\n            + New Role\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New Role\"}</DialogTitle>\n            <DialogContent>\n              <TextField\n                required\n                fullWidth\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"name\"\n                label=\"Role Name\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n              <Button type=\"submit\" autoFocus>\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {!loading ? (\n            roles.map((data) => (\n              <Box mt={1}>\n                <List>\n                  <ListItem disablePadding>\n                    <ListItemText>{data.name}</ListItemText>\n                    <Button\n                      variant=\"contained\"\n                      value={data.id}\n                      size=\"small\"\n                      onClick={() => handleDelete(data.id)}\n                      sx={{\n                        borderRadius: \"0.5rem\",\n                        float: \"right\",\n                      }}\n                    >\n                      <ClearIcon />\n                    </Button>\n                  </ListItem>\n                </List>\n              </Box>\n            ))\n          ) : (\n            <Typography>Loading ...</Typography>\n          )}\n        </Grid>\n        <Grid item lg={10}>\n          <RoleFuncions data={roles} />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default UserRole;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport CreateUser from \"./CreateUser\";\nimport ManageUser from \"./ManageUser\";\nimport ManageUserGroup from \"./ManageUserGroup\";\nimport UserRole from \"./UserRole\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Manage Users\">\n          <ManageUser />\n        </div>\n\n        <div label=\"User Group\">\n          <ManageUserGroup />\n        </div>\n        <div label=\"User Role\">\n          <UserRole />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst TimeList = () => {\n  const [timeData, setTimeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTimeData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <Box>\n        <LinkButton to=\"/ledgers\" sx={{ float: \"right\" }}>\n          Ledger Dashboard\n        </LinkButton>\n        <Box p={3}>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Ledger Dashbaord\n          </LinkButton>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Add Time\n          </LinkButton>\n          <LinkButton to=\"/ledger-list\" sx={{ float: \"right\" }}>\n            Ledger List\n          </LinkButton>\n          <LinkButton to=\"/ledger-documents\" sx={{ float: \"right\" }}>\n            Documents\n          </LinkButton>\n        </Box>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Add</TableCell>\n\n                <TableCell>Matter #</TableCell>\n                <TableCell>Matter Name</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Billable Time</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell>Category</TableCell>\n                <TableCell>Activity</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n              ? null\n              : timeData?.map((data) => {\n                  return (\n                    <TableBody id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n\n                      <TableCell>{data.conatact}</TableCell>\n                      <TableCell>{data.date}</TableCell>\n                      <TableCell>{data.time}</TableCell>\n                      <TableCell>{data.rate}</TableCell>\n                      <TableCell>{data.category}</TableCell>\n                      <TableCell>{data.sub_category}</TableCell>\n                    </TableBody>\n                  );\n                })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TimeList;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Switch, FormControlLabel } from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Search = () => {\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [searchData, setSearchData] = useState({\n    state: \"\",\n    city: \"\",\n    practice_area: \"\",\n    law_school: \"\",\n\n    undergrad_study: \"\",\n    lamguages: \"\",\n    admitted_state: \"\",\n    relocate: false,\n  });\n\n  const {\n    state,\n    city,\n    practice_area,\n    law_school,\n\n    undergrad_study,\n    lamguages,\n    admitted_state,\n    relocate,\n  } = searchData;\n\n  const onChange = (e) =>\n    setSearchData({ ...searchData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"number\"\n              min=\"0\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Longest tenure (months / years)\"\n              id=\"longest_tenure\"\n              name=\"longest_tenure\"\n              value={longestTenure}\n              type=\"text\"\n              onValueChange={(e) => setLongestTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Average tenure (months / years)\"\n              value={averageTenure}\n              id=\"average_tenure\"\n              name=\"average_tenure\"\n              type=\"text\"\n              onValueChange={(e) => setAverageTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time at Current Company (months / years)\"\n              id=\"current_tenure\"\n              name=\"current_tenure\"\n              value={currentTenure}\n              type=\"text\"\n              onValueChange={(e) => setCurrentTenure(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"admitted_state\"\n              label=\"admitted_state\"\n              type=\"text\"\n              value={admitted_state}\n              onChange={(e) => onChange(e)}\n              id=\"admitted_state\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={gradYear}\n              onValueChange={(e) => setGradYear(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"undergrad_study\"\n              label=\"undergrad_study\"\n              step=\"0.01\"\n              type=\"text\"\n              value={undergrad_study}\n              onChange={(e) => onChange(e)}\n              id=\"undergrad_study\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"practice_area\"\n              label=\"practice_area\"\n              type=\"text\"\n              value={practice_area}\n              onChange={(e) => onChange(e)}\n              id=\"practice_area\"\n              disabled\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance Date\"\n              id=\"bar_admit_date\"\n              name=\"bar_admit_date\"\n              value={barDate}\n              onValueChange={(e) => setBarDate(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"lamguages\"\n              label=\"lamguages\"\n              type=\"text\"\n              value={lamguages}\n              onChange={(e) => onChange(e)}\n              id=\"lamguages\"\n            />\n            {/* <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Apply\n            </Button> */}\n            <Box m={3}>\n              <LinkButton to=\"/job-result\" sx={{ float: \"right\" }}>\n                Apply\n              </LinkButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Search;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\n// import axios from \"axios\";\n// import { CONFIG } from \"../../api/MatterApi\";\n// import { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Result = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(\"\");\n  // const [status, setStatus] = useState(\"\");\n  //   const FetchData = () => {\n  //     axios\n  //       .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n  //       .then((res) => {\n  //         setLoading(false);\n  //         setStatus(res.statusText);\n  //         setActivityData(res.data);\n  //       })\n  //       .catch((err) => {\n  //         setLoading(false);\n  //         setStatus(err.statusText);\n  //       });\n  //   };\n  //   useEffect(() => {\n  //     FetchData();\n  //   }, []);\n  return (\n    <Fragment>\n      <Box>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Rate</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Name</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">City</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">State</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Active</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Grage Year</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practice Area</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Relocation</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practicing</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading ? (\n              <TableBody>\n                <TableRow>\n                  <TableCell>74%</TableCell>\n                  <TableCell>Smith, John</TableCell>\n                  <TableCell>San Diego</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2000</TableCell>\n                  <TableCell>Criminal</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>22y - 03M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>72%</TableCell>\n                  <TableCell>Cassidy, Butch</TableCell>\n                  <TableCell>Los Angeles</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>2021</TableCell>\n                  <TableCell>Transctional</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>0y - 02M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>50%</TableCell>\n                  <TableCell>Short, Mart</TableCell>\n                  <TableCell>Sacramento</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2013</TableCell>\n                  <TableCell>Civil</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>06y - 11M</TableCell>\n                </TableRow>\n              </TableBody>\n            ) : (\n              activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })\n            )} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Result;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  FormControlLabel,\n  FormGroup,\n  Checkbox,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Saved = () => {\n  const [pickTime, setPickTime] = useState(new Date(\"2021-12-01T21:00:00\"));\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [jobData, setJobData] = useState({\n    name: \"\",\n    state: \"\",\n    city: \"\",\n    email: \"\",\n    mobile: \"\",\n    home: \"\",\n    law_school: \"\",\n    grad_year: \"\",\n    bar_adm_year: \"\",\n    practice_area: \"\",\n    mail_add: \"\",\n    relocate: false,\n    date: \"\",\n    time: \"\",\n    link: \"\",\n    notes: \"\",\n    file: \"\",\n  });\n\n  const {\n    name,\n    state,\n    city,\n    email,\n    mobile,\n    home,\n    law_school,\n    grad_year,\n    bar_adm_year,\n    practice_area,\n    mail_add,\n    relocate,\n    date,\n    time,\n    link,\n    notes,\n    file,\n  } = jobData;\n\n  const onChange = (e) =>\n    setJobData({ ...jobData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <FormGroup aria-label=\"position\" row>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Save\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Contacted\"\n                labelPlacement=\"start\"\n              />\n              <Typography component=\"label\" m={1}>\n                Interested :\n              </Typography>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Yes\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"No\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Interviewed\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Accept\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Reject\"\n                labelPlacement=\"start\"\n              />\n              <Box ml={3}>\n                <Typography component=\"h4\" color=\"success\" variant=\"h5\">\n                  Overall Score: 74%\n                </Typography>\n              </Box>\n            </FormGroup>\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"name\"\n              label=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(e) => onChange(e)}\n              id=\"name\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email\"\n              label=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              id=\"email\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobile}\n              onValueChange={(value) => onChange(value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={home}\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={grad_year}\n              onValueChange={(value) => onChange(value)}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance\"\n              id=\"bar_adm_year\"\n              name=\"bar_adm_year\"\n              value={bar_adm_year}\n              type=\"text\"\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"mail_add\"\n              label=\"mail_add\"\n              type=\"text\"\n              value={mail_add}\n              onChange={(e) => onChange(e)}\n              id=\"mail_add\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xs={4}>\n                <Box m={1}>\n                  <Typography component=\"lable\"> Writing Sample </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <TimePicker\n                    label=\"Pick Time\"\n                    name=\"picktime\"\n                    id=\"picktime\"\n                    value={pickTime}\n                    onChange={(e) => {\n                      setPickTime(e);\n                    }}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    inputFormat=\"yyyy-MM-dd\"\n                    mask=\"____-__-__\"\n                    label=\"Pick Date\"\n                    value={pickDate}\n                    name=\"pickdate\"\n                    id=\"pickdate\"\n                    onChange={(e) => setPickDate(e)}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n\n                <TextField\n                  size=\"small\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"link\"\n                  type=\"link\"\n                  defaultValue=\"2021-12-01\"\n                  value={link}\n                  onChange={(e) => onChange(e)}\n                  id=\"link\"\n                />\n              </Grid>\n              <Grid item xs={8}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={8}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"notes\"\n                  type=\"text\"\n                  value=\"Notes ...\"\n                  id=\"notes\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Saved;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport Search from \"./Search\";\nimport Result from \"./Result\";\nimport Saved from \"./Saved\";\nconst index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Search\">\n          <Search />\n        </div>\n        <div label=\"Result\">\n          <Result />\n        </div>\n        <div label=\"Saved\">\n          <Saved />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default index;\n","/** @format */\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nimport { Provider } from \"react-redux\";\n\nimport store, { persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport Layout from \"./hocs/Layout\";\n\nimport PrivateRoutes from \"./utils/PrivateRoute\";\n\nimport { UserProvider } from \"./context/User\";\n\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"./hocs/Theme\";\n\nimport Home from \"./containers/Home\";\n\n// Authentication links\nimport Login from \"./containers/Auth/Login\";\nimport Signup from \"./containers/Auth/Signup\";\n\nimport Profile from \"./components/Profile/Profile\";\nimport Company from \"./components/Profile/Company\";\n\nimport Matter from \"./components/Matter\";\n\nimport Matters from \"./containers/Matters/Matters\";\nimport MatterDetail from \"./components/Matter/MatterDetail\";\nimport NewMatter from \"./components/Matter/NewMatter\";\n\nimport Invoice from \"./components/Invoice\";\n\nimport CreateInvoice from \"./components/Invoice/CreateInvoice\";\n\nimport Payment from \"./components/Invoice/Payment\";\nimport ManageCategory from \"./components/Category/ManageCategory\";\n\nimport User from \"./components/User\";\n\nimport Time from \"./components/Ledger/Time\";\nimport TimeList from \"./components/Ledger/TimeList\";\n\nimport Ledger from \"./components/Ledger\";\n\nimport LedgerTImeList from \"./components/Ledger/LedgerTImeList\";\nimport LedgerActivity from \"./components/Ledger/LedgerActivity\";\n\nimport Tasks from \"./components/Tasks\";\nimport CreateTask from \"./components/Tasks/CreateTask\";\nimport ViewTasks from \"./components/Tasks/ViewTasks\";\nimport LedgerDoc from \"./components/Ledger/LedgerDoc\";\n\nimport Employee from \"./components/Employee\";\nimport Templates from \"./components/Template/Templates\";\n\nimport Contact from \"./components/Contact/Contact\";\nimport UserRole from \"./components/User/UserRole\";\nimport ManageUserGroup from \"./components/User/ManageUserGroup\";\n\nconst App = () => {\n  const alertOptions = {\n    timeout: 3000,\n    position: \"top center\",\n  };\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <UserProvider>\n          <ThemeProvider theme={theme}>\n            <AlertProvider template={AlertTemplate} {...alertOptions}>\n              <Router>\n                <Layout>\n                  <Switch>\n                    {/* loging regierter routes */}\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/signup\" component={Signup} />\n\n                    {/* private route after login  */}\n\n                    <PrivateRoutes exact path=\"/\" component={Home} />\n                    <PrivateRoutes path=\"/profile\" component={Profile} />\n                    <PrivateRoutes path=\"/company-detail\" component={Company} />\n\n                    <PrivateRoutes\n                      path=\"/matter-dashboard\"\n                      component={Matter}\n                    />\n                    <PrivateRoutes path=\"/matters\" component={Matters} />\n                    <PrivateRoutes\n                      path=\"/matter-detail\"\n                      component={MatterDetail}\n                    />\n                    <PrivateRoutes\n                      path=\"/create-matter\"\n                      component={NewMatter}\n                    />\n\n                    <PrivateRoutes path=\"/invoices\" component={Invoice} />\n                    <PrivateRoutes\n                      path=\"/create-invoice\"\n                      component={CreateInvoice}\n                    />\n                    <PrivateRoutes path=\"/recive-invoice\" component={Payment} />\n\n                    {/* <PrivateRoutes path=\"/create-user\" component={CreateUser} /> */}\n                    <PrivateRoutes path=\"/users\" component={User} />\n                    <PrivateRoutes path=\"/user-roles\" component={UserRole} />\n                    <PrivateRoutes\n                      path=\"/user-groups\"\n                      component={ManageUserGroup}\n                    />\n\n                    <PrivateRoutes\n                      path=\"/manage-categories\"\n                      component={ManageCategory}\n                    />\n                    <PrivateRoutes\n                      path=\"/ledger-documents\"\n                      component={LedgerDoc}\n                    />\n                    <PrivateRoutes path=\"/time\" component={Time} />\n                    <PrivateRoutes path=\"/time-list\" component={TimeList} />\n                    <PrivateRoutes path=\"/ledgers\" component={Ledger} />\n                    <PrivateRoutes\n                      path=\"/ledger-list\"\n                      component={LedgerTImeList}\n                    />\n                    <PrivateRoutes\n                      path=\"/activity-list\"\n                      component={LedgerActivity}\n                    />\n\n                    <PrivateRoutes path=\"/tasks\" component={Tasks} />\n                    <PrivateRoutes path=\"/create-task\" component={CreateTask} />\n                    <PrivateRoutes path=\"/view-tasks\" component={ViewTasks} />\n\n                    <PrivateRoutes\n                      path=\"/employee-search\"\n                      component={Employee}\n                    />\n\n                    <PrivateRoutes path=\"/templates\" component={Templates} />\n                    <PrivateRoutes path=\"/contact\" component={Contact} />\n                  </Switch>\n                </Layout>\n              </Router>\n            </AlertProvider>\n          </ThemeProvider>\n        </UserProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { Box } from \"@mui/material\";\n// import NumberFormat from \"react-number-format\";\n\nexport const Appointments = () => {\n  const options = {\n    chart: {\n      type: \"bar\",\n      height: 500,\n    },\n    series: [\n      {\n        data: [\n          {\n            x: \"Zoom\",\n            y: 150,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Phone\",\n            y: 250,\n            fillColor: \"#546E7A\",\n            strokeColor: \"#546E7A\",\n          },\n          {\n            x: \"In Person\",\n            y: 500,\n            fillColor: \"#f48024\",\n            strokeColor: \"#f48024\",\n          },\n          {\n            x: \"Met\",\n            y: 300,\n            fillColor: \"#13d8aa\",\n            strokeColor: \"#13d8aa\",\n          },\n          {\n            x: \"Rescheduled\",\n            y: 125,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Canceled\",\n            y: 30,\n            fillColor: \"#A5978B\",\n            strokeColor: \"#A5978B\",\n          },\n        ],\n      },\n    ],\n\n    options: {\n      plotOptions: {\n        bar: {\n          barHeight: \"50%\",\n          borderRadius: 4,\n\n          horizontal: true,\n          dataLabels: {\n            position: \"bottom\",\n          },\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      title: {\n        text: \"Appointments\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n    },\n    xaxis: {\n      style: {\n        fontSize: \"20px\",\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={options.options}\n          series={options.series}\n          height=\"300\"\n          type=\"bar\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\nexport const Marketing = () => {\n  const config = {\n    series: [\n      {\n        name: \"Google\",\n        data: [10, 51, 35, 41, 29, 62, 99, 41, 18],\n      },\n      {\n        name: \"Youtube\",\n        data: [10, 80, 35, 41, 99, 62, 79, 21, 68],\n      },\n      {\n        name: \"Website\",\n        data: [60, 21, 45, 41, 89, 62, 59, 71, 98],\n      },\n    ],\n    options: {\n      chart: {\n        height: 250,\n        toolbar: {\n          show: false,\n        },\n      },\n\n      legend: {\n        position: \"top\",\n        horizontalAlign: \"right\",\n        onItemHover: {\n          highlightDataSeries: true,\n        },\n        labels: {\n          colors: \"#dddddd\",\n          useSeriesColors: true,\n        },\n      },\n\n      dataLabels: {\n        enabled: false,\n      },\n\n      stroke: {\n        curve: \"smooth\",\n        width: 2,\n      },\n\n      title: {\n        text: \"Marketing\",\n        align: \"left\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      xaxis: {\n        categories: [\n          \"31/01\",\n          \"01/02\",\n          \"02/03\",\n          \"03/04\",\n          \"31/05\",\n          \"04/06\",\n          \"06/07\",\n          \"02/08\",\n          \"09/09\",\n        ],\n        style: {\n          fontSize: \"20px\",\n        },\n      },\n\n      yaxis: {},\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={config.options}\n        series={config.series}\n        height=\"250\"\n        type=\"line\"\n      />\n    </Fragment>\n  );\n};\nexport const Calls = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 300,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Calls\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Inbound\", \"Outbound\", \"Sales\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const Email = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total Emails\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Email\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Send\", \"Open\", \"Delete\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueInActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueInCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 460;\n      case \"weekly\":\n        return 3254;\n      case \"monthly\":\n        return 32564;\n      case \"quarterly\":\n        return 130256;\n      case \"yearly\":\n        return 521024;\n      case \"range\":\n        return 1500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue In\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueInCards);\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueOutActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueOutCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 35;\n      case \"weekly\":\n        return 240;\n      case \"monthly\":\n        return 4520;\n      case \"quarterly\":\n        return 18080;\n      case \"yearly\":\n        return 72320;\n      case \"range\":\n        return 500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue out\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueOutCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { newCustomerActive } from \"../../../../redux/features/sidebarSlice\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const NewCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 2;\n      case \"weekly\":\n        return 23;\n      case \"monthly\":\n        return 69;\n      case \"quarterly\":\n        return 200;\n      case \"yearly\":\n        return 610;\n      case \"range\":\n        return 10;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              New Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 23 : 69}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={23}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={69}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={15}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={50}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={200}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(newCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </IconButton>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(NewCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Button,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { lostCustomerActive } from \"../../../../redux/features/sidebarSlice\";\n\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const LostCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 0;\n      case \"weekly\":\n        return 0;\n      case \"monthly\":\n        return 3;\n      case \"quarterly\":\n        return 6;\n      case \"yearly\":\n        return 15;\n      case \"range\":\n        return 3;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              Lost Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 0 : 3}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={3}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={1}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={6}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <Button\n                  component={IconButton}\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(lostCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </Button>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(LostCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport { Circle } from \"@mui/icons-material\";\nimport MAP_STYLE from \"../../../utils/style.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapboxWorker from \"mapbox-gl/dist/mapbox-gl-csp-worker\";\nmapboxgl.workerClass = MapboxWorker;\n\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\";\n\nconst Map = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 38.7577,\n    longitude: -95.4376,\n    zoom: 3,\n  });\n\n  return (\n    <Fragment>\n      <ReactMapGL\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle={MAP_STYLE}\n        onViewportChange={setViewport}\n        mapboxApiAccessToken={\n          \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\"\n        }\n        style={{ zIndex: 200 }}\n      >\n        <Marker\n          latitude={40.7128}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={47.6062}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={41.8781}\n          longitude={-87.6298}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n      </ReactMapGL>\n    </Fragment>\n  );\n};\n\nexport default Map;\n","/** @format */\n\nimport {\n  Paper,\n  Box,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  TableCell,\n} from \"@mui/material\";\nimport React, { Fragment } from \"react\";\n\nconst NewAccounts = () => {\n  return (\n    <Fragment>\n      <Box p={1}>\n        <Typography color=\"blue\">New Accounts</Typography>\n        <TableContainer>\n          <Table fullWidth>\n            <TableHead color=\"blue\">\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"blue\">Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewAccounts;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Box, Grid, Typography } from \"@mui/material\";\n\nimport NumberFormat from \"react-number-format\";\n\nconst EmpOversite = () => {\n  return (\n    <Fragment>\n      <Typography color=\"blue\" sx={{ fontSize: \"1.1rem\" }}>\n        Employee Oversite\n      </Typography>\n      <Typography variant=\"h3\" component=\"h3\" sx={{ fontSize: \"1.8rem\" }}>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.1rem\" }}>\n        Employees logged in\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"purple\" }}> Total ticket issued:</span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"seagreen\" }}>Trouble ticket Resolved: </span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n    </Fragment>\n  );\n};\n\nexport default EmpOversite;\n","/** @format */\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { Appointments, Calls, Marketing, Email } from \"../Charts\";\n\nimport RevenueInCards from \"../Cards/RevenueIn\";\nimport RevenueOutCards from \"../Cards/RevenueOut\";\nimport NewCustomerCards from \"../Cards/NewCustomer\";\nimport LostCustomerCards from \"../Cards/LostCustomer\";\n\nimport Map from \"../Map\";\n\nimport NewAccounts from \"../NewAccounts\";\nimport EmpOversite from \"../EmpOversite\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0.5rem\",\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  body: {\n    padding: \"0.5rem\",\n    flexGrow: 1,\n  },\n});\n\nconst widgetNames = {\n  a: <RevenueInCards />,\n  b: <RevenueOutCards />,\n  c: <NewCustomerCards />,\n  d: <LostCustomerCards />,\n  e: <NewAccounts />,\n  f: <Map />,\n  g: <EmpOversite />,\n  h: <Calls />,\n  i: <Appointments />,\n  j: <Marketing />,\n  k: <Email />,\n};\n\nexport default function Widget({ id, onRemoveItem }) {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant=\"h6\" gutterBottom>\n          {widgetNames[id]}\n        </Typography>\n        <div className={classes.spacer} />\n        <IconButton aria-label=\"delete\" onClick={() => onRemoveItem(id)}>\n          <CloseIcon fontSize=\"small\" />\n        </IconButton>\n      </div>\n      <div className={classes.body} />\n    </Card>\n  );\n}\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  manageUser: true,\n  manageRole: true,\n  manageGroup: true,\n  revenueIn: true,\n  revenueOut: true,\n  newCustomer: true,\n  lostCustomer: true,\n  newAccount: true,\n  appointment: true,\n  marketing: true,\n  empOversite: true,\n  emails: true,\n  calls: true,\n  map: true,\n  display: true,\n};\n\nconst sidebarSlice = createSlice({\n  name: \"sidebar\",\n  initialState,\n  reducers: {\n    isDisplay: (state) => {\n      state.display = !state.display;\n    },\n\n    manageRoleActive: (state) => {\n      state.manageRole = !state.manageRole;\n    },\n    manageUserActive: (state) => {\n      state.manageUser = !state.manageUser;\n    },\n    manageGroupActive: (state) => {\n      state.manageGroup = !state.manageGroup;\n    },\n    revenueInActive: (state) => {\n      state.revenueIn = !state.revenueIn;\n    },\n    revenueOutActive: (state) => {\n      state.revenueOut = !state.revenueOut;\n    },\n    newCustomerActive: (state) => {\n      state.newCustomer = !state.newCustomer;\n    },\n    lostCustomerActive: (state) => {\n      state.lostCustomer = !state.lostCustomer;\n    },\n    newAccountActive: (state) => {\n      state.newAccount = !state.newAccount;\n    },\n    appointmentActive: (state) => {\n      state.appointment = !state.appointment;\n    },\n    marketingActive: (state) => {\n      state.marketing = !state.marketing;\n    },\n    empOversiteActive: (state) => {\n      state.empOversite = !state.empOversite;\n    },\n    emailsActive: (state) => {\n      state.emails = !state.emails;\n    },\n    callsActive: (state) => {\n      state.calls = !state.calls;\n    },\n    mapActive: (state) => {\n      state.map = !state.map;\n    },\n  },\n});\n\nexport const {\n  isDisplay,\n  manageRoleActive,\n  manageGroupActive,\n  manageUserActive,\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} = sidebarSlice.actions;\nexport default sidebarSlice.reducer;\n","module.exports = __webpack_public_path__ + \"static/media/logo_white copy.aa470428.png\";","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { Responsive as ResponsiveGridLayout } from \"react-grid-layout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withSize } from \"react-sizeme\";\n\nimport {\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} from \"../../../../redux/features/sidebarSlice\";\n\nimport Widget from \"./Widget\";\n\nconst originalItems = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\"];\n\nconst initialLayouts = {\n  lg: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 5 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 5 },\n\n    { i: \"g\", x: 0, y: 5, w: 3, h: 4 },\n    { i: \"h\", x: 3, y: 5, w: 3, h: 4 },\n    { i: \"i\", x: 6, y: 5, w: 6, h: 4 },\n\n    { i: \"j\", x: 0, y: 8, w: 8, h: 4 },\n    { i: \"k\", x: 8, y: 8, w: 4, h: 4 },\n  ],\n};\n\nfunction Content({ size: { width } }) {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  const components = {\n    a: sidebar.revenueIn,\n    b: sidebar.revenueOut,\n    c: sidebar.newCustomer,\n    d: sidebar.lostCustomer,\n    e: sidebar.newAccount,\n    f: sidebar.map,\n    g: sidebar.empOversite,\n    h: sidebar.calls,\n    i: sidebar.appointment,\n    j: sidebar.marketing,\n    k: sidebar.emails,\n  };\n  const fnCall = {\n    a: revenueInActive(),\n    b: revenueOutActive(),\n    c: newCustomerActive(),\n    d: lostCustomerActive(),\n    e: newAccountActive(),\n    f: mapActive(),\n    g: empOversiteActive(),\n    h: callsActive(),\n    i: appointmentActive(),\n    j: marketingActive(),\n    k: emailsActive(),\n  };\n  const [items, setItems] = useState(originalItems);\n  const [layouts, setLayouts] = useState(\n    getFromLS(\"layouts\") || initialLayouts,\n  );\n  const onLayoutChange = (_, allLayouts) => {\n    setLayouts(allLayouts);\n  };\n  const onLayoutSave = () => {\n    saveToLS(\"layouts\", layouts);\n  };\n  const onRemoveItem = (itemId) => {\n    // setItems(items.filter((i) => i !== itemId));\n    dispatch(fnCall[itemId]);\n  };\n  const onAddItem = (itemId) => {\n    setItems([...items, itemId]);\n    dispatch(fnCall[itemId]);\n  };\n  const displayItemList = () => {\n    return items.map((key) => (\n      <div\n        key={key}\n        className=\"widget\"\n        data-grid={{ w: 3, h: 2, x: 0, y: Infinity }}\n        style={components[key] ? { display: \"block\" } : { display: \"none\" }}\n      >\n        <Widget\n          id={key}\n          onRemoveItem={onRemoveItem}\n          backgroundColor=\"#867ae9\"\n        />\n      </div>\n    ));\n  };\n  useEffect(() => {\n    displayItemList();\n  }, [sidebar]);\n  return (\n    <>\n      <ResponsiveGridLayout\n        className=\"layout\"\n        layouts={layouts}\n        breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n        cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n        rowHeight={60}\n        width={width}\n        onLayoutChange={onLayoutChange}\n      >\n        {displayItemList()}\n      </ResponsiveGridLayout>\n    </>\n  );\n}\n\nexport default withSize({ refreshMode: \"debounce\", refreshRate: 60 })(Content);\n\nfunction getFromLS(key) {\n  let ls = {};\n  if (global.localStorage) {\n    try {\n      ls = JSON.parse(global.localStorage.getItem(\"rgl-8\")) || {};\n    } catch (e) {}\n  }\n  return ls[key];\n}\n\nfunction saveToLS(key, value) {\n  if (global.localStorage) {\n    global.localStorage.setItem(\n      \"rgl-8\",\n      JSON.stringify({\n        [key]: value,\n      }),\n    );\n  }\n}\n"],"sourceRoot":""}