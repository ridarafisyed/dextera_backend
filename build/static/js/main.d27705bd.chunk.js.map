{"version":3,"sources":["asserts/logo_white copy.png","components/Tabs/tabs.module.css","asserts/login_light.png","asserts/signup_light.png","components/Dashboard/Admin/Charts.jsx","components/Dashboard/Admin/Cards/RevenueIn.jsx","components/Dashboard/Admin/Cards/RevenueOut.jsx","components/Dashboard/Admin/Cards/NewCustomer.jsx","components/Dashboard/Admin/Cards/LostCustomer.jsx","components/Dashboard/Admin/Map.jsx","components/Dashboard/Admin/NewAccounts.jsx","components/Dashboard/Admin/EmpOversite.jsx","components/Dashboard/Admin/DashboardLayout/Widget.jsx","reducers/profile.js","reducers/errors.js","reducers/messages.js","reducers/data.js","redux/features/tabSlice.js","redux/features/searchTabSlice.js","redux/features/favoriteSlice.js","api/MatterApi.js","redux/services/permissionService.js","redux/features/roleFnSlice.js","redux/features/rolePermissionSlice.js","redux/features/selectMemberSlice.js","redux/services/roleService.js","redux/features/roleSlice.js","redux/services/authService.js","redux/features/authSlice.js","reducers/index.js","actions/types.js","store.js","actions/messages.js","actions/auth.js","context/useToggle.jsx","styles/styles.jsx","actions/data.js","components/Navbars/NavbarResponsive.jsx","components/Navbars/Navbar.jsx","components/Chat/Chat.jsx","components/Dashboard/Calender.jsx","components/Favorite/Favorites.jsx","components/Navbars/DrawerComp.jsx","components/Navbars/NavbarSec.jsx","components/Sidebar/AdminSidebar.jsx","components/Sidebar/LawyerSidebar.jsx","components/Sidebar/FirmSidebar.jsx","components/Sidebar/CutomerSidebar.jsx","components/Sidebar/Sidebar.jsx","components/Footer/Footer.jsx","hocs/Layout.js","utils/PrivateRoute.js","context/User/reducer.js","context/User/index.js","hocs/Theme.js","components/Dashboard/Admin/DashBoard.jsx","components/Tabs/Tabs.jsx","components/Invoice/CreateInvoice.jsx","components/Invoice/Payment.jsx","components/Invoice/Filters.jsx","components/Invoice/InvoiceList.jsx","components/Invoice/index.jsx","utils/ActionAlerts.js","components/Matter/MatterList.jsx","components/Matter/Cards.jsx","components/Matter/Calendar.jsx","components/Matter/Filters.jsx","components/Matter/MatterCards.jsx","components/Matter/MatterListLong.jsx","components/Matter/NewMatter.jsx","components/Matter/MatterDetail.jsx","components/Matter/index.jsx","components/Ledger/LedgerActivity.jsx","components/Ledger/Fillters.jsx","components/Ledger/LedgerCards.jsx","components/Ledger/LedgerTImeList.jsx","components/Ledger/LedgerDashbard.jsx","components/Ledger/LedgerDoc.jsx","components/Ledger/Time.jsx","components/Ledger/index.jsx","components/Category/SubCategory.jsx","components/Category/Category.jsx","components/Category/Classification.jsx","components/Category/ManageCategory.jsx","components/Contact/Contact.jsx","components/Profile/Profile.js","components/Tasks/ViewTasks.jsx","components/Tasks/CreateTask.jsx","components/Tasks/index.jsx","components/Dashboard/UserRoles/AdminDashboard.jsx","components/Dashboard/ProgressBar.jsx","components/Dashboard/Tasks.jsx","components/Dashboard/Cards.jsx","components/Dashboard/Client/DashBoard.jsx","components/Template/Templates.jsx","components/Dashboard/UserRoles/ClientDashboard.jsx","components/Dashboard/Lawyer/Chart.jsx","components/Dashboard/Lawyer/DashBoard.jsx","components/Dashboard/UserRoles/LawyerDashboard.jsx","components/Dashboard/Firm/Charts.jsx","components/Dashboard/Firm/DashBoard.jsx","components/Dashboard/UserRoles/FirmDashboard.jsx","containers/Home.js","containers/Auth/Login.js","containers/Auth/Signup.js","components/Profile/Company.jsx","containers/Matters/Matters.jsx","components/User/CreateUser.jsx","components/User/UpdateUser.jsx","components/User/ManageUser.jsx","components/User/index.jsx","components/Ledger/TimeList.jsx","components/Employee/Search.jsx","components/Employee/Result.jsx","components/Employee/Saved.jsx","components/Employee/index.jsx","redux/features/permissionSlice.js","components/User/RoleFunctions.jsx","components/User/ManageRole.jsx","components/User/ManageUserGroup.jsx","App.jsx","index.js","redux/features/sidebarSlice.js","components/Dashboard/Admin/DashboardLayout/DashboardContent.jsx"],"names":["module","exports","__webpack_require__","p","tabs","current","content","Appointments","options","chart","type","height","series","data","x","y","fillColor","strokeColor","plotOptions","bar","barHeight","borderRadius","horizontal","dataLabels","position","enabled","title","text","style","fontSize","fontWeight","color","xaxis","react_default","a","createElement","react","Box","react_apexcharts_min_default","Marketing","config","name","toolbar","show","legend","horizontalAlign","onItemHover","highlightDataSeries","labels","colors","useSeriesColors","stroke","curve","width","align","categories","yaxis","Calls","state","radialBar","lable","value","total","formatter","w","floating","onItemClick","toggleDataSeries","seriesName","opts","globals","seriesIndex","Email","connect","isWeekly","_ref","useDispatch","Grid","container","item","lg","Typography","sx","gutterBottom","variant","mt","component","react_number_format_es","amount","displayType","thousandSeparator","prefix","_useState","useState","_useState2","Object","slicedToArray","dateValue","setDateValue","_useState3","_useState4","xs","listStyleType","LocalizationProvider","dateAdapter","AdapterDateFns","DateRangePicker","startText","endText","onChange","newValue","renderInput","startProps","endProps","TextField","assign","size","mx","mapboxgl","workerClass","MapboxWorker","Map","latitude","longitude","zoom","viewport","setViewport","esm","mapStyle","MAP_STYLE","onViewportChange","mapboxApiAccessToken","zIndex","offsetLeft","offsetTop","Circle","NewAccounts","TableContainer","Table","fullWidth","TableHead","TableRow","TableCell","TableBody","EmpOversite","d","__webpack_exports__","Widget","widgetNames","RevenueIn","b","RevenueOut","c","NewCustomer","LostCustomer","e","Admin_NewAccounts","f","Admin_Map","g","Admin_EmpOversite","h","Charts_Calls","i","Charts_Appointments","j","Charts_Marketing","k","Charts_Email","id","onRemoveItem","Card","paddingTop","padding","CardActions","marginBottom","IconButton","aria-label","className","left","MoreVert_default","onClick","right","Close_default","initialState","profile","msg","status","tabSlice","createSlice","reducers","addTab","action","newTask","payload","tab","push","removeTab","filter","reset","actions","newTabSlice","addNewTab","removeNewTab","removeLastNewTab","pop","resetNewTab","favoriteSlice","addFav","newFav","page","removeFav","CONFIG","headers","Content-Type","Accept","createpermission","concat","process","asyncToGenerator","regenerator_default","mark","_callee","permissionData","token","wrap","_context","prev","next","stop","_x","_x2","apply","this","arguments","getPermissions","_ref2","_callee2","response","_context2","axios","get","sent","abrupt","_x3","updatePermission","_ref3","_callee3","_context3","patch","_x4","_x5","deletePermission","_ref4","_callee4","_context4","delete","_x6","permissionService","permissions","isError","isSuccess","isLoading","message","all","createPermission","createAsyncThunk","thunkAPI","t0","toString","rejectWithValue","_ref5","_x7","_x8","permissionSlice","extraReducers","builder","addCase","pending","fulfilled","rejected","permission","_id","memberSlice","newMember","selectMember","getRole","roleService","role","roleSlice","API_URL","signUp","userData","post","localStorage","setItem","JSON","stringify","user","signIn","signOut","removeItem","authService","parse","getItem","isAuthenticated","authSlice","combineReducers","auth","length","undefined","objectSpread","roleReducer","errors","messages","sidebar","sidebarReducer","favorite","favoriteReducer","tabsReducer","newTabs","newTabsReducer","permissionReducer","member","memberReducer","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","persistor","persistStore","returnErrors","logout","dispatch","getState","tokenConfig","then","res","useToggle","isToggled","setIsToggled","useCallback","SideBarBtn","styled","Button","theme","textTransform","textAlign","margin","borderColor","&:hover","backgroundColor","palette","primary","main","&:visited","SecNavbar","boxShadow","overflow","FooterBar","bottom","alignContent","FooterLink","Link","fontFamily","textDecoration","marginTop","FooterButton","marginX","paddingX","LinkButton","_ref6","cursor","Search","_ref7","marginRight","spacing","marginLeft","SearchIconWrapper","_ref8","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","_ref9","& .MuiInputBase-input","defineProperty","paddingLeft","transition","transitions","create","breakpoints","up","MainSearch","_ref10","MainSearchIconWrapper","_ref12","StyledMainInputBase","_ref13","updateIsWeekly","NavbarResponsive","useSelector","Intl","DateTimeFormat","resolvedOptions","timeZone","Date","currentTime","_useState5","_useState6","timeFormater","checked","toLocaleTimeString","hour","minute","hour12","_useToggle","_useToggle2","_useState7","_useState8","settingAcnchorEl","_useState9","Boolean","_useState10","_React$useState","React","_React$useState2","anchorEl","_React$useState3","_React$useState4","setChecked","handleChange","event","target","handleOnChage","_useState11","_useState12","openDrawer","setOpenDrawer","noWrap","react_router_dom","to","src","Logo","alt","Fragment","Switch","inputProps","transform","float","Menu_default","Drawer","anchor","open","onClose","List","ListItemButton","ListItemIcon","Search_default","placeholder","Select","labelId","label","MenuItem","Navbar","isTabletOrMobile","useMediaQuery","query","redirect","flexGrow","AppBar","border","Toolbar","Navbars_NavbarResponsive","sm","md","ml","mr","react_router","ChatHistory","Chip","avatar","Avatar","Chatting","Chat_ChatHistory","& .MuiTextField-root","m","endIcon","Send_default","Calender","setValue","tasks","Paper","StaticDatePicker","orientation","openTo","shouldDisableDate","isWeekend","params","map","task","Favorites","ListItem","secondaryAction","edge","ListItemAvatar","bgcolor","Star_default","ListItemText","NavBarSecResponsive","openFav","setOpenFav","handleCloseFav","openCal","setOpenCal","handleCloseCal","openChat","setOpenChat","handleCloseChat","username","is_firm","is_lawyer","is_client","setLocalUser","useEffect","setRedirect","setSettingAcnchorEl","_useState13","_useState14","settingAcnchorEl2","setSettingAcnchorEl2","openSetting2","openSetting","handleClose2","handleClose","_useState15","_useState16","anchorOrigin","vertical","esm_Message","Dialog","Validate","aria-labelledby","aria-describedby","DialogTitle","DialogContent","Chat","DialogActions","pathname","esm_EmailRounded","esm_CalendarToday","maxWidth","Dashboard_Calender","aria-controls","aria-expanded","aria-haspopup","currentTarget","esm_CheckBox","Menu_Menu","MenuListProps","TransitionComponent","Fade","Divider","my","esm_Star","Favorite_Favorites","autoFocus","esm_Settings","console","log","esm_NotificationAdd","NavbarSec","isPath","setIsPath","location","useLocation","arr","isPathExist","_useState17","_useState18","handleLogout","handleClick","DrawerComp_NavBarSecResponsive","Message_default","EmailRounded_default","CalendarToday_default","CheckBox_default","window","href","handleClickOpenFav","NotificationAdd_default","Person_default","Settings_default","Controls","px","AddCircle","Receipt","FileCopy","MoneyOff","esm_Task","Work","AssignmentTurnedIn","esm_Person","marketingActive","marketing","emailsActive","emails","Mail","HumanResources","Group","RevenueControls","revenueInActive","revenueIn","revenueOutActive","revenueOut","AccountControls","newCustomerActive","newCustomer","lostCustomerActive","lostCustomer","newAccountActive","newAccount","mapActive","EmployeeOversite","empOversiteActive","empOversite","callsActive","calls","Phone","appointmentActive","appointment","accordionData","tiles","AdminSidebar_Controls","AdminSidebar_HumanResources","AdminSidebar_RevenueControls","AdminSidebar_AccountControls","AdminSidebar_Marketing","AdminSidebar_EmployeeOversite","TestingSidebar","accordions","updateAccordions","react_beautiful_dnd_esm","onDragEnd","result","destination","items","Array","from","_items$splice","splice","source","index","reorderedItem","droppableId","provided","droppableProps","ref","innerRef","draggableId","Accordion","draggableProps","dragHandleProps","AccordionSummary","expandIcon","ExpandMore_default","AccordionDetails","LawyerSidebar","FirmSidebar","CustomerSidebar","Sidebar","Stack","elevation","overflowY","AdminSidebar","Sidebar_FirmSidebar","Sidebar_LawyerSidebar","CutomerSidebar","SidebarRedirect","Footer","setOpen","handleClickOpen","InnerLayout","children","_useSelector","isDesktopOrLaptop","useTheme","isBigScreen","sidebarToggle","drawerOpen","setDrawerOpen","openPopover","handleSidebarToggle","hideSidebar","showSidebar","descriptionElementRef","useRef","descriptionElement","focus","contianer","rowSpacing","columnSpacing","Navbars_NavbarSec","Navbars_Navbar","direction","components_Sidebar_Sidebar","top","components_Footer_Footer","Fab","Report","esm_Chat","Popover","transformOrigin","PrivateRoutes","rest","objectWithoutProperties","active","UserContext","createContext","UserProvider","_React$useReducer","useReducer","_React$useReducer2","Provider","createTheme","mode","error","warning","success","contrastThreshold","tonalOffset","typography","htmlFontSize","DashBoard","DashboardContent","Tabs","props","activeTab","setActiveTab","styles","startIcon","MoreVert","newActiveTab","preventDefault","one","CreateInvoice","approvel","setApprovel","matter","contact","billable","date_range","create_date","due_date","template","invoice_no","discount","submit","invoiceData","setInvoiceData","dateRange","setDateRange","onSubmit","autoComplete","FormControlLabel","control","Checkbox","varient","LocalizationProvider_LocalizationProvider","DateRangePicker_DateRangePicker","calendars","InputLabelProps","shrink","PaymentPlan","payment_no","due","late_fee","total_due","payment","posted","method","paymentData","mb","paddingInline","InvoicePayment","tax","interest","time","hard","soft","Payment","isPlan","setIsPlan","payment_type","date","retainer","menu","bank_account","payment_method","FormControl","RadioGroup","row","defaultValue","Radio","InputLabel","Payment_PaymentPlan","Payment_InvoicePayment","Filters","invoiceToggle","setInvoiceToggle","_useToggle3","_useToggle4","paymentToggle","setPaymentToggle","_useToggle5","_useToggle6","paid","setPaid","age","setAge","& .MuiFormControl-root","DialogContentText","Invoice_CreateInvoice","Invoice_Payment","styles_Search","styles_SearchIconWrapper","styles_StyledInputBase","InvoiceList","Invoice_Filters","Index","Invoice_InvoiceList","ActionAlerts","Alert","severity","TotalDays","date1","date2","dt1","dt2","Math","floor","UTC","getFullYear","getMonth","getDate","GetDate","MatterList","setTasks","setStatus","setLoading","redTask","setRedTask","greenTask","setGreenTask","yellowTask","setYellowTask","myTask","setMyTask","statusText","catch","err","FormGroup","Cards","minWidth","CardContent","Calendar","Box_Box","MatterCards","MatterListLong","setMatters","NewMatter","mask","openDate","setOpenDate","whenDate","setWhenDate","closeDate","setCloseDate","totalDays","setTotalDays","matter_name","matter_type","matter_source","matter_status","assign_to","assign_by","billing_rate","alerts","jurisdiction","status_limitaion","opposing_counsel","where","involved","witnesses","narrative","matterData","setMatterData","days","open_date","close_date","when","total_days","body","ActionAlerts_ActionAlerts","min","disabled","step","DatePicker","inputFormat","multiline","rows","Save_default","MatterTask","components","Activities","MatterDetail","MatterDetail_Activities","MatterDetail_MatterTask","MatterDetail_Cards","Matters","Matter_Filters","Matter_MatterCards","Matter_MatterListLong","MatterDashboard","Matter_MatterList","Matter_Calendar","Matter_Cards","components_Tabs_Tabs","Matter_MatterDashboard","Matter_Matters","Matter_NewMatter","Matter_MatterDetail","LedgerActivity","setActivityData","bgColor","Fillters","billedby","setBilledby","setFilter","LedgerCards","decimalScale","fixedDecimalScale","LedgerTImeList","setLedgerData","LegderDashbard","Ledger_LedgerCards","Ledger_Fillters","Ledger_LedgerTImeList","LedgerDoc","minHeight","Time","pickDate","setPickDate","timeToggle","setTimeToggle","setBillable","setTime","category","sub_category","unit","qty","rate","file","detail","bill_by","note","timeData","setTimeData","labelPlacement","FormLabel","format","customInput","onValueChange","LedgerDashbard","Ledger_LedgerActivity","Ledger_LedgerDoc","Ledger_Time","SubCategory","subCategory","setSubCategory","loading","formData","setFormData","FetchData","handleSubmit","required","disablePadding","Clear_default","Category","setCategory","setError","Classification","classification","setClassification","ManageCategory","components_Category_Category","Category_SubCategory","Category_Classification","Contact","_React$createElement","_React$createElement2","_React$createElement3","_React$createElement4","clientNo","setClientNo","dob","setDob","ssn","setSsn","mobileNo","setMobileNo","homeNo","setHomeNo","officeNo","setOfficeNo","faxNo","setFaxNo","otherNo","setOtherNo","zip","setZip","_useState19","_useState20","plus4","setPlus4","_useState21","_useState22","zip2","setZip2","_useState23","_useState24","plus42","setPlus42","_useState25","company_name","website","ger_email","billing_email","street","suite","city","f_name","l_name","email_1","email_2","email_3","street2","suite2","city2","state2","office","team","relation","_useState26","contactData","setContactData","persist","thousandsGroupStyle","autoWidth","gradYear","setGradYear","barDate","setBarDate","underGradYear","setUnderGradYear","phoneNo","setPhoneNo","barNo","setBarNo","practiceTime","setPracticeTime","longestTenure","setLongestTenure","averageTenure","setAverageTenure","currentTenure","setCurrentTenure","email","mobile","phone","language","locate","search_active","law_school","grad_year","bar_admit_date","undergrad_school","undergrad_area","undergrad_year","bar_no","admitted_practice","practice_time","longest_tenure","average_tenure","current_tenure","past_bar_companies_no","primary_area","TabContext","borderBottom","TabList","Tab","TabPanel","defaultChecked","KeyboardArrowRight_default","ViewTasks","CreateTask","dueDate","setDueDate","bill","setBill","isPrivate","setIsPrivate","setFile","matter_id","matter_contact","filename","taskData","setTaskData","& .MuiSelect-root","due_at","is_billable","is_private","Tasks_ViewTasks","Tasks_CreateTask","Invoice","Matter","Ledger","Category_ManageCategory","components_Contact_Contact","components_Profile_Profile","Tasks","invoice","ledger","AdminDashboard","tabList","newTabList","wordEntered","setWordEntered","handleChangeSearch","addSearchTab","setTimeout","displayNewTabsName","handleRemoveNewTab","icons_Close_default","displayTabsName","handleRemoveTab","displaySearchTabs","noValidate"," & .MuiOutlinedInput-notchedOutline","renderTabs","Tabs_Tabs","scrollButtons","allowScrollButtonsMobilearia-label","icon","iconPosition","Add_default","Admin_DashBoard","ProgressBar","progress","paddingRight","LinearProgress","randomDate","start","end","getDateTime","getTime","random","toLocaleDateString","getHours","getMinutes","Task","LawyerCards","postfix","FirmCards","CustomerCards","Cards_CustomerCards","Dashboard_Tasks","Dashboard_ProgressBar","Templates","ClientDashboard","Client_DashBoard","Template_Templates","PieChart","pie","donut","val","dropShadow","Chart2","startAngle","endAngle","track","background","hollow","fill","gradient","shade","gradientToColors","stops","BarChart","stacked","tooltip","opacity","offsetX","Cards_LawyerCards","Chart_PieChart","Chart_Chart2","Chart_BarChart","LawyerDashboard","Lawyer_DashBoard","Chart","BarChart2","columnWidth","distributed","BarChart3","textAnchor","opt","dataPointIndex","Cards_FirmCards","Charts_Chart2","Charts_Chart","Charts_BarChart","Charts_BarChart2","Charts_BarChart3","FirmDashboard","Firm_DashBoard","Dashboard","UserRoles_AdminDashboard","UserRoles_FirmDashboard","UserRoles_LawyerDashboard","UserRoles_ClientDashboard","dashboardRedirect","Login","password","prevState","backgroundImage","BackgroundImage","backgroundRepeat","t","grey","backgroundSize","backgroundPosition","square","flexDirection","LockOutlined_default","minLength","register","accountCreated","setAccountCreated","isFirm","setIsFirm","first_name","last_name","re_password","Company","m_name","c_email","time_zone","group","job_title","ext","home","work_no","phone_ext","setUserData","p_email","& .MuiButton-root","CreateUser","userId","history","useHistory","roles","setRoles","setRole","setGroup","groups","setGroups","loading2","setLoading2","middle_name","rate_type","toLowerCase","input::-webkit-outer-spin-button","webkitAappearance","InputProps","max","select","UpdateUser","put","reload","is_active","handleDeactivate","User","usersData","setUsersData","setUserId","isActive","setIsActive","searchItem","setSearchItem","open2","setOpen2","handleClickOpen2","User_CreateUser","User_UpdateUser","includes","last_login","ManageUser","TimeList","practice_area","undergrad_study","lamguages","admitted_state","relocate","searchData","setSearchData","Result","Saved","pickTime","setPickTime","bar_adm_year","mail_add","link","notes","jobData","setJobData","TimePicker","Employee_Search","Employee_Result","Employee_Saved","RoleFunctions","isAll","setIsAll","role_functions","function_permission","is_set","updateFunction","Rectangle_default","ManageRole","whiteSpace","overflowX","&MuiTableCell","User_RoleFunctions","ManageUserGroup","selectedUser","setSelectedUser","setLoadingRole","loadingUser","setLoadingUser","_useState27","_useState28","_useState29","_useState30","openView","setOpenView","handleCloseView","_useState31","_useState32","handleSubmitUpdate","handleClickOpenView","App","es","integration_react","User_UserProvider","ThemeProvider","react_alert","AlertTemplate","timeout","Layout","path","Signup","PrivateRoute","exact","Home","Profile","Employee","ReactDOM","render","StrictMode","CssBaseline","src_App","document","getElementById","_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__","sidebarSlice","isDisplay","originalItems","initialLayouts","xxs","withSize","refreshMode","refreshRate","fnCall","_home_supersis03_Projects_Dextera_Phase_3_dextera_project_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","ls","global","getFromLS","layouts","setLayouts","itemId","displayItemList","react__WEBPACK_IMPORTED_MODULE_3___default","data-grid","Infinity","_Widget__WEBPACK_IMPORTED_MODULE_8__","react_grid_layout__WEBPACK_IMPORTED_MODULE_4__","cols","rowHeight","onLayoutChange","_","allLayouts","draggableHandle"],"mappings":"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","file":"static/js/main.d27705bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white copy.aa470428.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"tabs_tabs__2iP2q\",\"current\":\"tabs_current__UH0Eq\",\"content\":\"tabs_content__Vh0J0\"};","module.exports = __webpack_public_path__ + \"static/media/login_light.a12d3677.png\";","module.exports = __webpack_public_path__ + \"static/media/signup_light.181ee8a6.png\";","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { Box } from \"@mui/material\";\n// import NumberFormat from \"react-number-format\";\n\nexport const Appointments = () => {\n  const options = {\n    chart: {\n      type: \"bar\",\n      height: 500,\n    },\n    series: [\n      {\n        data: [\n          {\n            x: \"Zoom\",\n            y: 150,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Phone\",\n            y: 250,\n            fillColor: \"#546E7A\",\n            strokeColor: \"#546E7A\",\n          },\n          {\n            x: \"In Person\",\n            y: 500,\n            fillColor: \"#f48024\",\n            strokeColor: \"#f48024\",\n          },\n          {\n            x: \"Met\",\n            y: 300,\n            fillColor: \"#13d8aa\",\n            strokeColor: \"#13d8aa\",\n          },\n          {\n            x: \"Rescheduled\",\n            y: 125,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Canceled\",\n            y: 30,\n            fillColor: \"#A5978B\",\n            strokeColor: \"#A5978B\",\n          },\n        ],\n      },\n    ],\n\n    options: {\n      plotOptions: {\n        bar: {\n          barHeight: \"50%\",\n          borderRadius: 4,\n\n          horizontal: true,\n          dataLabels: {\n            position: \"bottom\",\n          },\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      title: {\n        text: \"Appointments\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n    },\n    xaxis: {\n      style: {\n        fontSize: \"20px\",\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={options.options}\n          series={options.series}\n          height=\"300\"\n          type=\"bar\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\nexport const Marketing = () => {\n  const config = {\n    series: [\n      {\n        name: \"Google\",\n        data: [10, 51, 35, 41, 29, 62, 99, 41, 18],\n      },\n      {\n        name: \"Youtube\",\n        data: [10, 80, 35, 41, 99, 62, 79, 21, 68],\n      },\n      {\n        name: \"Website\",\n        data: [60, 21, 45, 41, 89, 62, 59, 71, 98],\n      },\n    ],\n    options: {\n      chart: {\n        height: 250,\n        toolbar: {\n          show: false,\n        },\n      },\n\n      legend: {\n        position: \"top\",\n        horizontalAlign: \"right\",\n        onItemHover: {\n          highlightDataSeries: true,\n        },\n        labels: {\n          colors: \"#dddddd\",\n          useSeriesColors: true,\n        },\n      },\n\n      dataLabels: {\n        enabled: false,\n      },\n\n      stroke: {\n        curve: \"smooth\",\n        width: 2,\n      },\n\n      title: {\n        text: \"Marketing\",\n        align: \"left\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      xaxis: {\n        categories: [\n          \"31/01\",\n          \"01/02\",\n          \"02/03\",\n          \"03/04\",\n          \"31/05\",\n          \"04/06\",\n          \"06/07\",\n          \"02/08\",\n          \"09/09\",\n        ],\n        style: {\n          fontSize: \"20px\",\n        },\n      },\n\n      yaxis: {},\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={config.options}\n        series={config.series}\n        height=\"250\"\n        type=\"line\"\n      />\n    </Fragment>\n  );\n};\nexport const Calls = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 300,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Calls\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Inbound\", \"Outbound\", \"Sales\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const Email = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total Emails\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Email\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Send\", \"Open\", \"Delete\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueInActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueInCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 460;\n      case \"weekly\":\n        return 3254;\n      case \"monthly\":\n        return 32564;\n      case \"quarterly\":\n        return 130256;\n      case \"yearly\":\n        return 521024;\n      case \"range\":\n        return 1500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue In\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueInCards);\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueOutActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueOutCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 35;\n      case \"weekly\":\n        return 240;\n      case \"monthly\":\n        return 4520;\n      case \"quarterly\":\n        return 18080;\n      case \"yearly\":\n        return 72320;\n      case \"range\":\n        return 500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue out\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueOutCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { newCustomerActive } from \"../../../../redux/features/sidebarSlice\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const NewCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 2;\n      case \"weekly\":\n        return 23;\n      case \"monthly\":\n        return 69;\n      case \"quarterly\":\n        return 200;\n      case \"yearly\":\n        return 610;\n      case \"range\":\n        return 10;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              New Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 23 : 69}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={23}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={69}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={15}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={50}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={200}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(newCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </IconButton>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(NewCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Button,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { lostCustomerActive } from \"../../../../redux/features/sidebarSlice\";\n\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const LostCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 0;\n      case \"weekly\":\n        return 0;\n      case \"monthly\":\n        return 3;\n      case \"quarterly\":\n        return 6;\n      case \"yearly\":\n        return 15;\n      case \"range\":\n        return 3;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              Lost Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 0 : 3}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={3}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={1}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={6}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <Button\n                  component={IconButton}\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(lostCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </Button>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(LostCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport { Circle } from \"@mui/icons-material\";\nimport MAP_STYLE from \"../../../utils/style.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapboxWorker from \"mapbox-gl/dist/mapbox-gl-csp-worker\";\nmapboxgl.workerClass = MapboxWorker;\n\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\";\n\nconst Map = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 38.7577,\n    longitude: -95.4376,\n    zoom: 3,\n  });\n\n  return (\n    <Fragment>\n      <ReactMapGL\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle={MAP_STYLE}\n        onViewportChange={setViewport}\n        mapboxApiAccessToken={\n          \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\"\n        }\n        style={{ zIndex: 200 }}\n      >\n        <Marker\n          latitude={40.7128}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={47.6062}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={41.8781}\n          longitude={-87.6298}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n      </ReactMapGL>\n    </Fragment>\n  );\n};\n\nexport default Map;\n","/** @format */\n\nimport {\n  Paper,\n  Box,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  TableCell,\n} from \"@mui/material\";\nimport React, { Fragment } from \"react\";\n\nconst NewAccounts = () => {\n  return (\n    <Fragment>\n      <Box p={1}>\n        <Typography color=\"blue\">New Accounts</Typography>\n        <TableContainer>\n          <Table fullWidth>\n            <TableHead color=\"blue\">\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"blue\">Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewAccounts;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Box, Grid, Typography } from \"@mui/material\";\n\nimport NumberFormat from \"react-number-format\";\n\nconst EmpOversite = () => {\n  return (\n    <Fragment>\n      <Typography color=\"blue\" sx={{ fontSize: \"1.1rem\" }}>\n        Employee Oversite\n      </Typography>\n      <Typography variant=\"h3\" component=\"h3\" sx={{ fontSize: \"1.8rem\" }}>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.1rem\" }}>\n        Employees logged in\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"purple\" }}> Total ticket issued:</span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"seagreen\" }}>Trouble ticket Resolved: </span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n    </Fragment>\n  );\n};\n\nexport default EmpOversite;\n","/** @format */\n\nimport React from \"react\";\n\nimport {\n  IconButton,\n  Typography,\n  Card,\n  CardContent,\n  CardActions,\n} from \"@mui/material\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { Appointments, Calls, Marketing, Email } from \"../Charts\";\n\nimport RevenueInCards from \"../Cards/RevenueIn\";\nimport RevenueOutCards from \"../Cards/RevenueOut\";\nimport NewCustomerCards from \"../Cards/NewCustomer\";\nimport LostCustomerCards from \"../Cards/LostCustomer\";\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\n\nimport Map from \"../Map\";\n\nimport NewAccounts from \"../NewAccounts\";\nimport EmpOversite from \"../EmpOversite\";\n\nconst widgetNames = {\n  a: <RevenueInCards />,\n  b: <RevenueOutCards />,\n  c: <NewCustomerCards />,\n  d: <LostCustomerCards />,\n  e: <NewAccounts />,\n  f: <Map />,\n  g: <EmpOversite />,\n  h: <Calls />,\n  i: <Appointments />,\n  j: <Marketing />,\n  k: <Email />,\n};\n\nexport default function Widget({ id, onRemoveItem }) {\n  return (\n    <Card\n      sx={{\n        width: \"100%\",\n        height: \"100%\",\n        paddingTop: \"0.5rem\",\n        padding: \"1rem\",\n      }}\n    >\n      <CardActions sx={{ marginBottom: \"10px\" }}>\n        <IconButton\n          aria-label=\"drag\"\n          className=\"drag\"\n          sx={{ position: \"fixed\", left: \"16px\" }} \n        >\n          <MoreVertIcon fontSize=\"small\" />\n        </IconButton>\n        <IconButton\n          aria-label=\"delete\"\n          onClick={() => onRemoveItem(id)}\n          sx={{ position: \"fixed\", right: \"16px\" }}\n        >\n          <CloseIcon fontSize=\"small\" />\n        </IconButton>\n      </CardActions>\n      {widgetNames[id]}\n    </Card>\n  );\n}\n","/** @format */\n\nimport { GET_PROFILE } from \"../actions/types\";\n\nconst initialState = {\n  profile: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {\n\tmsg: {},\n\tstatus: null,\n};\n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_ERRORS:\n\t\t\treturn {\n\t\t\t\tmsg: action.payload.msg,\n\t\t\t\tstatus: action.payload.status,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","/** @format */\n\nimport { CREATE_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase CREATE_MESSAGE:\n\t\t\treturn (state = action.payload);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","/** @format */\n\nimport {\n  GET_IS_WEEKLY,\n  MONTLY_REVENUE,\n  WEEKLY_REVENUE,\n} from \"../actions/types\";\n\nconst initialState = {\n  isWeekly: \"daily\",\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_IS_WEEKLY:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case MONTLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case WEEKLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst tabSlice = createSlice({\n  name: \"tab\",\n  initialState: initialState,\n  reducers: {\n    addTab: (state, action) => {\n      const newTask = {\n        id: action.payload.id,\n        name: action.payload.tab,\n      };\n      state.push(newTask);\n    },\n    removeTab: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n    reset: (state) => initialState,\n  },\n});\n\nexport const { addTab, removeTab, reset } = tabSlice.actions;\nexport default tabSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst newTabSlice = createSlice({\n  name: \"tab\",\n  initialState: initialState,\n  reducers: {\n    addNewTab: (state, action) => {\n      state.push({\n        id: action.payload.id,\n        name: action.payload.name,\n      });\n    },\n    removeNewTab: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n\n    removeLastNewTab: (state) => {\n      state.pop();\n    },\n    resetNewTab: (state) => initialState,\n  },\n});\n\nexport const {\n  addNewTab,\n  removeNewTab,\n  resetNewTab,\n  removeLastNewTab,\n} = newTabSlice.actions;\nexport default newTabSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst favoriteSlice = createSlice({\n  name: \"favorite\",\n  initialState: [],\n  reducers: {\n    addFav: (state, action) => {\n      const newFav = {\n        id : action.payload.id,\n        name: action.payload.name,\n        page: action.payload.page,\n      };\n      state.push(newFav);\n    },\n\n    removeFav: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n  },\n});\n\nexport const { addFav, removeFav } = favoriteSlice.actions;\nexport default favoriteSlice.reducer;\n","/** @format */\n\n// import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport const CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nexport const CreateMatter = (\n  contact,\n  matter_name,\n  matter_type,\n  matter_source,\n  matter_status,\n  assign_to,\n  assign_by,\n  billing_rate,\n  alerts,\n  open_date,\n  close_date,\n  total_days,\n  jurisdiction,\n  status_limitaion,\n  opposing_counsel,\n  where,\n  when,\n  involved,\n  witnesses,\n  narrative,\n) => {\n  let status = \"\";\n  const body = JSON.stringify({\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n    open_date,\n    close_date,\n    total_days,\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    when,\n    involved,\n    witnesses,\n    narrative,\n  });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n    .then((res) => {\n      status = res.statusText;\n    })\n    .catch((err) => {\n      status = err.message;\n    });\n\n  return status;\n};\n\nexport const retrive_matter = () => {};\n","/** @format */\n\nimport axios from \"axios\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/user/auth/`;\n// Create new permission\nconst createpermission = async (permissionData, token) => {\n\t//   const config = {\n\t//     headers: {\n\t//       Authorization: `Bearer ${token}`,\n\t//     },\n\t//   }\n\t//   const response = await axios.post(API_URL, permissionData, config)\n\t//   return response.data\n};\n\n// Get user permissions\nconst getPermissions = async (id) => {\n\tconst response = await axios.get(\n\t\t`${process.env.REACT_APP_API_URL}/user/auth/role-permissions/${id}/`,\n\t\tCONFIG,\n\t);\n\n\treturn response.data;\n};\n// update user permission\n\nconst updatePermission = async (id, value) => {\n\t\n\tconst response = await axios.patch(\n\t\t`${process.env.REACT_APP_API_URL}/user/auth/permissions/${id}/`,\n\t\tvalue, \n\t\tCONFIG,\n\t);\n\n\treturn response.data;\n};\n\n\n// Delete user permission\nconst deletePermission = async (id) => {\n\tconst response = await axios.delete(\n\t\t`${process.env.REACT_APP_API_URL}/user/auth/role-permissions/${id}/`,\n\t\tCONFIG,\n\t);\n\n\treturn response.data;\n};\n\nconst permissionService = {\n\tcreatepermission,\n\tgetPermissions,\n\tupdatePermission,\n\tdeletePermission,\n};\n\nexport default permissionService;\n","/** @format */\n\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport permissionService from \"../services/permissionService\";\n\nconst initialState = {\n\tpermissions: [],\n\tisError: false,\n\tisSuccess: false,\n\tisLoading: false,\n\tmessage: \"\",\n\tall: false,\n};\n\n// Create new permissions\nexport const createPermission = createAsyncThunk(\n\t\"permissions/create\",\n\tasync (permissionData, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.createPermission(permissionData);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\n// Get user permissions\nexport const getPermissions = createAsyncThunk(\n\t\"permissions/getAll\",\n\tasync (id, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.getPermissions(id);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\nexport const updatePermission = createAsyncThunk(\n\t\"permissions/update\",\n\tasync ({id, value}, thunkAPI) => {\n\n\t\ttry {\n\t\t\treturn await permissionService.updatePermission(id, value);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\n// Delete user permission\nexport const deletePermission = createAsyncThunk(\n\t\"permissions/delete\",\n\tasync (id, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.deletePermission(id);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\nexport const permissionSlice = createSlice({\n\tname: \"permission\",\n\tinitialState,\n\treducers: {\n\t\treset: (state) => initialState,\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder\n\t\t\t.addCase(createPermission.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(createPermission.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions.push(action.payload);\n\t\t\t})\n\t\t\t.addCase(createPermission.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(getPermissions.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(getPermissions.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions = action.payload;\n\t\t\t})\n\t\t\t.addCase(getPermissions.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(updatePermission.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(updatePermission.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\t\n\t\t\t\tgetPermissions()\n\n\t\t\t})\n\t\t\t.addCase(updatePermission.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(deletePermission.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(deletePermission.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions = state.permissions.filter(\n\t\t\t\t\t(permission) => permission._id !== action.payload.id,\n\t\t\t\t);\n\t\t\t})\n\t\t\t.addCase(deletePermission.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t});\n\t},\n});\n\nexport const {\n\treset\n} = permissionSlice.actions;\nexport default permissionSlice.reducer;\n","/** @format */\n\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport permissionService from \"../services/permissionService\";\n\nconst initialState = {\n\tpermissions: [],\n\tisError: false,\n\tisSuccess: false,\n\tisLoading: false,\n\tmessage: \"\",\n\tall: false,\n};\n\n// Create new permissions\nexport const createPermission = createAsyncThunk(\n\t\"permissions/create\",\n\tasync (permissionData, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.createPermission(permissionData);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\n// Get user permissions\nexport const getPermissions = createAsyncThunk(\n\t\"permissions/getAll\",\n\tasync (id, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.getPermissions(id);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\nexport const updatePermission = createAsyncThunk(\n\t\"permissions/update\",\n\tasync ({id, value}, thunkAPI) => {\n\n\t\ttry {\n\t\t\treturn await permissionService.updatePermission(id, value);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\n// Delete user permission\nexport const deletePermission = createAsyncThunk(\n\t\"permissions/delete\",\n\tasync (id, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.deletePermission(id);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\nexport const permissionSlice = createSlice({\n\tname: \"permission\",\n\tinitialState,\n\treducers: {\n\t\treset: (state) => initialState,\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder\n\t\t\t.addCase(createPermission.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(createPermission.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions.push(action.payload);\n\t\t\t})\n\t\t\t.addCase(createPermission.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(getPermissions.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(getPermissions.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions = action.payload;\n\t\t\t})\n\t\t\t.addCase(getPermissions.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(updatePermission.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(updatePermission.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\t\n\t\t\t\tgetPermissions()\n\n\t\t\t})\n\t\t\t.addCase(updatePermission.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(deletePermission.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(deletePermission.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions = state.permissions.filter(\n\t\t\t\t\t(permission) => permission._id !== action.payload.id,\n\t\t\t\t);\n\t\t\t})\n\t\t\t.addCase(deletePermission.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t});\n\t},\n});\n\nexport const {\n\treset\n} = permissionSlice.actions;\nexport default permissionSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst memberSlice = createSlice({\n  name: \"member\",\n  initialState: initialState,\n  reducers: {\n    addTab: (state, action) => {\n      const newMember = {\n        id: action.payload.id,\n        name: action.payload.tab,\n      };\n      state.push(newMember);\n    },\n    \n    reset: (state) => initialState,\n  },\n});\n\nexport const { selectMember, reset } = memberSlice.actions;\nexport default memberSlice.reducer;\n","/** @format */\n\nimport axios from \"axios\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\n// Get user permissions\nconst getRole = async (id) => {\n\tconst response = await axios.get(\n\t\t`${process.env.REACT_APP_API_URL}/user/role-single-view/${id}/`,\n\t\tCONFIG,\n\t);\n\n\treturn response.data;\n};\n\nconst roleService = {\n\n\tgetRole,\n\n};\n\nexport default roleService;\n","/** @format */\n\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport roleService from \"../services/roleService\";\n\nconst initialState = {\n\trole: [],\n\tisError: false,\n\tisSuccess: false,\n\tisLoading: false,\n\tmessage: \"\",\n\tall: false,\n};\n\n\n// Get user role\nexport const getRole = createAsyncThunk(\n\t\"role/getAll\",\n\tasync (id, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await roleService.getRole(id);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\nexport const roleSlice = createSlice({\n\tname: \"role\",\n\tinitialState,\n\treducers: {\n\t\treset: (state) => initialState,\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder\n\t\t\t\n\t\t\t.addCase(getRole.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(getRole.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.role = action.payload;\n\t\t\t})\n\t\t\t.addCase(getRole.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t},\n});\n\nexport const {\n\treset\n} = roleSlice.actions;\nexport default roleSlice.reducer;\n","/** @format */\n\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/user/auth/`;\n\n// Register user\nconst signUp = async (userData) => {\n\tconst response = await axios.post(API_URL + \"register\", userData, CONFIG);\n\n\tif (response.data) {\n\t\tlocalStorage.setItem(\"user\", JSON.stringify(response.data.user));\n\t\tlocalStorage.setItem(\"token\", JSON.stringify(response.data.token));\n\t}\n\n\treturn response.data;\n};\n\n// Login user\nconst signIn = async (userData) => {\n\tconst response = await axios.post(API_URL + \"login\", userData, CONFIG);\n\n\tif (response.data) {\n\t\tlocalStorage.setItem(\"user\", JSON.stringify(response.data));\n\t}\n\n\treturn response.data;\n};\n\n// Logout user\nconst signOut = async (token) => {\n\tconst response = await axios.post(API_URL + \"logout\", token);\n\tif (response.data) {\n\t\tlocalStorage.removeItem(\"user\");\n\t\tlocalStorage.removeItem(\"token\");\n\t}\n\n\t// return response.data\n};\n\nconst authService = {\n\tsignIn,\n\tsignOut,\n\tsignUp,\n};\n\nexport default authService;\n","/** @format */\n\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"../services/authService\";\n\n// Get user from localStorage\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst token = JSON.parse(localStorage.getItem(\"token\"));\n\nconst initialState = {\n\tuser: user ? user : null,\n\tisAuthenticated: false,\n\tisError: false,\n\tisSuccess: false,\n\tisLoading: false,\n\tmessage: \"\",\n};\n\n// signUp user\nexport const signUp = createAsyncThunk(\n\t\"auth/signUp\",\n\tasync (user, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await authService.signUp(user);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\n// signIn user\nexport const signIn = createAsyncThunk(\n\t\"auth/signIn\",\n\tasync (user, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await authService.signIn(user);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\nexport const signOut = createAsyncThunk(\"auth/signOut\", async () => {\n\tawait authService.signOut(token);\n});\n\nexport const authSlice = createSlice({\n\tname: \"auth\",\n\tinitialState,\n\treducers: {\n\t\treset: (state) => {\n\t\t\tstate.isLoading = false;\n\t\t\tstate.isSuccess = false;\n\t\t\tstate.isError = false;\n\t\t\tstate.isAuthenticated = false;\n\t\t\tstate.message = \"\";\n\t\t},\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder\n\t\t\t.addCase(signUp.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(signUp.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.isAuthenticated = true;\n\t\t\t\tstate.user = action.payload;\n\t\t\t})\n\t\t\t.addCase(signUp.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.isAuthenticated = false;\n\t\t\t\tstate.message = action.payload;\n\t\t\t\tstate.user = null;\n\t\t\t})\n\t\t\t.addCase(signIn.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(signIn.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.isAuthenticated = true;\n\t\t\t\tstate.user = action.payload;\n\t\t\t})\n\t\t\t.addCase(signIn.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t\tstate.user = null;\n\t\t\t})\n\t\t\t.addCase(signOut.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(signOut.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(signOut.fulfilled, (state) => {\n\t\t\t\tstate.user = null;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.isAuthenticated = false;\n\t\t\t});\n\t},\n});\n\nexport const { reset } = authSlice.actions;\nexport default authSlice.reducer;\n","/** @format */\n\nimport { combineReducers } from \"redux\";\n// import leads from \"./leads\";\nimport profile from \"./profile\";\nimport errors from \"./errors\";\nimport messages from \"./messages\";\n// import auth from \"./auth\";\nimport data from \"./data\";\nimport sidebarReducer from \"../redux/features/sidebarSlice\";\nimport tabsReducer from \"../redux/features/tabSlice\";\nimport newTabsReducer from \"../redux/features/searchTabSlice\";\nimport favoriteReducer from \"../redux/features/favoriteSlice\";\nimport rolefnsReducer from \"../redux/features/roleFnSlice\";\nimport permissionReducer from \"../redux/features/rolePermissionSlice\";\nimport memberReducer from \"../redux/features/selectMemberSlice\"\nimport roleReducer from \"../redux/features/roleSlice\";\nimport auth from \"../redux/features/authSlice\";\n\nexport default combineReducers({\n\tauth,\n\tprofile,\n\trole: roleReducer,\n\terrors,\n\tmessages,\n\tdata,\n\tsidebar: sidebarReducer,\n\tfavorite: favoriteReducer,\n\ttabs: tabsReducer,\n\tnewTabs: newTabsReducer,\n\tpermissions: permissionReducer,\n\tmember: memberReducer\n});\n","/** @format */\n\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const DELETE_PROFILE = \"DELETE_PROFILE\";\nexport const ADD_PROFILE = \"ADD_PROFILE\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const CLEAR_PROFILES = \"CLEAR_PROFILES\";\nexport const MONTLY_REVENUE = \"GET_MONTLY_REVENUE\";\nexport const WEEKLY_REVENUE = \"GET_WEEKLY_REVENUE\";\nexport const GET_IS_WEEKLY = \"GET_IS_WEEKLY\";\nexport const UPDATE_IS_WEEKLY = \"UPDATE_IS_WEEKLY\";\n\nexport const CREATE_MEMBER_SUCCESS = \"CREATE_MEMBER_SUCCESS\";\nexport const CREATE_MEMBER_FAIL = \"CREATE_MEMBER_FAIL\";\n\nexport const GET_MEMBER_SUCCESS = \"GET_MEMBER_SUCCESS\";\nexport const GET_MEMBER_FAIL = \"GET_MEMBER_FAIL\";\n\nexport const GET_TIMEZONE_SUCCESS = \"GET_TIMEZONE_SUCCESS\";\nexport const GET_TIMEZONE_FAIL = \"GET_TIMEZONE_FAIL\";\nexport const GET_CURRENT_TIME_SCUSSESS = \"GET_CURRENT_TIME_SCUSSESS\";\nexport const GET_CURRENT_TIME_FAIL = \"GET_CURRENT_TIME_FAIL\";\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\n// export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\n// export const SIGNUP_FAIL = 'SIGNUP_FAIL';\n// export const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\n// export const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\n// export const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\n// export const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\n// export const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\n// export const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\n// export const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\n// export const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\n// export const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\n// export const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\n// export const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\n// export const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\n// export const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\n// export const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\n// export const LOGOUT = 'LOGOUT';\n\n// export const PROFILE_CREATED_SUCCESS = 'PROFILE_CREATED_SUCCESS';\n// export const PROFILE_CREATED_FAIL = 'PROFILE_CREATED_FAIL';\n\n// export const PROFILE_LOADED_SUCCESS = 'PROFILE_LOADED_SUCCESS';\n// export const PROFILE_LOADED_FAIL = 'PROFILE_LOADED_FAIL';\n\n// export const PROFILE_UPDATE_SUCCESS = 'PROFILE_UPDATE_SUCCESS';\n// export const PROFILE_UPDATE_FAIL = 'PROFILE_UPDATE_FAIL';\n","/** @format */\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./reducers\";\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({ reducer: persistedReducer,});\n\nexport const persistor = persistStore(store);\n\nexport default store;\n","/** @format */\n\nimport { CREATE_MESSAGE, GET_ERRORS } from \"./types\";\n\n// CREATE MESSAGE\nexport const createMessage = (msg) => {\n\treturn {\n\t\ttype: CREATE_MESSAGE,\n\t\tpayload: msg,\n\t};\n};\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status) => {\n\treturn {\n\t\ttype: GET_ERRORS,\n\t\tpayload: { msg, status },\n\t};\n};\n","/** @format */\n\nimport axios from \"axios\";\n\nimport {\n\tUSER_LOADED,\n\tUSER_LOADING,\n\tAUTH_ERROR,\n\tLOGIN_SUCCESS,\n\tLOGIN_FAIL,\n\tLOGOUT_SUCCESS,\n\tREGISTER_SUCCESS,\n\tREGISTER_FAIL,\n} from \"./types\";\nimport { createMessage, returnErrors } from \"./messages\";\nimport { useSelector } from \"react-redux\";\nimport { reset } from \"../redux/features/tabSlice\";\nimport { resetNewTab } from \"../redux/features/searchTabSlice\";\n\n// CHECK TOKEN & LOAD USER\nexport const loadUser = () => (dispatch, getState) => {\n\t// User Loading\n\tdispatch({ type: USER_LOADING });\n\n\taxios\n\t\t.get(\n\t\t\t`${process.env.REACT_APP_API_URL}/user/auth/user`,\n\t\t\ttokenConfig(getState),\n\t\t)\n\t\t.then((res) => {\n\t\t\tdispatch({\n\t\t\t\ttype: USER_LOADED,\n\t\t\t\tpayload: res.data,\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tdispatch(returnErrors(err.response.data.message, err.response.status));\n\t\t\tdispatch({\n\t\t\t\ttype: AUTH_ERROR,\n\t\t\t});\n\t\t});\n};\n\n// LOGIN USER\nexport const login = (username, email, password) => (dispatch) => {\n\t// Headers\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\t// Request Body\n\tconst body = JSON.stringify({ username, password });\n\n\taxios\n\t\t.post(`${process.env.REACT_APP_API_URL}/user/auth/login`, body, config)\n\t\t.then(function(response) {\n\t\t\tconsole.log(response);\n\t\t\tdispatch(createMessage({ LoginSuccess: \"Login Successful\" }));\n\t\t\tdispatch({\n\t\t\t\ttype: LOGIN_SUCCESS,\n\t\t\t\tpayload: response.data,\n\t\t\t});\n\t\t})\n\t\t.catch(function(error) {\n\t\t\tdispatch(returnErrors(error.response.data, error.response.status));\n\t\t\tdispatch({\n\t\t\t\ttype: LOGIN_FAIL,\n\t\t\t});\n\t\t\tconsole.log(error);\n\t\t});\n};\n\n// REGISTER USER\nexport const register = ({ username, email, password }) => (dispatch) => {\n\t// Headers\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\t// Request Body\n\tconst body = JSON.stringify({ username, email, password });\n\n\taxios\n\t\t.post(`${process.env.REACT_APP_API_URL}/user/auth/register`, body, config)\n\t\t.then((res) => {\n\t\t\tdispatch({\n\t\t\t\ttype: REGISTER_SUCCESS,\n\t\t\t\tpayload: res.data,\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tdispatch(returnErrors(err.response.data, err.response.status));\n\t\t\tdispatch({\n\t\t\t\ttype: REGISTER_FAIL,\n\t\t\t});\n\t\t});\n};\n\n// LOGOUT USER\nexport const logout = () => (dispatch, getState) => {\n\taxios\n\t\t.post(\n\t\t\t`${process.env.REACT_APP_API_URL}/user/auth/logout`,\n\t\t\tnull,\n\t\t\ttokenConfig(getState),\n\t\t)\n\t\t.then((res) => {\n\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\tdispatch(reset());\n\t\t\tdispatch(resetNewTab());\n\t\t\tdispatch({\n\t\t\t\ttype: LOGOUT_SUCCESS,\n\t\t\t});\n\t\t});\n};\n\n// Setup config with token - helper function\nexport const tokenConfig = (getState) => {\n\t// const token = useSelector((state) => state.auth.token);\n\t// Get token from state\n\tconst token = getState().auth.token;\n\n\t// Headers\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\t// If token, add to headers config\n\tif (token) {\n\t\tconfig.headers[\"Authorization\"] = `Token ${token}`;\n\t}\n\n\treturn config;\n};\n","/** @format */\n\nimport { useState, useCallback } from \"react\";\n\nexport const useToggle = (initialState) => {\n  const [isToggled, setIsToggled] = useState(initialState);\n\n  // put [setIsToggled] into the useCallback's dependencies array\n  // this value never changes so the callback is not going to be ever re-created\n  const toggle = useCallback(\n    () => setIsToggled((state) => !state),\n    [setIsToggled],\n  );\n\n  return [isToggled, toggle];\n};\n","/** @format */\n\n// import * as React from 'react';\nimport { styled } from \"@mui/material/styles\";\nimport { Link } from \"react-router-dom\";\nimport { Button, InputBase } from \"@mui/material\";\n\nexport const SideBarBtn = styled(Button)(({ theme }) => ({\n  fontSize: \"0.6em\",\n  textTransform: \"none\",\n  // color: theme.palette.primary.main,\n  color: \"#eee\",\n  textAlign: \"center\",\n  width: \"8em\",\n  height: \"8em\",\n  margin: \"0.7em\",\n  borderColor: \"#eee\",\n  padding: \"1em\",\n  \"&:hover\": {\n    backgroundColor: \"white\",\n    color: theme.palette.primary.main,\n  },\n  \"&:visited\": {\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport const SecNavbar = styled(\"nav\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  overflow: \"hidden\",\n  color: \"#eee\",\n  position: \"reletive\",\n  padding: \"0\",\n  margin: \"0\",\n  height: \"3.5rem\",\n  width: \"100%\",\n}));\n\nexport const FooterBar = styled(\"footer\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  color: \"#eee\",\n  position: \"fixed\",\n  bottom: \"0\",\n  left: \"0\",\n\n  margin: \"0\",\n  height: \"2.5rem\",\n  textAlign: \"center\",\n  alignContent: \"center\",\n  width: \"100%\",\n}));\n\nexport const FooterLink = styled(Link)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  fontSize: \"1rem\",\n  textTransform: \"uppercase\",\n  fontWeight: 500,\n  textDecoration: \"none\",\n  marginTop: \"0.7rem\",\n  padding: \" 2rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\nexport const FooterButton = styled(Button)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  fontSize: \"1rem\",\n  fontWeight: 500,\n  marginX: \"2rem\",\n  paddingX: \"3rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\n\nexport const LinkButton = styled(Link)(({ theme }) => ({\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  margin: \"0.7em\",\n  backgroundColor: theme.palette.primary.main,\n  borderColor: \"#2979ff\",\n  color: \"white\",\n  padding: \"0.65rem 1.2rem\",\n  borderRadius: \"0.5rem\",\n  \"&:hover\": {\n    backgroundColor: \"#1c54b2\",\n    cursor: \"pointer\",\n    color: \"white\",\n  },\n}));\n\nexport const Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#ddd\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"40%\",\n}));\n\nexport const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\nexport const MainSearch = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#eee\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(3),\n    width: \"auto\",\n  },\n}));\n\nexport const MainSearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledMainInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n\n","/** @format */\n\n/** @format */ // import axios from \"axios\";\n\nimport { GET_IS_WEEKLY, MONTLY_REVENUE, WEEKLY_REVENUE } from \"./types\";\n// GET LEADS\nexport const updateIsWeekly = (data) => (dispatch) => {\n  if (data) {\n    dispatch({\n      type: WEEKLY_REVENUE,\n      payload: data,\n    });\n  } else {\n    dispatch({\n      type: MONTLY_REVENUE,\n    });\n  }\n};\n\nexport const getIsWeekly = () => (dispatch) =>\n  dispatch({\n    type: GET_IS_WEEKLY,\n    // payload: this.state,\n  });\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport NumberFormat from \"react-number-format\";\nimport { useToggle } from \"../../context/useToggle\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  ListSubheader,\n  TextField,\n} from \"@mui/material\";\nimport {\n  MainSearch,\n  MainSearchIconWrapper,\n  StyledMainInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Logo from \"../../asserts/logo_white copy.png\";\nimport { updateIsWeekly } from \"../../actions/data\";\nimport {\n  IconButton,\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\n\nconst NavbarResponsive = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const [today, setToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [dateValue, setDateValue] = useState([null, null]);\n\n  const timeFormater = () => {\n    if (checked) {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n    } else {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: false,\n      });\n    }\n  };\n  const [isChecked, setIsChecked] = useToggle(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOnChage = (e) => {\n    dispatch(updateIsWeekly(e.target.value));\n  };\n\n  const logout_user = () => {\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Typography variant=\"h5\" component=\"h5\">\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          color=\"primary\"\n          style={{ marginRight: \"0.5rem\" }}\n        >\n          Expected Balance :\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">\n              Expected Balance\n            </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={isWeekly}\n              label=\"Expected Balance\"\n              onChange={handleOnChage}\n            >\n              <MenuItem value=\"daily\">Daily</MenuItem>\n              <MenuItem value=\"weekly\">Weekly</MenuItem>\n              <MenuItem value=\"monthly\">Monthly</MenuItem>\n              <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n              <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n              <MenuItem value=\"range\">Custom Range</MenuItem>\n              {isWeekly === \"range\" ? (\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              ) : null}\n            </Select>\n          </FormControl>\n        </Typography>\n        <NumberFormat\n          value={isWeekly ? 3254 : 32564}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix=\"$\"\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" ml={1} mr={1}>\n        {\" \"}\n        |{\" \"}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h5\">\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          \n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n    </Fragment>\n  );\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <Typography noWrap component=\"div\" sx={{ display: \"block\" }}>\n        <Link to=\"/\">\n          <img\n            src={Logo}\n            alt=\"logo\"\n            style={{ height: \"2rem\", width: \"auto\" }}\n          />\n        </Link>\n      </Typography>\n      {isAuthenticated ? (\n        <>\n          <Typography variant=\"h5\" component=\"h5\" sx={{ marginLeft: \"1rem\" }}>\n            {timeFormater()}\n            <Switch\n              size=\"small\"\n              \n              checked={checked}\n              onChange={handleChange}\n              inputProps={{ \"aria-label\": \"controlled\" }}\n              sx={{ transform: \"rotate(90deg)\" }}\n            />\n          </Typography>\n          <IconButton\n            sx={{ color: \"#7a4ebf\", float: \"right\" }}\n            onClick={() => setOpenDrawer(!openDrawer)}\n          >\n            <MenuIcon color=\"#7a4ebf\" />\n          </IconButton>\n        </>\n      ) : (\n        guestLinks()\n      )}\n\n      <Drawer\n        anchor=\"right\"\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <MainSearch>\n                <MainSearchIconWrapper>\n                  <SearchIcon />\n                </MainSearchIconWrapper>\n                <StyledMainInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </MainSearch>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <Typography variant=\"h5\" component=\"h5\">\n                <Typography\n                  component=\"span\"\n                  variant=\"h5\"\n                  color=\"primary\"\n                  style={{ marginRight: \"0.5rem\" }}\n                >\n                  Set Interval :\n                  <Select\n                    size=\"small\"\n                    sx={{ marginX: \"1rem\" }}\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={isWeekly}\n                    label=\"Expected Balance\"\n                    onChange={handleOnChage}\n                  >\n                    <MenuItem value=\"daily\">Daily</MenuItem>\n                    <MenuItem value=\"weekly\">Weekly</MenuItem>\n                    <MenuItem value=\"monthly\">Monthly</MenuItem>\n                    <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n                    <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n                    <MenuItem value=\"range\">Custom Range</MenuItem>\n                    {isWeekly === \"range\" ? (\n                      <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DateRangePicker\n                          startText=\"Start Date\"\n                          endText=\"End Date\"\n                          value={dateValue}\n                          onChange={(newValue) => {\n                            setDateValue(newValue);\n                          }}\n                          renderInput={(startProps, endProps) => (\n                            <Fragment>\n                              <TextField {...startProps} />\n                              <Box sx={{ mx: 2 }}> to </Box>\n                              <TextField {...endProps} />\n                            </Fragment>\n                          )}\n                        />\n                      </LocalizationProvider>\n                    ) : null}\n                  </Select>\n                </Typography>\n              </Typography>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              {\" \"}\n              <Typography variant=\"h5\" component=\"h5\">\n                Expected Balance :{\" \"}\n                <NumberFormat\n                  value={isWeekly ? 3254 : 32564}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon></ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon></ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <MainSearch>\n                <MainSearchIconWrapper>\n                  <SearchIcon />\n                </MainSearchIconWrapper>\n                <StyledMainInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </MainSearch>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n      </Drawer>\n    </Fragment>\n  );\n};\n\nexport default NavbarResponsive;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport NumberFormat from \"react-number-format\";\nimport { useToggle } from \"../../context/useToggle\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  ListSubheader,\n  TextField,\n} from \"@mui/material\";\nimport {\n  MainSearch,\n  MainSearchIconWrapper,\n  StyledMainInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Logo from \"../../asserts/logo_white copy.png\";\nimport { updateIsWeekly } from \"../../actions/data\";\nimport { useMediaQuery } from \"react-responsive\";\nimport NavbarResponsive from \"./NavbarResponsive\";\n\nconst Navbar = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const [today, setToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [dateValue, setDateValue] = useState([null, null]);\n\n  const timeFormater = () => {\n    if (checked) {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n    } else {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: false,\n      });\n    }\n  };\n  const [isChecked, setIsChecked] = useToggle(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOnChage = (e) => {\n    dispatch(updateIsWeekly(e.target.value));\n  };\n\n  const logout_user = () => {\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Typography variant=\"h5\" component=\"h5\">\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          color=\"primary\"\n          style={{ marginRight: \"0.8rem\" }}\n        >\n          Expected Balance :\n          <Select\n            sx={{ marginX: \"1rem\" }}\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={isWeekly}\n            label=\"Expected Balance\"\n            onChange={handleOnChage}\n          >\n            <MenuItem value=\"daily\">Daily</MenuItem>\n            <MenuItem value=\"weekly\">Weekly</MenuItem>\n            <MenuItem value=\"monthly\">Monthly</MenuItem>\n            <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n            <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n            <MenuItem value=\"range\">Custom Range</MenuItem>\n            {isWeekly === \"range\" ? (\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateRangePicker\n                  startText=\"Start Date\"\n                  endText=\"End Date\"\n                  value={dateValue}\n                  onChange={(newValue) => {\n                    setDateValue(newValue);\n                  }}\n                  renderInput={(startProps, endProps) => (\n                    <Fragment>\n                      <TextField {...startProps} />\n                      <Box sx={{ mx: 2 }}> to </Box>\n                      <TextField {...endProps} />\n                    </Fragment>\n                  )}\n                />\n              </LocalizationProvider>\n            ) : null}\n          </Select>\n        </Typography>\n        <NumberFormat\n          value={isWeekly ? 3254 : 32564}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix=\"$\"\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" ml={1} mr={1}>\n        {\" \"}\n        |{\" \"}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h5\">\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          \n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n    </Fragment>\n  );\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <Box sx={{ flexGrow: 1, backgroundColor: \"white\" }} component=\"nav\">\n        <AppBar position=\"static\" color=\"transparent\" sx={{ border: \"none\" }}>\n          <Toolbar>\n            {isTabletOrMobile ? (\n              <>\n                <NavbarResponsive />\n              </>\n            ) : (\n              <>\n                <Typography\n                  noWrap\n                  component=\"div\"\n                  sx={{ display: { xs: \"none\", sm: \"block\" } }}\n                >\n                  <Link to=\"/\">\n                    <img\n                      src={Logo}\n                      alt=\"logo\"\n                      style={{ height: \"2rem\", width: \"auto\" }}\n                    />\n                  </Link>\n                </Typography>\n                <MainSearch>\n                  <MainSearchIconWrapper>\n                    <SearchIcon />\n                  </MainSearchIconWrapper>\n                  <StyledMainInputBase\n                    placeholder=\"Search…\"\n                    inputProps={{ \"aria-label\": \"search\" }}\n                  />\n                </MainSearch>\n                <Box sx={{ flexGrow: 1 }} />\n                <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\n                  {isAuthenticated ? authLinks() : guestLinks()}\n                </Box>\n              </>\n            )}\n          </Toolbar>\n        </AppBar>\n      </Box>\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\n\nexport default Navbar;\n","/** @format */\n\nimport Box from \"@mui/material/Box\"\nimport Typography from \"@mui/material/Typography\"\nimport Button from \"@mui/material/Button\"\nimport TextField from \"@mui/material/TextField\"\nimport Chip from \"@mui/material/Chip\"\nimport SendIcon from \"@mui/icons-material/Send\";\nimport React, { Fragment } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\n\nconst ChatHistory = () => {\n  return (\n    <Typography>\n      <Box\n        p={2}\n        sx={{\n          border: \"1px solid lightgray\",\n          borderRadius: \"1rem\",\n        }}\n      >\n        <Chip\n          label=\"Hi\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          size=\"large\"\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip label=\"Hello\" variant=\"outlined\" avatar={<Avatar>M</Avatar>} />\n        <br />\n        <Chip\n          label=\"Message by M\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"Message by D\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"this is just a ui design\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{ marginTop: \"1rem\" }}\n        />\n        <br />\n        <Chip\n          label=\"the chat feature is not working at backend\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n\n        <br />\n      </Box>\n    </Typography>\n  );\n};\n\nconst Chatting = () => {\n  return (\n    <Fragment>\n      <ChatHistory />\n      <br />\n      <Box\n        component=\"form\"\n        sx={{\n          //   border: \"1px solid lightgray\",\n          //   borderRadius: \"1rem\",\n          \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n        }}\n      >\n        <TextField type=\"text\" size=\"small\" variant=\"outlined\" />\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          endIcon={<SendIcon />}\n          type=\"submit\"\n          sx={{\n            m: 1,\n          }}\n        >\n          Send\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Chatting;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport isWeekend from \"date-fns/isWeekend\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { StaticDatePicker } from \"@mui/x-date-pickers/StaticDatePicker\";\nimport { TextField, Box, Paper, Grid } from \"@mui/material\";\n\nconst Calender = () => {\n  const [value, setValue] = useState(new Date());\n  const [tasks, setTasks] = useState([]);\n\n  return (\n    <Box component={Paper} m={2}>\n      <Grid container>\n        {\" \"}\n        <Grid item lg={6} xs={12}>\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <StaticDatePicker\n              orientation=\"landscape\"\n              openTo=\"day\"\n              value={value}\n              shouldDisableDate={isWeekend}\n              onChange={(newValue) => {\n                setValue(newValue);\n              }}\n              renderInput={(params) => <TextField {...params} />}\n            />\n          </LocalizationProvider>\n        </Grid>{\" \"}\n        <Grid item lg={6} xs={12}>\n          {tasks.length !== 0 ? (\n            tasks.map((task) => (\n              <li>\n                {task.id} - {task.name}\n              </li>\n            ))\n          ) : (\n            <h4> No record found</h4>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Calender;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  IconButton,\n  Avatar,\n  ListItemText,\n  ListItemAvatar,\n} from \"@mui/material\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport StarIcon from \"@mui/icons-material/Star\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { removeFav } from \"../../redux/features/favoriteSlice\";\n\nconst Favorites = () => {\n  const favorite = useSelector((state) => state.favorite)\n  const dispatch = useDispatch();\n  const handleRemoveFav = (fav) => {\n    dispatch(removeFav(fav));\n  };\n  return (\n    <div>\n     <List>\n        {favorite ?\n        (favorite.map((item)=>(\n            <ListItem key={item.id}\n              secondaryAction={\n                <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>handleRemoveFav(item)}>\n                  <CloseIcon />\n                </IconButton>\n              }\n            >\n              <ListItemAvatar>\n                <Avatar sx={{bgcolor:\"#eee\"}}>\n                  <StarIcon sx={{color:\"orange\"}}/>\n                </Avatar>\n              </ListItemAvatar>\n              {item.name === '/'? <ListItemText\n                primary=\"Home\"\n               \n              />: <ListItemText\n                primary={item.name}\n               \n              />}\n            </ListItem>\n        ))): null}\n        \n      </List>\n    </div>\n  );\n};\n\nexport default Favorites;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport Chatting from \"../Chat/Chat\";\n\n// styling imports\nimport {\n  \n  IconButton,\n  Menu,\n  MenuItem,\n  Fade,\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n\n  DialogActions,\n  Button,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\n\nimport {\n  Message,\n  EmailRounded,\n  CalendarToday,\n  CheckBox,\n\n  NotificationAdd,\n  Settings,\n  Star,\n\n} from \"@mui/icons-material/\";\nimport { useToggle } from \"../../context/useToggle\";\nimport Calender from \"../Dashboard/Calender\";\n\nimport Favorites from \"../Favorite/Favorites\";\n\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { useMediaQuery } from \"react-responsive\";\nimport {\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n\n} from \"@mui/material\";\n\nexport const NavBarSecResponsive = () => {\n\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  const [openFav, setOpenFav] = useState(false);\n\n  const handleClickOpenFav = () => {\n    setOpenFav(true);\n  };\n\n  const handleCloseFav = () => {\n    setOpenFav(false);\n  };\n  const [openCal, setOpenCal] = useState(false);\n\n  const handleClickOpenCal = () => {\n    setOpenCal(true);\n  };\n\n  const handleCloseCal = () => {\n    setOpenCal(false);\n  };\n\n  const [openChat, setOpenChat] = useState(false);\n\n  const handleClickOpenChat = () => {\n    setOpenChat(true);\n  };\n\n  const handleCloseChat = () => {\n    setOpenChat(false);\n  };\n\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n  const [redirect, setRedirect] = useState(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [settingAcnchorEl2, setSettingAcnchorEl2] = useState(null);\n\n\n\n  const handleLogout = () => {\n    console.log(\"logout button just clicked\");\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const openSetting2 = Boolean(settingAcnchorEl2);\n\n  const handleClick2 = (event) => {\n    setSettingAcnchorEl2(event.currentTarget);\n  };\n  const openSetting = Boolean(settingAcnchorEl);\n  const handleClose2 = () => {\n    setSettingAcnchorEl2(null);\n  };\n\n  const handleClick = (event) => {\n    setSettingAcnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setSettingAcnchorEl(null);\n  };\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <IconButton\n        sx={{ color: \"white\" }}\n        onClick={() => setOpenDrawer(!openDrawer)}\n      >\n        <MenuIcon color=\"white\" />\n      </IconButton>\n      <Drawer\n        anchor=\"left\"\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                className=\"nav-items\"\n                size=\"large\"\n                onClick={handleClickOpenChat}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"#fff\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n              >\n                <Message />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          className=\"nav-items\"\n          Validate\n          open={openChat}\n          onClose={handleCloseChat}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          sx={{\n            position: \"absolute\",\n            right: \"20px\",\n            bottom: \"150px\",\n          }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Chatting Application\"}\n          </DialogTitle>\n          <DialogContent>\n            <Chatting />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseChat}>Close</Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                size=\"large\"\n                className=\"nav-items\"\n                component={Link}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n                to={{\n                  pathname:\n                    \"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=someone@gmail.com\",\n                }}\n                target=\"_blank\"\n              >\n                <EmailRounded />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                size=\"large\"\n                className=\"nav-items\"\n                onClick={handleClickOpenCal}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <CalendarToday />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          Validate\n          open={openCal}\n          maxWidth=\"lg\"\n          fullWidth\n          onClose={handleCloseCal}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          sx={{\n            position: \"absolute\",\n            right: \"20px\",\n            bottom: \"150px\",\n          }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Calender\"}</DialogTitle>\n          <DialogContent>\n            <Calender />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseCal}>Close</Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                aria-label=\"more\"\n                className=\"nav-items\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting2 ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick2}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <CheckBox />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Menu\n          id=\"fade-menu\"\n          MenuListProps={{\n            \"aria-labelledby\": \"fade-button\",\n          }}\n          className=\"nav-items\"\n          anchorEl={settingAcnchorEl2}\n          open={openSetting2}\n          onClose={handleClose2}\n          TransitionComponent={Fade}\n        >\n          <MenuItem onClick={handleClose2}>Task 1: This is task one</MenuItem>\n          <MenuItem onClick={handleClose2}>Task 2: This is task two</MenuItem>\n          <MenuItem onClick={handleClose2}>Task 3: This is task three</MenuItem>\n          <Divider sx={{ my: 0.5 }} />\n          <MenuItem onClick={handleClose2}>Task 4: This is task four</MenuItem>\n        </Menu>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                className=\"nav-items\"\n                aria-expanded={openSetting2 ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClickOpenFav}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <Star />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          open={openFav}\n          onClose={handleCloseFav}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n          <DialogContent>\n            <Favorites />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseFav} autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                className=\"nav-items\"\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                <MenuItem component={Link} to=\"/profile\">\n                  Profile\n                </MenuItem>\n                {/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n              </Menu>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                sx={{\n                  color: \"#7a4ebf\",\n                }}\n              >\n                <Settings />\n              </IconButton>\n              <Menu\n                id=\"fade-menu\"\n                MenuListProps={{\n                  \"aria-labelledby\": \"fade-button\",\n                }}\n                anchorEl={settingAcnchorEl}\n                open={openSetting}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Account</MenuItem>\n                <MenuItem onClick={handleClose}>Setting</MenuItem>\n                <Divider sx={{ my: 0.5 }} />\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n              </Menu>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n      </Drawer>\n\n      <NotificationAdd mr={2} />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { signOut, reset } from \"../../redux/features/authSlice\";\nimport {Redirect, useLocation } from 'react-router-dom'\n\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Chatting from \"../Chat/Chat\";\n// styling imports\nimport Box from \"@mui/material/Box\"\nimport Toolbar from \"@mui/material/Toolbar\"\nimport Typography from \"@mui/material/Typography\"\nimport IconButton from \"@mui/material/IconButton\"\nimport Menu from \"@mui/material/Menu\"\nimport MenuItem from \"@mui/material/MenuItem\"\nimport Fade from \"@mui/material/Fade\"\nimport Divider from \"@mui/material/Divider\"\nimport Dialog from \"@mui/material/Dialog\"\nimport DialogTitle from \"@mui/material/DialogTitle\"\nimport DialogContent from \"@mui/material/DialogContent\"\nimport DialogActions from \"@mui/material/DialogActions\"\nimport Button from \"@mui/material/Button\"\nimport { Link } from \"react-router-dom\";\nimport { SecNavbar } from \"../../styles/styles\";\n\nimport MessageIcon from \"@mui/icons-material/Message\"\nimport EmailRoundedIcon from \"@mui/icons-material/EmailRounded\"\nimport CalendarTodayIcon from \"@mui/icons-material/CalendarToday\"\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\"\nimport PersonIcon from \"@mui/icons-material/Person\"\nimport NotificationAddIcon from \"@mui/icons-material/NotificationAdd\"\nimport SettingsIcon from \"@mui/icons-material/Settings\"\nimport StarIcon from \"@mui/icons-material/Star\"\n\nimport Calender from \"../Dashboard/Calender\";\n\nimport Favorites from \"../Favorite/Favorites\";\n\n\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { NavBarSecResponsive } from \"./DrawerComp\";\nimport { addFav } from \"../../redux/features/favoriteSlice\";\n\nconst NavbarSec = () => {\t\n\tconst { user } = useSelector((state) => state.auth.user);\n\tconst favorite = useSelector((state) => state.favorite)\n\n\t// location.pathname\n\tconst isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n\tconst [isPath, setIsPath] = useState(null)\n\n\tconst dispatch = useDispatch();\n\tconst location = useLocation()\n\n\tconst [openFav, setOpenFav] = useState(false);\n\tconst isPathExist =()=>{\n\t\tconst arr = favorite.filter((item) => item.name === location.pathname)\n\t\tif (arr > 0){\n\t\t\tsetIsPath(true)\n\t\t}\n\t\telse{\n\t\t\tsetIsPath(false)\n\t\t}\n\n\t}\n\tuseEffect(()=>{\n\t\tisPathExist()\n\t},[])\n\tconst handleClickOpenFav = () => {\n\t\tlet name = location.pathname\n\t\tlet id = favorite.length + 1\n\t\tif (isPath === false){\n\t\t\tdispatch(addFav({id:id, name:name, page:window.location.href }))\n\t\t\tsetIsPath(true)\n\t\t}\n\t\t\n\t\t\n\t\tsetOpenFav(true);\n\t};\n\n\tconst handleCloseFav = () => {\n\t\tsetOpenFav(false);\n\t};\n\tconst [openTask, setOpenTask] = useState(false)\n\n\tconst [openCal, setOpenCal] = useState(false);\n\n\tconst handleClickOpenCal = () => {\n\t\tsetOpenCal(true);\n\t};\n\n\tconst handleCloseCal = () => {\n\t\tsetOpenCal(false);\n\t};\n\n\tconst [openChat, setOpenChat] = useState(false);\n\n\tconst handleClickOpenChat = () => {\n\t\tsetOpenChat(true);\n\t};\n\n\tconst handleCloseChat = () => {\n\t\tsetOpenChat(false);\n\t};\n\n\tconst [localuser, setLocalUser] = useState({\n\t\tusername: \"Admin\",\n\t\tis_firm: false,\n\t\tis_lawyer: false,\n\t\tis_client: false,\n\t});\n\n\tuseEffect(() => {\n\t\tif (user) {\n\t\t\tsetLocalUser({\n\t\t\t\tusername: user.username,\n\t\t\t\tis_firm: user.is_firm,\n\t\t\t\tis_lawyer: user.is_lawyer,\n\t\t\t\tis_client: user.is_client,\n\t\t\t});\n\t\t}\n\t}, [user]);\n\tconst [redirect, setRedirect] = useState(false);\n\n\tconst [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\n\n\tconst [settingAcnchorEl2, setSettingAcnchorEl2] = useState(null);\n\n\tconst [anchorEl2, setAnchorEl2] = React.useState(null);\n\n\tconst handleLogout = () => {\n\t\tconsole.log(\"logout button just clicked\");\n\t\tdispatch(signOut());\n\t\tdispatch(reset());\n\t\tsetRedirect(true);\n\t};\n\n\tconst open = Boolean(anchorEl);\n\tconst open2 = Boolean(anchorEl);\n\n\tconst userRoleChecker = () => {\n\t\tswitch (user.username) {\n\t\t\tcase \"admin\":\n\t\t\t\treturn \"Admin\";\n\t\t\tcase \"firm\":\n\t\t\t\treturn \"Firm\";\n\t\t\tcase \"lawyer\":\n\t\t\t\treturn \"Lawyer\";\n\t\t\tdefault:\n\t\t\t\treturn \"Client\";\n\t\t}\n\t};\n\n\tconst openSetting2 = Boolean(settingAcnchorEl2);\n\n\tconst handleClick2 = (event) => {\n\t\tsetSettingAcnchorEl2(event.currentTarget);\n\t};\n\tconst openSetting = Boolean(settingAcnchorEl);\n\tconst handleClose2 = () => {\n\t\tsetSettingAcnchorEl2(null);\n\t};\n\n\tconst handleClick = (event) => {\n\t\tsetSettingAcnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetSettingAcnchorEl(null);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<SecNavbar>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t{isTabletOrMobile ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<NavBarSecResponsive />\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Box component='div' sx={{ flexGrow: 1 }}>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\tonClick={handleClickOpenChat}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"#fff\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<MessageIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tValidate\n\t\t\t\t\t\t\t\t\topen={openChat}\n\t\t\t\t\t\t\t\t\tonClose={handleCloseChat}\n\t\t\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\n\t\t\t\t\t\t\t\t\taria-describedby='alert-dialog-description'\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\tright: \"20px\",\n\t\t\t\t\t\t\t\t\t\tbottom: \"150px\",\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>\n\t\t\t\t\t\t\t\t\t\t{\"Chatting Application\"}\n\t\t\t\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t<Chatting />\n\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleCloseChat}>Close</Button>\n\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t</Dialog>\n\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"white\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\t\tpathname:\n\t\t\t\t\t\t\t\t\t\t\t\"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=someone@gmail.com\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ttarget='_blank'>\n\t\t\t\t\t\t\t\t\t<EmailRoundedIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tonClick={handleClickOpenCal}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"white\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<CalendarTodayIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\t\t\tValidate\n\t\t\t\t\t\t\t\t\topen={openCal}\n\t\t\t\t\t\t\t\t\tmaxWidth='lg'\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tonClose={handleCloseCal}\n\t\t\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\n\t\t\t\t\t\t\t\t\taria-describedby='alert-dialog-description'\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\tright: \"20px\",\n\t\t\t\t\t\t\t\t\t\tbottom: \"150px\",\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>\n\t\t\t\t\t\t\t\t\t\t{\"Calender\"}\n\t\t\t\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t<Calender />\n\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleCloseCal}>Close</Button>\n\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\taria-label='more'\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tid='long-button'\n\t\t\t\t\t\t\t\t\taria-controls='long-menu'\n\t\t\t\t\t\t\t\t\taria-expanded={openSetting2 ? \"true\" : undefined}\n\t\t\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\t\t\tonClick={handleClick2}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"white\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<CheckBoxIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\t\tid='fade-menu'\n\t\t\t\t\t\t\t\t\tMenuListProps={{\n\t\t\t\t\t\t\t\t\t\t\"aria-labelledby\": \"fade-button\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tanchorEl={settingAcnchorEl2}\n\t\t\t\t\t\t\t\t\topen={openSetting2}\n\t\t\t\t\t\t\t\t\tonClose={handleClose2}\n\t\t\t\t\t\t\t\t\tTransitionComponent={Fade}>\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose2}>\n\t\t\t\t\t\t\t\t\t\tTask 1: This is task one\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose2}>\n\t\t\t\t\t\t\t\t\t\tTask 2: This is task two\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose2}>\n\t\t\t\t\t\t\t\t\t\tTask 3: This is task three\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t<Divider sx={{ my: 0.5 }} />\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose2}>\n\t\t\t\t\t\t\t\t\t\tTask 4: This is task four\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\taria-label='more'\n\t\t\t\t\t\t\t\t\tid='long-button'\n\t\t\t\t\t\t\t\t\taria-controls='long-menu'\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\taria-expanded={openSetting2 ? \"true\" : undefined}\n\t\t\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\t\t\tonClick={()=>handleClickOpenFav()}\n\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\tisPath ? {\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"orange\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"orange\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}: {\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\"color\": \"white\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<StarIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\t\t\topen={openFav}\n\t\t\t\t\t\t\t\t\tonClose={handleCloseFav}\n\t\t\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\n\t\t\t\t\t\t\t\t\taria-describedby='alert-dialog-description'>\n\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>\n\t\t\t\t\t\t\t\t\t\t{\"Favorites\"}\n\t\t\t\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t<Favorites />\n\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleCloseFav} autoFocus>\n\t\t\t\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<NotificationAddIcon mr={2} />\n\t\t\t\t\t\t\t<Typography component='h5' variant='h6' ml={2} mr={2}>\n\t\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\t\t\taria-controls='basic-menu'\n\t\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\taria-expanded={open ? \"true\" : undefined}\n\t\t\t\t\t\t\t\tonClick={handleClick}>\n\t\t\t\t\t\t\t\t<PersonIcon /> {user.username} - ({user.username} )\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\tonClick={handleLogout}>\n\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\tid='basic-menu'\n\t\t\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\t\tMenuListProps={{\n\t\t\t\t\t\t\t\t\t\"aria-labelledby\": \"basic-button\",\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<MenuItem component={Link} to='/profile'>\n\t\t\t\t\t\t\t\t\tProfile\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t{/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\taria-label='more'\n\t\t\t\t\t\t\t\tid='long-button'\n\t\t\t\t\t\t\t\taria-controls='long-menu'\n\t\t\t\t\t\t\t\taria-expanded={openSetting ? \"true\" : undefined}\n\t\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<SettingsIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\tid='fade-menu'\n\t\t\t\t\t\t\t\tMenuListProps={{\n\t\t\t\t\t\t\t\t\t\"aria-labelledby\": \"fade-button\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tanchorEl={settingAcnchorEl}\n\t\t\t\t\t\t\t\topen={openSetting}\n\t\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\t\tTransitionComponent={Fade}>\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Profile</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Account</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Setting</MenuItem>\n\t\t\t\t\t\t\t\t<Divider sx={{ my: 0.5 }} />\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleLogout}>Logout</MenuItem>\n\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Toolbar>\n\t\t\t</SecNavbar>\n\n\t\t\t{redirect ? <Redirect to='/' /> : <Fragment></Fragment>}\n\t\t</Fragment>\n\t);\n};\n\nexport default NavbarSec;\n","/** @format */\n\nimport React, { useState, Fragment } from \"react\";\nimport {\n  Box,\n  Accordion,\n  AccordionSummary,\n  Typography,\n  AccordionDetails,\n  Grid,\n} from \"@mui/material\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  Mail,\n  Phone,\n  Group,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  marketingActive,\n  appointmentActive,\n  empOversiteActive,\n  emailsActive,\n  mapActive,\n  callsActive,\n} from \"../../redux/features/sidebarSlice\";\n\nimport \"./style.css\";\n\nconst Controls = () => {\n  return (\n    <Fragment>\n      <Box px={3} sx={{ color: \"#796ef0\" }}>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/\">\n              <Grid item>\n                <AddCircle fontSize=\"medium\" />\n              </Grid>\n              <Grid item>DashBoard</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/invoices\">\n              <Grid item>\n                <Receipt fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Invoices</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/manage-categories\">\n              <Grid item>\n                <FileCopy fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Categories</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/ledgers\">\n              <Grid item>\n                <MoneyOff fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Ledger</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/create-task\">\n              <Grid item>\n                <Task fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Task</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/employee-search\">\n              <Grid item>\n                <Work fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Search</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/matter-dashboard\">\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Matters</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/contact\">\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Contact</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Marketing = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(marketingActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.marketing ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Marketing</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(emailsActive())}>\n          <Grid>\n            <Box sx={sidebar.emails ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Email</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst HumanResources = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageUserActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/users\">\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage User</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageRoleActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/user-roles\">\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Role</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageGroupActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/user-groups\">\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Group</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst RevenueControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueInActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueIn ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue In</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueOutActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueOut ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue Out</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst AccountControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.newCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Customers</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(lostCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.lostCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Lost Customer</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newAccountActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.newAccount ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Accounts</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(mapActive())}>\n          <Grid>\n            <Box sx={sidebar.map ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Trouble Ticket Map</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\nconst EmployeeOversite = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(empOversiteActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.empOversite ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Oversite</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(callsActive())}>\n          <Grid>\n            <Box sx={sidebar.calls ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Phone fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Calls</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(appointmentActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.appointment ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Appointments</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const accordionData = [\n  {\n    name: \"Controls\",\n    id: \"controls\",\n    tiles: <Controls />,\n  },\n\n  {\n    name: \"Human Resources\",\n    id: \"human_resource\",\n    tiles: <HumanResources />,\n  },\n  {\n    name: \"Revenue\",\n    id: \"revenue\",\n    tiles: <RevenueControls />,\n  },\n  {\n    name: \"Customers\",\n    id: \"customers\",\n    tiles: <AccountControls />,\n  },\n  {\n    name: \"Marketing\",\n    id: \"marketing\",\n    tiles: <Marketing />,\n  },\n  {\n    name: \"Employee Oversite\",\n    id: \"empOversite\",\n    tiles: <EmployeeOversite />,\n  },\n];\n\nconst TestingSidebar = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n\n  const [accordions, updateAccordions] = useState(accordionData);\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n\n    const items = Array.from(accordions);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    updateAccordions(items);\n  }\n\n  return (\n    <Fragment>\n      <Box mt={5}>\n        <DragDropContext onDragEnd={handleOnDragEnd}>\n          <Droppable droppableId=\"accordions\">\n            {(provided) => (\n              <Box\n                className=\"accordions\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {accordions.map((item, index) => {\n                  return (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <Accordion\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          <AccordionSummary\n                            expandIcon={<ExpandMoreIcon color=\"primary\" />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                          >\n                            <Typography\n                              align=\"center\"\n                              color=\"primary\"\n                              sx={{ textTransform: \"uppercase\" }}\n                            >\n                              {item.name}\n                            </Typography>\n                          </AccordionSummary>\n                          <AccordionDetails>{item.tiles}</AccordionDetails>\n                        </Accordion>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </Box>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TestingSidebar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\n\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\n// import { UserContext } from '../../context/User';\nimport \"./style.css\";\n\nconst LawyerSidebar = () => {\n  return (\n    <Fragment>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/\">\n            <Grid item>\n              <AddCircle fontSize=\"medium\" />\n            </Grid>\n            <Grid item>DashBoard</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/invoices\">\n            <Grid item>\n              <Receipt fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Invoices</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/ledgers\">\n            <Grid item>\n              <MoneyOff fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Ledger</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/create-task\">\n            <Grid item>\n              <Task fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Manage Task</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/employee-search\">\n            <Grid item>\n              <Work fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Employee Search</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/matter-dashboard\">\n            <Grid item>\n              <AssignmentTurnedIn fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Matters</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/contact\">\n            <Grid item>\n              <AssignmentTurnedIn fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Contact</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n    </Fragment>\n  );\n};\n\nexport default LawyerSidebar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\n\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\n// import { UserContext } from '../../context/User';\nimport \"./style.css\";\n\nconst FirmSidebar = () => {\n  return (\n    <Fragment>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/\">\n            <Grid item>\n              <AddCircle fontSize=\"medium\" />\n            </Grid>\n            <Grid item>DashBoard</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/invoices\">\n            <Grid item>\n              <Receipt fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Invoices</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/users\">\n            <Grid item>\n              <Person fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Manage User</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/manage-categories\">\n            <Grid item>\n              <FileCopy fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Manage Categories</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/ledgers\">\n            <Grid item>\n              <MoneyOff fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Ledger</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/create-task\">\n            <Grid item>\n              <Task fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Manage Task</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/employee-search\">\n            <Grid item>\n              <Work fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Employee Search</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/matter-dashboard\">\n            <Grid item>\n              <AssignmentTurnedIn fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Matters</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/contact\">\n            <Grid item>\n              <AssignmentTurnedIn fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Contact</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n    </Fragment>\n  );\n};\n\nexport default FirmSidebar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\n\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\n// import { UserContext } from '../../context/User';\nimport \"./style.css\";\n\nconst CustomerSidebar = () => {\n  return (\n    <Fragment>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/\">\n            <Grid item>\n              <AddCircle fontSize=\"medium\" />\n            </Grid>\n            <Grid item>DashBoard</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/invoices\">\n            <Grid item>\n              <Receipt fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Invoices</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/create-task\">\n            <Grid item>\n              <Task fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Manage Task</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n    </Fragment>\n  );\n};\n\nexport default CustomerSidebar;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Box, Paper, Stack,} from \"@mui/material\";\n\nimport AdminSidebar from \"./AdminSidebar\";\nimport LawyerSidebar from \"./LawyerSidebar\";\nimport FirmSidebar from \"./FirmSidebar\";\nimport CustomerSidebar from \"./CutomerSidebar\";\nimport \"./style.css\";\n\nconst Sidebar = () => {\n\n  const { user } = useSelector((state) => state.auth.user);\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: true,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const SidebarRedirect = () => {\n    switch (user.username) {\n      case \"admin\":\n        return <AdminSidebar />;\n      case \"firm\":\n        return <FirmSidebar />;\n      case \"lawyer\":\n        return <LawyerSidebar />;\n      default:\n        return <CustomerSidebar />;\n    }\n  };\n\n\n  return (\n    <Fragment>\n      <Paper component={Stack} elevation={3} spacing={1}>\n        <Box\n          sx={{\n            height: \"calc(83vh - 40px)\",\n            overflowY: \"scroll\",\n          }}\n        >\n          {SidebarRedirect()}\n\n        </Box>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default Sidebar;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  BottomNavigation,\n  BottomNavigationAction,\n  Link,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@mui/material\";\nimport { FooterBar, FooterLink, FooterButton } from \"../../styles/styles\";\nimport {\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport Favorites from \"../Favorite/Favorites\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst Footer = () => {\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <Box mt={3}>\n        {isTabletOrMobile ? (\n          <Box sx={{ color: \"#eee\", backgroundColor: \"#7a4ebf\" }}>\n            <List>\n              <FooterLink to={\"/ledgers\"}>Accounting</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}> Calendar</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}>Contacts</FooterLink>\n            </List>\n            <List>\n              <FooterButton\n                sx={{\n                  color: \"#eee\",\n                  marginLeft: \"1.2rem\",\n                  textTransform: \"uppercase\",\n                  textDecoration: \"none\",\n                  \"&:visited\": {\n                    color: \"#eee\",\n                  },\n                }}\n                variant=\"text\"\n                onClick={handleClickOpen}\n              >\n                Favorites\n              </FooterButton>\n            </List>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n              <DialogContent>\n                <Favorites />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} autoFocus>\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n            <List>\n              <FooterLink to={\"/matters\"}>Matters</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/tasks\"}>Tasks</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}>Workflow</FooterLink>\n            </List>\n          </Box>\n        ) : (\n          <FooterBar>\n            <FooterLink to={\"/ledgers\"}>Accounting</FooterLink> |\n            <FooterLink to={\"/\"}> Calendar</FooterLink> |\n            <FooterLink to={\"/\"}>Contacts</FooterLink> |\n            <FooterButton\n              sx={{\n                color: \"#eee\",\n                textTransform: \"uppercase\",\n                textDecoration: \"none\",\n                \"&:visited\": {\n                  color: \"#eee\",\n                },\n              }}\n              variant=\"text\"\n              onClick={handleClickOpen}\n            >\n              Favorites\n            </FooterButton>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n              <DialogContent>\n                <Favorites />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} autoFocus>\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n            |<FooterLink to={\"/matters\"}>Matters</FooterLink> |\n            <FooterLink to={\"/tasks\"}>Tasks</FooterLink> |\n            <FooterLink to={\"/\"}>Workflow</FooterLink>\n          </FooterBar>\n        )}\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Footer;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Navbar from \"../components/Navbars/Navbar\";\nimport NavbarSec from \"../components/Navbars/NavbarSec\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport { connect } from \"react-redux\";\nimport Chatting from \"../components/Chat/Chat\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  isDisplay,\n  hideSidebar,\n  showSidebar,\n} from \"../redux/features/sidebarSlice\";\n\nimport { Paper, Fab, Popover } from \"@mui/material\";\nimport { Grid, Box, Button } from \"@mui/material\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { Chat, Report } from \"@mui/icons-material\";\n\nimport Footer from \"../components/Footer/Footer\";\n\nconst InnerLayout = ({ children }) => {\n  const { user, isAuthenticated} = useSelector(\n    (state) => state.auth\n  )\n\n  const theme = useTheme();\n\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  const sidebarToggle = useSelector((state) => state.sidebar.display);\n  const dispatch = useDispatch();\n\n  const [drawerOpen, setDrawerOpen] = React.useState(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setDrawerOpen(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setDrawerOpen(null);\n  };\n\n  const openPopover = Boolean(drawerOpen);\n  const id = openPopover ? \"simple-popover\" : undefined;\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleSidebarToggle = () => {\n    if (sidebarToggle) {\n      dispatch(hideSidebar());\n    } else {\n      dispatch(showSidebar());\n    }\n  };\n  const descriptionElementRef = React.useRef(null);\n\n  useEffect(() => {\n    if (isBigScreen) {\n      dispatch(showSidebar());\n    } else if (isTabletOrMobile) {\n      dispatch(hideSidebar());\n    }\n  }, []);\n  useEffect(() => {\n    if (drawerOpen) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [drawerOpen]);\n\n  return (\n    <Paper style={{ margin: \"0\" }}>\n      <Grid contianer rowSpacing={2} columnSpacing={2}>\n        <Grid item lg={12} md={12}>\n          {isAuthenticated ? (\n            <Fragment>\n              <NavbarSec />\n            </Fragment>\n          ) : (\n            <Navbar />\n          )}\n        </Grid>\n\n        {isAuthenticated ? (\n          <Fragment>\n            <Grid item lg={12}>\n              <Navbar />\n            </Grid>\n            <Grid container direction=\"row\" wrap=\"nowrap\">\n              {sidebarToggle ? (\n                <Fragment>\n                  <Grid item lg={2} xs={12} m={3}>\n                    <Sidebar />\n                  </Grid>\n                  <Grid item lg={10} xs={12} p={1}>\n                    <Box>\n                      <Button\n                        onClick={handleSidebarToggle}\n                        p={5}\n                        sx={{\n                          left: \"-8rem\",\n                          top: \"2rem\",\n                        }}\n                      >\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <Grid item lg={12} xs={12} p={1}>\n                    <Box>\n                      <Button onClick={handleSidebarToggle}>\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              )}\n            </Grid>\n            <Grid item lg={12}>\n              <Footer />\n            </Grid>\n          </Fragment>\n        ) : (\n          <Grid item lg={12} xs={12}>\n            {children}\n          </Grid>\n        )}\n        {isAuthenticated? \n        <>\n        <Fab\n          size=\"large\"\n          sx={\n            isDesktopOrLaptop\n              ? {\n                  borderRadius: \"50%\",\n                  backgroundColor: \"#edb4b6\",\n                  position: \"fixed\",\n                  bottom: \"16px\",\n                  left: \"16px\",\n                  color: \"red\",\n                  zIndex: \"200\",\n                  \"&:hover\": {\n                    color: \"red\",\n                  },\n                }\n              : { display: \"none\" }\n          }\n          aria-label=\"report\"\n        >\n          <Report />\n        </Fab>\n        <Fab\n          size=\"large\"\n          onClick={handlePopoverOpen}\n          sx={\n            isDesktopOrLaptop\n              ? {\n                  borderRadius: \"50%\",\n                  backgroundColor: \"#eee\",\n                  position: \"fixed\",\n                  bottom: \"16px\",\n                  right: \"16px\",\n                  color: \"#461594\",\n                  zIndex: \"200\",\n                  \"&:hover\": {\n                    color: \"#7a4ebf\",\n                  },\n                }\n              : { display: \"none\" }\n          }\n          aria-label=\"chat\"\n        >\n          <Chat />\n        </Fab>\n        <Popover\n          open={openPopover}\n          anchorEl={drawerOpen}\n          onClose={handlePopoverClose}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          sx={{ margin: \"-2rem\" }}\n        >\n          <Chatting />\n        </Popover>\n        </>\n        : null}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default InnerLayout;\n","/** @format */\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst PrivateRoutes = ({ children, ...rest }) => {\n\tconst { isAuthenticated } = useSelector((state) => state.auth);\n\n\treturn (\n\t\t<Route {...rest}>\n\t\t\t{isAuthenticated ? children : <Redirect to='/login' />}\n\t\t</Route>\n\t);\n};\n\nexport default PrivateRoutes;\n","/** @format */\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'toggle_button':\n      return {\n        ...state,\n        active: !state.active,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initialState = {\n  active: false,\n};\n","/** @format */\n\nimport React from 'react';\nimport { reducer, initialState } from './reducer';\n\nexport const UserContext = React.createContext({\n  state: initialState,\n  dispatch: () => null,\n});\n\nexport const UserProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <UserContext.Provider value={[state, dispatch]}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","/** @format */\n\n// import styled from \"styled-components\";\nimport { createTheme } from \"@mui/material/styles\";\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    mode: \"light\",\n    primary: {\n      main: \"#796ef0\", //blueish purple\n    },\n    // secondary: {\n    //   main: \"\",\n    // },\n    error: {\n      main: \"#e85355\", //red\n    },\n    warning: {\n      main: \"#fd9905\", // orange\n    },\n    success: {\n      main: \"#28c570\", //green\n    },\n\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n  typography: {\n    htmlFontSize: 14,\n    fontSize: 12,\n    color: \"#333\",\n  },\n});\n\nexport default theme;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport \"./DashboardLayout/style.css\";\n\nimport DashboardContent from \"./DashboardLayout/DashboardContent\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <DashboardContent />\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\nimport { Button, Stack, IconButton } from \"@mui/material\";\nimport styles from \"./tabs.module.css\";\n\nconst Tabs = ({ children }) => {\n  const [activeTab, setActiveTab] = useState(children[0].props.label);\n  const handleClick = (e, newActiveTab) => {\n    e.preventDefault();\n    setActiveTab(newActiveTab);\n  };\n  return (\n    <Fragment>\n      <Stack direction=\"row\" spacing={1}>\n        <ul className={styles.tabs}>\n          {children.map((tab) => (\n            <li\n              className={tab.props.label === activeTab ? styles.current : \"\"}\n              key={tab.props.label}\n            >\n              <Button\n                variant=\"text\"\n                size=\"small\"\n                startIcon={<MoreVert />}\n                onClick={(e) => handleClick(e, tab.props.label)}\n              >\n                {tab.props.label}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      </Stack>\n\n      {children.map((one) =>\n        one.props.label === activeTab ? (\n          <div className={styles.content} key={one.props.label}>\n            {one.props.children}\n          </div>\n        ) : (\n          \"\"\n        ),\n      )}\n    </Fragment>\n  );\n};\n\nexport default Tabs;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  FormControlLabel,\n  Switch,\n  Button,\n  Stack,\n} from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst CreateInvoice = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    matter: \"\",\n    contact: \"\",\n    billable: false,\n    date_range: \"\",\n    create_date: \"\",\n    due_date: \"\",\n    template: \"\",\n    invoice_no: \"\",\n    discount: \"\",\n    submit: false,\n  });\n\n  // const {\n  //   matter,\n  //   contact,\n  //   billable,\n  //   date_range,\n  //   create_date,\n  //   due_date,\n  //   template,\n  //   invoice_no,\n  //   discount,\n  //   submit,\n  // } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  const [invoice, setInvoice] = useState(null);\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoice`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  const [dateRange, setDateRange] = React.useState([null, null]);\n  return (\n    <Fragment>\n      {/* <Typography component=\"h3\" variant=\"h4\">\n        Create New Invoice\n      </Typography>\n      <Box p={3}>\n        <LinkButton to=\"/invoices\" sx={{ float: \"right\" }}>\n          Invoice Dashboard\n        </LinkButton>\n      </Box> */}\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Grid\n          spacing={3}\n          container\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"Matter\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n              autoComplete=\"matter\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"Contact\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              autoComplete=\"contact\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <FormControlLabel\n              sx={{ fontSize: \"12px\", marginLeft: \"1rem\" }}\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Unbillable\"\n            />\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Stack direction=\"row\">\n              <Typography varient=\"caption\" sx={{ marginTop: \"0.7rem\" }}>\n                Range:\n              </Typography>\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateRangePicker\n                  calendars={1}\n                  value={dateRange}\n                  onChange={(newValue) => {\n                    setDateRange(newValue);\n                  }}\n                  renderInput={(startProps, endProps) => (\n                    <Fragment>\n                      <TextField size=\"small\" {...startProps} />\n                      <Box sx={{ mx: 2 }}> to </Box>\n                      <TextField size=\"small\" {...endProps} />\n                    </Fragment>\n                  )}\n                />\n              </LocalizationProvider>\n            </Stack>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          spacing={3}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"create_date\"\n              label=\"Create Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"due_date\"\n              label=\"Due Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"template\"\n              label=\"Template\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"template\"\n              autoComplete=\"template\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"invoice_no\"\n              label=\"Invoice #\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"invoice_no\"\n              autoComplete=\"invoice_no\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"discount\"\n              label=\"Discount\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"discount\"\n              autoComplete=\"discount\"\n            />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <FormControlLabel\n              label=\"Submit For Approvel\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n            />\n          </Grid>\n        </Grid>\n\n        <Grid item lg={12} mt={2}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Sub-Category</TableCell>\n                  <TableCell>Description</TableCell>\n                  <TableCell>Date</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Rate</TableCell>\n                  <TableCell>Sub</TableCell>\n                  <TableCell>Tax</TableCell>\n                  <TableCell>int</TableCell>\n                  <TableCell>Disc.</TableCell>\n                  <TableCell>Total</TableCell>\n                  <TableCell>Biller</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                {/* {invoice?.map((invoice) => (\n                  <TableRow id={invoice.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n\n                    <TableCell>{invoice.sub_cat}</TableCell>\n                    <TableCell>{invoice.discription}</TableCell>\n                    <TableCell>{invoice.date}</TableCell>\n                    <TableCell>{invoice.hours}</TableCell>\n                    <TableCell>{invoice.rate}</TableCell>\n                    <TableCell>{invoice.sub}</TableCell>\n                    <TableCell>{invoice.tax}</TableCell>\n                    <TableCell>{invoice.int}</TableCell>\n                    <TableCell>{invoice.dics}</TableCell>\n                    <TableCell>{invoice.total}</TableCell>\n                    <TableCell>{invoice.biller}</TableCell>\n                  </TableRow>\n                ))} */}\n              </TableHead>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item mt={3} direction=\"row\">\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Notes\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"Accept Online Payment\"\n              />\n            }\n            label=\"Accept Online Payment\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Accept Payments for Less\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (Compound / Simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Terms and Conditions\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (compund/ simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Use Trust Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add all unpaid invoices\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"use Operating Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Send Reminders Every\"\n          />\n          <TextField size=\"small\" sx={{ width: \"5rem\" }} />\n          <Typography\n            varient=\"caption\"\n            component=\"span\"\n            sx={{ marginLeft: \"0.5rem \" }}\n          >\n            day(s)/week(s)\n          </Typography>\n\n          {/* <Button\n            variant=\"contained\"\n            sx={{ float: \"right\" }}\n            endIcon={<SaveIcon />}\n          >\n            Send\n          </Button> */}\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateInvoice;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Grid,\n  Box,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormControl,\n  Checkbox,\n  Typography,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  MenuItem,\n  InputLabel,\n  Select,\n  Button,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst PaymentPlan = () => {\n  const [paymentData, setPaymentData] = useState({\n    payment_no: \"File# - 001\",\n    due: \"2020/07/01\",\n    amount: \"$ 750.00\",\n    late_fee: \"$22.00\",\n    total_due: \"$ 775.00\",\n    payment: \"$775.00\",\n    posted: \"$2020/07/05\",\n    method: \"Check\",\n  });\n\n  return (\n    <Fragment>\n      <Grid container mt={3} mb={3}>\n        <Grid item lg={4}>\n          <Typography>Start Balance:</Typography>\n          <Typography>Start Date:</Typography>\n          <Typography>Interest Rate:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Amout:</Typography>\n          <Typography>Payment Date:</Typography>\n          <Typography>No Payments:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Remaining:</Typography>\n          <Typography>Last Payment:</Typography>\n          <Typography>Last Payment $:</Typography>\n        </Grid>\n      </Grid>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Payment #</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Amout</TableCell>\n            <TableCell>Late Fee</TableCell>\n            <TableCell>Total Due</TableCell>\n            <TableCell>Payment</TableCell>\n            <TableCell>Posted</TableCell>\n            <TableCell>Method</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{paymentData.payment_no}</TableCell>\n          <TableCell>{paymentData.due}</TableCell>\n          <TableCell>{paymentData.amount} </TableCell>\n          <TableCell>{paymentData.late_fee}</TableCell>\n          <TableCell>{paymentData.total_due}</TableCell>\n          <TableCell>{paymentData.payment}</TableCell>\n          <TableCell>{paymentData.posted}</TableCell>\n          <TableCell>{paymentData.method}</TableCell>\n        </TableBody>\n      </Table>\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Close\n      </Button>\n      <Grid container>\n        <Grid item lg={6}>\n          <Typography>Post agreement Balance:</Typography>\n        </Grid>\n        <Grid item lg={6}>\n          <Typography>Start Date:</Typography>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst InvoicePayment = () => {\n  const [invoiceData, setInvoiceData] = useState({\n    invoice_no: \"i-2106-0004542\",\n    due: \"2020/07/01\",\n    tax: \"$ 15.00\",\n    interest: \"$2.35\",\n    time: \"$ 1,234.50\",\n    hard: \"$457.00\",\n    soft: \"$45.00\",\n    total: \"$ 1,753.85\",\n  });\n\n  return (\n    <Fragment>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Invoice</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Tax</TableCell>\n            <TableCell>Interest</TableCell>\n            <TableCell>Time</TableCell>\n            <TableCell>Hard</TableCell>\n            <TableCell>Soft</TableCell>\n            <TableCell>Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{invoiceData.invoice_no}</TableCell>\n          <TableCell>{invoiceData.due}</TableCell>\n          <TableCell>{invoiceData.tax} </TableCell>\n          <TableCell>{invoiceData.interest}</TableCell>\n          <TableCell>{invoiceData.time}</TableCell>\n          <TableCell>{invoiceData.hard}</TableCell>\n          <TableCell>{invoiceData.soft}</TableCell>\n          <TableCell>{invoiceData.total}</TableCell>\n        </TableBody>\n      </Table>{\" \"}\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Pay\n      </Button>{\" \"}\n    </Fragment>\n  );\n};\n\nconst Payment = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [isPlan, setIsPlan] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    payment_type: \"\",\n    date: \"\",\n    retainer: \"\",\n    payment: \"\",\n    date_range: \"\",\n    menu: \"\",\n    bank_account: \"\",\n    payment_method: \"\",\n  });\n\n  const {\n    payment_type,\n    date,\n    retainer,\n    payment,\n    date_range,\n    menu,\n    bank_account,\n    payment_method,\n  } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{\n              \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n            }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"payment_type\"\n                defaultValue=\"cash\"\n                name=\"payment_type\"\n                onChange={(e) => onChange(e)}\n                id=\"payment_type\"\n                autoComplete=\"payment_type\"\n              >\n                <FormControlLabel\n                  value=\"cash\"\n                  control={<Radio />}\n                  label=\"Cash\"\n                />\n                <FormControlLabel value=\"cc\" control={<Radio />} label=\"CC\" />\n                <FormControlLabel\n                  value=\"wire\"\n                  control={<Radio />}\n                  label=\"Wire\"\n                />\n                <FormControlLabel\n                  value=\"check\"\n                  control={<Radio />}\n                  label=\"Check\"\n                />\n              </RadioGroup>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              id=\"date\"\n              label=\"date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <FormControlLabel\n              value=\"retainer\"\n              control={<Checkbox />}\n              label=\"Retainer\"\n            />\n            <FormControlLabel\n              value=\"payment\"\n              control={<Checkbox />}\n              label=\"Payment\"\n            />\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n              <DateRangePicker\n                calendars={1}\n                value={dateRange}\n                onChange={(newValue) => {\n                  setDateRange(newValue);\n                }}\n                renderInput={(startProps, endProps) => (\n                  <Fragment>\n                    <TextField size=\"small\" {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField size=\"small\" {...endProps} />\n                  </Fragment>\n                )}\n              />\n            </LocalizationProvider> */}\n            <FormControl sx={{ width: \"12rem\" }}>\n              <InputLabel id=\"demo-simple-select-label\">Date Range</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={date_range}\n                label=\"Age\"\n                onChange={(e) => onChange(e)}\n              >\n                <MenuItem value={10}>Ten</MenuItem>\n                <MenuItem value={20}>Twenty</MenuItem>\n                <MenuItem value={30}>Thirty</MenuItem>\n              </Select>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"menu\"\n              label=\"menu\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"menu\"\n              autoComplete=\"menu\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bank_account\"\n              label=\"bank_account\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"bank_account\"\n              autoComplete=\"bank_account\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"payment_method\"\n              label=\"payment_method\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"payment_method\"\n              autoComplete=\"payment_method\"\n            />\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"isPlan\"\n                defaultValue={isPlan}\n                name=\"isPlan\"\n                onChange={(e) => setIsPlan(e)}\n                id=\"isPlan\"\n                autoComplete=\"isPlan\"\n              >\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Invoice Payment\"\n                />\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Payment Plan\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Box>\n        </Grid>\n        <Grid item lg={12}>\n          <TableContainer>\n            {isPlan ? <PaymentPlan /> : <InvoicePayment />}\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Payment;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  FormControlLabel,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  Button,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport { styled } from \"@mui/material/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\nimport CreateInvoice from \"./CreateInvoice\";\nimport Payment from \"./Payment\";\n\nconst Filters = () => {\n  const [invoiceToggle, setInvoiceToggle] = useToggle(false);\n  const [paymentToggle, setPaymentToggle] = useToggle(false);\n  const [paid, setPaid] = useToggle(false);\n\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid\n          spacing={2}\n          item\n          lg={12}\n          direction=\"Row\"\n          sx={{\n            \"& .MuiTextField-root\": { m: 1 },\n            \"& .MuiFormControl-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            onClick={() => setInvoiceToggle(invoiceToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Create Invoice\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={invoiceToggle}\n            onClose={() => setInvoiceToggle(invoiceToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {\"Create Invoice\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <CreateInvoice />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <Button\n            variant=\"contained\"\n            onClick={() => setPaymentToggle(paymentToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Receive Money\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={paymentToggle}\n            onClose={() => setPaymentToggle(paymentToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Receive Money\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <Payment />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <FormControlLabel\n            label=\" Paid/ Unpaid\"\n            control={<Switch checked={paid} onChange={() => setPaid(paid)} />}\n          />\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Invoice</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Bill Date</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Times</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <Typography\n            component=\"span\"\n            variant=\"caption\"\n            sx={{ width: \"8rem\", m: 2, fontSize: \"1.2rem\" }}\n          >\n            Status:\n          </Typography>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Any </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Dropd-own</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n} from \"@mui/material\";\nimport Filters from \"./Filters\";\n\nconst InvoiceList = () => {\n  const [invoice, setInvoice] = useState(null);\n\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoices`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  return (\n    <Fragment>\n      <Filters />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Invoice</TableCell>\n              <TableCell>Created</TableCell>\n              <TableCell>Due</TableCell>\n              <TableCell>Tax</TableCell>\n              <TableCell>Interest</TableCell>\n              <TableCell>Discount</TableCell>\n              <TableCell>Total</TableCell>\n              <TableCell>Balance</TableCell>\n              <TableCell>Last Payment</TableCell>\n              <TableCell>Approval Date</TableCell>\n              <TableCell>Approval by</TableCell>\n              <TableCell>Created by</TableCell>\n            </TableRow>\n            {/* {invoice?.map((invoice) => (\n              <TableRow id={invoice.id}>\n                <TableCell>\n                  <Checkbox />\n                </TableCell>\n                <TableCell>{invoice.id}</TableCell>\n                <TableCell>{invoice.created}</TableCell>\n                <TableCell>{invoice.due}</TableCell>\n                <TableCell>{invoice.tax}</TableCell>\n                <TableCell>{invoice.interest}</TableCell>\n                <TableCell>{invoice.discount}</TableCell>\n                <TableCell>{invoice.total}</TableCell>\n                <TableCell>{invoice.balance}</TableCell>\n                <TableCell>{invoice.last_payment}</TableCell>\n                <TableCell>{invoice.approvel_date}</TableCell>\n                <TableCell>{invoice.approvel.by}</TableCell>\n                <TableCell>{invoice.created_by}</TableCell>\n              </TableRow>\n            ))} */}\n          </TableHead>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default InvoiceList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport InvoiceList from \"./InvoiceList\";\nimport Payment from \"./Payment\";\nimport CreateInvoice from \"./CreateInvoice\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <InvoiceList />\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React from \"react\";\nimport { Alert } from \"@mui/material\";\n\nexport const ActionAlerts = (status) => {\n  return <Alert severity=\"error\">{status}</Alert>;\n};\n\nexport const TotalDays = (date1, date2) => {\n  let dt1 = new Date(date1);\n  let dt2 = new Date(date2);\n  return Math.floor(\n    (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) -\n      Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) /\n      (1000 * 60 * 60 * 24),\n  );\n};\n\nexport const GetDate = (date) => {\n  let newDate =\n    date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n  return newDate;\n};\n\nexport const GetTime = (time) => {\n  let newTime =\n    time.getHours() + \":\" + time.getMinutes() + \":\" + time.getSeconds();\n  return newTime;\n};\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Box,\n  containerClasses,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\n\nconst MatterList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const [redTask, setRedTask] = useState(false);\n  const [greenTask, setGreenTask] = useState(false);\n  const [yellowTask, setYellowTask] = useState(false);\n  const [myTask, setMyTask] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/tasks/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTasks(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Box component={Paper} p={2}>\n      <FormGroup aria-label=\"position\" row>\n        <FormControlLabel\n          control={\n            <Checkbox value={myTask} onChange={() => setMyTask(!myTask)} />\n          }\n          label=\"My Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox value={redTask} onChange={() => setRedTask(!redTask)} />\n          }\n          label=\"Red Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={greenTask}\n              onChange={() => setGreenTask(!greenTask)}\n            />\n          }\n          label=\"Green Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={yellowTask}\n              onChange={() => setYellowTask(!yellowTask)}\n            />\n          }\n          label=\"Yellow Tasks\"\n        />\n      </FormGroup>\n      <Typography component=\"h3\">All Matters Task's List</Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assign To</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : tasks?.map((data) => {\n                  return (\n                    <TableRow id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        {data.task_nature === \"urgent\" ? (\n                          <CircleIcon color=\"error\" />\n                        ) : (\n                          <CircleIcon color=\"success\" />\n                        )}\n                      </TableCell>\n                      <TableCell>{data.matter}</TableCell>\n                      <TableCell>\n                        {data.last_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>\n                        {data.next_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default MatterList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, CardContent, Typography } from \"@mui/material\";\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Tasks cleared Last day\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Goal Today\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Personal Best\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Company Record\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Link, Typography, List, ListItem, Paper } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nconst Calendar = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography variant=\"h6\" component=\"h7\">\n          My Calendar at a Glance\n        </Typography>\n        <List>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Start motion for trail</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Calendar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  Typography,\n} from \"@mui/material\";\n\nconst Filters = () => {\n  // const [user, setUser] = useState(\"Any user\");\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item>\n          <Typography>Assign To</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Organized By</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Status</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, Button, Typography } from \"@mui/material\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst MatterCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2} mt={1.5}>\n        <Grid item lg={9}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"error.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Urgent\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"warning.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Concern\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"success.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Start\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"white\",\n                  color: \"black\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      New\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3}>\n          <Button\n            variant=\"outlined\"\n            sx={{\n              minWidth: 100,\n              height: 40,\n              borderRadius: \"0.5rem\",\n              bgcolor: \"white\",\n              color: \"black\",\n            }}\n          >\n            Import\n          </Button>\n          <LinkButton to=\"/create-matter\"> + New </LinkButton>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterCards;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  TableBody,\n} from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst MatterListLong = () => {\n  const [matters, setMatters] = useState([]);\n\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/new-matter/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setMatters(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Matter Contact</TableCell>\n              <TableCell>Matter Type</TableCell>\n              <TableCell>Bill Rate</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assigned to</TableCell>\n              <TableCell>Billable</TableCell>\n              <TableCell>Open Invoice</TableCell>\n              <TableCell>Trust Account</TableCell>\n              <TableCell>Last Payment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : matters?.map((data, index) => {\n                  return (\n                    <TableRow id={index}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        <CircleIcon color=\"error\" />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n                      <TableCell>{data.contact}</TableCell>\n                      <TableCell>{data.matter_type}</TableCell>\n                      <TableCell>{data.billing_rate}</TableCell>\n                      <TableCell>{data.open_date}</TableCell>\n                      <TableCell>{data.close_date}</TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 100)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {\" \"}\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />{\" \"}\n                        - {data.close_date}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default MatterListLong;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Button, Typography } from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\n\nimport { LocalizationProvider, DateRangePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { CreateMatter, CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, TotalDays, GetDate } from \"../../utils/ActionAlerts\";\n\nconst NewMatter = () => {\n  // const matter_number = Math.floor(Math.random() * 10000000);\n  const mask = \"____-__-__\";\n  const matter_number = 23568;\n  const [openDate, setOpenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [whenDate, setWhenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [closeDate, setCloseDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [totalDays, setTotalDays] = useState(0);\n  const [matterData, setMatterData] = useState({\n    contact: 0,\n    matter_name: \"\",\n    matter_type: \"\",\n    matter_source: \"\",\n    matter_status: \"\",\n    assign_to: 0,\n    assign_by: 0,\n    billing_rate: 0,\n    alerts: \"\",\n\n    jurisdiction: \"\",\n    status_limitaion: null,\n    opposing_counsel: \"\",\n    where: \"\",\n    involved: \"\",\n    witnesses: \"\",\n    narrative: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    involved,\n    witnesses,\n    narrative,\n  } = matterData;\n\n  const onChange = (e) =>\n    setMatterData({ ...matterData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let open_date = GetDate(openDate);\n    let close_date = GetDate(closeDate);\n    let when = GetDate(whenDate);\n    let total_days = totalDays;\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      matter_type,\n      matter_source,\n      matter_status,\n      assign_to,\n      assign_by,\n      billing_rate,\n      alerts,\n      open_date,\n      close_date,\n      total_days,\n      jurisdiction,\n      status_limitaion,\n      opposing_counsel,\n      where,\n      when,\n      involved,\n      witnesses,\n      narrative,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  useEffect(() => {\n    let days = TotalDays(openDate, closeDate);\n    setTotalDays(days);\n  }, [openDate, closeDate]);\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Matter\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item lg={8}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"contact\"\n              type=\"number\"\n              min=\"0\"\n              value={contact}\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_number\"\n              label=\"matter_number\"\n              type=\"text\"\n              value={matter_number}\n              // onChange={(e) => onChange(e)}\n              id=\"matter_number\"\n              disabled\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_name\"\n              label=\"matter_name\"\n              type=\"text\"\n              value={matter_name}\n              onChange={(e) => onChange(e)}\n              id=\"matter_name\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"alerts\"\n              label=\"alerts\"\n              type=\"text\"\n              value={alerts}\n              onChange={(e) => onChange(e)}\n              id=\"alerts\"\n              autoComplete=\"alerts\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_type\"\n              label=\"matter_type\"\n              type=\"text\"\n              value={matter_type}\n              onChange={(e) => onChange(e)}\n              id=\"matter_type\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_source\"\n              label=\"matter_source\"\n              type=\"text\"\n              value={matter_source}\n              onChange={(e) => onChange(e)}\n              id=\"matter_source\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_status\"\n              label=\"matter_status\"\n              type=\"text\"\n              value={matter_status}\n              onChange={(e) => onChange(e)}\n              id=\"matter_status\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"assign_to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_rate\"\n              label=\"billing_rate\"\n              step=\"0.01\"\n              type=\"number\"\n              value={billing_rate}\n              onChange={(e) => onChange(e)}\n              id=\"billing_rate\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Open Date\"\n                value={openDate}\n                name=\"open\"\n                id=\"open\"\n                onChange={(e) => setOpenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Close Date\"\n                value={closeDate}\n                name=\"closed\"\n                id=\"closed\"\n                onChange={(e) => setCloseDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"total_days\"\n              label=\"total_days\"\n              type=\"number\"\n              value={totalDays}\n              onChange={(e) => setTotalDays(TotalDays(openDate, closeDate))}\n              id=\"total_days\"\n              disabled\n            />\n          </Grid>\n\n          <Grid item lg={4}>\n            <br />\n            <Typography component=\"h5\" variant=\"h6\">\n              Legal Concerns\n            </Typography>\n            <br />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"jurisdiction\"\n              label=\"jurisdiction\"\n              type=\"text\"\n              value={jurisdiction}\n              onChange={(e) => onChange(e)}\n              id=\"jurisdiction\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"status_limitaion\"\n              label=\"status_limitaion\"\n              type=\"text\"\n              value={status_limitaion}\n              onChange={(e) => onChange(e)}\n              id=\"status_limitaion\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"opposing_counsel\"\n              label=\"opposing_counsel\"\n              type=\"text\"\n              value={opposing_counsel}\n              onChange={(e) => onChange(e)}\n              id=\"opposing_counsel\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <Typography component=\"h5\" variant=\"h6\" sx={{ fontSize: \"1rem\" }}>\n              Event Detail\n            </Typography>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"where\"\n              label=\"where\"\n              type=\"text\"\n              value={where}\n              onChange={(e) => onChange(e)}\n              id=\"where\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"When\"\n                value={whenDate}\n                name=\"when\"\n                id=\"when\"\n                onChange={(e) => setWhenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"involved\"\n              label=\"Who was involved\"\n              type=\"text\"\n              value={involved}\n              onChange={(e) => onChange(e)}\n              id=\"involved\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"witnesses\"\n              label=\"witnesses\"\n              type=\"text\"\n              value={witnesses}\n              onChange={(e) => onChange(e)}\n              id=\"witnesses\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              label=\"Customer Narrative of the Event\"\n              multiline\n              type=\"text\"\n              rows={10}\n              value={narrative}\n              onChange={(e) => onChange(e)}\n              defaultValue=\"Narrative\"\n              name=\"narrative\"\n              id=\"narrative\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewMatter;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { styled } from \"@mui/material/styles\";\n\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  CardContent,\n  Typography,\n  Card,\n  Grid,\n  Box,\n  List,\n  ListItem,\n  Paper,\n  InputBase,\n} from \"@mui/material\";\n\nconst MatterTask = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components=\"p\">\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components=\"p\">\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components=\"p\">YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Activities = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components={Typography}>\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components={Typography}>\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components={Typography}>YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Classification\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                % time spent\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Matter Completion\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst MatterDetail = () => {\n  const Search = styled(\"div\")(({ theme }) => ({\n    position: \"relative\",\n    borderRadius: \"1.5rem\",\n    backgroundColor: \"#eee\",\n    \"&:hover\": {\n      backgroundColor: \"#ddd\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"40%\",\n  }));\n\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }));\n\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: \"inherit\",\n    \"& .MuiInputBase-input\": {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"md\")]: {\n        width: \"20ch\",\n      },\n    },\n  }));\n  // const [matters, setMatters] = useState(null);\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n        </Grid>\n        <Grid item lg={12}>\n          <Grid container spacing={2}>\n            <Grid item mt={2} lg={7}>\n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Recent Document</TableCell>\n                      <TableCell>Version</TableCell>\n                      <TableCell>Last Open</TableCell>\n                      <TableCell>User</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>1</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>2</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>3</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableContainer>\n              <Grid container spacing={3}>\n                <Grid item>\n                  <Activities />\n                </Grid>\n                <Grid item>\n                  <MatterTask />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item mt={2} lg={5}>\n              <Cards />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterDetail;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport MatterList from \"./MatterList\";\nimport { Grid, Box } from \"@mui/material\";\nimport Cards from \"./Cards\";\nimport Calendar from \"./Calendar\";\nimport Filters from \"./Filters\";\nimport MatterCards from \"./MatterCards\";\nimport MatterListLong from \"./MatterListLong\";\nimport NewMatter from \"./NewMatter\";\nimport MatterDetail from \"./MatterDetail\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item lg={12}>\n            <Filters />\n          </Grid>\n          <Grid item lg={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item lg={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst MatterDashboard = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container spacing={2}>\n          <Grid item lg={7}>\n            <MatterList />\n            <Calendar />\n          </Grid>\n          <Grid item lg={5}>\n            <Cards />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashboard\">\n          <MatterDashboard />\n        </div>\n        <div label=\"Matter\">\n          <Matters />\n        </div>\n        <div label=\"New Matter\">\n          <NewMatter />\n        </div>\n        <div label=\"Smith vs. Jhon\">\n          <MatterDetail />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerActivity = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setActivityData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow bgColor=\"#796ef0\">\n              <TableCell>\n                <Typography color=\"white\">Date</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Files</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Sub-Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Notes</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Source</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">User</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">In/Out</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          {/* {loading\n            ? null\n            : activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })} */}\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default LedgerActivity;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  TextField,\n  FormControlLabel,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Fillters = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [billedby, setBilledby] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Filter By</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={filter}\n            label=\"Filter By\"\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Billed by</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={billedby}\n            label=\"Billed By\"\n            onChange={(e) => setBilledby(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={status}\n            label=\"Age\"\n            onChange={(e) => setStatus(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n          <DateRangePicker\n            calendars={1}\n            value={dateRange}\n            onChange={(newValue) => {\n              setDateRange(newValue);\n            }}\n            renderInput={(startProps, endProps) => (\n              <Fragment>\n                <TextField size=\"small\" {...startProps} />\n                <Box sx={{ mx: 2 }}> to </Box>\n                <TextField size=\"small\" {...endProps} />\n              </Fragment>\n            )}\n          />\n        </LocalizationProvider>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Fillters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={7}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Time Entries\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={200}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      f\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Soft Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={65000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Hard Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={5000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={70000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Trust\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={4000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Due\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={100000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item={5}>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>User</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell> Jhon Johnson</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={74.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={39007.05}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Mark MacCalloff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={4.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={800.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Cindy Madenuff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={127.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={41372.5}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerCards;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n  Button,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { LinkButton } from \"../../styles/styles\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerTImeList = () => {\n  const [ledgerData, setLedgerData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setLedgerData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <Box>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Print\n        </Button>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Export\n        </Button>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>Cateagory</TableCell>\n                <TableCell>Sub-Category</TableCell>\n                <TableCell>Detail</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Qty</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Total</TableCell>\n                <TableCell>BillBy</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n                ? null\n                : ledgerData?.map((data) => {\n                    return (\n                      <TableBody id={data.id}>\n                        <TableCell>\n                          <Checkbox />\n                        </TableCell>\n                        <TableCell>{data.category}</TableCell>\n                        <TableCell>{data.sub_category}</TableCell>\n                        <TableCell>{data.detail}</TableCell>\n                        <TableCell>{data.date}</TableCell>\n                        <TableCell>{data.qty}</TableCell>\n                        <TableCell>\n                          {data.billable ? \"Billable\" : \"Paid\"}\n                        </TableCell>\n                        <TableCell>\n                          <NumberFormat\n                            value={data.qty * 25}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix=\"$\"\n                          />\n                        </TableCell>\n                        <TableCell>{data.bill_by}</TableCell>\n                      </TableBody>\n                    );\n                  })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default LedgerTImeList;\n","/** @format */\n\nimport { Typography, Box, Grid } from \"@mui/material\";\nimport React, { Fragment } from \"react\";\nimport Fillters from \"./Fillters\";\nimport LedgerCards from \"./LedgerCards\";\nimport LedgerTimeList from \"./LedgerTImeList\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LegderDashbard = () => {\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <Box>\n          <LedgerCards />\n          <Fillters />\n          <LedgerTimeList />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LegderDashbard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box, Typography, Paper, TextField } from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerDoc = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={1}>\n        <Grid item lg={4} sx={{}}>\n          <Box\n            sx={{\n              width: \"80%\",\n              minHeight: \"25rem\",\n              padding: \"5rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            MS Word Document On Pleading or Non Pleading Paper\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Box\n            sx={{\n              padding: \"5rem 2rem 5rem 2rem\",\n              minHeight: \"25rem\",\n              width: \"80%\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Space for 2nd Document to be opend if user wants it\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Grid container>\n            <Grid item lg={12}>\n              <Box component={Paper} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n              </Box>\n            </Grid>\n            <Grid item lg={12}>\n              <Box component={Paper} mt={2} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={5}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"filled\"\n                  name=\"detail\"\n                  type=\"text\"\n                  value=\"Quick Notes\"\n                  id=\"detail\"\n                  sx={{ borderRadius: \"1rem\" }}\n                />\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerDoc;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  RadioGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Radio,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst Time = () => {\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [timeToggle, setTimeToggle] = useToggle(true);\n  const [billable, setBillable] = useToggle(false);\n\n  // const [bill, setBill] = useToggle(false);\n  const [time, setTime] = useState(\"\");\n  const [timeData, setTimeData] = useState({\n    contact: 0,\n    matter_name: 0,\n    category: \"\",\n    sub_category: \"\",\n    // time: \"\",\n    hard: false,\n    soft: false,\n    unit: 0,\n    qty: 0,\n    rate: 0,\n    file: \"\",\n    detail: \"\",\n    bill_by: 0,\n    note: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    category,\n    sub_category,\n    hard,\n    soft,\n    unit,\n    // time,\n    qty,\n    rate,\n    file,\n    detail,\n    bill_by,\n\n    note,\n  } = timeData;\n  const onChange = (e) =>\n    setTimeData({ ...timeData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    let date = GetDate(pickDate);\n\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      category,\n      sub_category,\n      hard,\n      soft,\n      unit,\n      qty,\n      rate,\n      time,\n      date,\n      detail,\n      bill_by,\n      billable,\n      note,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/add-time/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Typography component=\"h3\" variant=\"h4\">\n          Time\n        </Typography>\n        <Grid\n          container\n          spacing={2}\n          mt={2}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n          }}\n        >\n          <Grid item xs={12}>\n            <Grid container p={3}>\n              <Grid item xs={6}>\n                <FormControlLabel\n                  size=\"large\"\n                  label=\"Time\"\n                  labelPlacement=\"start\"\n                  control={\n                    <Switch\n                      size=\"large\"\n                      checked={timeToggle}\n                      onChange={(e) => setTimeToggle(e)}\n                    />\n                  }\n                />\n                {timeToggle ? null : (\n                  <Box>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">Expense</FormLabel>\n                      <RadioGroup\n                        row\n                        aria-label=\"expense\"\n                        defaultValue=\"\"\n                        name=\"expense\"\n                        id=\"expense\"\n                      >\n                        <FormControlLabel\n                          value=\"hard\"\n                          control={<Radio />}\n                          label=\"Hard\"\n                        />\n                        <FormControlLabel\n                          value=\"soft\"\n                          control={<Radio />}\n                          label=\"Soft\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  </Box>\n                )}\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"matter\"\n                  label=\"matter\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"matter\"\n                  autoComplete=\"matter\"\n                  disabled\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"contact\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                  disabled\n                />\n              </Grid>\n            </Grid>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"category\"\n              label=\"category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"category\"\n              autoComplete=\"category\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"sub_category\"\n              label=\"sub_category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"sub_category\"\n              autoComplete=\"sub_category\"\n            />\n            {timeToggle ? (\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"rate\"\n                label=\"rate\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"rate\"\n                autoComplete=\"rate\"\n              />\n            ) : (\n              <Fragment>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"unit\"\n                  label=\"unit\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"unit\"\n                  autoComplete=\"unit\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"qty\"\n                  label=\"Qty\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"qty\"\n                  autoComplete=\"qty\"\n                />\n                <Box m={1}>\n                  <Typography component=\"lable\"> Receipt(s) </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n              </Fragment>\n            )}\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"HH:MM\"\n              mask={[\"H\", \"H\", \"M\", \"M\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time\"\n              name=\"time\"\n              id=\"time\"\n              value={time}\n              type=\"text\"\n              onValueChange={(e) => setTime(e.value)}\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Date\"\n                value={pickDate}\n                name=\"pickdate\"\n                id=\"pickdate\"\n                onChange={(e) => setPickDate(e)}\n                renderInput={(params) => <TextField size=\"small\" {...params} />}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"detail\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n              autoComplete=\"detail\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bill_by\"\n              label=\"bill_by\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bill_by\"\n              autoComplete=\"bill_by\"\n            />\n            <FormControlLabel\n              size=\"large\"\n              label=\"Billable\"\n              labelPlacement=\"start\"\n              control={\n                <Switch\n                  size=\"large\"\n                  checked={billable}\n                  onChange={() => setBillable(billable)}\n                />\n              }\n            />\n            <br />\n          </Grid>\n        </Grid>\n        <Grid container>\n          <Grid item lg={12}>\n            <TextField\n              fullWidth\n              multiline\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"note\"\n              rows={4}\n              // label=\"note\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              placeholder=\"Private / internal notes\"\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Time;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport LedgerActivity from \"./LedgerActivity\";\nimport LegderDashbard from \"./LedgerDashbard\";\nimport LedgerDoc from \"./LedgerDoc\";\nimport LedgerTImeList from \"./LedgerTImeList\";\nimport Time from \"./Time\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Ledger\">\n          <LegderDashbard />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Documents\">\n          <LedgerDoc />\n        </div>\n        <div label=\"Time\">\n          <Time />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@mui/material/Button\"\nimport Box from \"@mui/material/Box\"\nimport List from \"@mui/material/List\"\nimport ListItem from \"@mui/material/ListItem\"\nimport ListItemText from \"@mui/material/ListItemText\"\nimport Typography from \"@mui/material/Typography\"\nimport Dialog from \"@mui/material/Dialog\"\nimport DialogActions from \"@mui/material/DialogActions\"\nimport DialogContent from \"@mui/material/DialogContent\"\nimport DialogTitle from \"@mui/material/DialogTitle\"\nimport TextField from \"@mui/material/TextField\"\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst SubCategory = () => {\n  const [subCategory, setSubCategory] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/sub-category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setSubCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/sub-category/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n      })\n      .catch((err) => setStatus(err.statusText));\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/sub-category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n      })\n      .catch((err) => {\n        FetchData();\n      });\n  };\n  const showSubcategory = () => {\n    if (subCategory.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return subCategory.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Sub-Category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Sub-Category\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Sub-Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? showSubcategory() : <Typography>Loading ...</Typography>}\n    </Fragment>\n  );\n};\n\nexport default SubCategory;\n","/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"@mui/material/Button\"\nimport Box from \"@mui/material/Box\"\nimport List from \"@mui/material/List\"\nimport ListItem from \"@mui/material/ListItem\"\nimport ListItemText from \"@mui/material/ListItemText\"\nimport Typography from \"@mui/material/Typography\"\nimport Dialog from \"@mui/material/Dialog\"\nimport DialogActions from \"@mui/material/DialogActions\"\nimport DialogContent from \"@mui/material/DialogContent\"\nimport DialogTitle from \"@mui/material/DialogTitle\"\nimport TextField from \"@mui/material/TextField\"\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Category = () => {\n  const [category, setCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/category/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const showCategory = () => {\n    if (category.length === 0) {\n      return <p> no data found...</p>;\n    } else\n      return category.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Add New Category\"}</DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? showCategory() : <Typography>Loading ...</Typography>}\n    </Fragment>\n  );\n};\n\nexport default Category;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"@mui/material/Button\"\nimport Box from \"@mui/material/Box\"\nimport List from \"@mui/material/List\"\nimport ListItem from \"@mui/material/ListItem\"\nimport ListItemText from \"@mui/material/ListItemText\"\nimport Typography from \"@mui/material/Typography\"\nimport Dialog from \"@mui/material/Dialog\"\nimport DialogActions from \"@mui/material/DialogActions\"\nimport DialogContent from \"@mui/material/DialogContent\"\nimport DialogTitle from \"@mui/material/DialogTitle\"\nimport TextField from \"@mui/material/TextField\"\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Classification = () => {\n  const [classification, setClassification] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/classification/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setClassification(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/classification/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n        return <ActionAlerts value={{ status: status }} />;\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/api/classification/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return <ActionAlerts value={{ status: res.statusText }} />;\n      })\n      .catch((err) => {\n        FetchData();\n        return <ActionAlerts value={{ status: err.statusText }} />;\n      });\n  };\n  const showClassification = () => {\n    if (classification.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return classification.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Classification\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Classification\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Classification Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? showClassification() : <Typography>Loading ...</Typography>}\n    </Fragment>\n  );\n};\n\nexport default Classification;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport Typography from \"@mui/material/Typography\"\nimport Grid from \"@mui/material/Grid\"\nimport Button from \"@mui/material/Button\"\nimport Box from \"@mui/material/Box\"\n\nimport SubCategory from \"./SubCategory\";\nimport Category from \"./Category\";\nimport Classification from \"./Classification\";\n\nconst ManageCategory = () => {\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={8}>\n          <Typography component=\"h3\" variant=\"h5\">\n            Manage Category, Sub-category, Classification\n          </Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"error\">\n              Delete Checked\n            </Button>\n          </Box>\n        </Grid>\n\n        <Grid item lg={12}>\n          <Grid container spacing={5} mt={1}>\n            <Grid item lg={4}>\n              <Category />\n            </Grid>\n            <Grid item lg={4}>\n              <SubCategory />\n            </Grid>\n            <Grid item lg={4}>\n              <Classification />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageCategory;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport TextField from \"@mui/material/TextField\"\nimport Box from \"@mui/material/Box\"\nimport Grid from \"@mui/material/Grid\"\nimport Button from \"@mui/material/Button\"\nimport Typography from \"@mui/material/Typography\"\nimport FormControl from \"@mui/material/FormControl\"\nimport InputLabel from \"@mui/material/InputLabel\"\nimport Select from \"@mui/material/Select\"\nimport MenuItem from \"@mui/material/MenuItem\"\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport DatePicker from \"@mui/lab/DatePicker\"\nimport NumberFormat from \"react-number-format\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Contact = () => {\n  const [clientNo, setClientNo] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [ssn, setSsn] = useState(\"\");\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [homeNo, setHomeNo] = useState(\"\");\n  const [officeNo, setOfficeNo] = useState(\"\");\n  const [faxNo, setFaxNo] = useState(\"\");\n  const [otherNo, setOtherNo] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [plus4, setPlus4] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [contactData, setContactData] = useState({\n    // company info\n    company_name: \"\",\n    website: \"\",\n    ger_email: \"\",\n    billing_email: \"\",\n    // address\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    note: \"\",\n    f_name: \"\",\n    l_name: \"\",\n    email_1: \"\",\n    email_2: \"\",\n    email_3: \"\",\n    // other address\n    street2: \"\",\n    suite2: \"\",\n    city2: \"\",\n    state2: \"\",\n    office: \"\",\n    team: \"\",\n    member: \"\",\n    assign_to: \"\",\n    contact: \"\",\n    relation: \"\",\n  });\n\n  const {\n    company_name,\n    website,\n    ger_email,\n    billing_email,\n    street,\n    suite,\n    city,\n    state,\n    note,\n    f_name,\n    l_name,\n    email_1,\n    email_2,\n    email_3,\n    street2,\n    suite2,\n    city2,\n    state2,\n    office,\n    team,\n    member,\n    assign_to,\n    contact,\n    relation,\n  } = contactData;\n\n  const onChange = (e) => {\n    e.persist();\n    setContactData({ ...contactData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    //   let date = GetDate(pickDate);\n    //   const body = JSON.stringify({\n    //     company_name,\n    //     website,\n    //     ger_email,\n    //     billing_email,\n    //     street,\n    //     suite,\n    //     city,\n    //     state,\n    //     zip,\n    //     plus4,\n    //     client_no,\n    //     f_name,\n    //     l_name,\n    //     dob,\n    //     ssn,\n    //     mobile_no,\n    //     home_no,\n    //     office_no,\n    //     fax_no,\n    //     other_no,\n    //     email_1,\n    //     email_2,\n    //     email_3,\n    //     street2,\n    //     suite2,\n    //     city2,\n    //     state2,\n    //     zip2,\n    //     plus42,\n    //     office,\n    //     team,\n    //     member,\n    //     assign_to,\n    //     contact,\n    //     relation,\n    //   });\n    //   axios\n    //     .post(`${process.env.REACT_APP_API_URL}/api/contact/`, body, CONFIG)\n    //     .then((res) => {\n    //       <ActionAlerts value={{ status: res.statusText, message: \"Success\" }} />;\n    //     })\n    //     .catch((err) => {\n    //       <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />;\n    //     });\n    //   console.log(body);\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container p={2}>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h5\">\n              Company info\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"company_name\"\n              label=\"Company Name\"\n              type=\"text\"\n              value={company_name}\n              onChange={(e) => onChange(e)}\n              id=\"company_name\"\n              autoComplete=\"company_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Client #\"\n              id=\"clientno\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"clientno\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={clientNo}\n              onValueChange={(e) => setClientNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"First Name\"\n              label=\"f_name\"\n              type=\"text\"\n              value={f_name}\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Last Name\"\n              label=\"l_name\"\n              type=\"text\"\n              value={l_name}\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"DOB\"\n              id=\"dob\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              name=\"dob\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={dob}\n              onValueChange={(e) => setDob(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"#### #### ##\"\n              customInput={TextField}\n              label=\"SSN\"\n              id=\"ssn\"\n              name=\"ssn\"\n              value={ssn}\n              type=\"text\"\n              onValueChange={(e) => setSsn(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobileNo}\n              onValueChange={(e) => setMobileNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={homeNo}\n              onValueChange={(e) => setHomeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Office #\"\n              id=\"offlice_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"office_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={officeNo}\n              onValueChange={(e) => setOfficeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Fax #\"\n              id=\"fax_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"fax_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={faxNo}\n              onValueChange={(value) => setFaxNo(value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Other #\"\n              id=\"other_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"other_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={otherNo}\n              onValueChange={(e) => setOtherNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_1\"\n              label=\"Email 1\"\n              type=\"email\"\n              value={email_1}\n              onChange={(e) => onChange(e)}\n              id=\"email_1\"\n              autoComplete=\"email_1\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_2\"\n              label=\"Email 2\"\n              type=\"email\"\n              value={email_2}\n              onChange={(e) => onChange(e)}\n              id=\"email_2\"\n              autoComplete=\"email_2\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_3\"\n              label=\"Email 3\"\n              value={email_3}\n              type=\"email\"\n              onChange={(e) => onChange(e)}\n              id=\"email_3\"\n              autoComplete=\"email_3\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"street\"\n              type=\"text\"\n              value={street}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              value={city}\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip\"\n              label=\"zip\"\n              type=\"text\"\n              id=\"zip\"\n              type=\"text\"\n              value={zip}\n              onValueChange={(e) => setZip(e.value)}\n            />\n\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus4\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus4\"\n              type=\"text\"\n              value={plus4}\n              onValueChange={(e) => setPlus4(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              multiline\n              rows={5}\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Notes...\"\n              label=\"note\"\n              type=\"text\"\n              value={note}\n              onChange={(e) => onChange(e)}\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h6\">\n              Alternate Information\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"webiste\"\n              label=\"Webiste\"\n              type=\"text\"\n              value={website}\n              onChange={(e) => onChange(e)}\n              id=\"webiste\"\n              autoComplete=\"webiste\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"ger_email\"\n              label=\"General Email\"\n              type=\"text\"\n              value={ger_email}\n              onChange={(e) => onChange(e)}\n              id=\"ger_email\"\n              autoComplete=\"ger_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_email\"\n              label=\"Invoice/ Billing Email\"\n              type=\"text\"\n              value={billing_email}\n              onChange={(e) => onChange(e)}\n              id=\"billing_email\"\n              autoComplete=\"billing_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"Street\"\n              type=\"text\"\n              value={street2}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite2}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              type=\"text\"\n              value={city2}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip2\"\n              label=\"Zip\"\n              type=\"text\"\n              id=\"zip2\"\n              type=\"text\"\n              value={zip2}\n              onValueChange={(e) => setZip2(e.value)}\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus42\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus42\"\n              type=\"text\"\n              value={plus42}\n              onValueChange={(e) => setPlus42(e.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Source\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"office\"\n                  label=\"Office\"\n                  type=\"text\"\n                  value={office}\n                  onChange={(e) => onChange(e)}\n                  id=\"office\"\n                  autoComplete=\"office\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"team\"\n                  label=\"Team\"\n                  type=\"text\"\n                  value={team}\n                  onChange={(e) => onChange(e)}\n                  id=\"team\"\n                  autoComplete=\"team\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"member\"\n                  label=\"Member\"\n                  type=\"text\"\n                  value={member}\n                  onChange={(e) => onChange(e)}\n                  id=\"member\"\n                  autoComplete=\"member\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Assigned To\n                </Typography>\n                <FormControl\n                  size=\"small\"\n                  sx={{ mt: 2, mb: 2, minWidth: \"14rem\" }}\n                >\n                  <InputLabel id=\"demo-simple-select-autowidth-label\">\n                    Assigned To\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-autowidth-label\"\n                    id=\"demo-simple-select-autowidth\"\n                    value={assign_to}\n                    onChange={(e) => onChange(e)}\n                    autoWidth\n                    label=\"assign_to\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>Auto Assign</em>\n                    </MenuItem>\n                    <MenuItem value={10}>Twenty</MenuItem>\n                    <MenuItem value={21}>Twenty one</MenuItem>\n                    <MenuItem value={22}>Twenty one and a half</MenuItem>\n                  </Select>\n                </FormControl>\n\n                <Button variant=\"contained\" color=\"primary\">\n                  Auto Assign\n                </Button>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Linked Contacts\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"Contact\"\n                  type=\"text\"\n                  value={contact}\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"relation\"\n                  label=\"Relation\"\n                  type=\"text\"\n                  value={relation}\n                  onChange={(e) => onChange(e)}\n                  id=\"relation\"\n                  autoComplete=\"relation\"\n                />\n              </Grid>\n            </Grid>\n            <Box sx={{ float: \"right\" }}>\n              <Button variant=\"contained\" type=\"submit\" endIcon={<SaveIcon />}>\n                Save\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Contact;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Button,\n  TextField,\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Tab,\n  Paper,\n  Box,\n  Typography,\n  Switch,\n} from \"@mui/material\";\nimport { TabList, TabContext, TabPanel } from \"@mui/lab\";\nimport { connect } from \"react-redux\";\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport NumberFormat from \"react-number-format\";\n\n// import { update_profile } from \"../../store/actions/profile\";\n\nconst Profile = ({ profile }) => {\n  const [value, setValue] = React.useState(\"1\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [underGradYear, setUnderGradYear] = useState(\"\");\n\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [barNo, setBarNo] = useState(\"\");\n  const [practiceTime, setPracticeTime] = useState(\"\");\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    mobile: 0,\n    phone: 0,\n    state: \"\",\n    city: \"\",\n    language: \"\",\n    locate: false,\n    search_active: false,\n    law_school: \"\",\n    grad_year: \"\",\n    bar_admit_date: \"\",\n    undergrad_school: \"\",\n    undergrad_area: \"\",\n    undergrad_year: \"\",\n    bar_no: 0,\n    admitted_practice: \"\",\n    practice_time: \"\",\n    longest_tenure: \"\",\n    average_tenure: \"\",\n    current_tenure: \"\",\n    past_bar_companies_no: \"\",\n    primary_area: \"\",\n  });\n  const {\n    username,\n    email,\n    mobile,\n    phone,\n    state,\n    city,\n    language,\n    locate,\n    search_active,\n    law_school,\n    grad_year,\n    bar_admit_date,\n    undergrad_school,\n    undergrad_area,\n    undergrad_year,\n    bar_no,\n    admitted_practice,\n    practice_time,\n    longest_tenure,\n    average_tenure,\n    current_tenure,\n    past_bar_companies_no,\n    primary_area,\n  } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let id = profile.id;\n    const body = JSON.stringify({\n      username,\n      email,\n      mobile,\n      phone,\n      state,\n      city,\n      language,\n      locate,\n      search_active,\n      law_school,\n      grad_year,\n      bar_admit_date,\n      undergrad_school,\n      undergrad_area,\n      undergrad_year,\n      bar_no,\n      admitted_practice,\n      practice_time,\n      longest_tenure,\n      average_tenure,\n      current_tenure,\n      past_bar_companies_no,\n      primary_area,\n    });\n    console.log(body);\n    axios\n      .patch(\n        `${process.env.REACT_APP_API_URL}/api/profile/${id}/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Fragment>\n      {/* {profile ? ( */}\n      <Box p={5}>\n        <Paper elevation={5} sx={{ borderRadius: 3 }}>\n          <TabContext value={value} p={8}>\n            <Box component=\"form\" onSubmit={(e) => onSubmit(e)}>\n              <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                <TabList\n                  onChange={handleChange}\n                  aria-label=\"lab API tabs example\"\n                >\n                  <Tab label=\"Profile\" value=\"1\" />\n                  <Tab label=\"Education\" value=\"2\" />\n                  <Tab label=\"Work History\" value=\"3\" />\n                </TabList>\n              </Box>\n              <TabPanel value=\"1\">\n                <Grid container spacing={2}>\n                  <Grid item sx={12} xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Username\"\n                      value={username}\n                      id=\"username\"\n                      name=\"username\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.username}\n                      disabled\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Mobile #\"\n                      id=\"mobile\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"mobile\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={mobileNo}\n                      onValueChange={(e) => setMobileNo(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Phone #\"\n                      id=\"phone\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"phone\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={phoneNo}\n                      onValueChange={(e) => setPhoneNo(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Email\"\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.email}\n                      disabled\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"State\"\n                      id=\"state\"\n                      name=\"state\"\n                      type=\"text\"\n                      value={state}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.state}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"City\"\n                      id=\"city\"\n                      name=\"city\"\n                      type=\"text\"\n                      value={city}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.city}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Language(s)\"\n                      value={language}\n                      id=\"language\"\n                      name=\"language\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.language}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Willing to locate\"\n                      id=\"locate\"\n                      name=\"locate\"\n                      value={locate}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.locate}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Search Type (Active/ Passiv)\"\n                      id=\"search_active\"\n                      name=\"search_active\"\n                      value={search_active}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.search_active}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      m={5}\n                      variant=\"contained\"\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"2\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"2\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Law School\"\n                      id=\"law_school\"\n                      name=\"law_school\"\n                      value={law_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.law_school}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Grad year\"\n                      id=\"grad_year\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      name=\"grad_year\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={gradYear}\n                      onValueChange={(e) => setGradYear(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####/##/##\"\n                      placeholder=\"YYYY/MM/DD\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n                      customInput={TextField}\n                      label=\"Bar Admittance Date\"\n                      id=\"bar_admit_date\"\n                      name=\"bar_admit_date\"\n                      value={barDate}\n                      onValueChange={(e) => setBarDate(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrad school\"\n                      id=\"undergrad_school\"\n                      name=\"undergrad_school\"\n                      value={undergrad_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_school}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrade area of study\"\n                      id=\"undergrad_area\"\n                      name=\"undergrad_area\"\n                      value={undergrad_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_area}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      label=\"Undergrade year\"\n                      id=\"undergrad_year\"\n                      name=\"undergrad_year\"\n                      value={underGradYear}\n                      type=\"text\"\n                      onValueChange={(e) => setUnderGradYear(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"#### #### ##\"\n                      customInput={TextField}\n                      label=\"Bar #\"\n                      id=\"bar_no\"\n                      name=\"bar_no\"\n                      value={barNo}\n                      type=\"text\"\n                      onValueChange={(e) => setBarNo(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Admitted practice (state & District)\"\n                      value={admitted_practice}\n                      id=\"admitted_practice\"\n                      name=\"admitted_practice\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.admitted_practice}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      variant=\"contained\"\n                      mb={5}\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"3\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"3\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Practive Time (months / years)\"\n                      id=\"practice_time\"\n                      name=\"practice_time\"\n                      value={practiceTime}\n                      type=\"text\"\n                      onValueChange={(e) => setPracticeTime(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Longest tenure (months / years)\"\n                      id=\"longest_tenure\"\n                      name=\"longest_tenure\"\n                      value={longestTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setLongestTenure(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Average tenure (months / years)\"\n                      value={averageTenure}\n                      id=\"average_tenure\"\n                      name=\"average_tenure\"\n                      type=\"text\"\n                      onValueChange={(e) => setAverageTenure(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Time at Current Company (months / years)\"\n                      id=\"current_tenure\"\n                      name=\"current_tenure\"\n                      value={currentTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setCurrentTenure(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"# of Companies Post Bar\"\n                      id=\"past_bar_companies_no\"\n                      name=\"past_bar_companies_no\"\n                      value={past_bar_companies_no}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.past_bar_companies_no}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Primary areas of Law\"\n                      id=\"primary_area\"\n                      name=\"primary_area\"\n                      value={primary_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.primary_area}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Button\n                      variant=\"contained\"\n                      type=\"submit\"\n                      sx={{\n                        float: \"right\",\n                        marginTop: \"10rem\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n            </Box>\n          </TabContext>\n        </Paper>\n      </Box>\n      {/* // ) : ( // <Typography>Something wend wrong!</Typography>\n      // )} */}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  profile: state.auth.profile,\n});\n\nexport default connect(mapStateToProps)(Profile);\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Menu, MenuItem, Divider } from \"@mui/material\";\n\nconst ViewTasks = () => {\n  return (\n    <Fragment>\n      <MenuItem>Profile</MenuItem>\n      <MenuItem>Account</MenuItem>\n      <MenuItem>Setting</MenuItem>\n      <Divider sx={{ my: 0.5 }} />\n      <MenuItem>Logout</MenuItem>\n    </Fragment>\n  );\n};\n\nexport default ViewTasks;\n","/** @format */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  TextField,\n  Switch,\n  FormControlLabel,\n  Box,\n  Grid,\n  Button,\n  Typography,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport axios from \"axios\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\n\nconst CreateTask = () => {\n  const [dueDate, setDueDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [bill, setBill] = useToggle(true);\n  const [matterData, setMatterData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useToggle(true);\n  const [file, setFile] = useState(\"\");\n  const [taskData, setTaskData] = useState({\n    matter_id: 0,\n    matter_contact: 0,\n    matter: \"\",\n    task: \"\",\n    filename: \"\",\n    assign_to: 0,\n    detail: \"\",\n  });\n\n  const {\n    matter_id,\n    matter_contact,\n    matter,\n    task,\n    filename,\n    assign_to,\n    detail,\n  } = taskData;\n\n  const onChange = (e) =>\n    setTaskData({ ...taskData, [e.target.name]: e.target.value });\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/matter/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setMatterData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log(matter_id, matter_contact, matter, task);\n    let due_at = GetDate(dueDate);\n    let is_billable = bill;\n    let is_private = isPrivate;\n\n    const body = JSON.stringify({\n      matter_id,\n      matter_contact,\n      matter,\n      task,\n      file,\n      is_billable,\n      is_private,\n      due_at,\n      assign_to,\n      detail,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-task/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n          \"& .MuiSelect-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Task\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_id\"\n              label=\"matter_id\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_id}\n              onChange={(e) => onChange(e)}\n              id=\"matter_id\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"matter\"\n              type=\"text\"\n              min=\"0\"\n              value={matter}\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"task\"\n              label=\"Task\"\n              type=\"text\"\n              value={task}\n              onChange={(e) => onChange(e)}\n              id=\"task\"\n              autoComplete=\"task\"\n            />\n            <Box ml={2} mt={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Attach File \"\n                labelPlacement=\"start\"\n                control={\n                  <input\n                    type=\"file\"\n                    name=\"filename\"\n                    id=\"file\"\n                    onChange={(e) => onChange(e)}\n                  />\n                }\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"file\"\n                label=\"please chose any file\"\n                type=\"text\"\n                min=\"0\"\n                value={filename}\n                onChange={(e) => setFile(filename)}\n                id=\"file\"\n                disabled\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_contact\"\n              label=\"matter_contact\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_contact}\n              onChange={(e) => onChange(e)}\n              id=\"matter_contact\"\n            />\n            <Box p={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Billable\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={bill}\n                    onChange={() => setBill(bill)}\n                  />\n                }\n              />\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Private\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={isPrivate}\n                    onChange={() => setIsPrivate(isPrivate)}\n                  />\n                }\n              />\n            </Box>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Due Date\"\n                value={dueDate}\n                name=\"dueDate\"\n                id=\"dueDate\"\n                onChange={(e) => setDueDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"Assign to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              autoComplete=\"assign_to\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              multiline\n              rows={5}\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"Detail\"\n              type=\"text\"\n              value={detail}\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n            />\n\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateTask;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport ViewTasks from \"./ViewTasks\";\nimport CreateTask from \"./CreateTask\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Task\">\n          <ViewTasks />\n        </div>\n        <div label=\"Create Task\">\n          <CreateTask />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport DashBoard from \"../Admin/DashBoard\";\n\nimport {\n  Box,\n  Typography,\n  Tabs,\n  Tab,\n  IconButton,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\n\nimport TabContext from \"@mui/lab/TabContext\";\nimport TabList from \"@mui/lab/TabList\";\n\nimport TabPanel from \"@mui/lab/TabPanel\";\nimport PropTypes from \"prop-types\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\n\n// components of tabs\nimport Invoice from \"../../Invoice\";\nimport Matter from \"../../Matter\";\nimport Ledger from \"../../Ledger\";\nimport Favorite from \"../../Favorite/Favorites\";\nimport Category from \"../../Category/ManageCategory\";\nimport Contact from \"../../Contact/Contact\";\nimport Profile from \"../../Profile/Profile\";\nimport Tasks from \"../../Tasks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport {\n  addNewTab,\n  removeNewTab,\n  removeLastNewTab,\n} from \"../../../redux/features/searchTabSlice\";\nimport { addTab, removeTab } from \"../../../redux/features/tabSlice\";\n\nconst data = [\n  { name: \"invoice\", content: <Invoice /> },\n  { name: \"matter\", content: <Matter /> },\n  { name: \"ledger\", content: <Ledger /> },\n  { name: \"favorite\", content: <Favorite /> },\n  { name: \"category\", content: <Category /> },\n  { name: \"contact\", content: <Contact /> },\n  { name: \"profile\", content: <Profile /> },\n  { name: \"tasks\", content: <Tasks /> },\n];\nconst component = {\n  invoice: <Invoice />,\n  matter: <Matter />,\n  ledger: <Ledger />,\n  favorite: <Favorite />,\n  category: <Category />,\n  contact: <Contact />,\n  profile: <Profile />,\n  tasks: <Tasks />,\n};\n\nconst AdminDashboard = () => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const tabList = useSelector((state) => state.tabs);\n  const newTabList = useSelector((state) => state.newTabs);\n  const dispatch = useDispatch();\n\n  // search tab will match the text and display tab\n  const [wordEntered, setWordEntered] = useState(\"\");\n\n  const searchItem = () => {\n    let selectedItem = data.filter((value) => {\n      if (value.name === wordEntered) {\n        return true;\n      }\n    });\n  };\n  const handleChangeSearch = (e) => {\n    setWordEntered(e.target.value);\n    let id = tabList.length + 1;\n    dispatch(\n      addTab({\n        id: id,\n        tab: e.target.value,\n      })\n    );\n    dispatch(removeLastNewTab());\n    setValue(id);\n    searchItem();\n  };\n  const handleRemoveTab = (tab) => {\n    dispatch(removeTab(tab));\n    setValue(0);\n  };\n  const handleRemoveNewTab = (tab) => {\n    dispatch(removeNewTab(tab));\n    setValue(0);\n  };\n\n  const addSearchTab = () => {\n    let id = newTabList.length + 10;\n    setTimeout(\n      dispatch(\n        addNewTab({\n          id: id,\n          name: \"newtab\",\n        })\n      ),\n      5000\n    );\n\n    setValue(id);\n  };\n  const displayNewTabsName = () => {\n    if (newTabList) {\n      return newTabList.map((tab) => (\n        <Tab\n          key={tab.id}\n          value={tab.id}\n          label={\n            <span>\n              newtab\n              <IconButton\n                component=\"div\"\n                onClick={() => handleRemoveNewTab(tab)}\n              >\n                <CloseIcon />\n              </IconButton>\n            </span>\n          }\n        />\n      ));\n    } else return null;\n  };\n  const displayTabsName = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <Tab\n          key={tab.id}\n          value={tab.id}\n          label={\n            <span>\n              {\" \"}\n              {tab.name}\n              <IconButton component=\"div\" onClick={() => handleRemoveTab(tab)}>\n                <CloseIcon />\n              </IconButton>\n            </span>\n          }\n        />\n      ));\n    } else return null;\n  };\n  const searchTab = () => {\n    return (\n      <Box\n        noValidate\n        sx={{\n          p: \"2px 4px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          width: \"50%\",\n          borderRadius: \"5rem\",\n          backgroundColor: \"#dfdfdf\",\n        }}\n      >\n        <Select\n          fullWidth\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value=\"\"\n          label=\"Search....\"\n          onChange={handleChangeSearch}\n          sx={{\n            \" & .MuiOutlinedInput-notchedOutline\": {\n              border: \"none\",\n            },\n          }}\n        >\n          {data.map((item, index) => (\n            <MenuItem key={index} value={item.name}>\n              {item.name}\n            </MenuItem>\n          ))}\n        </Select>\n\n        <IconButton type=\"submit\" sx={{ p: \"10px\" }} aria-label=\"search\">\n          {wordEntered.length === 0 ? <SearchIcon /> : <CloseIcon />}\n        </IconButton>\n      </Box>\n    );\n  };\n  const displaySearchTabs = () => {\n    if (newTabList) {\n      return newTabList.map((tab) => (\n        <TabPanel value={tab.id}>{searchTab()}</TabPanel>\n      ));\n    } else return null;\n  };\n  const displayTabs = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <TabPanel value={tab.id}>{component[tab.name]}</TabPanel>\n      ));\n    } else return null;\n  };\n\n  const renderTabs = () => {\n    return (\n      <Box sx={{ width: \"100%\" }}>\n        <TabContext value={value}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              variant=\"scrollable\"\n              scrollButtons\n              allowScrollButtonsMobilearia-label=\"lab API tabs example\"\n            >\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label=\"Dashboard\"\n                value={0}\n              />\n\n              {displayTabsName()}\n              {displayNewTabsName()}\n\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label={\n                  <IconButton\n                    component=\"div\"\n                    onClick={() => dispatch(addNewTab())}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                }\n                onClick={addSearchTab}\n                value={100}\n              />\n            </Tabs>\n          </Box>\n          <TabPanel value={0}>\n            <DashBoard />\n          </TabPanel>\n          {displayTabs()}\n          {displaySearchTabs()}\n          <TabPanel value={100}></TabPanel>\n        </TabContext>\n      </Box>\n    );\n  };\n  useEffect(() => {\n    renderTabs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <Fragment>{renderTabs()}</Fragment>;\n};\n\nexport default AdminDashboard;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { LinearProgress, Box, Grid, Typography } from \"@mui/material\";\n\nconst ProgressBar = () => {\n  const [progress, setProgress] = useState(69);\n  return (\n    <Box paddingLeft={3} paddingRight={3}>\n      <Grid container>\n        <Grid item lg={1} xs={12}>\n          <Typography>{progress}%</Typography>\n        </Grid>\n        <Grid item lg={11} xs={12} mt={2} mb={5}>\n          <LinearProgress variant=\"determinate\" value={progress} />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ProgressBar;\n","/** @format */\n\nimport React from \"react\";\n\nimport { Typography, Box, Paper, Grid } from \"@mui/material\";\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from \"@mui/material\";\n\nconst randomDate = (start, end) => {\n  const getDateTime = new Date(\n    start.getTime() + Math.random() * (end.getTime() - start.getTime()),\n  );\n  const date = getDateTime.toLocaleDateString();\n  const hour = getDateTime.getHours();\n  const min = getDateTime.getMinutes();\n\n  return date + \" \" + hour + \":\" + min;\n};\n\nconst Task = () => {\n  return (\n    <Grid container>\n      <Grid item lg={12} xs={12}>\n        <Typography component=\"h5\" variant=\"h6\" color=\"primary\">\n          My Tasks\n        </Typography>\n        <TableContainer component={Paper}>\n          <Table size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    ID\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Date\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Subject\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Detail\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow bgColor=\"#e85355\">\n                <TableCell>\n                  <Typography variant=\"caption\">123452</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Submit Document X</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display first 3 links\n                  </Typography>{\" \"}\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#fd9905\">\n                <TableCell>\n                  <Typography variant=\"caption\">113457</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Y</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display more details\n                  </Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#28c570\">\n                <TableCell>\n                  <Typography variant=\"caption\">113455</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Z</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Note in popup</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"white\">\n                <TableCell>\n                  <Typography variant=\"caption\">113458</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document XY</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display First 3 links\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Task;\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nexport const AdminCards = () => {\n  return (\n    <>\n      <Grid container spacing={1}>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5} xs={12}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    New Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    Lost Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport const LawyerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Projected Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={230} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Annual Trending Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={768} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const FirmCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={6} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Lost Customers\n              </Typography>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const CustomerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={2}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Balance\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Payment Due\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={12345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nconst Cards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                New Matters\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={3425}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n// import axios from 'axios';\n\nimport { Grid } from \"@mui/material\";\n\nimport Calender from \"../Calender\";\nimport ProgressBar from \"../ProgressBar\";\n\nimport Tasks from \"../Tasks\";\nimport { CustomerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={3}>\n        <Grid item lg={2} xs={12}>\n          <CustomerCards />\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Calender />\n        </Grid>\n        <Grid item p={2} lg={6} xs={12}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <ProgressBar />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Button, Grid, Box, List, ListItem, ListItemText } from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst Templates = () => {\n  return (\n    <Fragment>\n      <Grid container mt={1} spacing={1}>\n        <Grid item xs={12} m={2}>\n          <Button variant=\"contained\" size=\"small\">\n            Merge Fields.XLS\n          </Button>\n          <Box sx={{ float: \"right\" }}>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Doc\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New PDF\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Email\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Edit\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Save\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Close\n            </Button>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Word Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Report Money</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - Report Time</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Report Billed hours</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              PDF Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>P001 - Write of Execution</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P002 - Memo of Cost</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P003 - Settlement Letter</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Email Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Invoice Email</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - New Client</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Firing Client</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              padding: \"15rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Templates can be opened here to edit them. user can add/ remove\n            merge fields directly to the document or PDF\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Templates;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Client/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\n\n\nconst ClientDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default ClientDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const PieChart = () => {\n  const state = {\n    series: [86, 14],\n    options: {\n      chart: {\n        height: 500,\n        type: \"pie\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"65%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val + \"%\";\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Prodcutive v. Non-Productive Time\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n        horizontalAlign: \"center\",\n      },\n      colors: [\"#738df5\", \"#eaa3ff\"],\n      labels: [\"Non Productive\", \"Productive\"],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"pie\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            background: \"#aaa\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shade: \"gark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\", \"pink\"],\n        stops: [0, 3],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"user 1\",\n        data: [44, 55, 41, 37, 22, 43, 21],\n      },\n      {\n        name: \"user 2\",\n        data: [53, 32, 33, 52, 13, 43, 32],\n      },\n      {\n        name: \"User 3\",\n        data: [12, 17, 11, 9, 15, 11, 20],\n      },\n      {\n        name: \"User 4\",\n        data: [9, 7, 5, 8, 6, 9, 4],\n      },\n    ],\n    options: {\n      chart: {\n        type: \"bar\",\n        height: 350,\n        stacked: true,\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        borderRadius: 8,\n        colors: [\"#fff\"],\n      },\n\n      title: {\n        text: \"% Indicating User Ranking\",\n      },\n      xaxis: {\n        categories: [\n          \"Word per Min\",\n          \"Matter Completed\",\n          \"Revenue Generated\",\n          \"Articals Submitted\",\n          \"New Client\",\n          \"New Matter\",\n        ],\n        labels: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: undefined,\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      fill: {\n        opacity: 1,\n      },\n      color: [\"#738df5\", \"#eaa3ff\", \"#738df5\", \"#eaa3ff\"],\n      legend: {\n        show: false,\n        position: \"top\",\n        horizontalAlign: \"left\",\n        offsetX: 40,\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Grid } from \"@mui/material\";\nimport Calender from \"../Calender\";\nimport Tasks from \"../Tasks\";\nimport { Chart2, PieChart, BarChart } from \"./Chart\";\nimport { LawyerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={2}>\n          <LawyerCards />\n        </Grid>\n        <Grid item lg={4}>\n          <PieChart />\n        </Grid>\n        <Grid item lg={6}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={4}>\n          <Chart2 />\n        </Grid>\n        <Grid item lg={8}>\n          <BarChart />\n        </Grid>\n        <Grid item>\n          <Calender />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Lawyer/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst LawyerDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default LawyerDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const Chart = () => {\n  const state = {\n    series: [110, 110, 19, 80],\n    options: {\n      chart: {\n        height: 500,\n        type: \"donut\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"55%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Matter by Type\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      colors: [\"#03a5fc\", \"#fcd200\", \"#fca400\", \"#003f5c\"],\n      labels: [\n        \"Business Contacts\",\n        \"Criminal Defence\",\n        \"Personal Injury\",\n        \"Family Law\",\n      ],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"donut\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            // background: \"#333\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"solid\",\n      gradient: {\n        shade: \"dark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\"],\n        stops: [0, 100],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"Profit\",\n        data: [640, 505, 210, 108, 760, 410, 440, 140, 660, 320],\n      },\n      {\n        name: \"Loss\",\n        data: [530, 302, 420, 220, 290, 800, 160, 490, 708, 110],\n      },\n    ],\n\n    options: {\n      colors: [\"#e85355\", \"#28c570\"],\n      chart: {\n        height: 100,\n        type: \"bar\",\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n        },\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function (val) {\n          return \"$\" + val;\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return \"$ \" + val + \"\";\n          },\n        },\n      },\n\n      xaxis: {\n        categories: [\n          \"Jan\",\n          \"Feb\",\n          \"Mar\",\n          \"Apr\",\n          \"May\",\n          \"Jun\",\n          \"July\",\n          \"Aug\",\n          \"Sep\",\n          \"Oct\",\n        ],\n      },\n\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"right\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart2 = () => {\n  const state = {\n    series: [\n      {\n        data: [19, 57, 78, 40, 95, 25],\n      },\n    ],\n\n    options: {\n      chart: {\n        height: 350,\n        type: \"bar\",\n      },\n      colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n      plotOptions: {\n        bar: {\n          columnWidth: \"45%\",\n          distributed: true,\n        },\n      },\n      dataLabels: {\n        enabled: true,\n        formatter: function (val) {\n          return val + \"%\";\n        },\n      },\n      legend: {\n        show: false,\n      },\n      title: {\n        text: \"% of Task Completed by User\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      xaxis: {\n        categories: [\n          \"M. Jones\",\n          \"R. Smith\",\n          \"T.Sweeney\",\n          \"S. Booker\",\n          \"A. Knighter\",\n          \"J. King\",\n        ],\n        labels: {\n          style: {\n            // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n            fontSize: \"12px\",\n          },\n        },\n\n        legend: {\n          show: false,\n          dropShadow: false,\n          position: \"right\",\n          labels: {\n            useSeriesColors: true,\n          },\n          onItemClick: {\n            toggleDataSeries: true,\n          },\n          formatter: function (seriesName, opts) {\n            return (\n              seriesName +\n              \":  <NumberFormat value={\" +\n              opts.w.globals.series[opts.seriesIndex] +\n              \"} displayType={'text'} thousandSeparator={true}/>\"\n            );\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart3 = () => {\n  const state = {\n    // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n    options: {\n      series: [\n        {\n          data: [750, 280, 500, 720],\n        },\n      ],\n      chart: {\n        type: \"bar\",\n        height: 380,\n      },\n      plotOptions: {\n        bar: {\n          barHeight: \"100%\",\n          borderRadius: 8,\n          distributed: true,\n          horizontal: true,\n          dataLabels: {\n            position: \"top\",\n          },\n        },\n      },\n      //       light blue,  yellow, orange, dark blue,\n      colors: [\"#fcd200\", \"#fca400\", \"#003f5c\", \"#03a5fc\"],\n      dataLabels: {\n        enabled: false,\n        textAnchor: \"start\",\n        style: {\n          colors: [\"#fff\"],\n        },\n        formatter: function (val, opt) {\n          return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val;\n        },\n        offsetX: 0,\n        dropShadow: {\n          enabled: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        colors: [\"#fff\"],\n      },\n      xaxis: {\n        categories: [\n          \"Criminal Defense\",\n          \"Personal Injury\",\n          \"Family Law\",\n          \"Business Contract\",\n        ],\n      },\n      yaxis: {\n        labels: {\n          show: true,\n        },\n      },\n      title: {\n        text: \"Revenue By Mater Type\",\n        align: \"center\",\n        floating: true,\n      },\n\n      tooltip: {\n        theme: \"light\",\n        x: {\n          show: false,\n        },\n        y: {\n          formatter: function (val, opt) {\n            return (\n              opt.w.globals.labels[opt.dataPointIndex] + \": $ \" + val + \" k\"\n            );\n          },\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.options.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Paper, Grid, Box } from \"@mui/material\";\n\nimport Tasks from \"../Tasks\";\nimport { FirmCards } from \"../Cards\";\n\nimport { Chart, Chart2, BarChart, BarChart2, BarChart3 } from \"./Charts\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      {/*main dashboard section for display  */}\n      <Box component={Paper} elevation={3} mt={4}>\n        <Grid container spacing={2}>\n          <Grid item lg={8} xs={12}>\n            <FirmCards />\n            <Grid container>\n              <Grid item lg={5} xs={12}>\n                <Chart2 />\n              </Grid>\n              <Grid item lg={7} xs={12}>\n                <Tasks />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Chart />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <BarChart />\n          </Grid>\n          <Grid item lg={6} xs={6}>\n            <BarChart2 />\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <BarChart3 />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Firm/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst FirmDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default FirmDashboard;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport AdminDashboard from \"../components/Dashboard/UserRoles/AdminDashboard\";\nimport ClientDashboard from \"../components/Dashboard/UserRoles/ClientDashboard\";\nimport LawyerDashboard from \"../components/Dashboard/UserRoles/LawyerDashboard\";\nimport FirmDashboard from \"../components/Dashboard/UserRoles/FirmDashboard\";\n\nconst Dashboard = () => {\n\tconst { user } = useSelector((state) => state.auth.user);\n\n\t// checker type of user\n\tconst [localuser, setLocalUser] = useState({\n\t\tusername: \"Guest\",\n\t\tis_firm: false,\n\t\tis_lawyer: false,\n\t\tis_client: true,\n\t});\n\n\tuseEffect(() => {\n\t\tif (user) {\n\t\t\tsetLocalUser({\n\t\t\t\tusername: user.username,\n\t\t\t\tis_firm: user.is_firm,\n\t\t\t\tis_lawyer: user.is_lawyer,\n\t\t\t\tis_client: user.is_client,\n\t\t\t});\n\t\t}\n\t}, [user]);\n\n\tconst dashboardRedirect = () => {\n\t\tswitch (user.username) {\n\t\t\tcase \"admin\":\n\t\t\t\treturn <AdminDashboard />;\n\t\t\tcase \"firm\":\n\t\t\t\treturn <FirmDashboard />;\n\t\t\tcase \"lawyer\":\n\t\t\t\treturn <LawyerDashboard />;\n\t\t\tdefault:\n\t\t\t\treturn <ClientDashboard />;\n\t\t}\n\t};\n\treturn <>{dashboardRedirect()}</>;\n};\n\nexport default Dashboard;\n","/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { signIn, reset } from \"../../redux/features/authSlice\";\n\nimport {\n\tAvatar,\n\tButton,\n\tPaper,\n\tGrid,\n\tBox,\n\tTypography,\n\tTextField,\n\tAlert,\n} from \"@mui/material\";\n\nimport AlertMassage from \"../../components/Alerts/Alerts\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport { toast } from \"react-toastify\";\nimport BackgroundImage from \"../../asserts/login_light.png\";\n\nconst Login = () => {\n\tconst {\n\t\tuser,\n\t\tisLoading,\n\t\tisError,\n\t\tisSuccess,\n\t\tisAuthenticated,\n\t\tmessage,\n\t} = useSelector((state) => state.auth);\n\tconst [formData, setFormData] = useState({\n\t\tusername: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t});\n\n\tconst { username, email, password } = formData;\n\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\t\n\t\tif (isAuthenticated) {\n\t\t\treturn <Redirect to='/' />;\n\t\t\n\t\t}\n\t}, [user, isError, isSuccess, message, dispatch]);\n\n\tconst onChange = (e) => {\n\t\tsetFormData((prevState) => ({\n\t\t\t...prevState,\n\t\t\t[e.target.name]: e.target.value,\n\t\t}));\n\t};\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst userData = {\n\t\t\tusername,\n\t\t\temail,\n\t\t\tpassword,\n\t\t};\n\n\t\tdispatch(signIn(userData));\n\t};\n\n\tif (isLoading) {\n\t\treturn \"Loading...\";\n\t}\n\tif (isAuthenticated) {\n\t\treturn <Redirect to='/' />;\n\t}\n\treturn (\n\t\t<Grid container component='main' sx={{ height: \"87vh\" }}>\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t\txs={false}\n\t\t\t\tsm={4}\n\t\t\t\tmd={8}\n\t\t\t\tsx={{\n\t\t\t\t\tbackgroundImage: `url(${BackgroundImage})`,\n\t\t\t\t\tbackgroundRepeat: \"no-repeat\",\n\t\t\t\t\tbackgroundColor: (t) =>\n\t\t\t\t\t\tt.palette.mode === \"light\"\n\t\t\t\t\t\t\t? t.palette.grey[50]\n\t\t\t\t\t\t\t: t.palette.grey[900],\n\t\t\t\t\tbackgroundSize: \"cover\",\n\t\t\t\t\tbackgroundPosition: \"center\",\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t<Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n\t\t\t\t<Box\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tmy: 8,\n\t\t\t\t\t\tmx: 4,\n\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t}}>\n\t\t\t\t\t\t{isError ? <Alert severity=\"warning\"> {message}</Alert>: null}\n\t\t\t\t\t<Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n\t\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t\t</Avatar>\n\t\t\t\t\t<Typography component='h1' variant='h5'>\n\t\t\t\t\t\tSign in\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Box\n\t\t\t\t\t\tcomponent='form'\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\tValidate\n\t\t\t\t\t\tsx={{ mt: 1 }}\n\t\t\t\t\t\tonSubmit={(e) => onSubmit(e)}>\n\t\t\t\t\t\t{/* csrf_token */}\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant='standard'\n\t\t\t\t\t\t\tid='username'\n\t\t\t\t\t\t\tlabel='Username'\n\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant='standard'\n\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\tlabel='Email Address'\n\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant='standard'\n\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\tminLength='6'\n\t\t\t\t\t\t\tautoComplete='password'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tsx={{ mt: 3, mb: 2 }}>\n\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t\t<Link to='/' variant='body2'>\n\t\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Link to='/signup' variant='body2'>\n\t\t\t\t\t\t\t\t{\"Don't have an account? Sign Up\"}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default Login;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../../actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n  FormControlLabel,\n  FormLabel,\n  FormGroup,\n  Checkbox,\n  RadioGroup,\n  Radio,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/signup_light.png\";\n\nconst Signup = ({ register, isAuthenticated }) => {\n  const [accountCreated, setAccountCreated] = useState(false);\n  const [isFirm, setIsFirm] = useState(false);\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    re_password: \"\",\n  });\n\n  const { username, email, first_name, last_name, password, re_password } =\n    formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    let is_firm = isFirm;\n    let is_client = !isFirm;\n\n    if (password === re_password) {\n      register(\n        email,\n        first_name,\n        last_name,\n        username,\n        password,\n        re_password,\n        is_firm,\n        is_client,\n      );\n\n      setAccountCreated(true);\n    } else {\n      console.log(\"Password no match, Please type again!\");\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (accountCreated) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"85vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            autoComplete=\"off\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={(e) => onChange(e)}\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"first_name\"\n                  label=\"First Name\"\n                  name=\"first_name\"\n                  value={first_name}\n                  onChange={(e) => onChange(e)}\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"last_name\"\n                  label=\"Last Name\"\n                  name=\"last_name\"\n                  autoComplete=\"last_name\"\n                  value={last_name}\n                  onChange={(e) => onChange(e)}\n                  autoFocus\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={(e) => onChange(e)}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(e) => onChange(e)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"re_password\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                value={re_password}\n                onChange={(e) => onChange(e)}\n                id=\"re_password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Sign up as a </FormLabel>\n              <RadioGroup\n                row\n                value={isFirm}\n                onChange={(e) => setIsFirm(e.target.value)}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Firm\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Individual\"\n                />\n              </RadioGroup>\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormGroup>\n                <FormControlLabel\n                  control={<Checkbox />}\n                  label=\"Agreed on Term and Contidions\"\n                />\n              </FormGroup>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Register\n            </Button>\n          </Box>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" variant=\"body2\">\n                {\"Already have an account? Sign in\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { register })(Signup);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  Divider,\n  FormControlLabel,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Company = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate: 0.0,\n    role: \"\",\n    time_zone: \"\",\n    group: \"\",\n    job_title: \"\",\n    bar_no: 0,\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: 0,\n    ext: 0,\n    mobile: 0,\n    home: 0,\n    work_no: 0,\n\n    phone_ext: 0,\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    role,\n    time_zone,\n    group,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      c_email,\n      rate,\n      role,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      p_email,\n      phone_ext,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Box p={3} sx={{ float: \"right\" }}>\n        <LinkButton to=\"/users\">Manage User</LinkButton>\n        <LinkButton to=\"/user-group\">Manage Group</LinkButton>\n        <LinkButton to=\"/user-role\">Manage Role</LinkButton>\n      </Box>\n\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create User\n        </Typography>\n        <Grid container spacing={2} mt={2}>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"f_name\"\n              label=\"f_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"m_name\"\n              label=\"m_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"m_name\"\n              autoComplete=\"m_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"l_name\"\n              label=\"l_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"c_email\"\n              label=\"c_email\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"c_email\"\n              autoComplete=\"c_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"rate\"\n              label=\"rate\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"rate\"\n              autoComplete=\"rate\"\n            />\n            <FormControlLabel\n              label=\"Round Entries (Round [up/down] to nearnest 0.00 fraction of the hour\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n              sx={{ width: \"35rem\" }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"role\"\n              label=\"role\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"role\"\n              autoComplete=\"role\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"time_zone\"\n              label=\"time_zone\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"time_zone\"\n              autoComplete=\"time_zone\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"group\"\n              label=\"group\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"group\"\n              autoComplete=\"group\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"job_title\"\n              label=\"job_title\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"job_title\"\n              autoComplete=\"job_title\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bar_no\"\n              label=\"bar_no\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bar_no\"\n              autoComplete=\"bar_no\"\n            />\n          </Grid>\n          <Grid item mt={2}>\n            <Divider textAlign=\"left\">\n              <Typography component=\"h3\" variant=\"h5\">\n                Contact Info\n              </Typography>\n            </Divider>\n            <Box>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"street\"\n                label=\"street\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"street\"\n                autoComplete=\"street\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"suite\"\n                label=\"suite\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"suite\"\n                autoComplete=\"suite\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"city\"\n                label=\"city\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"city\"\n                autoComplete=\"city\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"state\"\n                label=\"state\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"state\"\n                autoComplete=\"state\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"zip\"\n                label=\"zip\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"zip\"\n                autoComplete=\"zip\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"ext\"\n                label=\"ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"ext\"\n                autoComplete=\"ext\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"mobile\"\n                label=\"mobile\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"mobile\"\n                autoComplete=\"mobile\"\n              />\n              <Button\n                variant=\"contained\"\n                sx={{ background: \"#5cb85c\", marginTop: \"0.5rem\" }}\n              >\n                Set Password Automaticly\n              </Button>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"home\"\n                label=\"home\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"home\"\n                autoComplete=\"home\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"work_no\"\n                label=\"work_no\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"work_no\"\n                autoComplete=\"work_no\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"p_email\"\n                label=\"p_email\"\n                type=\"email\"\n                onChange={(e) => onChange(e)}\n                id=\"p_email\"\n                autoComplete=\"p_email\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"phone_ext\"\n                label=\"phone_ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"phone_ext\"\n                autoComplete=\"phone_ext\"\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Box\n              sx={{\n                \"& .MuiButton-root\": { m: 1 },\n                float: \"right\",\n              }}\n            >\n              <Button variant=\"contained\" type=\"submit\">\n                Create Member\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Company;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\nimport Filters from \"../../components/Matter/Filters\";\nimport MatterCards from \"../../components/Matter/MatterCards\";\nimport MatterListLong from \"../../components/Matter/MatterListLong\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item xs={12}>\n            <Filters />\n          </Grid>\n          <Grid item xs={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item xs={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Matters;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\"\nimport Grid from \"@mui/material/Grid\"\nimport Box from \"@mui/material/Box\"\nimport Switch from \"@mui/material/Switch\"\nimport MenuItem from \"@mui/material/MenuItem\"\nimport Typography from \"@mui/material/Typography\"\nimport Button from \"@mui/material/Button\";\nimport Divider from \"@mui/material/Divider\"\nimport FormControlLabel from \"@mui/material/FormControlLabel\"\nimport Stack from \"@mui/material/Stack\"\nimport axios from \"axios\";\nimport NumberFormat from 'react-number-format';\nimport {ActionAlerts}  from \"../../utils/ActionAlerts\";\nimport {useToggle}  from \"../../context/useToggle\";\nimport  {CONFIG}  from \"../../api/MatterApi\";\n\nconst CreateUser = ({userId}) => {\n\n  const history = useHistory();\n\n  // const [data, setData] = useState([])\n  const [roles, setRoles] = useState([]);\n  const [role, setRole] = useState(\"\");\n  const [group, setGroup] = useState(\"\");\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  // const [rateType, setRateType] = useState(\"\");\n\n  \n  const [approvel, setApprovel] = useToggle(false);\n  const [userData, setUserData] = useState({\n    first_name: \"\",\n    middle_name: \"\",\n    last_name: \"\",\n    c_email: \"\",\n    rate_type: \"\",\n    rate: \" \",\n    time_zone: \"\",\n    job_title: \"\",\n    bar_no: \" \",\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    ext: \"\",\n    mobile: \"\",\n    home: \"\",\n    work_no: \"\",\n    p_email: \"\",\n    phone_ext: \"\",\n  });\n  const {\n    first_name,\n    middle_name,\n    last_name,\n    c_email,\n    rate,\n    time_zone,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const FetchRoleData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setRoles(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  const FetchGroupData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/groups/`, CONFIG)\n      .then((res) => {\n        setLoading2(false);\n        setGroups(res.data);\n      })\n      .catch((err) => {\n        setLoading2(false);\n      });\n  };\n  useEffect(() => {\n    if(userId >= 0){\n    \n    }\n    \n  }, []);\n  useEffect(() => {\n    FetchRoleData();\n    FetchGroupData();\n  }, []);\n\nconst handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/create-member/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\nconst handleDeactivate = (id) => {\n    axios\n      .patch(\n        `${process.env.REACT_APP_API_URL}/user/auth/is-active-user/${id}/`, false,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\nconst handleSubmit = (e) => {\n\n    // console.log(\"some thing happen\")\n    const username = first_name.toLowerCase() + last_name.toLowerCase()\n    const password = username\n    const email = c_email\n    \n    const member = {\n      first_name,\n      middle_name,\n      last_name,\n      p_email,\n      role,\n      c_email,\n      rate,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      phone_ext,\n    };\n    const body = JSON.stringify({username, first_name, last_name, email, password, member})\n      axios.post(`${process.env.REACT_APP_API_URL}/user/auth/create-user-member/`,body, CONFIG)\n    \n      .then((res) => {\n      \n        return (\n            // <Redirect to='/users' />\n            history.push(\"/users\", { params: false })\n        );\n      })\n      .catch((err) => {\n      \n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Box component=\"form\" autoComplete=\"off\"\n            Validate onSubmit={(e) => handleSubmit(e)}>\n        <Typography component=\"h3\" variant=\"h4\">\n          Create User\n        </Typography>\n     \n           <Grid\n                container\n                spacing={2}\n                mt={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\", \"input::-webkit-outer-spin-button\": {\n                    webkitAappearance: \"none\"\n                  },  },\n                }}\n\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"first_name\"\n                    label=\"First Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"first_name\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"middle_name\"\n                    label=\"Middle Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"middle_name\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"last_name\"\n                    label=\"Last Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"last_name\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"c_email\"\n                    label=\"Company Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"c_email\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n              \n                  <NumberFormat\n                      required\n                      id=\"rate\"\n                      customInput={TextField}\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"rate\"\n                      label=\"Rate $\"\n                      onChange={(e) => onChange(e)}\n                      type=\"number\"\n                      decimalScale={2}\n                      InputProps={{\n                            inputProps: { \n                                max: 100, min: 10 \n                            }\n                        }}\n                      thousandSeparator={true}\n                    />\n                </Grid>\n                <Grid item lg={6}>\n                  <Stack direction=\"row\" spacing={2} ml={2}>\n                    <FormControlLabel\n                      sx={{ fontSize: \"2rem\" }}\n                      label=\"\"\n                      control={\n                        <Switch\n                          checked={approvel}\n                          onChange={() => setApprovel(approvel)}\n                        />\n                      }\n                    />\n                    <Typography>\n                      Round Entries (Round [up/down] to nearnest\n                      <TextField\n                        margin=\"dense\"\n                        variant=\"standard\"\n                        type=\"text\"\n                        size=\"small\"\n                        placeholder=\"0.00\"\n                        sx={{\n                          maxWidth: \"5rem\",\n                        }}\n                      />\n                      fraction of the hour\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"role\"\n                    label=\"Role\"\n                    onChange={(e) => setRole(e.target.value)}\n                    id=\"role\"\n                  >\n                    {!loading ? (\n                      roles.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"time_zone\"\n                    label=\"Time Zone\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"time_zone\"\n                  >\n                    <MenuItem value=\"AKST\">Alaska Standard Time</MenuItem>\n                    <MenuItem value=\"PST\">Pacific Standard Time</MenuItem>\n                    <MenuItem value=\"CST\">Central Standard Time</MenuItem>\n                    <MenuItem value=\"EST\">Eastern Standard Time</MenuItem>\n                  </TextField>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"group\"\n                    label=\"Group\"\n                    type=\"text\"\n                    onChange={(e) => setGroup(e.target.value)}\n                    id=\"group\"\n                  >\n                    {!loading2 ? (\n                      groups.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                  required\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"job_title\"\n                    label=\"Job Title\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"job_title\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  {role === \"Sr. Atterney\" || role === \"Jr. Atterney\"  ? <NumberFormat\n                      customInput={TextField}\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"bar_no\"\n                      label=\"Bar #\"\n                      onChange={(e) => onChange(e)}\n                      id=\"bar_no\"\n\n                      format=\"######\"\n                      type=\"tel\"\n                    />: <NumberFormat\n                      disabled\n                      customInput={TextField}\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"bar_no\"\n                      label=\"Bar #\"\n                      onChange={(e) => onChange(e)}\n                      id=\"bar_no\"\n\n                      format=\"######\"\n                      type=\"tel\"\n                    />}\n                   \n                </Grid>\n              </Grid>\n              <Box mt={4} mb={2}>\n                <Divider />\n                <Typography mt={2} component=\"h3\" color=\"primary\" variant=\"h5\">\n                  Contact Info\n                </Typography>\n              </Box>Admin\n              <Grid\n                container\n                spacing={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\" },\n                }}\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"street\"\n                    label=\"Street\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"street\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"suite\"\n                    label=\"Suite\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"suite\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"city\"\n                    label=\"City\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"city\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"state\"\n                    label=\"State\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"state\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"#####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"zip\"\n                      label=\"Zip\"\n                      type=\"tel\"\n                      onChange={(e) => onChange(e)}\n                      id=\"zip\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}> \n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"ext\"\n                      label=\"+4\"\n                      type=\"tel\"\n                      onChange={(e) => onChange(e)}\n                      id=\"ext\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"p_email\"\n                    label=\"Personal Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"p_email\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <Box mt={1} ml={1}>\n                    <Button variant=\"contained\" color=\"primary\">\n                      Reset Password\n                    </Button>\n                  </Box>\n                </Grid>\n                <Grid item lg={3}>\n                  \n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                       size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"mobile\"\n                      label=\"Mobile #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"mobile\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                       size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"home\"\n                      label=\"Home #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"home\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"work\"\n                      label=\"Work #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"work\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n              \n                  <NumberFormat\n                    customInput={TextField}\n                    format=\"####\"\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"phone_ext\"\n                    label=\"Extesion\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"phone_ext\"\n                    />\n                </Grid>\n              </Grid>\n              <Grid item lg={12}>\n                <Box\n                  sx={{\n                    \"& .MuiButton-root\": { m: 1, mr:5 },\n                    float: \"right\",\n                    color:\"white\"\n                  }}\n                >\n                 <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    type=\"submit\"\n                    sx={{ color: \"white\" }}\n                    \n                  >\n                    Create\n                  </Button>\n                  \n                  <Button variant=\"contained\" color=\"warning\"sx={{color:\"#fff\"}}>\n                    Deactivate\n                  </Button>\n                  <Button variant=\"contained\" color=\"error\" sx={{color:\"#fff\"}}>\n                    Delete\n                  </Button>\n                </Box>\n              </Grid>\n       \n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateUser;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\"\nimport Grid from \"@mui/material/Grid\"\nimport Box from \"@mui/material/Box\"\nimport Switch from \"@mui/material/Switch\"\nimport MenuItem from \"@mui/material/MenuItem\"\nimport Typography from \"@mui/material/Typography\"\nimport Button from \"@mui/material/Button\";\nimport Divider from \"@mui/material/Divider\"\nimport FormControlLabel from \"@mui/material/FormControlLabel\"\nimport Stack from \"@mui/material/Stack\"\nimport axios from \"axios\";\nimport NumberFormat from 'react-number-format';\nimport {ActionAlerts}  from \"../../utils/ActionAlerts\";\nimport {useToggle}  from \"../../context/useToggle\";\nimport  {CONFIG}  from \"../../api/MatterApi\";\n\nconst UpdateUser = ( {data} ) => {\n  const history = useHistory();\n\n  const [roles, setRoles] = useState([]);\n  const [role, setRole] = useState(data.role);\n  const [group, setGroup] = useState(data.group);\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [user, setUser] = useState([])\n  \n  const [approvel, setApprovel] = useToggle(false);\n  const [userData, setUserData] = useState({\n      first_name:data.first_name,\n      middle_name:data.middle_name,\n      last_name:data.last_name,\n      c_email:data.c_email,\n      rate_type:data.rate_type,\n      rate:data.rate,\n      time_zone:data.time_zone,\n      job_title:data.job_title,\n      bar_no:data.bar_no,\n      street:data.street,\n      suite:data.suite,\n      city:data.city,\n      state:data.state,\n      zip:data.zip,\n      ext:data.ext,\n      mobile:data.mobile,\n      home:data.home,\n      work_no:data.work_no,\n      p_email:data.p_email,\n      phone_ext:data.phone_ext,\n  });\n  const {\n    first_name,\n    middle_name,\n    last_name,\n    c_email,\n    rate,\n    time_zone,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const FetchRoleData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setRoles(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  const FetchGroupData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/groups/`, CONFIG)\n      .then((res) => {\n        setLoading2(false);\n        setGroups(res.data);\n      })\n      .catch((err) => {\n        setLoading2(false);\n      });\n  };\n\n  useEffect(() => {\n    FetchRoleData();\n    FetchGroupData();\n  }, []);\n\nconst handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/create-member/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          window.location.reload(false)\n        );\n      });\n  };\nconst handleDeactivate = (id) => {\n  let is_active = true\n  if (is_active === \"True\"){\n    is_active = false\n  }\n     const body = JSON.stringify({is_active})\n    axios\n      .patch(\n        `${process.env.REACT_APP_API_URL}/user/auth/is-active-user/${id}/`, body,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n           window.location.reload(false)\n        );\n      });\n  };\nconst handleSubmit = (e) => {\n    e.preventDefault();    \n    const body = JSON.stringify({first_name,\n      middle_name,\n      last_name,\n      p_email,\n      role,\n      c_email,\n      rate,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      phone_ext,})\n      axios.put(`${process.env.REACT_APP_API_URL}/api/member-update/${data.id}/`,body, CONFIG)\n      .then((res) => {\n      \n        return (\n           window.location.reload(false)          \n        );\n      })\n      .catch((err) => {\n      \n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Box component=\"form\" autoComplete=\"off\"\n            Validate onSubmit={(e) => handleSubmit(e)}>\n        <Typography component=\"h3\" variant=\"h4\">\n          Update User {data.id}\n        </Typography>\n     \n           <Grid\n                container\n                spacing={2}\n                mt={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\", \"input::-webkit-outer-spin-button\": {\n                    webkitAappearance: \"none\"\n                  },  },\n                }}\n\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    size=\"small\"\n                    margin=\"normal\"\n                    value={first_name}\n                    variant=\"filled\"\n                    name=\"first_name\"\n                    label=\"First Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"first_name\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value = {middle_name}\n                    name=\"middle_name\"\n                    label=\"Middle Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"middle_name\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value = {last_name}\n                    name=\"last_name\"\n                    label=\"Last Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"last_name\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"c_email\"\n                    value = {c_email}\n                    label=\"Company Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"c_email\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n              \n                  <NumberFormat\n                      id=\"rate\"\n                      customInput={TextField}\n                      size=\"small\"\n                      margin=\"normal\"\n                      value={rate}\n                      variant=\"outlined\"\n                      name=\"rate\"\n                      label=\"Rate $\"\n                      onChange={(e) => onChange(e)}\n                      type=\"number\"\n                      decimalScale={2}\n                      InputProps={{\n                            inputProps: { \n                                max: 100, min: 10 \n                            }\n                        }}\n                      thousandSeparator={true}\n                    />\n                </Grid>\n                <Grid item lg={6}>\n                  <Stack direction=\"row\" spacing={2} ml={2}>\n                    <FormControlLabel\n                      sx={{ fontSize: \"2rem\" }}\n                      label=\"\"\n                      control={\n                        <Switch\n                          checked={approvel}\n                          onChange={() => setApprovel(approvel)}\n                        />\n                      }\n                    />\n                    <Typography>\n                      Round Entries (Round [up/down] to nearnest\n                      <TextField\n                        margin=\"dense\"\n                        variant=\"standard\"\n                        type=\"text\"\n                        size=\"small\"\n                        placeholder=\"0.00\"\n                        sx={{\n                          maxWidth: \"5rem\",\n                        }}\n                      />\n                      fraction of the hour\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value = {role}\n                    defaultValue={data.role}\n                    name=\"role\"\n                    label=\"Role\"\n                    onChange={(e) => setRole(e.target.value)}\n                    id=\"role\"\n                  >\n                    {!loading ? (\n                      roles.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    value ={time_zone}\n                    \n                    variant=\"outlined\"\n                    name=\"time_zone\"\n                    label=\"Time Zone\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"time_zone\"\n                  >\n                    <MenuItem value=\"AKST\">Alaska Standard Time</MenuItem>\n                    <MenuItem value=\"PST\">Pacific Standard Time</MenuItem>\n                    <MenuItem value=\"CST\">Central Standard Time</MenuItem>\n                    <MenuItem value=\"EST\">Eastern Standard Time</MenuItem>\n                  </TextField>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n             \n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    value={group}\n                    defaultValue={data.group}\n                    variant=\"outlined\"\n                    name=\"group\"\n                    label=\"Group\"\n                    type=\"text\"\n                    onChange={(e) => setGroup(e.target.value)}\n                    id=\"group\"\n                  >\n                    {!loading2 ? (\n                      groups.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n           \n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"job_title\"\n                    value={job_title}\n                    label=\"Job Title\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"job_title\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  {role === \"Sr. Atterney\" || role === \"Jr. Atterney\"  ? <NumberFormat\n                      customInput={TextField}\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"bar_no\"\n                      value={bar_no}\n                      label=\"Bar #\"\n                      onChange={(e) => onChange(e)}\n                      id=\"bar_no\"\n\n                      format=\"######\"\n                      type=\"tel\"\n                    />: <NumberFormat\n                      disabled\n                      customInput={TextField}\n                      size=\"small\"\n                      margin=\"normal\"\n                      value={bar_no}\n                      variant=\"outlined\"\n                      name=\"bar_no\"\n                      label=\"Bar #\"\n                      onChange={(e) => onChange(e)}\n                      id=\"bar_no\"\n                      format=\"######\"\n                      type=\"tel\"\n                    />}\n                   \n                </Grid>\n              </Grid>\n              <Box mt={4} mb={2}>\n                <Divider />\n                <Typography mt={2} component=\"h3\" color=\"primary\" variant=\"h5\">\n                  Contact Info\n                </Typography>\n              </Box>Admin\n              <Grid\n                container\n                spacing={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\" },\n                }}\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"street\"\n                    label=\"Street\"\n                    value={street}\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"street\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"suite\"\n                    value={suite}\n                    label=\"Suite\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"suite\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"city\"\n                    label=\"City\"\n                    value={city}\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"city\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"state\"\n                    label=\"State\"\n                    value={state}\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"state\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"#####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      value={zip}\n                      name=\"zip\"\n                      label=\"Zip\"\n                      type=\"tel\"\n                      onChange={(e) => onChange(e)}\n                      id=\"zip\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}> \n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"ext\"\n                      value={ext}\n                      label=\"+4\"\n                      type=\"tel\"\n                      onChange={(e) => onChange(e)}\n                      id=\"ext\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"p_email\"\n                    value={p_email}\n                    label=\"Personal Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"p_email\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <Box mt={1} ml={1}>\n                    <Button variant=\"contained\" color=\"primary\">\n                      Reset Password\n                    </Button>\n                  </Box>\n                </Grid>\n                <Grid item lg={3}>\n                  \n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                       size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"mobile\"\n                      value={mobile}\n                      label=\"Mobile #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"mobile\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                       size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"home\"\n                      value={home}\n                      label=\"Home #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"home\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"work_no\"\n                      value={work_no}\n                      label=\"Work #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"work_no\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n              \n                  <NumberFormat\n                    customInput={TextField}\n                    format=\"####\"\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"phone_ext\"\n                    value={phone_ext}\n                    label=\"Extesion\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"phone_ext\"\n                    />\n                </Grid>\n              </Grid>\n              <Grid item lg={12}>\n                <Box\n                  sx={{\n                    \"& .MuiButton-root\": { m: 1, mr:5 },\n                    float: \"right\",\n                    color:\"white\"\n                  }}\n                >\n                 <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    type=\"submit\"\n                    sx={{ color: \"white\" }}\n                    \n                  >\n                    Update\n                  </Button>\n                  \n                  <Button variant=\"contained\" color=\"warning\"sx={{color:\"#fff\"}} onClick={()=>handleDeactivate(data.id)}>\n                    {data.is_active === \"True\" ? 'Deactivate': 'Activate'}\n                  </Button>\n                  <Button variant=\"contained\" color=\"error\" sx={{color:\"#fff\"}} onClick={()=>handleDelete(data.id)}>\n                    Delete\n                  </Button>\n                </Box>\n              </Grid>\n       \n      </Box>\n    </Fragment>\n  );\n};\n\nexport default UpdateUser;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Table from \"@mui/material/Table\"\nimport TableCell from \"@mui/material/TableCell\"\nimport TableContainer from \"@mui/material/TableContainer\"\nimport TableHead from \"@mui/material/TableHead\"\nimport TableRow from \"@mui/material/TableRow\"\nimport TableBody from \"@mui/material/TableBody\"\nimport Switch from \"@mui/material/Switch\"\nimport Dialog from \"@mui/material/Dialog\"\nimport DialogActions from \"@mui/material/DialogActions\"\nimport DialogContent from \"@mui/material/DialogContent\"\nimport DialogTitle from \"@mui/material/DialogTitle\"\nimport Button from \"@mui/material/Button\"\nimport Box from \"@mui/material/Box\"\nimport Typography from \"@mui/material/Typography\"\nimport Stack from \"@mui/material/Stack\"\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CreateUser from \"./CreateUser\";\nimport {\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport { useLocation } from \"react-router-dom\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useToggle } from \"../../context/useToggle\";\nimport{ useDispatch} from \"react-redux\"\nimport UpdateUser from \"./UpdateUser\";\n\nconst User = () => {\n  const [usersData, setUsersData] = useState([]);\n  const [userId, setUserId] = useState(null)\n  const [isActive, setIsActive] = useToggle(false);\n  const [searchItem, setSearchItem] = useState(\"\")\n  const location = useLocation();\n\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [rateType, setRateType] = useState(\"\");\n\n  const dispatch = useDispatch()\n  \n  const handleChange = (event) => {\n    setRateType(event.target.value);\n  };\n  \n  const [open, setOpen] = useState(false);\n  const [open2, setOpen2] = useState(false);\n\n  const handleClickOpen = () => {\n    \n    setOpen(true);\n  };\n const handleClickOpen2 = (data) => {\n    setUserId(data)\n    setOpen2(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n const handleClose2 = () => {\n    setOpen2(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/members-list/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setUsersData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    if (location.state)  {\n      handleClose(location.state.params)\n    }\n    FetchData();\n  }, []);\n\n  \n  const showUsers = () => {\n    if (usersData.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return usersData.filter((val)=>{\n        if (searchItem === \"\"){\n          return val\n        } else if(val.first_name.toLowerCase().includes(searchItem.toLowerCase())) {\n          return val\n        }else if(val.last_name.toLowerCase().includes(searchItem.toLowerCase())) {\n          return val\n        }\n\n      }).map((data) => {if(isActive){\n        return (data.is_active === \"True\")? (<TableRow>\n          <TableCell>{data.first_name}</TableCell>\n          <TableCell>{data.last_name}</TableCell>\n          <TableCell>{data.c_email}</TableCell>\n          <TableCell>{data.role}</TableCell>\n          <TableCell>{data.group}</TableCell>\n          <TableCell>{data.last_login}</TableCell>\n          <TableCell>{(data.is_active === \"True\") ? \"active\":\"inactive\"}</TableCell>\n          <TableCell><Button onClick={()=>handleClickOpen2(data)}>View</Button></TableCell>\n          <TableCell></TableCell>\n        </TableRow>) : null\n      }\n    else return <TableRow>\n          <TableCell> {data.first_name}</TableCell>\n          <TableCell>{data.last_name}</TableCell>\n          <TableCell>{data.c_email}</TableCell>\n          <TableCell>{data.role}</TableCell>\n          <TableCell>{data.group}</TableCell>\n          <TableCell>{data.last_login}</TableCell>\n          <TableCell>{(data.is_active === \"True\") ? \"active\" : \"inactive\"}</TableCell>\n          <TableCell><Button onClick={()=>handleClickOpen2(data)}>View</Button></TableCell>\n          <TableCell></TableCell>\n        </TableRow>});\n  };\n\n  return (\n    <Fragment>\n      <Box mb={7} >\n        <Typography component=\"h4\" variant=\"h5\" color=\"primary\" mb={2}>\n          Manage Users\n        </Typography>\n        <Stack p={3} direction=\"row\" spacing={2} sx={{ float: \"right\" }}>\n          <Search sx={{ width: \"15rem\" }}>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange ={e => setSearchItem(e.target.value)}\n            />\n          </Search>\n          <Button\n            color=\"success\"\n            onClick={()=>handleClickOpen()}\n            variant=\"contained\"\n            sx={{ color: \"white\", background: \"#28c570\" }}\n          >\n            + Add User\n          </Button>\n          <Dialog\n           \n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth=\"true\"\n            maxWidth=\"xl\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New User\"}</DialogTitle>\n            <DialogContent>\n              <CreateUser/>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n            </DialogActions>\n          </Dialog>\n          <Dialog\n           \n            open={open2}\n            onClose={handleClose2}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth=\"true\"\n            maxWidth=\"xl\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New User\"}</DialogTitle>\n            <DialogContent>\n              <UpdateUser data={userId}/>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose2}>Close</Button>\n            </DialogActions>\n          </Dialog>\n        </Stack>\n\n        <TableContainer>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  <Typography color=\"white\">First Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Role</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Group</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Login</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Status</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Action</Typography>\n                </TableCell>\n                \n                <TableCell>\n                  <Switch\n                    color=\"success\"\n                    value={isActive}\n                    onChange={() => setIsActive()}\n                  />\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {!loading ? showUsers() : <Typography>Loading ...</Typography>}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default User;","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ManageUser from \"./ManageUser\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <ManageUser/>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst TimeList = () => {\n  const [timeData, setTimeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTimeData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <Box>\n        <LinkButton to=\"/ledgers\" sx={{ float: \"right\" }}>\n          Ledger Dashboard\n        </LinkButton>\n        <Box p={3}>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Ledger Dashbaord\n          </LinkButton>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Add Time\n          </LinkButton>\n          <LinkButton to=\"/ledger-list\" sx={{ float: \"right\" }}>\n            Ledger List\n          </LinkButton>\n          <LinkButton to=\"/ledger-documents\" sx={{ float: \"right\" }}>\n            Documents\n          </LinkButton>\n        </Box>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Add</TableCell>\n\n                <TableCell>Matter #</TableCell>\n                <TableCell>Matter Name</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Billable Time</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell>Category</TableCell>\n                <TableCell>Activity</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n              ? null\n              : timeData?.map((data) => {\n                  return (\n                    <TableBody id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n\n                      <TableCell>{data.conatact}</TableCell>\n                      <TableCell>{data.date}</TableCell>\n                      <TableCell>{data.time}</TableCell>\n                      <TableCell>{data.rate}</TableCell>\n                      <TableCell>{data.category}</TableCell>\n                      <TableCell>{data.sub_category}</TableCell>\n                    </TableBody>\n                  );\n                })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TimeList;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Switch, FormControlLabel } from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Search = () => {\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [searchData, setSearchData] = useState({\n    state: \"\",\n    city: \"\",\n    practice_area: \"\",\n    law_school: \"\",\n\n    undergrad_study: \"\",\n    lamguages: \"\",\n    admitted_state: \"\",\n    relocate: false,\n  });\n\n  const {\n    state,\n    city,\n    practice_area,\n    law_school,\n\n    undergrad_study,\n    lamguages,\n    admitted_state,\n    relocate,\n  } = searchData;\n\n  const onChange = (e) =>\n    setSearchData({ ...searchData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"number\"\n              min=\"0\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Longest tenure (months / years)\"\n              id=\"longest_tenure\"\n              name=\"longest_tenure\"\n              value={longestTenure}\n              type=\"text\"\n              onValueChange={(e) => setLongestTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Average tenure (months / years)\"\n              value={averageTenure}\n              id=\"average_tenure\"\n              name=\"average_tenure\"\n              type=\"text\"\n              onValueChange={(e) => setAverageTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time at Current Company (months / years)\"\n              id=\"current_tenure\"\n              name=\"current_tenure\"\n              value={currentTenure}\n              type=\"text\"\n              onValueChange={(e) => setCurrentTenure(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"admitted_state\"\n              label=\"admitted_state\"\n              type=\"text\"\n              value={admitted_state}\n              onChange={(e) => onChange(e)}\n              id=\"admitted_state\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={gradYear}\n              onValueChange={(e) => setGradYear(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"undergrad_study\"\n              label=\"undergrad_study\"\n              step=\"0.01\"\n              type=\"text\"\n              value={undergrad_study}\n              onChange={(e) => onChange(e)}\n              id=\"undergrad_study\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"practice_area\"\n              label=\"practice_area\"\n              type=\"text\"\n              value={practice_area}\n              onChange={(e) => onChange(e)}\n              id=\"practice_area\"\n              disabled\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance Date\"\n              id=\"bar_admit_date\"\n              name=\"bar_admit_date\"\n              value={barDate}\n              onValueChange={(e) => setBarDate(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"lamguages\"\n              label=\"lamguages\"\n              type=\"text\"\n              value={lamguages}\n              onChange={(e) => onChange(e)}\n              id=\"lamguages\"\n            />\n            {/* <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Apply\n            </Button> */}\n            <Box m={3}>\n              <LinkButton to=\"/job-result\" sx={{ float: \"right\" }}>\n                Apply\n              </LinkButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Search;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\n// import axios from \"axios\";\n// import { CONFIG } from \"../../api/MatterApi\";\n// import { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Result = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(\"\");\n  // const [status, setStatus] = useState(\"\");\n  //   const FetchData = () => {\n  //     axios\n  //       .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n  //       .then((res) => {\n  //         setLoading(false);\n  //         setStatus(res.statusText);\n  //         setActivityData(res.data);\n  //       })\n  //       .catch((err) => {\n  //         setLoading(false);\n  //         setStatus(err.statusText);\n  //       });\n  //   };\n  //   useEffect(() => {\n  //     FetchData();\n  //   }, []);\n  return (\n    <Fragment>\n      <Box>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Rate</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Name</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">City</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">State</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Active</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Grage Year</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practice Area</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Relocation</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practicing</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading ? (\n              <TableBody>\n                <TableRow>\n                  <TableCell>74%</TableCell>\n                  <TableCell>Smith, John</TableCell>\n                  <TableCell>San Diego</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2000</TableCell>\n                  <TableCell>Criminal</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>22y - 03M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>72%</TableCell>\n                  <TableCell>Cassidy, Butch</TableCell>\n                  <TableCell>Los Angeles</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>2021</TableCell>\n                  <TableCell>Transctional</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>0y - 02M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>50%</TableCell>\n                  <TableCell>Short, Mart</TableCell>\n                  <TableCell>Sacramento</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2013</TableCell>\n                  <TableCell>Civil</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>06y - 11M</TableCell>\n                </TableRow>\n              </TableBody>\n            ) : (\n              activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })\n            )} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Result;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  FormControlLabel,\n  FormGroup,\n  Checkbox,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Saved = () => {\n  const [pickTime, setPickTime] = useState(new Date(\"2021-12-01T21:00:00\"));\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [jobData, setJobData] = useState({\n    name: \"\",\n    state: \"\",\n    city: \"\",\n    email: \"\",\n    mobile: \"\",\n    home: \"\",\n    law_school: \"\",\n    grad_year: \"\",\n    bar_adm_year: \"\",\n    practice_area: \"\",\n    mail_add: \"\",\n    relocate: false,\n    date: \"\",\n    time: \"\",\n    link: \"\",\n    notes: \"\",\n    file: \"\",\n  });\n\n  const {\n    name,\n    state,\n    city,\n    email,\n    mobile,\n    home,\n    law_school,\n    grad_year,\n    bar_adm_year,\n    practice_area,\n    mail_add,\n    relocate,\n    date,\n    time,\n    link,\n    notes,\n    file,\n  } = jobData;\n\n  const onChange = (e) =>\n    setJobData({ ...jobData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <FormGroup aria-label=\"position\" row>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Save\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Contacted\"\n                labelPlacement=\"start\"\n              />\n              <Typography component=\"label\" m={1}>\n                Interested :\n              </Typography>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Yes\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"No\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Interviewed\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Accept\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Reject\"\n                labelPlacement=\"start\"\n              />\n              <Box ml={3}>\n                <Typography component=\"h4\" color=\"success\" variant=\"h5\">\n                  Overall Score: 74%\n                </Typography>\n              </Box>\n            </FormGroup>\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"name\"\n              label=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(e) => onChange(e)}\n              id=\"name\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email\"\n              label=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              id=\"email\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobile}\n              onValueChange={(value) => onChange(value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={home}\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={grad_year}\n              onValueChange={(value) => onChange(value)}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance\"\n              id=\"bar_adm_year\"\n              name=\"bar_adm_year\"\n              value={bar_adm_year}\n              type=\"text\"\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"mail_add\"\n              label=\"mail_add\"\n              type=\"text\"\n              value={mail_add}\n              onChange={(e) => onChange(e)}\n              id=\"mail_add\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xs={4}>\n                <Box m={1}>\n                  <Typography component=\"lable\"> Writing Sample </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <TimePicker\n                    label=\"Pick Time\"\n                    name=\"picktime\"\n                    id=\"picktime\"\n                    value={pickTime}\n                    onChange={(e) => {\n                      setPickTime(e);\n                    }}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    inputFormat=\"yyyy-MM-dd\"\n                    mask=\"____-__-__\"\n                    label=\"Pick Date\"\n                    value={pickDate}\n                    name=\"pickdate\"\n                    id=\"pickdate\"\n                    onChange={(e) => setPickDate(e)}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n\n                <TextField\n                  size=\"small\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"link\"\n                  type=\"link\"\n                  defaultValue=\"2021-12-01\"\n                  value={link}\n                  onChange={(e) => onChange(e)}\n                  id=\"link\"\n                />\n              </Grid>\n              <Grid item xs={8}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={8}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"notes\"\n                  type=\"text\"\n                  value=\"Notes ...\"\n                  id=\"notes\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Saved;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport Search from \"./Search\";\nimport Result from \"./Result\";\nimport Saved from \"./Saved\";\nconst index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Search\">\n          <Search />\n        </div>\n        <div label=\"Result\">\n          <Result />\n        </div>\n        <div label=\"Saved\">\n          <Saved />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default index;\n","/** @format */\n\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport permissionService from \"../services/permissionService\";\n\nconst initialState = {\n\tpermissions: [],\n\tisError: false,\n\tisSuccess: false,\n\tisLoading: false,\n\tmessage: \"\",\n\tall: false,\n};\n\n// Create new permissions\nexport const createPermission = createAsyncThunk(\n\t\"permissions/create\",\n\tasync (permissionData, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.createPermission(permissionData);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\n// Get user permissions\nexport const getPermissions = createAsyncThunk(\n\t\"permissions/getAll\",\n\tasync (id, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.getPermissions(id);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\nexport const updatePermission = createAsyncThunk(\n\t\"permissions/update\",\n\tasync ({id, value}, thunkAPI) => {\n\n\t\ttry {\n\t\t\treturn await permissionService.updatePermission(id, value);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\n// Delete user permission\nexport const deletePermission = createAsyncThunk(\n\t\"permissions/delete\",\n\tasync (id, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.deletePermission(id);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\nexport const permissionSlice = createSlice({\n\tname: \"permission\",\n\tinitialState,\n\treducers: {\n\t\treset: (state) => initialState,\n\t\t\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder\n\t\t\t.addCase(createPermission.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(createPermission.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions.push(action.payload);\n\t\t\t})\n\t\t\t.addCase(createPermission.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(getPermissions.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(getPermissions.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions = action.payload;\n\t\t\t})\n\t\t\t.addCase(getPermissions.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(updatePermission.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(updatePermission.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\t\n\t\t\t\tgetPermissions()\n\n\t\t\t})\n\t\t\t.addCase(updatePermission.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(deletePermission.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(deletePermission.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions = state.permissions.filter(\n\t\t\t\t\t(permission) => permission._id !== action.payload.id,\n\t\t\t\t);\n\t\t\t})\n\t\t\t.addCase(deletePermission.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t});\n\t},\n});\n\nexport const {\n\treset\n} = permissionSlice.actions;\nexport default permissionSlice.reducer;\n","/** @format */\n\nimport React, { Fragment,  useEffect, useState } from \"react\";\nimport axios from \"axios\"\nimport { CONFIG } from \"../../api/MatterApi\";\nimport Table from \"@mui/material/Table\"\nimport TableCell from \"@mui/material/TableCell\"\nimport TableBody from \"@mui/material/TableBody\"\nimport TableContainer from \"@mui/material/TableContainer\"\nimport TableHead from \"@mui/material/TableHead\"\nimport TableRow from \"@mui/material/TableRow\"\nimport Button from \"@mui/material/Button\"\nimport Grid from \"@mui/material/Grid\"\nimport Box from \"@mui/material/Box\"\nimport Typography from \"@mui/material/Typography\"\nimport IconButton from \"@mui/material/IconButton\"\nimport RectangleIcon from '@mui/icons-material/Rectangle';\nimport { useToggle } from \"../../context/useToggle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport RolePermissions from \"./RolePermissions\";\nimport { getPermissions } from \"../../redux/features/permissionSlice\";\nimport { getRole } from \"../../redux/features/roleSlice\";\n\n\nconst RoleFunctions = ({id}) => {\n    const role  = useSelector((state)=> state.role.role)\n    const [isAll, setIsAll] = useState(null)\n    const dispatch = useDispatch()\n\n    const updateFunction=(data)=>{\n      let is_set = false\n      if (data.is_set === false){\n        is_set = true\n      }\n      \n      const body =  JSON.stringify({is_set})\n      axios.patch(\n        `${process.env.REACT_APP_API_URL}/user/role-function-permission-single/${data.id}/`,\n        body, \n        CONFIG,\n      ).then((res)=>{\n        dispatch(getRole(id))\n        console.log(res)\n      }).catch((err)=>{\n        console.log(err)\n      });\n    }\n\n  return (\n    <>\n      {role.role_functions.map((item)=>(\n        <TableRow>\n        \t<TableCell>\n              <Typography >{item.name}</Typography>\n            </TableCell>\n            {item.function_permission.map((permission)=>(\n              <>\n              { permission.name === \"Contact\" ? setIsAll(isAll + permission.is_set): null}\n              <TableCell>\n                <Button\n                  onClick={()=>updateFunction(permission)}\n                  sx={\n                    permission.is_set\n                      ? {\n                          \"color\": \"#4BB543\",\n                          \"backgroundColor\": \"#4BB543\",\n                          \"&:hover\": {\n                            backgroundColor: \"#4BB545\",\n                            color: \"#4BB545\",\n                          },\n                        }\n                      : {\n                          \"color\": \"#D3D3D3\",\n                          \"backgroundColor\": \"#D3D3D3\",\n                          \"&:hover\": {\n                            backgroundColor: \"#D3D3D3\",\n                            color: \"#D3D3D3\",\n                          },\n                        }\n                  }\n                  \n                  size='large'\n                  aria-label='toggle'>\n                  <RectangleIcon />\n                </Button>\n              </TableCell>\n              </>\n            ))}\n            {item.name === \"Contact\" ?\n              <TableCell>\n                <Button\n                    sx={\n                      isAll ? {\n                            \"color\": \"#4BB543\",\n                            \"backgroundColor\": \"#4BB543\",\n                            \"&:hover\": {\n                              backgroundColor: \"#4BB545\",\n                              color: \"#4BB545\",\n                            },\n                          }\n                        : {\n                            \"color\": \"#D3D3D3\",\n                            \"backgroundColor\": \"#D3D3D3\",\n                            \"&:hover\": {\n                              backgroundColor: \"#D3D3D3\",\n                              color: \"#D3D3D3\",\n                            },\n                          }\n                    }\n                    // onClick={()=>settingAll()}\n                    size='large'\n                    aria-label='toggle'>\n                    <RectangleIcon />\n                  </Button>\n                </TableCell>\n                : null}\n          </TableRow>\n            \n      ))}\n      \t\n    </>\n  )\n}\n\nexport default RoleFunctions\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Table from \"@mui/material/Table\"\nimport TableCell from \"@mui/material/TableCell\"\nimport TableBody from \"@mui/material/TableBody\"\nimport TableContainer from \"@mui/material/TableContainer\"\nimport TableHead from \"@mui/material/TableHead\"\nimport TableRow from \"@mui/material/TableRow\"\nimport Button from \"@mui/material/Button\"\nimport List from \"@mui/material/List\"\nimport Grid from \"@mui/material/Grid\"\nimport Box from \"@mui/material/Box\"\nimport Typography from \"@mui/material/Typography\"\nimport ListItem from \"@mui/material/ListItem\"\nimport IconButton from \"@mui/material/IconButton\"\nimport Dialog from \"@mui/material/Dialog\"\nimport DialogActions from \"@mui/material/DialogActions\"\nimport DialogContent from \"@mui/material/DialogContent\"\nimport DialogTitle from \"@mui/material/DialogTitle\"\nimport TextField from \"@mui/material/TextField\"\nimport Paper from \"@mui/material/Paper\"\nimport RoleFunctions from \"./RoleFunctions\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {getRole} from \"../../redux/features/roleSlice\";\nimport { ListItemText } from \"@mui/material\";\n\n\nconst ManageRole = () => {\n\tconst role  = useSelector((state)=> state.role.role)\n\tconst dispatch = useDispatch();\n\tconst { permissions } = useSelector(\n\t\t(state) => state.permissions,\n\t);\n\n\tconst [roles, setRoles] = useState([]);\n\n\tconst [loading, setLoading] = useState(true);\n\tconst [error, setError] = useState(\"\");\n\tconst [status, setStatus] = useState(\"\");\n\n\tconst [formData, setFormData] = useState({\n\t\tname: \"\",\n\t});\n\n\tconst { name } = formData;\n\n\tconst onChange = (e) =>\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n\n\tconst [open, setOpen] = useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\tconst FetchData = () => {\n\t\taxios\n\t\t\t.get(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, CONFIG)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetStatus(res.statusText);\n\t\t\t\tsetRoles(res.data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetError(err.message);\n\t\t\t});\n\t};\n\tuseEffect(() => {\n\t\tFetchData();\n\t\t\t\t\n\t}, []);\n\tconst handleDelete = (id) => {\n\t\taxios\n\t\t\t.delete(`${process.env.REACT_APP_API_URL}/user/auth/roles/${id}/`, CONFIG)\n\t\t\t.then((res) => {\n\t\t\t\tFetchData();\n\t\t\t\treturn (\n\t\t\t\t\t<ActionAlerts\n\t\t\t\t\t\tvalue={{ status: res.statusText, message: \"Success\" }}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t});\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst body = JSON.stringify({ name });\n\t\taxios\n\t\t\t.post(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, body, CONFIG)\n\t\t\t.then((res) => {\n\t\t\t\tFetchData();\n\t\t\t\treturn (\n\t\t\t\t\t<ActionAlerts\n\t\t\t\t\t\tvalue={{ status: res.statusText, message: \"Success\" }}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tFetchData();\n\t\t\t\treturn (\n\t\t\t\t\t<ActionAlerts\n\t\t\t\t\t\tvalue={{ status: err.statusText, message: \"Success\" }}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t});\n\t};\n\treturn (\n\t\t<Fragment>\n\t\t\t<Grid container spacing={2}>\n\t\t\t\t<Grid item lg={12}></Grid>\n\t\t\t\t<Grid item lg={2} component={Paper} elevation={5}>\n\t\t\t\t\t<Box p={2}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tonClick={handleClickOpen}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tborderRadius: \"0.5rem\",\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t+ New Role\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\tcomponent='form'\n\t\t\t\t\t\t\tValidate\n\t\t\t\t\t\t\tonSubmit={(e) => handleSubmit(e)}\n\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\n\t\t\t\t\t\t\taria-describedby='alert-dialog-description'>\n\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>\n\t\t\t\t\t\t\t\t{\"Add New Role\"}\n\t\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\tlabel='Role Name'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\t\t\tid='name'\n\t\t\t\t\t\t\t\t\tautoComplete='name'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t<Button onClick={handleClose}>Close</Button>\n\t\t\t\t\t\t\t\t<Button type='submit' autoFocus>\n\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t<Box >\n\t\t\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\troles.map((data, index) => (\n\t\t\t\t\t\t\t\t<ListItem disablePadding key={index}\n\t\t\t\t\t\t\t\t\tsecondaryAction={\n\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\tedge=\"end\" \n\t\t\t\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\t\t\t\tvalue={data.id}\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleDelete(data.id)}\n\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"0.5rem\",\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t<ClearIcon />\n\t\t\t\t\t\t\t\t\t\t</IconButton>}>\n\t\t\t\t\t\t\t\t\t<ListItemText>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tsx={data.id === role.id? { \n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#796ef0\", \n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\", \n\t\t\t\t\t\t\t\t\t\t\t\twhiteSpace: \"wrap\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#796ef0\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\t\t}, }\n\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t\t\t\tonClick={()=>dispatch(getRole(data.id))}>\n\t\t\t\t\t\t\t\t\t\t\t{data.name}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</ListItemText>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Typography>Loading ...</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item lg={10}>\n\t\t\t\t\t<TableContainer sx={{ overflowX: \"auto\" }}>\n\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\"fontSize\": \"1rem\",\n\t\t\t\t\t\t\t\t\"&MuiTableCell\": {\n\t\t\t\t\t\t\t\t\tborder: \"solid 2px black\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t\t<TableRow bgColor='#796ef0'>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Function</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>View </Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Edit</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Create</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Delete</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Contacts</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Team</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Office</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Region</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>All</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t{role ? <RoleFunctions id={role.id}/>: \t<>please selete a role</>}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</TableContainer>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Fragment>\n\t);\n};\n\nexport default ManageRole;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@mui/material/Button\"\nimport Box from \"@mui/material/Box\"\nimport List from \"@mui/material/List\"\nimport Table from \"@mui/material/Table\"\nimport Paper from \"@mui/material/Paper\"\nimport Grid from \"@mui/material/Grid\"\nimport TableCell from \"@mui/material/TableCell\"\nimport TableContainer from \"@mui/material/TableContainer\"\nimport TableHead from \"@mui/material/TableHead\"\nimport TableRow from \"@mui/material/TableRow\"\nimport TableBody from \"@mui/material/TableBody\"\nimport ListItem from \"@mui/material/ListItem\"\nimport ListItemText from \"@mui/material/ListItemText\"\nimport Typography from \"@mui/material/Typography\"\nimport Dialog from \"@mui/material/Dialog\"\nimport DialogActions from \"@mui/material/DialogActions\"\nimport DialogContent from \"@mui/material/DialogContent\"\nimport DialogTitle from \"@mui/material/DialogTitle\"\nimport Stack from \"@mui/material/Stack\"\nimport TextField from \"@mui/material/TextField\"\nimport FormControl from \"@mui/material/FormControl\"\nimport InputLabel from \"@mui/material/InputLabel\"\nimport Select from \"@mui/material/Select\"\nimport MenuItem from \"@mui/material/MenuItem\"\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst ManageUserGroup = () => {\n  const [filter, setFilter] = useState(\"\");\n  const [searchItem, setSearchItem] = useState(\"\")\n  const [selectedUser, setSelectedUser] = useState({})\n\n  const handleChange = (event) => {\n    setFilter(event.target.value);\n  };\n  const [group, setGroup] = useState(null);\n  const [groups, setGroups] = useState([]);\n  const [usersData, setUsersData] = useState([]);\n  const [roles, setRoles] = useState([]);\n\tconst [role, setRole] = useState(null);\n  const [error, setError] = useState(\"null\")\n\tconst [loadingRole, setLoadingRole] = useState(true);\n  const [loading, setLoading] = useState(true);\n  const [loadingUser, setLoadingUser] = useState(true);\n  const [status, setStatus] = useState(\"\")\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  \n  const [openView, setOpenView] = useState(false);\n\n  const handleClickOpenView = (data) => {\n    setSelectedUser(data)\n    setRole(data.role)\n    setGroup(data.group)\n    setOpenView(true);\n  };\n\n  const handleCloseView = () => {\n    setOpenView(false);\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchRoleData = () => {\n\t\taxios\n\t\t\t.get(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, CONFIG)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tsetLoadingRole(false);\n\t\t\t\tsetStatus(res.statusText);\n\t\t\t\tsetRoles(res.data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetLoadingRole(false);\n\t\t\t\tsetError(err.message);\n\t\t\t});\n\t};\n  const FetchUserData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        // setLoading(false);\n        setStatus(res.statusText);\n        setUsersData(res.data);\n        setLoadingUser(false);\n        console.log(usersData)\n\n      })\n      .catch((err) => {\n        setLoadingUser(false);\n      });\n  };\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/groups/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setGroups(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n    FetchUserData();\n    FetchRoleData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/user/auth/groups/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmitUpdate = (e) => {\n  \n    const body = JSON.stringify({ group, role });\n    axios\n      .patch(`${process.env.REACT_APP_API_URL}/api/member-update/${selectedUser.id}/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/user/auth/groups/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const showGroup = () => {\n    if (groups.length === 0) {\n      return <p> No data found...</p>;\n    } else {\n      return groups.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText color=\"primary\"sx={{textTransform:\"uppercase\"}}>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                  \n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n    }\n  };\n\n  const showUser = () => {\n    if (usersData.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return usersData.filter((val)=>{\n        if (searchItem === \"\"){\n          return val\n        } else if((filter === \"group\") && (val.group.toLowerCase().includes(searchItem.toLowerCase()))) {\n          return val\n        }else if((filter === \"role\") &&(val.role.toLowerCase().includes(searchItem.toLowerCase()))){\n          return val\n        }\n        else if((filter === \"name\") &&(val.last_name.toLowerCase().includes(searchItem.toLowerCase()))){\n          return val\n        }\n        else if((filter === \"name\") &&(val.first_name.toLowerCase().includes(searchItem.toLowerCase()))){\n          return val\n        }\n      }).map((data) => \n          <TableRow>\n            <TableCell>{data.first_name}</TableCell>\n            <TableCell>{data.last_name} </TableCell>\n            <TableCell>{data.role}</TableCell>\n            <TableCell>{data.group}</TableCell>\n            <TableCell>\n                   <Button onClick={()=>handleClickOpenView(data)}> View</Button>\n            </TableCell>\n          </TableRow>\n  );\n    \n  };\n  return (\n    <Fragment>\n      <Grid container spacing={3}>\n        <Grid item lg={12}>\n          <Grid container spacing={3} direction=\"row\">\n            <Grid item lg={3}>\n              <Typography variant=\"h5\" component=\"h5\" m={1} color=\"primary\">\n                Manage Group\n              </Typography>\n            </Grid>\n            <Grid item lg={9}>\n              <Stack direction=\"row\" sx={{ float: \"right\" }}>\n                <Typography m={2} component=\"span\" color=\"primary\">\n                  Filter & Sort By\n                </Typography>\n                <FormControl sx={{ width: \"10rem\", height: \"2.5rem\" }}>\n                  <InputLabel id=\"demo-simple-select-label\" color=\"primary\">\n                    Custom Sort\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={filter}\n                    label=\"Age\"\n                    onChange={handleChange}\n                  >\n                    <MenuItem value=\"name\">By Name</MenuItem>\n                    <MenuItem value=\"role\">By Role</MenuItem>\n                    <MenuItem value=\"group\">By Group</MenuItem>\n                  </Select>\n                </FormControl>\n                <Search sx={{ width: \"20rem\", height: \"2.5rem\", m: 1 }}>\n                  <SearchIconWrapper>\n                    <SearchIcon />\n                  </SearchIconWrapper>\n                  <StyledInputBase\n                    placeholder=\"Search…\"\n                    inputProps={{ \"aria-label\": \"search\" }}\n                    onChange ={e => setSearchItem(e.target.value)}\n                  />\n                </Search>\n              </Stack>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3} component={Paper} p={3} elevation={3}>\n          <Typography\n            variant=\"h5\"\n            component=\"h5\"\n            color=\"primary\"\n            align=\"center\"\n          >\n            Groups\n          </Typography>\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            fullWidth\n            sx={{\n              borderRadius: \"0.5rem\",\n            }}\n          >\n            + New Group\n          </Button>\n          <Dialog\n            open={openView}\n            onClose={handleCloseView}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth=\"true\"\n            maxWidth=\"md\"\n            sx={{\n              alignContent:\"center\"\n            }}\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Update Group & Role\"}</DialogTitle>\n            <DialogContent>\n             \n              <Box component=\"form\" autoComplete=\"off\"\n                    Validate onSubmit={(e) => handleSubmitUpdate(e)}>\n                <Typography component=\"h5\" variant=\"h5\">\n                  {selectedUser.first_name } {selectedUser.last_name }\n                </Typography>\n        \n                  <Grid\n                        container\n                        spacing={2}\n                        mt={2}\n                        sx={{\n                          \"& .MuiTextField-root\": { m: 1, width: \"14rem\", \"input::-webkit-outer-spin-button\": {\n                            webkitAappearance: \"none\"\n                          },  },\n                        }}\n\n                      >    \n                        <Grid item >\n                          <TextField\n                            select\n                            size=\"small\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            value = {role}\n                            name=\"role\"\n                            label=\"Role\"\n                            onChange={(e) => setRole(e.target.value)}\n                            id=\"role\"\n                          >\n                            {!loading ? (\n                              roles.map((data) => (\n                                <MenuItem key={data.id} value={data.name}>\n                                  {data.name}\n                                </MenuItem>\n                              ))\n                            ) : (\n                              <span>Loading ...</span>\n                            )}\n                          </TextField>\n                        </Grid>\n                        <Grid item >\n                          <TextField\n                    \n                            select\n                            size=\"small\"\n                            margin=\"normal\"\n                            value={group}\n                            variant=\"outlined\"\n                            name=\"group\"\n                            label=\"Group\"\n                            type=\"text\"\n                            onChange={(e) => setGroup(e.target.value)}\n                            id=\"group\"\n                          >\n                            {!loading ? (\n                              groups.map((data) => (\n                                <MenuItem key={data.id} value={data.name}>\n                                  {data.name}\n                                </MenuItem>\n                              ))\n                            ) : (\n                              <span>Loading ...</span>\n                            )}\n                          </TextField>\n                        </Grid>\n                        \n                        \n                      </Grid>\n\n                      <Grid item >\n                        <Box\n                          sx={{\n                            \"& .MuiButton-root\": { m: 1, mr:5 },\n                            float: \"right\",\n                            color:\"white\"\n                          }}\n                        >\n                        <Button\n                            variant=\"contained\"\n                            color=\"success\"\n                            type=\"submit\"\n                            sx={{ color: \"white\" }}\n                            \n                          >\n                            Update\n                          </Button>\n                        </Box>\n                      </Grid>\n              \n              </Box>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseView}>Close</Button>\n            </DialogActions>\n          </Dialog>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New Group\"}</DialogTitle>\n            <DialogContent>\n              <TextField\n                required\n                fullWidth\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"name\"\n                label=\"Group Name\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n              <Button type=\"submit\" autoFocus>\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {!loading ? showGroup() : <Typography>Loading ...</Typography>}\n        </Grid>\n        <Grid item lg={9}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow bgColor=\"#796ef0\">\n                  <TableCell>\n                    <Typography color=\"white\">First Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Last Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Role</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Group</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Action</Typography>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>{!loadingUser ? showUser() : <>Loading.. </>}</TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item lg={12}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"success\" sx={{ color: \"white\" }}>\n              Done\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageUserGroup;\n","/** @format */\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nimport { Provider } from \"react-redux\";\n\nimport store, { persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport Layout from \"./hocs/Layout\";\n\nimport PrivateRoutes from \"./utils/PrivateRoute\";\n\nimport { UserProvider } from \"./context/User\";\n\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"./hocs/Theme\";\n\nimport Home from \"./containers/Home\";\n\n// Authentication links\nimport Login from \"./containers/Auth/Login\";\nimport Signup from \"./containers/Auth/Signup\";\n\nimport Profile from \"./components/Profile/Profile\";\nimport Company from \"./components/Profile/Company\";\n\nimport Matter from \"./components/Matter\";\n\nimport Matters from \"./containers/Matters/Matters\";\nimport MatterDetail from \"./components/Matter/MatterDetail\";\nimport NewMatter from \"./components/Matter/NewMatter\";\n\nimport Invoice from \"./components/Invoice\";\n\nimport CreateInvoice from \"./components/Invoice/CreateInvoice\";\n\nimport Payment from \"./components/Invoice/Payment\";\nimport ManageCategory from \"./components/Category/ManageCategory\";\n\nimport User from \"./components/User\";\n\nimport Time from \"./components/Ledger/Time\";\nimport TimeList from \"./components/Ledger/TimeList\";\n\nimport Ledger from \"./components/Ledger\";\n\nimport LedgerTImeList from \"./components/Ledger/LedgerTImeList\";\nimport LedgerActivity from \"./components/Ledger/LedgerActivity\";\n\nimport Tasks from \"./components/Tasks\";\nimport CreateTask from \"./components/Tasks/CreateTask\";\nimport ViewTasks from \"./components/Tasks/ViewTasks\";\nimport LedgerDoc from \"./components/Ledger/LedgerDoc\";\n\nimport Employee from \"./components/Employee\";\nimport Templates from \"./components/Template/Templates\";\n\nimport Contact from \"./components/Contact/Contact\";\nimport UserRole from \"./components/User/UserRole\";\nimport ManageRole from \"./components/User/ManageRole\";\nimport ManageUserGroup from \"./components/User/ManageUserGroup\";\nimport \"./styles/main.css\"\n\nconst App = () => {\n  const alertOptions = {\n    timeout: 3000,\n    position: \"top center\",\n  };\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <UserProvider>\n          <ThemeProvider theme={theme}>\n            <AlertProvider template={AlertTemplate} {...alertOptions}>\n              <Router>\n                <Layout>\n                  <Switch>\n                    {/* loging regierter routes */}\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/signup\" component={Signup} />\n\n                    {/* private route after login  */}\n\n                    <PrivateRoutes exact path=\"/\" component={Home} />\n                    <PrivateRoutes path=\"/profile\" component={Profile} />\n                    <PrivateRoutes path=\"/company-detail\" component={Company} />\n\n                    <PrivateRoutes\n                      path=\"/matter-dashboard\"\n                      component={Matter}\n                    />\n                    <PrivateRoutes path=\"/matters\" component={Matters} />\n                    <PrivateRoutes\n                      path=\"/matter-detail\"\n                      component={MatterDetail}\n                    />\n                    <PrivateRoutes\n                      path=\"/create-matter\"\n                      component={NewMatter}\n                    />\n\n                    <PrivateRoutes path=\"/invoices\" component={Invoice} />\n                    <PrivateRoutes\n                      path=\"/create-invoice\" \n                      component={CreateInvoice}\n                    />\n                    <PrivateRoutes path=\"/recive-invoice\" component={Payment} />\n\n                    {/* <PrivateRoutes path=\"/create-user\" component={CreateUser} /> */}\n                    <PrivateRoutes path=\"/users\" component={User} />\n                    <PrivateRoutes path=\"/user-roles\" component={ManageRole} />\n                    <PrivateRoutes\n                      path=\"/user-groups\"\n                      component={ManageUserGroup}\n                    />\n\n                    <PrivateRoutes\n                      path=\"/manage-categories\"\n                      component={ManageCategory}\n                    />\n                    <PrivateRoutes\n                      path=\"/ledger-documents\"\n                      component={LedgerDoc}\n                    />\n                    <PrivateRoutes path=\"/time\" component={Time} />\n                    <PrivateRoutes path=\"/time-list\" component={TimeList} />\n                    <PrivateRoutes path=\"/ledgers\" component={Ledger} />\n                    <PrivateRoutes\n                      path=\"/ledger-list\"\n                      component={LedgerTImeList}\n                    />\n                    <PrivateRoutes\n                      path=\"/activity-list\"\n                      component={LedgerActivity}\n                    />\n\n                    <PrivateRoutes path=\"/tasks\" component={Tasks} />\n                    <PrivateRoutes path=\"/create-task\" component={CreateTask} />\n                    <PrivateRoutes path=\"/view-tasks\" component={ViewTasks} />\n\n                    <PrivateRoutes\n                      path=\"/employee-search\"\n                      component={Employee}\n                    />\n\n                    <PrivateRoutes path=\"/templates\" component={Templates} />\n                    <PrivateRoutes path=\"/contact\" component={Contact} />\n                  </Switch>\n                </Layout>\n              </Router>\n            </AlertProvider>\n          </ThemeProvider>\n        </UserProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  revenueIn: true,\n  revenueOut: true,\n  newCustomer: true,\n  lostCustomer: true,\n  newAccount: true,\n  appointment: true,\n  marketing: true,\n  empOversite: true,\n  emails: true,\n  calls: true,\n  map: true,\n  display: true,\n};\n\nconst sidebarSlice = createSlice({\n  name: \"sidebar\",\n  initialState,\n  reducers: {\n    isDisplay: (state) => {\n      state.display = !state.display;\n    },\n    hideSidebar: (state) => {\n      state.display = false;\n    },\n    showSidebar: (state) => {\n      state.display = true;\n    },\n    // manageRoleActive: (state) => {\n    //   state.manageRole = !state.manageRole;\n    // },\n    // manageUserActive: (state) => {\n    //   state.manageUser = !state.manageUser;\n    // },\n    // manageGroupActive: (state) => {\n    //   state.manageGroup = !state.manageGroup;\n    // },\n    revenueInActive: (state) => {\n      state.revenueIn = !state.revenueIn;\n    },\n    revenueOutActive: (state) => {\n      state.revenueOut = !state.revenueOut;\n    },\n    newCustomerActive: (state) => {\n      state.newCustomer = !state.newCustomer;\n    },\n    lostCustomerActive: (state) => {\n      state.lostCustomer = !state.lostCustomer;\n    },\n    newAccountActive: (state) => {\n      state.newAccount = !state.newAccount;\n    },\n    appointmentActive: (state) => {\n      state.appointment = !state.appointment;\n    },\n    marketingActive: (state) => {\n      state.marketing = !state.marketing;\n    },\n    empOversiteActive: (state) => {\n      state.empOversite = !state.empOversite;\n    },\n    emailsActive: (state) => {\n      state.emails = !state.emails;\n    },\n    callsActive: (state) => {\n      state.calls = !state.calls;\n    },\n    mapActive: (state) => {\n      state.map = !state.map;\n    },\n  },\n});\n\nexport const {\n  isDisplay,\n  // manageRoleActive,\n  // manageGroupActive,\n  // manageUserActive,\n  hideSidebar,\n  showSidebar,\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} = sidebarSlice.actions;\nexport default sidebarSlice.reducer;\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { Responsive as ResponsiveGridLayout } from \"react-grid-layout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withSize } from \"react-sizeme\";\n\nimport {\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} from \"../../../../redux/features/sidebarSlice\";\n\nimport Widget from \"./Widget\";\n\nconst originalItems = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\"];\n\nconst initialLayouts = {\n  lg: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  md: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  sm: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  xs: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 3 },\n    { i: \"b\", x: 0, y: 4, w: 2, h: 3 },\n    { i: \"c\", x: 0, y: 8, w: 4, h: 6 },\n    { i: \"d\", x: 0, y: 12, w: 4, h: 6 },\n\n    { i: \"e\", x: 0, y: 18, w: 5, h: 6 },\n    { i: \"f\", x: 0, y: 24, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 30, w: 3, h: 4 },\n    { i: \"h\", x: 0, y: 36, w: 3, h: 4 },\n    { i: \"i\", x: 0, y: 42, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 48, w: 8, h: 5 },\n    { i: \"k\", x: 0, y: 53, w: 4, h: 5 },\n  ],\n  xxs: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 3 },\n    { i: \"b\", x: 0, y: 4, w: 2, h: 3 },\n    { i: \"c\", x: 0, y: 8, w: 4, h: 6 },\n    { i: \"d\", x: 0, y: 12, w: 4, h: 6 },\n\n    { i: \"e\", x: 0, y: 18, w: 5, h: 6 },\n    { i: \"f\", x: 0, y: 24, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 30, w: 3, h: 4 },\n    { i: \"h\", x: 0, y: 36, w: 3, h: 4 },\n    { i: \"i\", x: 0, y: 42, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 48, w: 8, h: 5 },\n    { i: \"k\", x: 0, y: 53, w: 4, h: 4 },\n  ],\n};\n\nfunction Content({ size: { width } }) {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  const components = {\n    a: sidebar.revenueIn,\n    b: sidebar.revenueOut,\n    c: sidebar.newCustomer,\n    d: sidebar.lostCustomer,\n    e: sidebar.newAccount,\n    f: sidebar.map,\n    g: sidebar.empOversite,\n    h: sidebar.calls,\n    i: sidebar.appointment,\n    j: sidebar.marketing,\n    k: sidebar.emails,\n  };\n  const fnCall = {\n    a: revenueInActive(),\n    b: revenueOutActive(),\n    c: newCustomerActive(),\n    d: lostCustomerActive(),\n    e: newAccountActive(),\n    f: mapActive(),\n    g: empOversiteActive(),\n    h: callsActive(),\n    i: appointmentActive(),\n    j: marketingActive(),\n    k: emailsActive(),\n  };\n  const [items, setItems] = useState(originalItems);\n  const [layouts, setLayouts] = useState(\n    getFromLS(\"layouts\") || initialLayouts\n  );\n  const onLayoutChange = (_, allLayouts) => {\n    setLayouts(allLayouts);\n  };\n  const onLayoutSave = () => {\n    saveToLS(\"layouts\", layouts);\n  };\n  const onRemoveItem = (itemId) => {\n    // setItems(items.filter((i) => i !== itemId));\n    dispatch(fnCall[itemId]);\n  };\n  const onAddItem = (itemId) => {\n    setItems([...items, itemId]);\n    dispatch(fnCall[itemId]);\n  };\n  const displayItemList = () => {\n    return items.map((key) => (\n      <div\n        key={key}\n        className=\"widget\"\n        data-grid={{ w: 3, h: 2, x: 0, y: Infinity }}\n        style={components[key] ? { display: \"block\" } : { display: \"none\" }}\n      >\n        <Widget\n          id={key}\n          onRemoveItem={onRemoveItem}\n          backgroundColor=\"#867ae9\"\n        />\n      </div>\n    ));\n  };\n  useEffect(() => {\n    displayItemList();\n  }, [sidebar]);\n\n  return (\n    <>\n      <ResponsiveGridLayout\n        className=\"layout\"\n        layouts={layouts}\n        breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n        cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n        rowHeight={60}\n        width={width}\n        onLayoutChange={onLayoutChange}\n        draggableHandle={\".drag\"}\n      >\n        {displayItemList()}\n      </ResponsiveGridLayout>\n    </>\n  );\n}\n\nexport default withSize({ refreshMode: \"debounce\", refreshRate: 60 })(Content);\n\nfunction getFromLS(key) {\n  let ls = {};\n  if (global.localStorage) {\n    try {\n      ls = JSON.parse(global.localStorage.getItem(\"rgl-8\")) || {};\n    } catch (e) {}\n  }\n  return ls[key];\n}\n\nfunction saveToLS(key, value) {\n  if (global.localStorage) {\n    global.localStorage.setItem(\n      \"rgl-8\",\n      JSON.stringify({\n        [key]: value,\n      })\n    );\n  }\n}\n"],"sourceRoot":""}