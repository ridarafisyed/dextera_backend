{"version":3,"sources":["asserts/logo_white copy.png","components/Tabs/tabs.module.css","redux/features/sidebarSlice.js","components/Dashboard/Admin/DashboardLayout/DashboardContent.jsx","asserts/login_light.png","asserts/signup_light.png","reducers/profile.js","reducers/errors.js","reducers/messages.js","reducers/data.js","redux/features/tabSlice.js","redux/features/searchTabSlice.js","redux/features/favoriteSlice.js","api/MatterApi.js","redux/services/roleFnService.js","redux/features/roleFnSlice.js","redux/services/permissionService.js","redux/features/permissionSlice.js","redux/services/authService.js","redux/features/authSlice.js","reducers/index.js","actions/types.js","store.js","actions/messages.js","actions/auth.js","context/useToggle.jsx","styles/styles.jsx","actions/data.js","components/Navbars/NavbarResponsive.jsx","components/Navbars/Navbar.jsx","components/Chat/Chat.jsx","components/Dashboard/Calender.jsx","components/Tasks/ViewTasks.jsx","components/Favorite/Favorites.jsx","components/Navbars/DrawerComp.jsx","components/Navbars/NavbarSec.jsx","components/Sidebar/AdminSidebar.jsx","components/Sidebar/LawyerSidebar.jsx","components/Sidebar/FirmSidebar.jsx","components/Sidebar/CutomerSidebar.jsx","components/Sidebar/Sidebar.jsx","components/Footer/Footer.jsx","hocs/Layout.js","utils/PrivateRoute.js","context/User/reducer.js","context/User/index.js","hocs/Theme.js","components/Dashboard/Admin/DashBoard.jsx","components/Tabs/Tabs.jsx","components/Invoice/CreateInvoice.jsx","components/Invoice/Payment.jsx","components/Invoice/Filters.jsx","components/Invoice/InvoiceList.jsx","components/Invoice/index.jsx","utils/ActionAlerts.js","components/Matter/MatterList.jsx","components/Matter/Cards.jsx","components/Matter/Calendar.jsx","components/Matter/Filters.jsx","components/Matter/MatterCards.jsx","components/Matter/MatterListLong.jsx","components/Matter/NewMatter.jsx","components/Matter/MatterDetail.jsx","components/Matter/index.jsx","components/Ledger/LedgerActivity.jsx","components/Ledger/Fillters.jsx","components/Ledger/LedgerCards.jsx","components/Ledger/LedgerTImeList.jsx","components/Ledger/LedgerDashbard.jsx","components/Ledger/LedgerDoc.jsx","components/Ledger/Time.jsx","components/Ledger/index.jsx","components/Category/SubCategory.jsx","components/Category/Category.jsx","components/Category/Classification.jsx","components/Category/ManageCategory.jsx","components/Contact/Contact.jsx","components/Profile/Profile.js","components/Tasks/CreateTask.jsx","components/Tasks/index.jsx","components/Dashboard/UserRoles/AdminDashboard.jsx","components/Dashboard/ProgressBar.jsx","components/Dashboard/Tasks.jsx","components/Dashboard/Cards.jsx","components/Dashboard/Client/DashBoard.jsx","components/Template/Templates.jsx","components/Dashboard/UserRoles/ClientDashboard.jsx","components/Dashboard/Lawyer/Chart.jsx","components/Dashboard/Lawyer/DashBoard.jsx","components/Dashboard/UserRoles/LawyerDashboard.jsx","components/Dashboard/Firm/Charts.jsx","components/Dashboard/Firm/DashBoard.jsx","components/Dashboard/UserRoles/FirmDashboard.jsx","containers/Home.js","containers/Auth/Login.js","containers/Auth/Signup.js","components/Profile/Company.jsx","containers/Matters/Matters.jsx","components/User/CreateUser.jsx","components/User/ManageUser.jsx","components/User/ManageUserGroup.jsx","components/User/RoleFuncions.jsx","components/User/ManageRole.jsx","components/User/index.jsx","components/Ledger/TimeList.jsx","components/Employee/Search.jsx","components/Employee/Result.jsx","components/Employee/Saved.jsx","components/Employee/index.jsx","App.jsx","index.js","components/Dashboard/Admin/Charts.jsx","components/Dashboard/Admin/Cards/RevenueIn.jsx","components/Dashboard/Admin/Cards/RevenueOut.jsx","components/Dashboard/Admin/Cards/NewCustomer.jsx","components/Dashboard/Admin/Cards/LostCustomer.jsx","components/Dashboard/Admin/Map.jsx","components/Dashboard/Admin/NewAccounts.jsx","components/Dashboard/Admin/EmpOversite.jsx","components/Dashboard/Admin/DashboardLayout/Widget.jsx"],"names":["module","exports","__webpack_require__","p","tabs","current","content","d","__webpack_exports__","hideSidebar","showSidebar","revenueInActive","revenueOutActive","newCustomerActive","lostCustomerActive","newAccountActive","appointmentActive","marketingActive","empOversiteActive","emailsActive","callsActive","mapActive","_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__","sidebarSlice","createSlice","name","initialState","revenueIn","revenueOut","newCustomer","lostCustomer","newAccount","appointment","marketing","empOversite","emails","calls","map","display","reducers","isDisplay","state","actions","originalItems","initialLayouts","lg","i","x","y","w","h","md","sm","xs","xxs","withSize","refreshMode","refreshRate","_ref","width","size","sidebar","useSelector","dispatch","useDispatch","components","a","b","c","e","f","g","j","k","fnCall","_useState","useState","_useState2","Object","_home_supersis03_Projects_Dextera_Phase_3_dextera_project_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","items","_useState3","key","ls","global","localStorage","JSON","parse","getItem","getFromLS","_useState4","layouts","setLayouts","onRemoveItem","itemId","displayItemList","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","data-grid","Infinity","style","_Widget__WEBPACK_IMPORTED_MODULE_8__","id","backgroundColor","useEffect","Fragment","react_grid_layout__WEBPACK_IMPORTED_MODULE_4__","breakpoints","cols","rowHeight","onLayoutChange","_","allLayouts","profile","msg","status","isWeekly","tabSlice","addTab","action","newTask","payload","tab","push","removeTab","filter","item","reset","newTabSlice","addNewTab","removeNewTab","removeLastNewTab","pop","resetNewTab","favoriteSlice","addFav","newFav","page","favorite","length","isAvailable","removeFav","CONFIG","headers","Content-Type","Accept","API_URL","concat","process","getRoleFn","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","RoleId","response","wrap","_context2","prev","next","axios","get","sent","abrupt","data","stop","_x3","apply","this","arguments","roleFnService","goals","isError","isSuccess","isLoading","message","createGoal","createAsyncThunk","_callee","goalData","thunkAPI","token","_context","getState","auth","user","goalService","t0","toString","rejectWithValue","_x","_x2","getGoals","_x4","deleteGoal","_ref3","_callee3","_context3","_x5","_x6","goalSlice","extraReducers","builder","addCase","pending","fulfilled","rejected","goal","_id","permissionService","createpermission","permissionData","getPermissions","updatePermission","value","patch","deletePermission","_ref4","_callee4","_context4","delete","permissions","all","createPermission","_ref5","_x7","_x8","permissionSlice","permission","signUp","userData","post","setItem","stringify","authService","signIn","signOut","removeItem","isAuthenticated","authSlice","combineReducers","undefined","type","objectSpread","errors","messages","sidebarReducer","favoriteReducer","tabsReducer","newTabs","newTabsReducer","permissionReducer","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","persistor","persistStore","returnErrors","logout","tokenConfig","then","res","config","useToggle","slicedToArray","isToggled","setIsToggled","useCallback","SideBarBtn","styled","Button","theme","fontSize","textTransform","color","textAlign","height","margin","borderColor","padding","&:hover","palette","primary","main","&:visited","SecNavbar","boxShadow","overflow","position","FooterBar","bottom","left","alignContent","FooterLink","Link","fontFamily","fontWeight","textDecoration","marginTop","FooterButton","marginX","paddingX","LinkButton","_ref6","borderRadius","cursor","Search","_ref7","marginRight","spacing","marginLeft","SearchIconWrapper","_ref8","pointerEvents","alignItems","justifyContent","StyledInputBase","InputBase","_ref9","& .MuiInputBase-input","defineProperty","paddingLeft","transition","transitions","create","up","MainSearch","_ref10","MainSearchIconWrapper","_ref12","StyledMainInputBase","_ref13","updateIsWeekly","NavbarResponsive","Intl","DateTimeFormat","resolvedOptions","timeZone","Date","currentTime","_useState5","_useState6","dateValue","setDateValue","timeFormater","checked","toLocaleTimeString","hour","minute","hour12","_useToggle","_useToggle2","_useState7","_useState8","settingAcnchorEl","_useState9","Boolean","_useState10","_React$useState","React","_React$useState2","anchorEl","_React$useState3","_React$useState4","setChecked","handleChange","event","target","handleOnChage","_useState11","_useState12","openDrawer","setOpenDrawer","react_default","react","Typography","noWrap","component","sx","react_router_dom","to","src","Logo","alt","variant","Switch","onChange","inputProps","aria-label","transform","IconButton","float","onClick","Menu_default","Drawer","anchor","open","onClose","List","ListItemButton","ListItemIcon","Search_default","placeholder","Select","labelId","label","MenuItem","LocalizationProvider","dateAdapter","AdapterDateFns","DateRangePicker","startText","endText","newValue","renderInput","startProps","endProps","TextField","Box","mx","react_number_format_es","displayType","thousandSeparator","prefix","Navbar","isTabletOrMobile","useMediaQuery","query","redirect","flexGrow","AppBar","border","Toolbar","Navbars_NavbarResponsive","ml","mr","react_router","ChatHistory","Chip","avatar","Avatar","Chatting","Chat_ChatHistory","& .MuiTextField-root","m","endIcon","Send_default","Calender","setValue","tasks","Paper","Grid","container","StaticDatePicker","orientation","openTo","shouldDisableDate","isWeekend","params","task","ViewTasks","Divider","my","Favorites","ListItem","disablePadding","Star","ListItemText","NavBarSecResponsive","openFav","setOpenFav","handleCloseFav","openCal","setOpenCal","handleCloseCal","openChat","setOpenChat","handleCloseChat","useHistory","username","is_firm","is_lawyer","is_client","setLocalUser","setRedirect","_useState13","_useState14","setSettingAcnchorEl","_useState15","_useState16","settingAcnchorEl2","setSettingAcnchorEl2","openSetting2","openSetting","handleClose2","handleClose","_useState17","_useState18","anchorOrigin","vertical","horizontal","Message","Dialog","Validate","aria-labelledby","aria-describedby","right","DialogTitle","DialogContent","Chat","DialogActions","pathname","EmailRounded","CalendarToday","maxWidth","fullWidth","Dashboard_Calender","aria-controls","aria-expanded","aria-haspopup","currentTarget","CheckBox","Menu_Menu","MenuListProps","TransitionComponent","Fade","Favorite_Favorites","autoFocus","Settings","console","log","NotificationAdd","NavbarSec","handleLogout","handleClick","DrawerComp_NavBarSecResponsive","Person","Controls","px","AddCircle","Receipt","FileCopy","MoneyOff","esm_Task","Work","AssignmentTurnedIn","Marketing","Mail","HumanResources","Group","RevenueControls","AccountControls","EmployeeOversite","Phone","accordionData","tiles","AdminSidebar_Controls","AdminSidebar_HumanResources","AdminSidebar_RevenueControls","AdminSidebar_AccountControls","AdminSidebar_Marketing","AdminSidebar_EmployeeOversite","TestingSidebar","accordions","updateAccordions","mt","react_beautiful_dnd_esm","onDragEnd","result","destination","Array","from","_items$splice","splice","source","index","reorderedItem","droppableId","provided","assign","droppableProps","ref","innerRef","draggableId","Accordion","draggableProps","dragHandleProps","AccordionSummary","expandIcon","ExpandMore_default","align","AccordionDetails","LawyerSidebar","FirmSidebar","CustomerSidebar","Sidebar","Stack","elevation","overflowY","AdminSidebar","Sidebar_FirmSidebar","Sidebar_LawyerSidebar","CutomerSidebar","SidebarRedirect","Footer","setOpen","handleClickOpen","InnerLayout","children","_useSelector","isDesktopOrLaptop","useTheme","isBigScreen","sidebarToggle","drawerOpen","setDrawerOpen","openPopover","handleSidebarToggle","descriptionElementRef","useRef","descriptionElement","focus","contianer","rowSpacing","columnSpacing","Navbars_NavbarSec","Navbars_Navbar","direction","components_Sidebar_Sidebar","top","components_Footer_Footer","Fab","zIndex","Report","esm_Chat","Popover","transformOrigin","PrivateRoutes","rest","objectWithoutProperties","active","UserContext","createContext","UserProvider","_React$useReducer","useReducer","_React$useReducer2","Provider","createTheme","mode","error","warning","success","contrastThreshold","tonalOffset","typography","htmlFontSize","DashBoard","DashboardContent","Tabs","props","activeTab","setActiveTab","styles","startIcon","MoreVert","newActiveTab","preventDefault","one","CreateInvoice","approvel","setApprovel","matter","contact","billable","date_range","create_date","due_date","template","invoice_no","discount","submit","invoiceData","setInvoiceData","dateRange","setDateRange","onSubmit","autoComplete","FormControlLabel","control","Checkbox","varient","LocalizationProvider_LocalizationProvider","DateRangePicker_DateRangePicker","calendars","InputLabelProps","shrink","TableContainer","Table","TableHead","TableRow","TableCell","PaymentPlan","payment_no","due","amount","late_fee","total_due","payment","posted","method","paymentData","mb","TableBody","paddingInline","InvoicePayment","tax","interest","time","hard","soft","total","Payment","isPlan","setIsPlan","payment_type","date","retainer","menu","bank_account","payment_method","FormControl","RadioGroup","row","defaultValue","Radio","InputLabel","Payment_PaymentPlan","Payment_InvoicePayment","Filters","invoiceToggle","setInvoiceToggle","_useToggle3","_useToggle4","paymentToggle","setPaymentToggle","_useToggle5","_useToggle6","paid","setPaid","age","setAge","& .MuiFormControl-root","DialogContentText","Invoice_CreateInvoice","Invoice_Payment","styles_Search","styles_SearchIconWrapper","styles_StyledInputBase","InvoiceList","Invoice_Filters","Index","Invoice_InvoiceList","ActionAlerts","Alert","severity","TotalDays","date1","date2","dt1","dt2","Math","floor","UTC","getFullYear","getMonth","getDate","GetDate","MatterList","setTasks","setStatus","setLoading","redTask","setRedTask","greenTask","setGreenTask","yellowTask","setYellowTask","myTask","setMyTask","statusText","catch","err","FormGroup","Cards","Card","minWidth","CardContent","gutterBottom","Calendar","Box_Box","MatterCards","bgcolor","MatterListLong","setMatters","NewMatter","mask","openDate","setOpenDate","whenDate","setWhenDate","closeDate","setCloseDate","totalDays","setTotalDays","matter_name","matter_type","matter_source","matter_status","assign_to","assign_by","billing_rate","alerts","jurisdiction","status_limitaion","opposing_counsel","where","involved","witnesses","narrative","matterData","setMatterData","days","open_date","close_date","when","total_days","body","ActionAlerts_ActionAlerts","min","disabled","step","DatePicker","inputFormat","multiline","rows","Save_default","MatterTask","Activities","MatterDetail","MatterDetail_Activities","MatterDetail_MatterTask","MatterDetail_Cards","Matters","Matter_Filters","Matter_MatterCards","Matter_MatterListLong","MatterDashboard","Matter_MatterList","Matter_Calendar","Matter_Cards","components_Tabs_Tabs","Matter_MatterDashboard","Matter_Matters","Matter_NewMatter","Matter_MatterDetail","LedgerActivity","setActivityData","bgColor","Fillters","billedby","setBilledby","setFilter","LedgerCards","decimalScale","fixedDecimalScale","LedgerTImeList","setLedgerData","LegderDashbard","Ledger_LedgerCards","Ledger_Fillters","Ledger_LedgerTImeList","LedgerDoc","minHeight","Time","pickDate","setPickDate","timeToggle","setTimeToggle","setBillable","setTime","category","sub_category","unit","qty","rate","file","detail","bill_by","note","timeData","setTimeData","labelPlacement","FormLabel","format","customInput","onValueChange","LedgerDashbard","Ledger_LedgerActivity","Ledger_LedgerDoc","Ledger_Time","SubCategory","subCategory","setSubCategory","loading","formData","setFormData","FetchData","handleSubmit","required","Clear_default","Category","setCategory","setError","Classification","classification","setClassification","ManageCategory","components_Category_Category","Category_SubCategory","Category_Classification","Contact","_React$createElement","_React$createElement2","_React$createElement3","_React$createElement4","clientNo","setClientNo","dob","setDob","ssn","setSsn","mobileNo","setMobileNo","homeNo","setHomeNo","officeNo","setOfficeNo","faxNo","setFaxNo","otherNo","setOtherNo","zip","setZip","_useState19","_useState20","plus4","setPlus4","_useState21","_useState22","zip2","setZip2","_useState23","_useState24","plus42","setPlus42","_useState25","company_name","website","ger_email","billing_email","street","suite","city","f_name","l_name","email_1","email_2","email_3","street2","suite2","city2","state2","office","team","member","relation","_useState26","contactData","setContactData","persist","thousandsGroupStyle","autoWidth","connect","gradYear","setGradYear","barDate","setBarDate","underGradYear","setUnderGradYear","phoneNo","setPhoneNo","barNo","setBarNo","practiceTime","setPracticeTime","longestTenure","setLongestTenure","averageTenure","setAverageTenure","currentTenure","setCurrentTenure","email","mobile","phone","language","locate","search_active","law_school","grad_year","bar_admit_date","undergrad_school","undergrad_area","undergrad_year","bar_no","admitted_practice","practice_time","longest_tenure","average_tenure","current_tenure","past_bar_companies_no","primary_area","TabContext","borderBottom","TabList","Tab","TabPanel","defaultChecked","KeyboardArrowRight_default","CreateTask","dueDate","setDueDate","bill","setBill","isPrivate","setIsPrivate","setFile","matter_id","matter_contact","filename","taskData","setTaskData","& .MuiSelect-root","due_at","is_billable","is_private","Tasks_ViewTasks","Tasks_CreateTask","Invoice","Matter","Ledger","Category_ManageCategory","components_Contact_Contact","components_Profile_Profile","Tasks","invoice","ledger","AdminDashboard","tabList","newTabList","wordEntered","setWordEntered","handleChangeSearch","addSearchTab","setTimeout","displayNewTabsName","handleRemoveNewTab","Close_default","displayTabsName","handleRemoveTab","displaySearchTabs","noValidate"," & .MuiOutlinedInput-notchedOutline","renderTabs","Tabs_Tabs","scrollButtons","allowScrollButtonsMobilearia-label","icon","iconPosition","Add_default","Admin_DashBoard","ProgressBar","progress","paddingRight","LinearProgress","randomDate","start","end","getDateTime","getTime","random","toLocaleDateString","getHours","getMinutes","Task","LawyerCards","postfix","FirmCards","CustomerCards","Cards_CustomerCards","Dashboard_Tasks","Dashboard_ProgressBar","Templates","ClientDashboard","Client_DashBoard","Template_Templates","PieChart","series","options","chart","plotOptions","pie","donut","dataLabels","enabled","formatter","val","title","text","horizontalAlign","colors","labels","legend","show","dropShadow","useSeriesColors","onItemClick","toggleDataSeries","seriesName","opts","globals","seriesIndex","react_apexcharts_min_default","Chart2","radialBar","startAngle","endAngle","track","background","hollow","fill","gradient","shade","gradientToColors","stops","BarChart","stacked","bar","stroke","xaxis","categories","yaxis","tooltip","opacity","offsetX","Cards_LawyerCards","Chart_PieChart","Chart_Chart2","Chart_BarChart","LawyerDashboard","Lawyer_DashBoard","Chart","BarChart2","columnWidth","distributed","BarChart3","barHeight","textAnchor","opt","dataPointIndex","floating","Cards_FirmCards","Charts_Chart2","Charts_Chart","Charts_BarChart","Charts_BarChart2","Charts_BarChart3","FirmDashboard","Firm_DashBoard","Dashboard","UserRoles_AdminDashboard","UserRoles_FirmDashboard","UserRoles_LawyerDashboard","UserRoles_ClientDashboard","dashboardRedirect","Login","password","prevState","backgroundImage","BackgroundImage","backgroundRepeat","t","grey","backgroundSize","backgroundPosition","square","flexDirection","LockOutlined_default","minLength","register","accountCreated","setAccountCreated","isFirm","setIsFirm","first_name","last_name","re_password","Company","m_name","c_email","role","time_zone","group","job_title","ext","home","work_no","phone_ext","setUserData","p_email","& .MuiButton-root","CreateUser","userId","roles","setRoles","setRole","setGroup","groups","setGroups","loading2","setLoading2","middle_name","rate_type","toLowerCase","input::-webkit-outer-spin-button","webkitAappearance","select","User","usersData","setUsersData","setUserId","isActive","setIsActive","searchItem","setSearchItem","User_CreateUser","includes","is_active","last_login","ManageUserGroup","loadingUser","setLoadingUser","RoleFuncions","is_view","isView","setIsView","is_edit","isEdit","setIsEdit","is_create","isCreate","setIsCreate","_useToggle7","is_delete","_useToggle8","isDelete","setIsDelete","_useToggle9","is_contacts","_useToggle10","isContacts","setIsContacts","_useToggle11","is_team","_useToggle12","isTeam","setIsTeam","_useToggle13","is_office","_useToggle14","isOffice","setIsOffice","_useToggle15","is_region","_useToggle16","isRegion","setIsRegion","_useToggle17","_useToggle18","isAll","setIsAll","settingAll","updateFunctions","Rectangle_default","ManageRole","_useSelector2","updateData","setUpdateData","overflowX","&MuiTableCell","User_RoleFuncions","ManageUser","TimeList","practice_area","undergrad_study","lamguages","admitted_state","relocate","searchData","setSearchData","Result","Saved","pickTime","setPickTime","bar_adm_year","mail_add","link","notes","jobData","setJobData","TimePicker","Employee_Search","Employee_Result","Employee_Saved","App","es","integration_react","User_UserProvider","ThemeProvider","react_alert","AlertTemplate","timeout","Layout","path","Signup","PrivateRoute","exact","Home","Profile","Employee","ReactDOM","render","StrictMode","CssBaseline","src_App","document","getElementById","Appointments","fillColor","strokeColor","toolbar","onItemHover","highlightDataSeries","curve","Calls","lable","Email","listStyleType","mapboxgl","workerClass","MapboxWorker","Map","latitude","longitude","zoom","viewport","setViewport","esm","mapStyle","MAP_STYLE","onViewportChange","mapboxApiAccessToken","offsetLeft","offsetTop","Circle","NewAccounts","EmpOversite","Widget","widgetNames","RevenueIn","RevenueOut","NewCustomer","LostCustomer","Admin_NewAccounts","Admin_Map","Admin_EmpOversite","Charts_Calls","Charts_Appointments","Charts_Marketing","Charts_Email","paddingTop","CardActions"],"mappings":"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","file":"static/js/main.4bd49eb9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white copy.aa470428.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"tabs_tabs__2iP2q\",\"current\":\"tabs_current__UH0Eq\",\"content\":\"tabs_content__Vh0J0\"};","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  revenueIn: true,\n  revenueOut: true,\n  newCustomer: true,\n  lostCustomer: true,\n  newAccount: true,\n  appointment: true,\n  marketing: true,\n  empOversite: true,\n  emails: true,\n  calls: true,\n  map: true,\n  display: true,\n};\n\nconst sidebarSlice = createSlice({\n  name: \"sidebar\",\n  initialState,\n  reducers: {\n    isDisplay: (state) => {\n      state.display = !state.display;\n    },\n    hideSidebar: (state) => {\n      state.display = false;\n    },\n    showSidebar: (state) => {\n      state.display = true;\n    },\n    // manageRoleActive: (state) => {\n    //   state.manageRole = !state.manageRole;\n    // },\n    // manageUserActive: (state) => {\n    //   state.manageUser = !state.manageUser;\n    // },\n    // manageGroupActive: (state) => {\n    //   state.manageGroup = !state.manageGroup;\n    // },\n    revenueInActive: (state) => {\n      state.revenueIn = !state.revenueIn;\n    },\n    revenueOutActive: (state) => {\n      state.revenueOut = !state.revenueOut;\n    },\n    newCustomerActive: (state) => {\n      state.newCustomer = !state.newCustomer;\n    },\n    lostCustomerActive: (state) => {\n      state.lostCustomer = !state.lostCustomer;\n    },\n    newAccountActive: (state) => {\n      state.newAccount = !state.newAccount;\n    },\n    appointmentActive: (state) => {\n      state.appointment = !state.appointment;\n    },\n    marketingActive: (state) => {\n      state.marketing = !state.marketing;\n    },\n    empOversiteActive: (state) => {\n      state.empOversite = !state.empOversite;\n    },\n    emailsActive: (state) => {\n      state.emails = !state.emails;\n    },\n    callsActive: (state) => {\n      state.calls = !state.calls;\n    },\n    mapActive: (state) => {\n      state.map = !state.map;\n    },\n  },\n});\n\nexport const {\n  isDisplay,\n  // manageRoleActive,\n  // manageGroupActive,\n  // manageUserActive,\n  hideSidebar,\n  showSidebar,\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} = sidebarSlice.actions;\nexport default sidebarSlice.reducer;\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { Responsive as ResponsiveGridLayout } from \"react-grid-layout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withSize } from \"react-sizeme\";\n\nimport {\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} from \"../../../../redux/features/sidebarSlice\";\n\nimport Widget from \"./Widget\";\n\nconst originalItems = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\"];\n\nconst initialLayouts = {\n  lg: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  md: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  sm: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  xs: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 3 },\n    { i: \"b\", x: 0, y: 4, w: 2, h: 3 },\n    { i: \"c\", x: 0, y: 8, w: 4, h: 6 },\n    { i: \"d\", x: 0, y: 12, w: 4, h: 6 },\n\n    { i: \"e\", x: 0, y: 18, w: 5, h: 6 },\n    { i: \"f\", x: 0, y: 24, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 30, w: 3, h: 4 },\n    { i: \"h\", x: 0, y: 36, w: 3, h: 4 },\n    { i: \"i\", x: 0, y: 42, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 48, w: 8, h: 5 },\n    { i: \"k\", x: 0, y: 53, w: 4, h: 5 },\n  ],\n  xxs: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 3 },\n    { i: \"b\", x: 0, y: 4, w: 2, h: 3 },\n    { i: \"c\", x: 0, y: 8, w: 4, h: 6 },\n    { i: \"d\", x: 0, y: 12, w: 4, h: 6 },\n\n    { i: \"e\", x: 0, y: 18, w: 5, h: 6 },\n    { i: \"f\", x: 0, y: 24, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 30, w: 3, h: 4 },\n    { i: \"h\", x: 0, y: 36, w: 3, h: 4 },\n    { i: \"i\", x: 0, y: 42, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 48, w: 8, h: 5 },\n    { i: \"k\", x: 0, y: 53, w: 4, h: 4 },\n  ],\n};\n\nfunction Content({ size: { width } }) {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  const components = {\n    a: sidebar.revenueIn,\n    b: sidebar.revenueOut,\n    c: sidebar.newCustomer,\n    d: sidebar.lostCustomer,\n    e: sidebar.newAccount,\n    f: sidebar.map,\n    g: sidebar.empOversite,\n    h: sidebar.calls,\n    i: sidebar.appointment,\n    j: sidebar.marketing,\n    k: sidebar.emails,\n  };\n  const fnCall = {\n    a: revenueInActive(),\n    b: revenueOutActive(),\n    c: newCustomerActive(),\n    d: lostCustomerActive(),\n    e: newAccountActive(),\n    f: mapActive(),\n    g: empOversiteActive(),\n    h: callsActive(),\n    i: appointmentActive(),\n    j: marketingActive(),\n    k: emailsActive(),\n  };\n  const [items, setItems] = useState(originalItems);\n  const [layouts, setLayouts] = useState(\n    getFromLS(\"layouts\") || initialLayouts,\n  );\n  const onLayoutChange = (_, allLayouts) => {\n    setLayouts(allLayouts);\n  };\n  const onLayoutSave = () => {\n    saveToLS(\"layouts\", layouts);\n  };\n  const onRemoveItem = (itemId) => {\n    // setItems(items.filter((i) => i !== itemId));\n    dispatch(fnCall[itemId]);\n  };\n  const onAddItem = (itemId) => {\n    setItems([...items, itemId]);\n    dispatch(fnCall[itemId]);\n  };\n  const displayItemList = () => {\n    return items.map((key) => (\n      <div\n        key={key}\n        className=\"widget\"\n        data-grid={{ w: 3, h: 2, x: 0, y: Infinity }}\n        style={components[key] ? { display: \"block\" } : { display: \"none\" }}\n      >\n        <Widget\n          id={key}\n          onRemoveItem={onRemoveItem}\n          backgroundColor=\"#867ae9\"\n        />\n      </div>\n    ));\n  };\n  useEffect(() => {\n    displayItemList();\n  }, [sidebar]);\n\n  return (\n    <>\n      <ResponsiveGridLayout\n        className=\"layout\"\n        layouts={layouts}\n        breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n        cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n        rowHeight={60}\n        width={width}\n        onLayoutChange={onLayoutChange}\n      >\n        {displayItemList()}\n      </ResponsiveGridLayout>\n    </>\n  );\n}\n\nexport default withSize({ refreshMode: \"debounce\", refreshRate: 60 })(Content);\n\nfunction getFromLS(key) {\n  let ls = {};\n  if (global.localStorage) {\n    try {\n      ls = JSON.parse(global.localStorage.getItem(\"rgl-8\")) || {};\n    } catch (e) {}\n  }\n  return ls[key];\n}\n\nfunction saveToLS(key, value) {\n  if (global.localStorage) {\n    global.localStorage.setItem(\n      \"rgl-8\",\n      JSON.stringify({\n        [key]: value,\n      }),\n    );\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/login_light.a12d3677.png\";","module.exports = __webpack_public_path__ + \"static/media/signup_light.181ee8a6.png\";","/** @format */\n\nimport { GET_PROFILE } from \"../actions/types\";\n\nconst initialState = {\n  profile: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {\n\tmsg: {},\n\tstatus: null,\n};\n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_ERRORS:\n\t\t\treturn {\n\t\t\t\tmsg: action.payload.msg,\n\t\t\t\tstatus: action.payload.status,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","/** @format */\n\nimport { CREATE_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase CREATE_MESSAGE:\n\t\t\treturn (state = action.payload);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","/** @format */\n\nimport {\n  GET_IS_WEEKLY,\n  MONTLY_REVENUE,\n  WEEKLY_REVENUE,\n} from \"../actions/types\";\n\nconst initialState = {\n  isWeekly: \"daily\",\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_IS_WEEKLY:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case MONTLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case WEEKLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst tabSlice = createSlice({\n  name: \"tab\",\n  initialState: initialState,\n  reducers: {\n    addTab: (state, action) => {\n      const newTask = {\n        id: action.payload.id,\n        name: action.payload.tab,\n      };\n      state.push(newTask);\n    },\n    removeTab: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n    reset: (state) => initialState,\n  },\n});\n\nexport const { addTab, removeTab, reset } = tabSlice.actions;\nexport default tabSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst newTabSlice = createSlice({\n  name: \"tab\",\n  initialState: initialState,\n  reducers: {\n    addNewTab: (state, action) => {\n      state.push({\n        id: action.payload.id,\n        name: action.payload.name,\n      });\n    },\n    removeNewTab: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n\n    removeLastNewTab: (state) => {\n      state.pop();\n    },\n    resetNewTab: (state) => initialState,\n  },\n});\n\nexport const {\n  addNewTab,\n  removeNewTab,\n  resetNewTab,\n  removeLastNewTab,\n} = newTabSlice.actions;\nexport default newTabSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  favorite: {},\n  isAvailable: true,\n};\n\nconst favoriteSlice = createSlice({\n  name: \"favorite\",\n  initialState: [],\n  reducers: {\n    addFav: (state, action) => {\n      const newFav = {\n        id: action.payload.id,\n        name: action.payload.name,\n        page: action.payload.page,\n      };\n      if (state.favorite.length < 10) {\n        state.favorite.push(newFav);\n      } else state.isAvailable = false;\n    },\n\n    removeFav: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n  },\n});\n\nexport const { addFav, removeFav } = favoriteSlice.actions;\nexport default favoriteSlice.reducer;\n","/** @format */\n\n// import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport const CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nexport const CreateMatter = (\n  contact,\n  matter_name,\n  matter_type,\n  matter_source,\n  matter_status,\n  assign_to,\n  assign_by,\n  billing_rate,\n  alerts,\n  open_date,\n  close_date,\n  total_days,\n  jurisdiction,\n  status_limitaion,\n  opposing_counsel,\n  where,\n  when,\n  involved,\n  witnesses,\n  narrative,\n) => {\n  let status = \"\";\n  const body = JSON.stringify({\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n    open_date,\n    close_date,\n    total_days,\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    when,\n    involved,\n    witnesses,\n    narrative,\n  });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n    .then((res) => {\n      status = res.statusText;\n    })\n    .catch((err) => {\n      status = err.message;\n    });\n\n  return status;\n};\n\nexport const retrive_matter = () => {};\n","import axios from 'axios'\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/user/auth/`\n\n// Create new goal\nconst createRole = async (roleData, token) => {\n  // const config = {\n  //   headers: {\n  //     Authorization: `Bearer ${token}`,\n  //   },\n  // }\n\n  const response = await axios.post(API_URL, roleData, CONFIG)\n\n  return response.data\n}\n\n// Get user goals\nconst getRoleFn = async (RoleId) => {\n\n  const response = await axios.get(API_URL + RoleId , CONFIG)\n\n  return response.data\n}\n\n// Delete user goal\nconst deleteGoal = async (goalId, token) => {\n\n  const response = await axios.delete(API_URL + goalId, CONFIG)\n\n  return response.data\n}\n\nconst roleFnService = {\n  // createGoal,\n  getRoleFn,\n  // deleteGoal,\n}\n\nexport default roleFnService","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport goalService from '../services/roleFnService'\n\nconst initialState = {\n  goals: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: '',\n}\n\n// Create new goal\nexport const createGoal = createAsyncThunk(\n  'goals/create',\n  async (goalData, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      return await goalService.createGoal(goalData, token)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// Get user goals\nexport const getGoals = createAsyncThunk(\n  'goals/getAll',\n  async (_, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      return await goalService.getGoals(token)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// Delete user goal\nexport const deleteGoal = createAsyncThunk(\n  'goals/delete',\n  async (id, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      return await goalService.deleteGoal(id, token)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\nexport const goalSlice = createSlice({\n  name: 'goal',\n  initialState,\n  reducers: {\n    reset: (state) => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(createGoal.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(createGoal.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.goals.push(action.payload)\n      })\n      .addCase(createGoal.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n      .addCase(getGoals.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(getGoals.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.goals = action.payload\n      })\n      .addCase(getGoals.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n      .addCase(deleteGoal.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(deleteGoal.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.goals = state.goals.filter(\n          (goal) => goal._id !== action.payload.id\n        )\n      })\n      .addCase(deleteGoal.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n  },\n})\n\nexport const { reset } = goalSlice.actions\nexport default goalSlice.reducer","/** @format */\n\nimport axios from \"axios\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/user/auth/`;\n// Create new permission\nconst createpermission = async (permissionData, token) => {\n\t//   const config = {\n\t//     headers: {\n\t//       Authorization: `Bearer ${token}`,\n\t//     },\n\t//   }\n\t//   const response = await axios.post(API_URL, permissionData, config)\n\t//   return response.data\n};\n\n// Get user permissions\nconst getPermissions = async (id) => {\n\tconst response = await axios.get(\n\t\t`${process.env.REACT_APP_API_URL}/user/auth/role-permissions/${id}/`,\n\t\tCONFIG,\n\t);\n\n\treturn response.data;\n};\n// update user permission\n\nconst updatePermission = async (id, value) => {\n\t\n\tconst response = await axios.patch(\n\t\t`${process.env.REACT_APP_API_URL}/user/auth/permissions/${id}/`,\n\t\tvalue, \n\t\tCONFIG,\n\t);\n\n\treturn response.data;\n};\n\n\n// Delete user permission\nconst deletePermission = async (id) => {\n\tconst response = await axios.delete(\n\t\t`${process.env.REACT_APP_API_URL}/user/auth/role-permissions/${id}/`,\n\t\tCONFIG,\n\t);\n\n\treturn response.data;\n};\n\nconst permissionService = {\n\tcreatepermission,\n\tgetPermissions,\n\tupdatePermission,\n\tdeletePermission,\n};\n\nexport default permissionService;\n","/** @format */\n\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport permissionService from \"../services/permissionService\";\n\nconst initialState = {\n\tpermissions: [],\n\tisError: false,\n\tisSuccess: false,\n\tisLoading: false,\n\tmessage: \"\",\n\tall: false,\n};\n\n// Create new permissions\nexport const createPermission = createAsyncThunk(\n\t\"permissions/create\",\n\tasync (permissionData, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.createPermission(permissionData);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\n// Get user permissions\nexport const getPermissions = createAsyncThunk(\n\t\"permissions/getAll\",\n\tasync (id, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.getPermissions(id);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\nexport const updatePermission = createAsyncThunk(\n\t\"permissions/update\",\n\tasync ({id, value}, thunkAPI) => {\n\n\t\ttry {\n\t\t\treturn await permissionService.updatePermission(id, value);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\n// Delete user permission\nexport const deletePermission = createAsyncThunk(\n\t\"permissions/delete\",\n\tasync (id, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.deletePermission(id);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\nexport const permissionSlice = createSlice({\n\tname: \"permission\",\n\tinitialState,\n\treducers: {\n\t\treset: (state) => initialState,\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder\n\t\t\t.addCase(createPermission.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(createPermission.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions.push(action.payload);\n\t\t\t})\n\t\t\t.addCase(createPermission.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(getPermissions.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(getPermissions.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions = action.payload;\n\t\t\t})\n\t\t\t.addCase(getPermissions.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(updatePermission.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(updatePermission.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\t\n\t\t\t\tgetPermissions()\n\n\t\t\t})\n\t\t\t.addCase(updatePermission.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(deletePermission.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(deletePermission.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions = state.permissions.filter(\n\t\t\t\t\t(permission) => permission._id !== action.payload.id,\n\t\t\t\t);\n\t\t\t})\n\t\t\t.addCase(deletePermission.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t});\n\t},\n});\n\nexport const {\n\treset\n} = permissionSlice.actions;\nexport default permissionSlice.reducer;\n","/** @format */\n\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/user/auth/`;\n\n// Register user\nconst signUp = async (userData) => {\n\tconst response = await axios.post(API_URL + \"register\", userData, CONFIG);\n\n\tif (response.data) {\n\t\tlocalStorage.setItem(\"user\", JSON.stringify(response.data.user));\n\t\tlocalStorage.setItem(\"token\", JSON.stringify(response.data.token));\n\t}\n\n\treturn response.data;\n};\n\n// Login user\nconst signIn = async (userData) => {\n\tconst response = await axios.post(API_URL + \"login\", userData, CONFIG);\n\n\tif (response.data) {\n\t\tlocalStorage.setItem(\"user\", JSON.stringify(response.data));\n\t}\n\n\treturn response.data;\n};\n\n// Logout user\nconst signOut = async (token) => {\n\tconst response = await axios.post(API_URL + \"logout\", token);\n\tif (response.data) {\n\t\tlocalStorage.removeItem(\"user\");\n\t\tlocalStorage.removeItem(\"token\");\n\t}\n\n\t// return response.data\n};\n\nconst authService = {\n\tsignIn,\n\tsignOut,\n\tsignUp,\n};\n\nexport default authService;\n","/** @format */\n\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"../services/authService\";\n\n// Get user from localStorage\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst token = JSON.parse(localStorage.getItem(\"token\"));\n\nconst initialState = {\n\tuser: user ? user : null,\n\tisAuthenticated: false,\n\tisError: false,\n\tisSuccess: false,\n\tisLoading: false,\n\tmessage: \"\",\n};\n\n// signUp user\nexport const signUp = createAsyncThunk(\n\t\"auth/signUp\",\n\tasync (user, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await authService.signUp(user);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\n// signIn user\nexport const signIn = createAsyncThunk(\n\t\"auth/signIn\",\n\tasync (user, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await authService.signIn(user);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\nexport const signOut = createAsyncThunk(\"auth/signOut\", async () => {\n\tawait authService.signOut(token);\n});\n\nexport const authSlice = createSlice({\n\tname: \"auth\",\n\tinitialState,\n\treducers: {\n\t\treset: (state) => {\n\t\t\tstate.isLoading = false;\n\t\t\tstate.isSuccess = false;\n\t\t\tstate.isError = false;\n\t\t\tstate.isAuthenticated = false;\n\t\t\tstate.message = \"\";\n\t\t},\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder\n\t\t\t.addCase(signUp.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(signUp.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.isAuthenticated = true;\n\t\t\t\tstate.user = action.payload;\n\t\t\t})\n\t\t\t.addCase(signUp.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.isAuthenticated = false;\n\t\t\t\tstate.message = action.payload;\n\t\t\t\tstate.user = null;\n\t\t\t})\n\t\t\t.addCase(signIn.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(signIn.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.isAuthenticated = true;\n\t\t\t\tstate.user = action.payload;\n\t\t\t})\n\t\t\t.addCase(signIn.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t\tstate.user = null;\n\t\t\t})\n\t\t\t.addCase(signOut.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(signOut.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(signOut.fulfilled, (state) => {\n\t\t\t\tstate.user = null;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.isAuthenticated = false;\n\t\t\t});\n\t},\n});\n\nexport const { reset } = authSlice.actions;\nexport default authSlice.reducer;\n","/** @format */\n\nimport { combineReducers } from \"redux\";\n// import leads from \"./leads\";\nimport profile from \"./profile\";\nimport errors from \"./errors\";\nimport messages from \"./messages\";\n// import auth from \"./auth\";\nimport data from \"./data\";\nimport sidebarReducer from \"../redux/features/sidebarSlice\";\nimport tabsReducer from \"../redux/features/tabSlice\";\nimport newTabsReducer from \"../redux/features/searchTabSlice\";\nimport favoriteReducer from \"../redux/features/favoriteSlice\";\nimport rolefnsReducer from \"../redux/features/roleFnSlice\";\nimport permissionReducer from \"../redux/features/permissionSlice\";\nimport auth from \"../redux/features/authSlice\";\n\nexport default combineReducers({\n\tauth,\n\tprofile,\n\terrors,\n\tmessages,\n\tdata,\n\tsidebar: sidebarReducer,\n\tfavorite: favoriteReducer,\n\ttabs: tabsReducer,\n\tnewTabs: newTabsReducer,\n\tpermissions: permissionReducer,\n});\n","/** @format */\n\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const DELETE_PROFILE = \"DELETE_PROFILE\";\nexport const ADD_PROFILE = \"ADD_PROFILE\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const CLEAR_PROFILES = \"CLEAR_PROFILES\";\nexport const MONTLY_REVENUE = \"GET_MONTLY_REVENUE\";\nexport const WEEKLY_REVENUE = \"GET_WEEKLY_REVENUE\";\nexport const GET_IS_WEEKLY = \"GET_IS_WEEKLY\";\nexport const UPDATE_IS_WEEKLY = \"UPDATE_IS_WEEKLY\";\n\nexport const CREATE_MEMBER_SUCCESS = \"CREATE_MEMBER_SUCCESS\";\nexport const CREATE_MEMBER_FAIL = \"CREATE_MEMBER_FAIL\";\n\nexport const GET_MEMBER_SUCCESS = \"GET_MEMBER_SUCCESS\";\nexport const GET_MEMBER_FAIL = \"GET_MEMBER_FAIL\";\n\nexport const GET_TIMEZONE_SUCCESS = \"GET_TIMEZONE_SUCCESS\";\nexport const GET_TIMEZONE_FAIL = \"GET_TIMEZONE_FAIL\";\nexport const GET_CURRENT_TIME_SCUSSESS = \"GET_CURRENT_TIME_SCUSSESS\";\nexport const GET_CURRENT_TIME_FAIL = \"GET_CURRENT_TIME_FAIL\";\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\n// export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\n// export const SIGNUP_FAIL = 'SIGNUP_FAIL';\n// export const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\n// export const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\n// export const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\n// export const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\n// export const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\n// export const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\n// export const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\n// export const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\n// export const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\n// export const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\n// export const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\n// export const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\n// export const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\n// export const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\n// export const LOGOUT = 'LOGOUT';\n\n// export const PROFILE_CREATED_SUCCESS = 'PROFILE_CREATED_SUCCESS';\n// export const PROFILE_CREATED_FAIL = 'PROFILE_CREATED_FAIL';\n\n// export const PROFILE_LOADED_SUCCESS = 'PROFILE_LOADED_SUCCESS';\n// export const PROFILE_LOADED_FAIL = 'PROFILE_LOADED_FAIL';\n\n// export const PROFILE_UPDATE_SUCCESS = 'PROFILE_UPDATE_SUCCESS';\n// export const PROFILE_UPDATE_FAIL = 'PROFILE_UPDATE_FAIL';\n","/** @format */\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./reducers\";\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({ reducer: persistedReducer,});\n\nexport const persistor = persistStore(store);\n\nexport default store;\n","/** @format */\n\nimport { CREATE_MESSAGE, GET_ERRORS } from \"./types\";\n\n// CREATE MESSAGE\nexport const createMessage = (msg) => {\n\treturn {\n\t\ttype: CREATE_MESSAGE,\n\t\tpayload: msg,\n\t};\n};\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status) => {\n\treturn {\n\t\ttype: GET_ERRORS,\n\t\tpayload: { msg, status },\n\t};\n};\n","/** @format */\n\nimport axios from \"axios\";\n\nimport {\n\tUSER_LOADED,\n\tUSER_LOADING,\n\tAUTH_ERROR,\n\tLOGIN_SUCCESS,\n\tLOGIN_FAIL,\n\tLOGOUT_SUCCESS,\n\tREGISTER_SUCCESS,\n\tREGISTER_FAIL,\n} from \"./types\";\nimport { createMessage, returnErrors } from \"./messages\";\nimport { useSelector } from \"react-redux\";\nimport { reset } from \"../redux/features/tabSlice\";\nimport { resetNewTab } from \"../redux/features/searchTabSlice\";\n\n// CHECK TOKEN & LOAD USER\nexport const loadUser = () => (dispatch, getState) => {\n\t// User Loading\n\tdispatch({ type: USER_LOADING });\n\n\taxios\n\t\t.get(\n\t\t\t`${process.env.REACT_APP_API_URL}/user/auth/user`,\n\t\t\ttokenConfig(getState),\n\t\t)\n\t\t.then((res) => {\n\t\t\tdispatch({\n\t\t\t\ttype: USER_LOADED,\n\t\t\t\tpayload: res.data,\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tdispatch(returnErrors(err.response.data.message, err.response.status));\n\t\t\tdispatch({\n\t\t\t\ttype: AUTH_ERROR,\n\t\t\t});\n\t\t});\n};\n\n// LOGIN USER\nexport const login = (username, email, password) => (dispatch) => {\n\t// Headers\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\t// Request Body\n\tconst body = JSON.stringify({ username, password });\n\n\taxios\n\t\t.post(`${process.env.REACT_APP_API_URL}/user/auth/login`, body, config)\n\t\t.then(function(response) {\n\t\t\tconsole.log(response);\n\t\t\tdispatch(createMessage({ LoginSuccess: \"Login Successful\" }));\n\t\t\tdispatch({\n\t\t\t\ttype: LOGIN_SUCCESS,\n\t\t\t\tpayload: response.data,\n\t\t\t});\n\t\t})\n\t\t.catch(function(error) {\n\t\t\tdispatch(returnErrors(error.response.data, error.response.status));\n\t\t\tdispatch({\n\t\t\t\ttype: LOGIN_FAIL,\n\t\t\t});\n\t\t\tconsole.log(error);\n\t\t});\n};\n\n// REGISTER USER\nexport const register = ({ username, email, password }) => (dispatch) => {\n\t// Headers\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\t// Request Body\n\tconst body = JSON.stringify({ username, email, password });\n\n\taxios\n\t\t.post(`${process.env.REACT_APP_API_URL}/user/auth/register`, body, config)\n\t\t.then((res) => {\n\t\t\tdispatch({\n\t\t\t\ttype: REGISTER_SUCCESS,\n\t\t\t\tpayload: res.data,\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tdispatch(returnErrors(err.response.data, err.response.status));\n\t\t\tdispatch({\n\t\t\t\ttype: REGISTER_FAIL,\n\t\t\t});\n\t\t});\n};\n\n// LOGOUT USER\nexport const logout = () => (dispatch, getState) => {\n\taxios\n\t\t.post(\n\t\t\t`${process.env.REACT_APP_API_URL}/user/auth/logout`,\n\t\t\tnull,\n\t\t\ttokenConfig(getState),\n\t\t)\n\t\t.then((res) => {\n\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\tdispatch(reset());\n\t\t\tdispatch(resetNewTab());\n\t\t\tdispatch({\n\t\t\t\ttype: LOGOUT_SUCCESS,\n\t\t\t});\n\t\t});\n};\n\n// Setup config with token - helper function\nexport const tokenConfig = (getState) => {\n\t// const token = useSelector((state) => state.auth.token);\n\t// Get token from state\n\tconst token = getState().auth.token;\n\n\t// Headers\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\t// If token, add to headers config\n\tif (token) {\n\t\tconfig.headers[\"Authorization\"] = `Token ${token}`;\n\t}\n\n\treturn config;\n};\n","/** @format */\n\nimport { useState, useCallback } from \"react\";\n\nexport const useToggle = (initialState) => {\n  const [isToggled, setIsToggled] = useState(initialState);\n\n  // put [setIsToggled] into the useCallback's dependencies array\n  // this value never changes so the callback is not going to be ever re-created\n  const toggle = useCallback(\n    () => setIsToggled((state) => !state),\n    [setIsToggled],\n  );\n\n  return [isToggled, toggle];\n};\n","/** @format */\n\n// import * as React from 'react';\nimport { styled } from \"@mui/material/styles\";\nimport { Link } from \"react-router-dom\";\nimport { Button, InputBase } from \"@mui/material\";\n\nexport const SideBarBtn = styled(Button)(({ theme }) => ({\n  fontSize: \"0.6em\",\n  textTransform: \"none\",\n  // color: theme.palette.primary.main,\n  color: \"#eee\",\n  textAlign: \"center\",\n  width: \"8em\",\n  height: \"8em\",\n  margin: \"0.7em\",\n  borderColor: \"#eee\",\n  padding: \"1em\",\n  \"&:hover\": {\n    backgroundColor: \"white\",\n    color: theme.palette.primary.main,\n  },\n  \"&:visited\": {\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport const SecNavbar = styled(\"nav\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  overflow: \"hidden\",\n  color: \"#eee\",\n  position: \"reletive\",\n  padding: \"0\",\n  margin: \"0\",\n  height: \"3.5rem\",\n  width: \"100%\",\n}));\n\nexport const FooterBar = styled(\"footer\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  color: \"#eee\",\n  position: \"fixed\",\n  bottom: \"0\",\n  left: \"0\",\n\n  margin: \"0\",\n  height: \"2.5rem\",\n  textAlign: \"center\",\n  alignContent: \"center\",\n  width: \"100%\",\n}));\n\nexport const FooterLink = styled(Link)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  fontSize: \"1rem\",\n  textTransform: \"uppercase\",\n  fontWeight: 500,\n  textDecoration: \"none\",\n  marginTop: \"0.7rem\",\n  padding: \" 2rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\nexport const FooterButton = styled(Button)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  fontSize: \"1rem\",\n  fontWeight: 500,\n  marginX: \"2rem\",\n  paddingX: \"3rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\n\nexport const LinkButton = styled(Link)(({ theme }) => ({\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  margin: \"0.7em\",\n  backgroundColor: theme.palette.primary.main,\n  borderColor: \"#2979ff\",\n  color: \"white\",\n  padding: \"0.65rem 1.2rem\",\n  borderRadius: \"0.5rem\",\n  \"&:hover\": {\n    backgroundColor: \"#1c54b2\",\n    cursor: \"pointer\",\n    color: \"white\",\n  },\n}));\n\nexport const Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#ddd\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"40%\",\n}));\n\nexport const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\nexport const MainSearch = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#eee\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(3),\n    width: \"auto\",\n  },\n}));\n\nexport const MainSearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledMainInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n\n","/** @format */\n\n/** @format */ // import axios from \"axios\";\n\nimport { GET_IS_WEEKLY, MONTLY_REVENUE, WEEKLY_REVENUE } from \"./types\";\n// GET LEADS\nexport const updateIsWeekly = (data) => (dispatch) => {\n  if (data) {\n    dispatch({\n      type: WEEKLY_REVENUE,\n      payload: data,\n    });\n  } else {\n    dispatch({\n      type: MONTLY_REVENUE,\n    });\n  }\n};\n\nexport const getIsWeekly = () => (dispatch) =>\n  dispatch({\n    type: GET_IS_WEEKLY,\n    // payload: this.state,\n  });\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport NumberFormat from \"react-number-format\";\nimport { useToggle } from \"../../context/useToggle\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  ListSubheader,\n  TextField,\n} from \"@mui/material\";\nimport {\n  MainSearch,\n  MainSearchIconWrapper,\n  StyledMainInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Logo from \"../../asserts/logo_white copy.png\";\nimport { updateIsWeekly } from \"../../actions/data\";\nimport {\n  IconButton,\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\n\nconst NavbarResponsive = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const [today, setToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [dateValue, setDateValue] = useState([null, null]);\n\n  const timeFormater = () => {\n    if (checked) {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n    } else {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: false,\n      });\n    }\n  };\n  const [isChecked, setIsChecked] = useToggle(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOnChage = (e) => {\n    dispatch(updateIsWeekly(e.target.value));\n  };\n\n  const logout_user = () => {\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Typography variant=\"h5\" component=\"h5\">\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          color=\"primary\"\n          style={{ marginRight: \"0.5rem\" }}\n        >\n          Expected Balance :\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">\n              Expected Balance\n            </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={isWeekly}\n              label=\"Expected Balance\"\n              onChange={handleOnChage}\n            >\n              <MenuItem value=\"daily\">Daily</MenuItem>\n              <MenuItem value=\"weekly\">Weekly</MenuItem>\n              <MenuItem value=\"monthly\">Monthly</MenuItem>\n              <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n              <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n              <MenuItem value=\"range\">Custom Range</MenuItem>\n              {isWeekly === \"range\" ? (\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              ) : null}\n            </Select>\n          </FormControl>\n        </Typography>\n        <NumberFormat\n          value={isWeekly ? 3254 : 32564}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix=\"$\"\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" ml={1} mr={1}>\n        {\" \"}\n        |{\" \"}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h5\">\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          \n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n    </Fragment>\n  );\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <Typography noWrap component=\"div\" sx={{ display: \"block\" }}>\n        <Link to=\"/\">\n          <img\n            src={Logo}\n            alt=\"logo\"\n            style={{ height: \"2rem\", width: \"auto\" }}\n          />\n        </Link>\n      </Typography>\n      {isAuthenticated ? (\n        <>\n          <Typography variant=\"h5\" component=\"h5\" sx={{ marginLeft: \"1rem\" }}>\n            {timeFormater()}\n            <Switch\n              size=\"small\"\n              \n              checked={checked}\n              onChange={handleChange}\n              inputProps={{ \"aria-label\": \"controlled\" }}\n              sx={{ transform: \"rotate(90deg)\" }}\n            />\n          </Typography>\n          <IconButton\n            sx={{ color: \"#7a4ebf\", float: \"right\" }}\n            onClick={() => setOpenDrawer(!openDrawer)}\n          >\n            <MenuIcon color=\"#7a4ebf\" />\n          </IconButton>\n        </>\n      ) : (\n        guestLinks()\n      )}\n\n      <Drawer\n        anchor=\"right\"\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <MainSearch>\n                <MainSearchIconWrapper>\n                  <SearchIcon />\n                </MainSearchIconWrapper>\n                <StyledMainInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </MainSearch>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <Typography variant=\"h5\" component=\"h5\">\n                <Typography\n                  component=\"span\"\n                  variant=\"h5\"\n                  color=\"primary\"\n                  style={{ marginRight: \"0.5rem\" }}\n                >\n                  Set Interval :\n                  <Select\n                    size=\"small\"\n                    sx={{ marginX: \"1rem\" }}\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={isWeekly}\n                    label=\"Expected Balance\"\n                    onChange={handleOnChage}\n                  >\n                    <MenuItem value=\"daily\">Daily</MenuItem>\n                    <MenuItem value=\"weekly\">Weekly</MenuItem>\n                    <MenuItem value=\"monthly\">Monthly</MenuItem>\n                    <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n                    <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n                    <MenuItem value=\"range\">Custom Range</MenuItem>\n                    {isWeekly === \"range\" ? (\n                      <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DateRangePicker\n                          startText=\"Start Date\"\n                          endText=\"End Date\"\n                          value={dateValue}\n                          onChange={(newValue) => {\n                            setDateValue(newValue);\n                          }}\n                          renderInput={(startProps, endProps) => (\n                            <Fragment>\n                              <TextField {...startProps} />\n                              <Box sx={{ mx: 2 }}> to </Box>\n                              <TextField {...endProps} />\n                            </Fragment>\n                          )}\n                        />\n                      </LocalizationProvider>\n                    ) : null}\n                  </Select>\n                </Typography>\n              </Typography>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              {\" \"}\n              <Typography variant=\"h5\" component=\"h5\">\n                Expected Balance :{\" \"}\n                <NumberFormat\n                  value={isWeekly ? 3254 : 32564}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon></ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon></ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <MainSearch>\n                <MainSearchIconWrapper>\n                  <SearchIcon />\n                </MainSearchIconWrapper>\n                <StyledMainInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </MainSearch>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n      </Drawer>\n    </Fragment>\n  );\n};\n\nexport default NavbarResponsive;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport NumberFormat from \"react-number-format\";\nimport { useToggle } from \"../../context/useToggle\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  ListSubheader,\n  TextField,\n} from \"@mui/material\";\nimport {\n  MainSearch,\n  MainSearchIconWrapper,\n  StyledMainInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Logo from \"../../asserts/logo_white copy.png\";\nimport { updateIsWeekly } from \"../../actions/data\";\nimport { useMediaQuery } from \"react-responsive\";\nimport NavbarResponsive from \"./NavbarResponsive\";\n\nconst Navbar = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const [today, setToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [dateValue, setDateValue] = useState([null, null]);\n\n  const timeFormater = () => {\n    if (checked) {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n    } else {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: false,\n      });\n    }\n  };\n  const [isChecked, setIsChecked] = useToggle(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOnChage = (e) => {\n    dispatch(updateIsWeekly(e.target.value));\n  };\n\n  const logout_user = () => {\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Typography variant=\"h5\" component=\"h5\">\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          color=\"primary\"\n          style={{ marginRight: \"0.8rem\" }}\n        >\n          Expected Balance :\n          <Select\n            sx={{ marginX: \"1rem\" }}\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={isWeekly}\n            label=\"Expected Balance\"\n            onChange={handleOnChage}\n          >\n            <MenuItem value=\"daily\">Daily</MenuItem>\n            <MenuItem value=\"weekly\">Weekly</MenuItem>\n            <MenuItem value=\"monthly\">Monthly</MenuItem>\n            <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n            <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n            <MenuItem value=\"range\">Custom Range</MenuItem>\n            {isWeekly === \"range\" ? (\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateRangePicker\n                  startText=\"Start Date\"\n                  endText=\"End Date\"\n                  value={dateValue}\n                  onChange={(newValue) => {\n                    setDateValue(newValue);\n                  }}\n                  renderInput={(startProps, endProps) => (\n                    <Fragment>\n                      <TextField {...startProps} />\n                      <Box sx={{ mx: 2 }}> to </Box>\n                      <TextField {...endProps} />\n                    </Fragment>\n                  )}\n                />\n              </LocalizationProvider>\n            ) : null}\n          </Select>\n        </Typography>\n        <NumberFormat\n          value={isWeekly ? 3254 : 32564}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix=\"$\"\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" ml={1} mr={1}>\n        {\" \"}\n        |{\" \"}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h5\">\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          \n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n    </Fragment>\n  );\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <Box sx={{ flexGrow: 1, backgroundColor: \"white\" }} component=\"nav\">\n        <AppBar position=\"static\" color=\"transparent\" sx={{ border: \"none\" }}>\n          <Toolbar>\n            {isTabletOrMobile ? (\n              <>\n                <NavbarResponsive />\n              </>\n            ) : (\n              <>\n                <Typography\n                  noWrap\n                  component=\"div\"\n                  sx={{ display: { xs: \"none\", sm: \"block\" } }}\n                >\n                  <Link to=\"/\">\n                    <img\n                      src={Logo}\n                      alt=\"logo\"\n                      style={{ height: \"2rem\", width: \"auto\" }}\n                    />\n                  </Link>\n                </Typography>\n                <MainSearch>\n                  <MainSearchIconWrapper>\n                    <SearchIcon />\n                  </MainSearchIconWrapper>\n                  <StyledMainInputBase\n                    placeholder=\"Search…\"\n                    inputProps={{ \"aria-label\": \"search\" }}\n                  />\n                </MainSearch>\n                <Box sx={{ flexGrow: 1 }} />\n                <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\n                  {isAuthenticated ? authLinks() : guestLinks()}\n                </Box>\n              </>\n            )}\n          </Toolbar>\n        </AppBar>\n      </Box>\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\n\nexport default Navbar;\n","/** @format */\n\nimport { Box, Typography, Button, TextField, Chip } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport React, { Fragment } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\n\nconst ChatHistory = () => {\n  return (\n    <Typography>\n      <Box\n        p={2}\n        sx={{\n          border: \"1px solid lightgray\",\n          borderRadius: \"1rem\",\n        }}\n      >\n        <Chip\n          label=\"Hi\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          size=\"large\"\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip label=\"Hello\" variant=\"outlined\" avatar={<Avatar>M</Avatar>} />\n        <br />\n        <Chip\n          label=\"Message by M\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"Message by D\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"this is just a ui design\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{ marginTop: \"1rem\" }}\n        />\n        <br />\n        <Chip\n          label=\"the chat feature is not working at backend\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n\n        <br />\n      </Box>\n    </Typography>\n  );\n};\n\nconst Chatting = () => {\n  return (\n    <Fragment>\n      <ChatHistory />\n      <br />\n      <Box\n        component=\"form\"\n        sx={{\n          //   border: \"1px solid lightgray\",\n          //   borderRadius: \"1rem\",\n          \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n        }}\n      >\n        <TextField type=\"text\" size=\"small\" variant=\"outlined\" />\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          endIcon={<SendIcon />}\n          type=\"submit\"\n          sx={{\n            m: 1,\n          }}\n        >\n          Send\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Chatting;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport isWeekend from \"date-fns/isWeekend\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { StaticDatePicker } from \"@mui/x-date-pickers/StaticDatePicker\";\nimport { TextField, Box, Paper, Grid } from \"@mui/material\";\n\nconst Calender = () => {\n  const [value, setValue] = useState(new Date());\n  const [tasks, setTasks] = useState([]);\n\n  return (\n    <Box component={Paper} m={2}>\n      <Grid container>\n        {\" \"}\n        <Grid item lg={6} xs={12}>\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <StaticDatePicker\n              orientation=\"landscape\"\n              openTo=\"day\"\n              value={value}\n              shouldDisableDate={isWeekend}\n              onChange={(newValue) => {\n                setValue(newValue);\n              }}\n              renderInput={(params) => <TextField {...params} />}\n            />\n          </LocalizationProvider>\n        </Grid>{\" \"}\n        <Grid item lg={6} xs={12}>\n          {tasks.length !== 0 ? (\n            tasks.map((task) => (\n              <li>\n                {task.id} - {task.name}\n              </li>\n            ))\n          ) : (\n            <h4> No record found</h4>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Calender;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Menu, MenuItem, Divider } from \"@mui/material\";\n\nconst ViewTasks = () => {\n  return (\n    <Fragment>\n      <MenuItem>Profile</MenuItem>\n      <MenuItem>Account</MenuItem>\n      <MenuItem>Setting</MenuItem>\n      <Divider sx={{ my: 0.5 }} />\n      <MenuItem>Logout</MenuItem>\n    </Fragment>\n  );\n};\n\nexport default ViewTasks;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nimport { Star } from \"@mui/icons-material\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Favorites = () => {\n  const favList = useSelector((state) => state.favorite.favorite);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <List>\n        <ListItem disablePadding>\n          <ListItemButton>\n            <ListItemIcon>\n              <Star sx={{ color: \"orange\" }} />\n            </ListItemIcon>\n          </ListItemButton>\n          <ListItemText primary=\"Favorite 1\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Favorites;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport Chatting from \"../Chat/Chat\";\n\n// styling imports\nimport {\n  Box,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  Fade,\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { SecNavbar } from \"../../styles/styles\";\n\nimport {\n  Message,\n  EmailRounded,\n  CalendarToday,\n  CheckBox,\n  Person,\n  NotificationAdd,\n  Settings,\n  Star,\n  StarBorder,\n} from \"@mui/icons-material/\";\nimport { useToggle } from \"../../context/useToggle\";\nimport Calender from \"../Dashboard/Calender\";\nimport ViewTasks from \"../Tasks/ViewTasks\";\nimport Favorites from \"../Favorite/Favorites\";\nimport serverTime from \"../../utils/ServerTime\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { useMediaQuery } from \"react-responsive\";\nimport {\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nexport const NavBarSecResponsive = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  const [openFav, setOpenFav] = useState(false);\n\n  const handleClickOpenFav = () => {\n    setOpenFav(true);\n  };\n\n  const handleCloseFav = () => {\n    setOpenFav(false);\n  };\n  const [openTask, setOpenTask] = useState(false);\n\n  const handleClickOpenTask = () => {\n    setOpenTask(true);\n  };\n\n  const handleCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const [openCal, setOpenCal] = useState(false);\n\n  const handleClickOpenCal = () => {\n    setOpenCal(true);\n  };\n\n  const handleCloseCal = () => {\n    setOpenCal(false);\n  };\n\n  const [openChat, setOpenChat] = useState(false);\n\n  const handleClickOpenChat = () => {\n    setOpenChat(true);\n  };\n\n  const handleCloseChat = () => {\n    setOpenChat(false);\n  };\n\n  const history = useHistory();\n  const [isLogout, setIsLogout] = useToggle(false);\n  const today = new Date();\n  const time = today.toLocaleTimeString();\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n  const [redirect, setRedirect] = useState(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [settingAcnchorEl2, setSettingAcnchorEl2] = useState(null);\n\n  const [anchorEl2, setAnchorEl2] = React.useState(null);\n\n  const handleLogout = () => {\n    console.log(\"logout button just clicked\");\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const open = Boolean(anchorEl);\n  const open2 = Boolean(anchorEl);\n\n  const userRoleChecker = () => {\n    switch (user.username) {\n      case \"admin\":\n        return \"Admin\";\n      case \"firm\":\n        return \"Firm\";\n      case \"lawyer\":\n        return \"Lawyer\";\n      default:\n        return \"Client\";\n    }\n  };\n\n  const openSetting2 = Boolean(settingAcnchorEl2);\n\n  const handleClick2 = (event) => {\n    setSettingAcnchorEl2(event.currentTarget);\n  };\n  const openSetting = Boolean(settingAcnchorEl);\n  const handleClose2 = () => {\n    setSettingAcnchorEl2(null);\n  };\n\n  const handleClick = (event) => {\n    setSettingAcnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setSettingAcnchorEl(null);\n  };\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <IconButton\n        sx={{ color: \"white\" }}\n        onClick={() => setOpenDrawer(!openDrawer)}\n      >\n        <MenuIcon color=\"white\" />\n      </IconButton>\n      <Drawer\n        anchor=\"left\"\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                className=\"nav-items\"\n                size=\"large\"\n                onClick={handleClickOpenChat}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"#fff\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n              >\n                <Message />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          className=\"nav-items\"\n          Validate\n          open={openChat}\n          onClose={handleCloseChat}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          sx={{\n            position: \"absolute\",\n            right: \"20px\",\n            bottom: \"150px\",\n          }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Chatting Application\"}\n          </DialogTitle>\n          <DialogContent>\n            <Chatting />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseChat}>Close</Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                size=\"large\"\n                className=\"nav-items\"\n                component={Link}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n                to={{\n                  pathname:\n                    \"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=someone@gmail.com\",\n                }}\n                target=\"_blank\"\n              >\n                <EmailRounded />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                size=\"large\"\n                className=\"nav-items\"\n                onClick={handleClickOpenCal}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <CalendarToday />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          Validate\n          open={openCal}\n          maxWidth=\"lg\"\n          fullWidth\n          onClose={handleCloseCal}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          sx={{\n            position: \"absolute\",\n            right: \"20px\",\n            bottom: \"150px\",\n          }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Calender\"}</DialogTitle>\n          <DialogContent>\n            <Calender />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseCal}>Close</Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                aria-label=\"more\"\n                className=\"nav-items\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting2 ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick2}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <CheckBox />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Menu\n          id=\"fade-menu\"\n          MenuListProps={{\n            \"aria-labelledby\": \"fade-button\",\n          }}\n          className=\"nav-items\"\n          anchorEl={settingAcnchorEl2}\n          open={openSetting2}\n          onClose={handleClose2}\n          TransitionComponent={Fade}\n        >\n          <MenuItem onClick={handleClose2}>Task 1: This is task one</MenuItem>\n          <MenuItem onClick={handleClose2}>Task 2: This is task two</MenuItem>\n          <MenuItem onClick={handleClose2}>Task 3: This is task three</MenuItem>\n          <Divider sx={{ my: 0.5 }} />\n          <MenuItem onClick={handleClose2}>Task 4: This is task four</MenuItem>\n        </Menu>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                className=\"nav-items\"\n                aria-expanded={openSetting2 ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClickOpenFav}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <Star />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          open={openFav}\n          onClose={handleCloseFav}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n          <DialogContent>\n            <Favorites />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseFav} autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                className=\"nav-items\"\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                <MenuItem component={Link} to=\"/profile\">\n                  Profile\n                </MenuItem>\n                {/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n              </Menu>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                sx={{\n                  color: \"#7a4ebf\",\n                }}\n              >\n                <Settings />\n              </IconButton>\n              <Menu\n                id=\"fade-menu\"\n                MenuListProps={{\n                  \"aria-labelledby\": \"fade-button\",\n                }}\n                anchorEl={settingAcnchorEl}\n                open={openSetting}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Account</MenuItem>\n                <MenuItem onClick={handleClose}>Setting</MenuItem>\n                <Divider sx={{ my: 0.5 }} />\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n              </Menu>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n      </Drawer>\n\n      <NotificationAdd mr={2} />\n    </Fragment>\n  );\n};\n","/** @format */\n/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { signOut, reset } from \"../../redux/features/authSlice\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { logout } from \"../../actions/auth\";\nimport Chatting from \"../Chat/Chat\";\n\n// styling imports\nimport {\n\tBox,\n\tToolbar,\n\tTypography,\n\tIconButton,\n\tMenu,\n\tMenuItem,\n\tFade,\n\tDivider,\n\tDialog,\n\tDialogTitle,\n\tDialogContent,\n\tDialogContentText,\n\tDialogActions,\n\tButton,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { SecNavbar } from \"../../styles/styles\";\n\nimport {\n\tMessage,\n\tEmailRounded,\n\tCalendarToday,\n\tCheckBox,\n\tPerson,\n\tNotificationAdd,\n\tSettings,\n\tStar,\n\tStarBorder,\n} from \"@mui/icons-material/\";\nimport { useToggle } from \"../../context/useToggle\";\nimport Calender from \"../Dashboard/Calender\";\nimport ViewTasks from \"../Tasks/ViewTasks\";\nimport Favorites from \"../Favorite/Favorites\";\nimport serverTime from \"../../utils/ServerTime\";\n\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { NavBarSecResponsive } from \"./DrawerComp\";\n\nconst NavbarSec = () => {\n\tconst isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n\tconst { user } = useSelector((state) => state.auth.user);\n\n\tconst isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n\tconst isDesktopOrLaptop = useMediaQuery({\n\t\tquery: \"(min-width: 1224px)\",\n\t});\n\tconst isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\tconst isWeekly = useSelector((state) => state.data.isWeekly);\n\n\tconst dispatch = useDispatch();\n\n\tconst [openFav, setOpenFav] = useState(false);\n\n\tconst handleClickOpenFav = () => {\n\t\tsetOpenFav(true);\n\t};\n\n\tconst handleCloseFav = () => {\n\t\tsetOpenFav(false);\n\t};\n\tconst [openTask, setOpenTask] = useState(false);\n\n\tconst handleClickOpenTask = () => {\n\t\tsetOpenTask(true);\n\t};\n\n\tconst handleCloseTask = () => {\n\t\tsetOpenTask(false);\n\t};\n\n\tconst [openCal, setOpenCal] = useState(false);\n\n\tconst handleClickOpenCal = () => {\n\t\tsetOpenCal(true);\n\t};\n\n\tconst handleCloseCal = () => {\n\t\tsetOpenCal(false);\n\t};\n\n\tconst [openChat, setOpenChat] = useState(false);\n\n\tconst handleClickOpenChat = () => {\n\t\tsetOpenChat(true);\n\t};\n\n\tconst handleCloseChat = () => {\n\t\tsetOpenChat(false);\n\t};\n\n\tconst history = useHistory();\n\tconst [isLogout, setIsLogout] = useToggle(false);\n\tconst today = new Date();\n\tconst time = today.toLocaleTimeString();\n\tconst [localuser, setLocalUser] = useState({\n\t\tusername: \"Admin\",\n\t\tis_firm: false,\n\t\tis_lawyer: false,\n\t\tis_client: false,\n\t});\n\n\tuseEffect(() => {\n\t\tif (user) {\n\t\t\tsetLocalUser({\n\t\t\t\tusername: user.username,\n\t\t\t\tis_firm: user.is_firm,\n\t\t\t\tis_lawyer: user.is_lawyer,\n\t\t\t\tis_client: user.is_client,\n\t\t\t});\n\t\t}\n\t}, [user]);\n\tconst [redirect, setRedirect] = useState(false);\n\n\tconst [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\n\n\tconst [settingAcnchorEl2, setSettingAcnchorEl2] = useState(null);\n\n\tconst [anchorEl2, setAnchorEl2] = React.useState(null);\n\n\tconst handleLogout = () => {\n\t\tconsole.log(\"logout button just clicked\");\n\t\tdispatch(signOut());\n\t\tdispatch(reset());\n\t\tsetRedirect(true);\n\t};\n\n\tconst open = Boolean(anchorEl);\n\tconst open2 = Boolean(anchorEl);\n\n\tconst userRoleChecker = () => {\n\t\tswitch (user.username) {\n\t\t\tcase \"admin\":\n\t\t\t\treturn \"Admin\";\n\t\t\tcase \"firm\":\n\t\t\t\treturn \"Firm\";\n\t\t\tcase \"lawyer\":\n\t\t\t\treturn \"Lawyer\";\n\t\t\tdefault:\n\t\t\t\treturn \"Client\";\n\t\t}\n\t};\n\n\tconst openSetting2 = Boolean(settingAcnchorEl2);\n\n\tconst handleClick2 = (event) => {\n\t\tsetSettingAcnchorEl2(event.currentTarget);\n\t};\n\tconst openSetting = Boolean(settingAcnchorEl);\n\tconst handleClose2 = () => {\n\t\tsetSettingAcnchorEl2(null);\n\t};\n\n\tconst handleClick = (event) => {\n\t\tsetSettingAcnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetSettingAcnchorEl(null);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<SecNavbar>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t{isTabletOrMobile ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<NavBarSecResponsive />\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Box component='div' sx={{ flexGrow: 1 }}>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\tonClick={handleClickOpenChat}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"#fff\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<Message />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tValidate\n\t\t\t\t\t\t\t\t\topen={openChat}\n\t\t\t\t\t\t\t\t\tonClose={handleCloseChat}\n\t\t\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\n\t\t\t\t\t\t\t\t\taria-describedby='alert-dialog-description'\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\tright: \"20px\",\n\t\t\t\t\t\t\t\t\t\tbottom: \"150px\",\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>\n\t\t\t\t\t\t\t\t\t\t{\"Chatting Application\"}\n\t\t\t\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t<Chatting />\n\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleCloseChat}>Close</Button>\n\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t</Dialog>\n\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"white\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\t\tpathname:\n\t\t\t\t\t\t\t\t\t\t\t\"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=someone@gmail.com\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ttarget='_blank'>\n\t\t\t\t\t\t\t\t\t<EmailRounded />\n\t\t\t\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tonClick={handleClickOpenCal}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"white\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<CalendarToday />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\t\t\tValidate\n\t\t\t\t\t\t\t\t\topen={openCal}\n\t\t\t\t\t\t\t\t\tmaxWidth='lg'\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tonClose={handleCloseCal}\n\t\t\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\n\t\t\t\t\t\t\t\t\taria-describedby='alert-dialog-description'\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\tright: \"20px\",\n\t\t\t\t\t\t\t\t\t\tbottom: \"150px\",\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>\n\t\t\t\t\t\t\t\t\t\t{\"Calender\"}\n\t\t\t\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t<Calender />\n\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleCloseCal}>Close</Button>\n\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\taria-label='more'\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tid='long-button'\n\t\t\t\t\t\t\t\t\taria-controls='long-menu'\n\t\t\t\t\t\t\t\t\taria-expanded={openSetting2 ? \"true\" : undefined}\n\t\t\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\t\t\tonClick={handleClick2}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"white\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<CheckBox />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\t\tid='fade-menu'\n\t\t\t\t\t\t\t\t\tMenuListProps={{\n\t\t\t\t\t\t\t\t\t\t\"aria-labelledby\": \"fade-button\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tanchorEl={settingAcnchorEl2}\n\t\t\t\t\t\t\t\t\topen={openSetting2}\n\t\t\t\t\t\t\t\t\tonClose={handleClose2}\n\t\t\t\t\t\t\t\t\tTransitionComponent={Fade}>\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose2}>\n\t\t\t\t\t\t\t\t\t\tTask 1: This is task one\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose2}>\n\t\t\t\t\t\t\t\t\t\tTask 2: This is task two\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose2}>\n\t\t\t\t\t\t\t\t\t\tTask 3: This is task three\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t<Divider sx={{ my: 0.5 }} />\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose2}>\n\t\t\t\t\t\t\t\t\t\tTask 4: This is task four\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\taria-label='more'\n\t\t\t\t\t\t\t\t\tid='long-button'\n\t\t\t\t\t\t\t\t\taria-controls='long-menu'\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\taria-expanded={openSetting2 ? \"true\" : undefined}\n\t\t\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\t\t\tonClick={handleClickOpenFav}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"white\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<Star />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\t\t\topen={openFav}\n\t\t\t\t\t\t\t\t\tonClose={handleCloseFav}\n\t\t\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\n\t\t\t\t\t\t\t\t\taria-describedby='alert-dialog-description'>\n\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>\n\t\t\t\t\t\t\t\t\t\t{\"Favorites\"}\n\t\t\t\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t<Favorites />\n\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleCloseFav} autoFocus>\n\t\t\t\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<NotificationAdd mr={2} />\n\t\t\t\t\t\t\t<Typography component='h5' variant='h6' ml={2} mr={2}>\n\t\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\t\t\taria-controls='basic-menu'\n\t\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\taria-expanded={open ? \"true\" : undefined}\n\t\t\t\t\t\t\t\tonClick={handleClick}>\n\t\t\t\t\t\t\t\t<Person /> {user.username} - ({user.username} )\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\tonClick={handleLogout}>\n\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\tid='basic-menu'\n\t\t\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\t\tMenuListProps={{\n\t\t\t\t\t\t\t\t\t\"aria-labelledby\": \"basic-button\",\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<MenuItem component={Link} to='/profile'>\n\t\t\t\t\t\t\t\t\tProfile\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t{/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\taria-label='more'\n\t\t\t\t\t\t\t\tid='long-button'\n\t\t\t\t\t\t\t\taria-controls='long-menu'\n\t\t\t\t\t\t\t\taria-expanded={openSetting ? \"true\" : undefined}\n\t\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<Settings />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\tid='fade-menu'\n\t\t\t\t\t\t\t\tMenuListProps={{\n\t\t\t\t\t\t\t\t\t\"aria-labelledby\": \"fade-button\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tanchorEl={settingAcnchorEl}\n\t\t\t\t\t\t\t\topen={openSetting}\n\t\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\t\tTransitionComponent={Fade}>\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Profile</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Account</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Setting</MenuItem>\n\t\t\t\t\t\t\t\t<Divider sx={{ my: 0.5 }} />\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleLogout}>Logout</MenuItem>\n\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Toolbar>\n\t\t\t</SecNavbar>\n\n\t\t\t{redirect ? <Redirect to='/' /> : <Fragment></Fragment>}\n\t\t</Fragment>\n\t);\n};\n\nexport default NavbarSec;\n","/** @format */\n\nimport React, { useState, Fragment } from \"react\";\nimport {\n  Box,\n  Accordion,\n  AccordionSummary,\n  Typography,\n  AccordionDetails,\n  Grid,\n} from \"@mui/material\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  Mail,\n  Phone,\n  Group,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  marketingActive,\n  appointmentActive,\n  empOversiteActive,\n  emailsActive,\n  mapActive,\n  callsActive,\n} from \"../../redux/features/sidebarSlice\";\n\nimport \"./style.css\";\n\nconst Controls = () => {\n  return (\n    <Fragment>\n      <Box px={3} sx={{ color: \"#796ef0\" }}>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/\">\n              <Grid item>\n                <AddCircle fontSize=\"medium\" />\n              </Grid>\n              <Grid item>DashBoard</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/invoices\">\n              <Grid item>\n                <Receipt fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Invoices</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/manage-categories\">\n              <Grid item>\n                <FileCopy fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Categories</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/ledgers\">\n              <Grid item>\n                <MoneyOff fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Ledger</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/create-task\">\n              <Grid item>\n                <Task fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Task</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/employee-search\">\n              <Grid item>\n                <Work fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Search</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/matter-dashboard\">\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Matters</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/contact\">\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Contact</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Marketing = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(marketingActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.marketing ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Marketing</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(emailsActive())}>\n          <Grid>\n            <Box sx={sidebar.emails ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Email</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst HumanResources = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageUserActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/users\">\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage User</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageRoleActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/user-roles\">\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Role</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageGroupActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/user-groups\">\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Group</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst RevenueControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueInActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueIn ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue In</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueOutActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueOut ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue Out</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst AccountControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.newCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Customers</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(lostCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.lostCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Lost Customer</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newAccountActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.newAccount ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Accounts</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(mapActive())}>\n          <Grid>\n            <Box sx={sidebar.map ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Trouble Ticket Map</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\nconst EmployeeOversite = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(empOversiteActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.empOversite ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Oversite</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(callsActive())}>\n          <Grid>\n            <Box sx={sidebar.calls ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Phone fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Calls</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(appointmentActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.appointment ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Appointments</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const accordionData = [\n  {\n    name: \"Controls\",\n    id: \"controls\",\n    tiles: <Controls />,\n  },\n\n  {\n    name: \"Human Resources\",\n    id: \"human_resource\",\n    tiles: <HumanResources />,\n  },\n  {\n    name: \"Revenue\",\n    id: \"revenue\",\n    tiles: <RevenueControls />,\n  },\n  {\n    name: \"Customers\",\n    id: \"customers\",\n    tiles: <AccountControls />,\n  },\n  {\n    name: \"Marketing\",\n    id: \"marketing\",\n    tiles: <Marketing />,\n  },\n  {\n    name: \"Employee Oversite\",\n    id: \"empOversite\",\n    tiles: <EmployeeOversite />,\n  },\n];\n\nconst TestingSidebar = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n\n  const [accordions, updateAccordions] = useState(accordionData);\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n\n    const items = Array.from(accordions);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    updateAccordions(items);\n  }\n\n  return (\n    <Fragment>\n      <Box mt={5}>\n        <DragDropContext onDragEnd={handleOnDragEnd}>\n          <Droppable droppableId=\"accordions\">\n            {(provided) => (\n              <Box\n                className=\"accordions\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {accordions.map((item, index) => {\n                  return (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <Accordion\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          <AccordionSummary\n                            expandIcon={<ExpandMoreIcon color=\"primary\" />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                          >\n                            <Typography\n                              align=\"center\"\n                              color=\"primary\"\n                              sx={{ textTransform: \"uppercase\" }}\n                            >\n                              {item.name}\n                            </Typography>\n                          </AccordionSummary>\n                          <AccordionDetails>{item.tiles}</AccordionDetails>\n                        </Accordion>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </Box>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TestingSidebar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\n\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\n// import { UserContext } from '../../context/User';\nimport \"./style.css\";\n\nconst LawyerSidebar = () => {\n  return (\n    <Fragment>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/\">\n            <Grid item>\n              <AddCircle fontSize=\"medium\" />\n            </Grid>\n            <Grid item>DashBoard</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/invoices\">\n            <Grid item>\n              <Receipt fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Invoices</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/ledgers\">\n            <Grid item>\n              <MoneyOff fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Ledger</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/create-task\">\n            <Grid item>\n              <Task fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Manage Task</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/employee-search\">\n            <Grid item>\n              <Work fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Employee Search</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/matter-dashboard\">\n            <Grid item>\n              <AssignmentTurnedIn fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Matters</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/contact\">\n            <Grid item>\n              <AssignmentTurnedIn fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Contact</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n    </Fragment>\n  );\n};\n\nexport default LawyerSidebar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\n\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\n// import { UserContext } from '../../context/User';\nimport \"./style.css\";\n\nconst FirmSidebar = () => {\n  return (\n    <Fragment>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/\">\n            <Grid item>\n              <AddCircle fontSize=\"medium\" />\n            </Grid>\n            <Grid item>DashBoard</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/invoices\">\n            <Grid item>\n              <Receipt fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Invoices</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/users\">\n            <Grid item>\n              <Person fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Manage User</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/manage-categories\">\n            <Grid item>\n              <FileCopy fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Manage Categories</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/ledgers\">\n            <Grid item>\n              <MoneyOff fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Ledger</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/create-task\">\n            <Grid item>\n              <Task fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Manage Task</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/employee-search\">\n            <Grid item>\n              <Work fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Employee Search</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/matter-dashboard\">\n            <Grid item>\n              <AssignmentTurnedIn fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Matters</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/contact\">\n            <Grid item>\n              <AssignmentTurnedIn fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Contact</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n    </Fragment>\n  );\n};\n\nexport default FirmSidebar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\n\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\n// import { UserContext } from '../../context/User';\nimport \"./style.css\";\n\nconst CustomerSidebar = () => {\n  return (\n    <Fragment>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/\">\n            <Grid item>\n              <AddCircle fontSize=\"medium\" />\n            </Grid>\n            <Grid item>DashBoard</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/invoices\">\n            <Grid item>\n              <Receipt fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Invoices</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n\n      <SideBarBtn variant=\"outlined\">\n        <Grid>\n          <Box component={Link} to=\"/create-task\">\n            <Grid item>\n              <Task fontSize=\"medium\" />\n            </Grid>\n            <Grid item>Manage Task</Grid>\n          </Box>\n        </Grid>\n      </SideBarBtn>\n    </Fragment>\n  );\n};\n\nexport default CustomerSidebar;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Box, Paper, Stack,} from \"@mui/material\";\n\nimport AdminSidebar from \"./AdminSidebar\";\nimport LawyerSidebar from \"./LawyerSidebar\";\nimport FirmSidebar from \"./FirmSidebar\";\nimport CustomerSidebar from \"./CutomerSidebar\";\nimport \"./style.css\";\n\nconst Sidebar = () => {\n\n  const { user } = useSelector((state) => state.auth.user);\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: true,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const SidebarRedirect = () => {\n    switch (user.username) {\n      case \"admin\":\n        return <AdminSidebar />;\n      case \"firm\":\n        return <FirmSidebar />;\n      case \"lawyer\":\n        return <LawyerSidebar />;\n      default:\n        return <CustomerSidebar />;\n    }\n  };\n\n\n  return (\n    <Fragment>\n      <Paper component={Stack} elevation={3} spacing={1}>\n        <Box\n          sx={{\n            height: \"calc(83vh - 40px)\",\n            overflowY: \"scroll\",\n          }}\n        >\n          {SidebarRedirect()}\n\n        </Box>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default Sidebar;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  BottomNavigation,\n  BottomNavigationAction,\n  Link,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@mui/material\";\nimport { FooterBar, FooterLink, FooterButton } from \"../../styles/styles\";\nimport {\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport Favorites from \"../Favorite/Favorites\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst Footer = () => {\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <Box mt={3}>\n        {isTabletOrMobile ? (\n          <Box sx={{ color: \"#eee\", backgroundColor: \"#7a4ebf\" }}>\n            <List>\n              <FooterLink to={\"/ledgers\"}>Accounting</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}> Calendar</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}>Contacts</FooterLink>\n            </List>\n            <List>\n              <FooterButton\n                sx={{\n                  color: \"#eee\",\n                  marginLeft: \"1.2rem\",\n                  textTransform: \"uppercase\",\n                  textDecoration: \"none\",\n                  \"&:visited\": {\n                    color: \"#eee\",\n                  },\n                }}\n                variant=\"text\"\n                onClick={handleClickOpen}\n              >\n                Favorites\n              </FooterButton>\n            </List>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n              <DialogContent>\n                <Favorites />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} autoFocus>\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n            <List>\n              <FooterLink to={\"/matters\"}>Matters</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/tasks\"}>Tasks</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}>Workflow</FooterLink>\n            </List>\n          </Box>\n        ) : (\n          <FooterBar>\n            <FooterLink to={\"/ledgers\"}>Accounting</FooterLink> |\n            <FooterLink to={\"/\"}> Calendar</FooterLink> |\n            <FooterLink to={\"/\"}>Contacts</FooterLink> |\n            <FooterButton\n              sx={{\n                color: \"#eee\",\n                textTransform: \"uppercase\",\n                textDecoration: \"none\",\n                \"&:visited\": {\n                  color: \"#eee\",\n                },\n              }}\n              variant=\"text\"\n              onClick={handleClickOpen}\n            >\n              Favorites\n            </FooterButton>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n              <DialogContent>\n                <Favorites />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} autoFocus>\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n            |<FooterLink to={\"/matters\"}>Matters</FooterLink> |\n            <FooterLink to={\"/tasks\"}>Tasks</FooterLink> |\n            <FooterLink to={\"/\"}>Workflow</FooterLink>\n          </FooterBar>\n        )}\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Footer;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Navbar from \"../components/Navbars/Navbar\";\nimport NavbarSec from \"../components/Navbars/NavbarSec\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport { connect } from \"react-redux\";\nimport Chatting from \"../components/Chat/Chat\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  isDisplay,\n  hideSidebar,\n  showSidebar,\n} from \"../redux/features/sidebarSlice\";\n\nimport { Paper, Fab, Popover } from \"@mui/material\";\nimport { Grid, Box, Button } from \"@mui/material\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { Chat, Report } from \"@mui/icons-material\";\n\nimport Footer from \"../components/Footer/Footer\";\n\nconst InnerLayout = ({ children }) => {\n  const { user, isAuthenticated} = useSelector(\n    (state) => state.auth\n  )\n\n  const theme = useTheme();\n\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  const sidebarToggle = useSelector((state) => state.sidebar.display);\n  const dispatch = useDispatch();\n\n  const [drawerOpen, setDrawerOpen] = React.useState(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setDrawerOpen(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setDrawerOpen(null);\n  };\n\n  const openPopover = Boolean(drawerOpen);\n  const id = openPopover ? \"simple-popover\" : undefined;\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleSidebarToggle = () => {\n    if (sidebarToggle) {\n      dispatch(hideSidebar());\n    } else {\n      dispatch(showSidebar());\n    }\n  };\n  const descriptionElementRef = React.useRef(null);\n\n  useEffect(() => {\n    if (isBigScreen) {\n      dispatch(showSidebar());\n    } else if (isTabletOrMobile) {\n      dispatch(hideSidebar());\n    }\n  }, []);\n  useEffect(() => {\n    if (drawerOpen) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [drawerOpen]);\n\n  return (\n    <Paper style={{ margin: \"0\" }}>\n      <Grid contianer rowSpacing={2} columnSpacing={2}>\n        <Grid item lg={12} md={12}>\n          {isAuthenticated ? (\n            <Fragment>\n              <NavbarSec />\n            </Fragment>\n          ) : (\n            <Navbar />\n          )}\n        </Grid>\n\n        {isAuthenticated ? (\n          <Fragment>\n            <Grid item lg={12}>\n              <Navbar />\n            </Grid>\n            <Grid container direction=\"row\" wrap=\"nowrap\">\n              {sidebarToggle ? (\n                <Fragment>\n                  <Grid item lg={2} xs={12} m={3}>\n                    <Sidebar />\n                  </Grid>\n                  <Grid item lg={10} xs={12} p={1}>\n                    <Box>\n                      <Button\n                        onClick={handleSidebarToggle}\n                        p={5}\n                        sx={{\n                          left: \"-8rem\",\n                          top: \"2rem\",\n                        }}\n                      >\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <Grid item lg={12} xs={12} p={1}>\n                    <Box>\n                      <Button onClick={handleSidebarToggle}>\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              )}\n            </Grid>\n            <Grid item lg={12}>\n              <Footer />\n            </Grid>\n          </Fragment>\n        ) : (\n          <Grid item lg={12} xs={12}>\n            {children}\n          </Grid>\n        )}\n        {isAuthenticated? \n        <>\n        <Fab\n          size=\"large\"\n          sx={\n            isDesktopOrLaptop\n              ? {\n                  borderRadius: \"50%\",\n                  backgroundColor: \"#edb4b6\",\n                  position: \"fixed\",\n                  bottom: \"16px\",\n                  left: \"16px\",\n                  color: \"red\",\n                  zIndex: \"200\",\n                  \"&:hover\": {\n                    color: \"red\",\n                  },\n                }\n              : { display: \"none\" }\n          }\n          aria-label=\"report\"\n        >\n          <Report />\n        </Fab>\n        <Fab\n          size=\"large\"\n          onClick={handlePopoverOpen}\n          sx={\n            isDesktopOrLaptop\n              ? {\n                  borderRadius: \"50%\",\n                  backgroundColor: \"#eee\",\n                  position: \"fixed\",\n                  bottom: \"16px\",\n                  right: \"16px\",\n                  color: \"#461594\",\n                  zIndex: \"200\",\n                  \"&:hover\": {\n                    color: \"#7a4ebf\",\n                  },\n                }\n              : { display: \"none\" }\n          }\n          aria-label=\"chat\"\n        >\n          <Chat />\n        </Fab>\n        <Popover\n          open={openPopover}\n          anchorEl={drawerOpen}\n          onClose={handlePopoverClose}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          sx={{ margin: \"-2rem\" }}\n        >\n          <Chatting />\n        </Popover>\n        </>\n        : null}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default InnerLayout;\n","/** @format */\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst PrivateRoutes = ({ children, ...rest }) => {\n\tconst { isAuthenticated } = useSelector((state) => state.auth);\n\n\treturn (\n\t\t<Route {...rest}>\n\t\t\t{isAuthenticated ? children : <Redirect to='/login' />}\n\t\t</Route>\n\t);\n};\n\nexport default PrivateRoutes;\n","/** @format */\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'toggle_button':\n      return {\n        ...state,\n        active: !state.active,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initialState = {\n  active: false,\n};\n","/** @format */\n\nimport React from 'react';\nimport { reducer, initialState } from './reducer';\n\nexport const UserContext = React.createContext({\n  state: initialState,\n  dispatch: () => null,\n});\n\nexport const UserProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <UserContext.Provider value={[state, dispatch]}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","/** @format */\n\n// import styled from \"styled-components\";\nimport { createTheme } from \"@mui/material/styles\";\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    mode: \"light\",\n    primary: {\n      main: \"#796ef0\", //blueish purple\n    },\n    // secondary: {\n    //   main: \"\",\n    // },\n    error: {\n      main: \"#e85355\", //red\n    },\n    warning: {\n      main: \"#fd9905\", // orange\n    },\n    success: {\n      main: \"#28c570\", //green\n    },\n\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n  typography: {\n    htmlFontSize: 14,\n    fontSize: 12,\n    color: \"#333\",\n  },\n});\n\nexport default theme;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport \"./DashboardLayout/style.css\";\n\nimport DashboardContent from \"./DashboardLayout/DashboardContent\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <DashboardContent />\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\nimport { Button, Stack, IconButton } from \"@mui/material\";\nimport styles from \"./tabs.module.css\";\n\nconst Tabs = ({ children }) => {\n  const [activeTab, setActiveTab] = useState(children[0].props.label);\n  const handleClick = (e, newActiveTab) => {\n    e.preventDefault();\n    setActiveTab(newActiveTab);\n  };\n  return (\n    <Fragment>\n      <Stack direction=\"row\" spacing={1}>\n        <ul className={styles.tabs}>\n          {children.map((tab) => (\n            <li\n              className={tab.props.label === activeTab ? styles.current : \"\"}\n              key={tab.props.label}\n            >\n              <Button\n                variant=\"text\"\n                size=\"small\"\n                startIcon={<MoreVert />}\n                onClick={(e) => handleClick(e, tab.props.label)}\n              >\n                {tab.props.label}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      </Stack>\n\n      {children.map((one) =>\n        one.props.label === activeTab ? (\n          <div className={styles.content} key={one.props.label}>\n            {one.props.children}\n          </div>\n        ) : (\n          \"\"\n        ),\n      )}\n    </Fragment>\n  );\n};\n\nexport default Tabs;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  FormControlLabel,\n  Switch,\n  Button,\n  Stack,\n} from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst CreateInvoice = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    matter: \"\",\n    contact: \"\",\n    billable: false,\n    date_range: \"\",\n    create_date: \"\",\n    due_date: \"\",\n    template: \"\",\n    invoice_no: \"\",\n    discount: \"\",\n    submit: false,\n  });\n\n  // const {\n  //   matter,\n  //   contact,\n  //   billable,\n  //   date_range,\n  //   create_date,\n  //   due_date,\n  //   template,\n  //   invoice_no,\n  //   discount,\n  //   submit,\n  // } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  const [invoice, setInvoice] = useState(null);\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoice`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  const [dateRange, setDateRange] = React.useState([null, null]);\n  return (\n    <Fragment>\n      {/* <Typography component=\"h3\" variant=\"h4\">\n        Create New Invoice\n      </Typography>\n      <Box p={3}>\n        <LinkButton to=\"/invoices\" sx={{ float: \"right\" }}>\n          Invoice Dashboard\n        </LinkButton>\n      </Box> */}\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Grid\n          spacing={3}\n          container\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"Matter\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n              autoComplete=\"matter\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"Contact\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              autoComplete=\"contact\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <FormControlLabel\n              sx={{ fontSize: \"12px\", marginLeft: \"1rem\" }}\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Unbillable\"\n            />\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Stack direction=\"row\">\n              <Typography varient=\"caption\" sx={{ marginTop: \"0.7rem\" }}>\n                Range:\n              </Typography>\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateRangePicker\n                  calendars={1}\n                  value={dateRange}\n                  onChange={(newValue) => {\n                    setDateRange(newValue);\n                  }}\n                  renderInput={(startProps, endProps) => (\n                    <Fragment>\n                      <TextField size=\"small\" {...startProps} />\n                      <Box sx={{ mx: 2 }}> to </Box>\n                      <TextField size=\"small\" {...endProps} />\n                    </Fragment>\n                  )}\n                />\n              </LocalizationProvider>\n            </Stack>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          spacing={3}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"create_date\"\n              label=\"Create Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"due_date\"\n              label=\"Due Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"template\"\n              label=\"Template\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"template\"\n              autoComplete=\"template\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"invoice_no\"\n              label=\"Invoice #\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"invoice_no\"\n              autoComplete=\"invoice_no\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"discount\"\n              label=\"Discount\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"discount\"\n              autoComplete=\"discount\"\n            />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <FormControlLabel\n              label=\"Submit For Approvel\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n            />\n          </Grid>\n        </Grid>\n\n        <Grid item lg={12} mt={2}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Sub-Category</TableCell>\n                  <TableCell>Description</TableCell>\n                  <TableCell>Date</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Rate</TableCell>\n                  <TableCell>Sub</TableCell>\n                  <TableCell>Tax</TableCell>\n                  <TableCell>int</TableCell>\n                  <TableCell>Disc.</TableCell>\n                  <TableCell>Total</TableCell>\n                  <TableCell>Biller</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                {/* {invoice?.map((invoice) => (\n                  <TableRow id={invoice.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n\n                    <TableCell>{invoice.sub_cat}</TableCell>\n                    <TableCell>{invoice.discription}</TableCell>\n                    <TableCell>{invoice.date}</TableCell>\n                    <TableCell>{invoice.hours}</TableCell>\n                    <TableCell>{invoice.rate}</TableCell>\n                    <TableCell>{invoice.sub}</TableCell>\n                    <TableCell>{invoice.tax}</TableCell>\n                    <TableCell>{invoice.int}</TableCell>\n                    <TableCell>{invoice.dics}</TableCell>\n                    <TableCell>{invoice.total}</TableCell>\n                    <TableCell>{invoice.biller}</TableCell>\n                  </TableRow>\n                ))} */}\n              </TableHead>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item mt={3} direction=\"row\">\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Notes\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"Accept Online Payment\"\n              />\n            }\n            label=\"Accept Online Payment\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Accept Payments for Less\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (Compound / Simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Terms and Conditions\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (compund/ simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Use Trust Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add all unpaid invoices\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"use Operating Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Send Reminders Every\"\n          />\n          <TextField size=\"small\" sx={{ width: \"5rem\" }} />\n          <Typography\n            varient=\"caption\"\n            component=\"span\"\n            sx={{ marginLeft: \"0.5rem \" }}\n          >\n            day(s)/week(s)\n          </Typography>\n\n          {/* <Button\n            variant=\"contained\"\n            sx={{ float: \"right\" }}\n            endIcon={<SaveIcon />}\n          >\n            Send\n          </Button> */}\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateInvoice;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Grid,\n  Box,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormControl,\n  Checkbox,\n  Typography,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  MenuItem,\n  InputLabel,\n  Select,\n  Button,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst PaymentPlan = () => {\n  const [paymentData, setPaymentData] = useState({\n    payment_no: \"File# - 001\",\n    due: \"2020/07/01\",\n    amount: \"$ 750.00\",\n    late_fee: \"$22.00\",\n    total_due: \"$ 775.00\",\n    payment: \"$775.00\",\n    posted: \"$2020/07/05\",\n    method: \"Check\",\n  });\n\n  return (\n    <Fragment>\n      <Grid container mt={3} mb={3}>\n        <Grid item lg={4}>\n          <Typography>Start Balance:</Typography>\n          <Typography>Start Date:</Typography>\n          <Typography>Interest Rate:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Amout:</Typography>\n          <Typography>Payment Date:</Typography>\n          <Typography>No Payments:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Remaining:</Typography>\n          <Typography>Last Payment:</Typography>\n          <Typography>Last Payment $:</Typography>\n        </Grid>\n      </Grid>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Payment #</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Amout</TableCell>\n            <TableCell>Late Fee</TableCell>\n            <TableCell>Total Due</TableCell>\n            <TableCell>Payment</TableCell>\n            <TableCell>Posted</TableCell>\n            <TableCell>Method</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{paymentData.payment_no}</TableCell>\n          <TableCell>{paymentData.due}</TableCell>\n          <TableCell>{paymentData.amount} </TableCell>\n          <TableCell>{paymentData.late_fee}</TableCell>\n          <TableCell>{paymentData.total_due}</TableCell>\n          <TableCell>{paymentData.payment}</TableCell>\n          <TableCell>{paymentData.posted}</TableCell>\n          <TableCell>{paymentData.method}</TableCell>\n        </TableBody>\n      </Table>\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Close\n      </Button>\n      <Grid container>\n        <Grid item lg={6}>\n          <Typography>Post agreement Balance:</Typography>\n        </Grid>\n        <Grid item lg={6}>\n          <Typography>Start Date:</Typography>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst InvoicePayment = () => {\n  const [invoiceData, setInvoiceData] = useState({\n    invoice_no: \"i-2106-0004542\",\n    due: \"2020/07/01\",\n    tax: \"$ 15.00\",\n    interest: \"$2.35\",\n    time: \"$ 1,234.50\",\n    hard: \"$457.00\",\n    soft: \"$45.00\",\n    total: \"$ 1,753.85\",\n  });\n\n  return (\n    <Fragment>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Invoice</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Tax</TableCell>\n            <TableCell>Interest</TableCell>\n            <TableCell>Time</TableCell>\n            <TableCell>Hard</TableCell>\n            <TableCell>Soft</TableCell>\n            <TableCell>Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{invoiceData.invoice_no}</TableCell>\n          <TableCell>{invoiceData.due}</TableCell>\n          <TableCell>{invoiceData.tax} </TableCell>\n          <TableCell>{invoiceData.interest}</TableCell>\n          <TableCell>{invoiceData.time}</TableCell>\n          <TableCell>{invoiceData.hard}</TableCell>\n          <TableCell>{invoiceData.soft}</TableCell>\n          <TableCell>{invoiceData.total}</TableCell>\n        </TableBody>\n      </Table>{\" \"}\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Pay\n      </Button>{\" \"}\n    </Fragment>\n  );\n};\n\nconst Payment = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [isPlan, setIsPlan] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    payment_type: \"\",\n    date: \"\",\n    retainer: \"\",\n    payment: \"\",\n    date_range: \"\",\n    menu: \"\",\n    bank_account: \"\",\n    payment_method: \"\",\n  });\n\n  const {\n    payment_type,\n    date,\n    retainer,\n    payment,\n    date_range,\n    menu,\n    bank_account,\n    payment_method,\n  } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{\n              \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n            }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"payment_type\"\n                defaultValue=\"cash\"\n                name=\"payment_type\"\n                onChange={(e) => onChange(e)}\n                id=\"payment_type\"\n                autoComplete=\"payment_type\"\n              >\n                <FormControlLabel\n                  value=\"cash\"\n                  control={<Radio />}\n                  label=\"Cash\"\n                />\n                <FormControlLabel value=\"cc\" control={<Radio />} label=\"CC\" />\n                <FormControlLabel\n                  value=\"wire\"\n                  control={<Radio />}\n                  label=\"Wire\"\n                />\n                <FormControlLabel\n                  value=\"check\"\n                  control={<Radio />}\n                  label=\"Check\"\n                />\n              </RadioGroup>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              id=\"date\"\n              label=\"date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <FormControlLabel\n              value=\"retainer\"\n              control={<Checkbox />}\n              label=\"Retainer\"\n            />\n            <FormControlLabel\n              value=\"payment\"\n              control={<Checkbox />}\n              label=\"Payment\"\n            />\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n              <DateRangePicker\n                calendars={1}\n                value={dateRange}\n                onChange={(newValue) => {\n                  setDateRange(newValue);\n                }}\n                renderInput={(startProps, endProps) => (\n                  <Fragment>\n                    <TextField size=\"small\" {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField size=\"small\" {...endProps} />\n                  </Fragment>\n                )}\n              />\n            </LocalizationProvider> */}\n            <FormControl sx={{ width: \"12rem\" }}>\n              <InputLabel id=\"demo-simple-select-label\">Date Range</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={date_range}\n                label=\"Age\"\n                onChange={(e) => onChange(e)}\n              >\n                <MenuItem value={10}>Ten</MenuItem>\n                <MenuItem value={20}>Twenty</MenuItem>\n                <MenuItem value={30}>Thirty</MenuItem>\n              </Select>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"menu\"\n              label=\"menu\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"menu\"\n              autoComplete=\"menu\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bank_account\"\n              label=\"bank_account\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"bank_account\"\n              autoComplete=\"bank_account\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"payment_method\"\n              label=\"payment_method\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"payment_method\"\n              autoComplete=\"payment_method\"\n            />\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"isPlan\"\n                defaultValue={isPlan}\n                name=\"isPlan\"\n                onChange={(e) => setIsPlan(e)}\n                id=\"isPlan\"\n                autoComplete=\"isPlan\"\n              >\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Invoice Payment\"\n                />\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Payment Plan\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Box>\n        </Grid>\n        <Grid item lg={12}>\n          <TableContainer>\n            {isPlan ? <PaymentPlan /> : <InvoicePayment />}\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Payment;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  FormControlLabel,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  Button,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport { styled } from \"@mui/material/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\nimport CreateInvoice from \"./CreateInvoice\";\nimport Payment from \"./Payment\";\n\nconst Filters = () => {\n  const [invoiceToggle, setInvoiceToggle] = useToggle(false);\n  const [paymentToggle, setPaymentToggle] = useToggle(false);\n  const [paid, setPaid] = useToggle(false);\n\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid\n          spacing={2}\n          item\n          lg={12}\n          direction=\"Row\"\n          sx={{\n            \"& .MuiTextField-root\": { m: 1 },\n            \"& .MuiFormControl-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            onClick={() => setInvoiceToggle(invoiceToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Create Invoice\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={invoiceToggle}\n            onClose={() => setInvoiceToggle(invoiceToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {\"Create Invoice\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <CreateInvoice />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <Button\n            variant=\"contained\"\n            onClick={() => setPaymentToggle(paymentToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Receive Money\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={paymentToggle}\n            onClose={() => setPaymentToggle(paymentToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Receive Money\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <Payment />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <FormControlLabel\n            label=\" Paid/ Unpaid\"\n            control={<Switch checked={paid} onChange={() => setPaid(paid)} />}\n          />\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Invoice</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Bill Date</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Times</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <Typography\n            component=\"span\"\n            variant=\"caption\"\n            sx={{ width: \"8rem\", m: 2, fontSize: \"1.2rem\" }}\n          >\n            Status:\n          </Typography>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Any </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Dropd-own</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n} from \"@mui/material\";\nimport Filters from \"./Filters\";\n\nconst InvoiceList = () => {\n  const [invoice, setInvoice] = useState(null);\n\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoices`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  return (\n    <Fragment>\n      <Filters />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Invoice</TableCell>\n              <TableCell>Created</TableCell>\n              <TableCell>Due</TableCell>\n              <TableCell>Tax</TableCell>\n              <TableCell>Interest</TableCell>\n              <TableCell>Discount</TableCell>\n              <TableCell>Total</TableCell>\n              <TableCell>Balance</TableCell>\n              <TableCell>Last Payment</TableCell>\n              <TableCell>Approval Date</TableCell>\n              <TableCell>Approval by</TableCell>\n              <TableCell>Created by</TableCell>\n            </TableRow>\n            {/* {invoice?.map((invoice) => (\n              <TableRow id={invoice.id}>\n                <TableCell>\n                  <Checkbox />\n                </TableCell>\n                <TableCell>{invoice.id}</TableCell>\n                <TableCell>{invoice.created}</TableCell>\n                <TableCell>{invoice.due}</TableCell>\n                <TableCell>{invoice.tax}</TableCell>\n                <TableCell>{invoice.interest}</TableCell>\n                <TableCell>{invoice.discount}</TableCell>\n                <TableCell>{invoice.total}</TableCell>\n                <TableCell>{invoice.balance}</TableCell>\n                <TableCell>{invoice.last_payment}</TableCell>\n                <TableCell>{invoice.approvel_date}</TableCell>\n                <TableCell>{invoice.approvel.by}</TableCell>\n                <TableCell>{invoice.created_by}</TableCell>\n              </TableRow>\n            ))} */}\n          </TableHead>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default InvoiceList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport InvoiceList from \"./InvoiceList\";\nimport Payment from \"./Payment\";\nimport CreateInvoice from \"./CreateInvoice\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <InvoiceList />\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React from \"react\";\nimport { Alert } from \"@mui/material\";\n\nexport const ActionAlerts = (status) => {\n  return <Alert severity=\"error\">{status}</Alert>;\n};\n\nexport const TotalDays = (date1, date2) => {\n  let dt1 = new Date(date1);\n  let dt2 = new Date(date2);\n  return Math.floor(\n    (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) -\n      Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) /\n      (1000 * 60 * 60 * 24),\n  );\n};\n\nexport const GetDate = (date) => {\n  let newDate =\n    date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n  return newDate;\n};\n\nexport const GetTime = (time) => {\n  let newTime =\n    time.getHours() + \":\" + time.getMinutes() + \":\" + time.getSeconds();\n  return newTime;\n};\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Box,\n  containerClasses,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\n\nconst MatterList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const [redTask, setRedTask] = useState(false);\n  const [greenTask, setGreenTask] = useState(false);\n  const [yellowTask, setYellowTask] = useState(false);\n  const [myTask, setMyTask] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/tasks/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTasks(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Box component={Paper} p={2}>\n      <FormGroup aria-label=\"position\" row>\n        <FormControlLabel\n          control={\n            <Checkbox value={myTask} onChange={() => setMyTask(!myTask)} />\n          }\n          label=\"My Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox value={redTask} onChange={() => setRedTask(!redTask)} />\n          }\n          label=\"Red Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={greenTask}\n              onChange={() => setGreenTask(!greenTask)}\n            />\n          }\n          label=\"Green Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={yellowTask}\n              onChange={() => setYellowTask(!yellowTask)}\n            />\n          }\n          label=\"Yellow Tasks\"\n        />\n      </FormGroup>\n      <Typography component=\"h3\">All Matters Task's List</Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assign To</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : tasks?.map((data) => {\n                  return (\n                    <TableRow id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        {data.task_nature === \"urgent\" ? (\n                          <CircleIcon color=\"error\" />\n                        ) : (\n                          <CircleIcon color=\"success\" />\n                        )}\n                      </TableCell>\n                      <TableCell>{data.matter}</TableCell>\n                      <TableCell>\n                        {data.last_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>\n                        {data.next_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default MatterList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, CardContent, Typography } from \"@mui/material\";\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Tasks cleared Last day\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Goal Today\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Personal Best\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Company Record\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Link, Typography, List, ListItem, Paper } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nconst Calendar = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography variant=\"h6\" component=\"h7\">\n          My Calendar at a Glance\n        </Typography>\n        <List>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Start motion for trail</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Calendar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  Typography,\n} from \"@mui/material\";\n\nconst Filters = () => {\n  // const [user, setUser] = useState(\"Any user\");\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item>\n          <Typography>Assign To</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Organized By</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Status</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, Button, Typography } from \"@mui/material\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst MatterCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2} mt={1.5}>\n        <Grid item lg={9}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"error.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Urgent\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"warning.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Concern\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"success.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Start\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"white\",\n                  color: \"black\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      New\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3}>\n          <Button\n            variant=\"outlined\"\n            sx={{\n              minWidth: 100,\n              height: 40,\n              borderRadius: \"0.5rem\",\n              bgcolor: \"white\",\n              color: \"black\",\n            }}\n          >\n            Import\n          </Button>\n          <LinkButton to=\"/create-matter\"> + New </LinkButton>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterCards;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  TableBody,\n} from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst MatterListLong = () => {\n  const [matters, setMatters] = useState([]);\n\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/new-matter/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setMatters(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Matter Contact</TableCell>\n              <TableCell>Matter Type</TableCell>\n              <TableCell>Bill Rate</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assigned to</TableCell>\n              <TableCell>Billable</TableCell>\n              <TableCell>Open Invoice</TableCell>\n              <TableCell>Trust Account</TableCell>\n              <TableCell>Last Payment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : matters?.map((data, index) => {\n                  return (\n                    <TableRow id={index}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        <CircleIcon color=\"error\" />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n                      <TableCell>{data.contact}</TableCell>\n                      <TableCell>{data.matter_type}</TableCell>\n                      <TableCell>{data.billing_rate}</TableCell>\n                      <TableCell>{data.open_date}</TableCell>\n                      <TableCell>{data.close_date}</TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 100)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {\" \"}\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />{\" \"}\n                        - {data.close_date}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default MatterListLong;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Button, Typography } from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\n\nimport { LocalizationProvider, DateRangePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { CreateMatter, CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, TotalDays, GetDate } from \"../../utils/ActionAlerts\";\n\nconst NewMatter = () => {\n  // const matter_number = Math.floor(Math.random() * 10000000);\n  const mask = \"____-__-__\";\n  const matter_number = 23568;\n  const [openDate, setOpenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [whenDate, setWhenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [closeDate, setCloseDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [totalDays, setTotalDays] = useState(0);\n  const [matterData, setMatterData] = useState({\n    contact: 0,\n    matter_name: \"\",\n    matter_type: \"\",\n    matter_source: \"\",\n    matter_status: \"\",\n    assign_to: 0,\n    assign_by: 0,\n    billing_rate: 0,\n    alerts: \"\",\n\n    jurisdiction: \"\",\n    status_limitaion: null,\n    opposing_counsel: \"\",\n    where: \"\",\n    involved: \"\",\n    witnesses: \"\",\n    narrative: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    involved,\n    witnesses,\n    narrative,\n  } = matterData;\n\n  const onChange = (e) =>\n    setMatterData({ ...matterData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let open_date = GetDate(openDate);\n    let close_date = GetDate(closeDate);\n    let when = GetDate(whenDate);\n    let total_days = totalDays;\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      matter_type,\n      matter_source,\n      matter_status,\n      assign_to,\n      assign_by,\n      billing_rate,\n      alerts,\n      open_date,\n      close_date,\n      total_days,\n      jurisdiction,\n      status_limitaion,\n      opposing_counsel,\n      where,\n      when,\n      involved,\n      witnesses,\n      narrative,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  useEffect(() => {\n    let days = TotalDays(openDate, closeDate);\n    setTotalDays(days);\n  }, [openDate, closeDate]);\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Matter\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item lg={8}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"contact\"\n              type=\"number\"\n              min=\"0\"\n              value={contact}\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_number\"\n              label=\"matter_number\"\n              type=\"text\"\n              value={matter_number}\n              // onChange={(e) => onChange(e)}\n              id=\"matter_number\"\n              disabled\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_name\"\n              label=\"matter_name\"\n              type=\"text\"\n              value={matter_name}\n              onChange={(e) => onChange(e)}\n              id=\"matter_name\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"alerts\"\n              label=\"alerts\"\n              type=\"text\"\n              value={alerts}\n              onChange={(e) => onChange(e)}\n              id=\"alerts\"\n              autoComplete=\"alerts\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_type\"\n              label=\"matter_type\"\n              type=\"text\"\n              value={matter_type}\n              onChange={(e) => onChange(e)}\n              id=\"matter_type\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_source\"\n              label=\"matter_source\"\n              type=\"text\"\n              value={matter_source}\n              onChange={(e) => onChange(e)}\n              id=\"matter_source\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_status\"\n              label=\"matter_status\"\n              type=\"text\"\n              value={matter_status}\n              onChange={(e) => onChange(e)}\n              id=\"matter_status\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"assign_to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_rate\"\n              label=\"billing_rate\"\n              step=\"0.01\"\n              type=\"number\"\n              value={billing_rate}\n              onChange={(e) => onChange(e)}\n              id=\"billing_rate\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Open Date\"\n                value={openDate}\n                name=\"open\"\n                id=\"open\"\n                onChange={(e) => setOpenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Close Date\"\n                value={closeDate}\n                name=\"closed\"\n                id=\"closed\"\n                onChange={(e) => setCloseDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"total_days\"\n              label=\"total_days\"\n              type=\"number\"\n              value={totalDays}\n              onChange={(e) => setTotalDays(TotalDays(openDate, closeDate))}\n              id=\"total_days\"\n              disabled\n            />\n          </Grid>\n\n          <Grid item lg={4}>\n            <br />\n            <Typography component=\"h5\" variant=\"h6\">\n              Legal Concerns\n            </Typography>\n            <br />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"jurisdiction\"\n              label=\"jurisdiction\"\n              type=\"text\"\n              value={jurisdiction}\n              onChange={(e) => onChange(e)}\n              id=\"jurisdiction\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"status_limitaion\"\n              label=\"status_limitaion\"\n              type=\"text\"\n              value={status_limitaion}\n              onChange={(e) => onChange(e)}\n              id=\"status_limitaion\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"opposing_counsel\"\n              label=\"opposing_counsel\"\n              type=\"text\"\n              value={opposing_counsel}\n              onChange={(e) => onChange(e)}\n              id=\"opposing_counsel\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <Typography component=\"h5\" variant=\"h6\" sx={{ fontSize: \"1rem\" }}>\n              Event Detail\n            </Typography>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"where\"\n              label=\"where\"\n              type=\"text\"\n              value={where}\n              onChange={(e) => onChange(e)}\n              id=\"where\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"When\"\n                value={whenDate}\n                name=\"when\"\n                id=\"when\"\n                onChange={(e) => setWhenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"involved\"\n              label=\"Who was involved\"\n              type=\"text\"\n              value={involved}\n              onChange={(e) => onChange(e)}\n              id=\"involved\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"witnesses\"\n              label=\"witnesses\"\n              type=\"text\"\n              value={witnesses}\n              onChange={(e) => onChange(e)}\n              id=\"witnesses\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              label=\"Customer Narrative of the Event\"\n              multiline\n              type=\"text\"\n              rows={10}\n              value={narrative}\n              onChange={(e) => onChange(e)}\n              defaultValue=\"Narrative\"\n              name=\"narrative\"\n              id=\"narrative\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewMatter;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { styled } from \"@mui/material/styles\";\n\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  CardContent,\n  Typography,\n  Card,\n  Grid,\n  Box,\n  List,\n  ListItem,\n  Paper,\n  InputBase,\n} from \"@mui/material\";\n\nconst MatterTask = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components=\"p\">\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components=\"p\">\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components=\"p\">YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Activities = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components={Typography}>\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components={Typography}>\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components={Typography}>YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Classification\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                % time spent\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Matter Completion\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst MatterDetail = () => {\n  const Search = styled(\"div\")(({ theme }) => ({\n    position: \"relative\",\n    borderRadius: \"1.5rem\",\n    backgroundColor: \"#eee\",\n    \"&:hover\": {\n      backgroundColor: \"#ddd\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"40%\",\n  }));\n\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }));\n\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: \"inherit\",\n    \"& .MuiInputBase-input\": {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"md\")]: {\n        width: \"20ch\",\n      },\n    },\n  }));\n  // const [matters, setMatters] = useState(null);\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n        </Grid>\n        <Grid item lg={12}>\n          <Grid container spacing={2}>\n            <Grid item mt={2} lg={7}>\n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Recent Document</TableCell>\n                      <TableCell>Version</TableCell>\n                      <TableCell>Last Open</TableCell>\n                      <TableCell>User</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>1</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>2</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>3</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableContainer>\n              <Grid container spacing={3}>\n                <Grid item>\n                  <Activities />\n                </Grid>\n                <Grid item>\n                  <MatterTask />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item mt={2} lg={5}>\n              <Cards />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterDetail;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport MatterList from \"./MatterList\";\nimport { Grid, Box } from \"@mui/material\";\nimport Cards from \"./Cards\";\nimport Calendar from \"./Calendar\";\nimport Filters from \"./Filters\";\nimport MatterCards from \"./MatterCards\";\nimport MatterListLong from \"./MatterListLong\";\nimport NewMatter from \"./NewMatter\";\nimport MatterDetail from \"./MatterDetail\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item lg={12}>\n            <Filters />\n          </Grid>\n          <Grid item lg={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item lg={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst MatterDashboard = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container spacing={2}>\n          <Grid item lg={7}>\n            <MatterList />\n            <Calendar />\n          </Grid>\n          <Grid item lg={5}>\n            <Cards />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashboard\">\n          <MatterDashboard />\n        </div>\n        <div label=\"Matter\">\n          <Matters />\n        </div>\n        <div label=\"New Matter\">\n          <NewMatter />\n        </div>\n        <div label=\"Smith vs. Jhon\">\n          <MatterDetail />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerActivity = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setActivityData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow bgColor=\"#796ef0\">\n              <TableCell>\n                <Typography color=\"white\">Date</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Files</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Sub-Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Notes</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Source</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">User</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">In/Out</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          {/* {loading\n            ? null\n            : activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })} */}\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default LedgerActivity;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  TextField,\n  FormControlLabel,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Fillters = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [billedby, setBilledby] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Filter By</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={filter}\n            label=\"Filter By\"\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Billed by</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={billedby}\n            label=\"Billed By\"\n            onChange={(e) => setBilledby(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={status}\n            label=\"Age\"\n            onChange={(e) => setStatus(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n          <DateRangePicker\n            calendars={1}\n            value={dateRange}\n            onChange={(newValue) => {\n              setDateRange(newValue);\n            }}\n            renderInput={(startProps, endProps) => (\n              <Fragment>\n                <TextField size=\"small\" {...startProps} />\n                <Box sx={{ mx: 2 }}> to </Box>\n                <TextField size=\"small\" {...endProps} />\n              </Fragment>\n            )}\n          />\n        </LocalizationProvider>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Fillters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={7}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Time Entries\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={200}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      f\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Soft Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={65000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Hard Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={5000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={70000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Trust\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={4000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Due\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={100000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item={5}>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>User</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell> Jhon Johnson</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={74.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={39007.05}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Mark MacCalloff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={4.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={800.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Cindy Madenuff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={127.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={41372.5}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerCards;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n  Button,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { LinkButton } from \"../../styles/styles\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerTImeList = () => {\n  const [ledgerData, setLedgerData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setLedgerData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <Box>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Print\n        </Button>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Export\n        </Button>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>Cateagory</TableCell>\n                <TableCell>Sub-Category</TableCell>\n                <TableCell>Detail</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Qty</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Total</TableCell>\n                <TableCell>BillBy</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n                ? null\n                : ledgerData?.map((data) => {\n                    return (\n                      <TableBody id={data.id}>\n                        <TableCell>\n                          <Checkbox />\n                        </TableCell>\n                        <TableCell>{data.category}</TableCell>\n                        <TableCell>{data.sub_category}</TableCell>\n                        <TableCell>{data.detail}</TableCell>\n                        <TableCell>{data.date}</TableCell>\n                        <TableCell>{data.qty}</TableCell>\n                        <TableCell>\n                          {data.billable ? \"Billable\" : \"Paid\"}\n                        </TableCell>\n                        <TableCell>\n                          <NumberFormat\n                            value={data.qty * 25}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix=\"$\"\n                          />\n                        </TableCell>\n                        <TableCell>{data.bill_by}</TableCell>\n                      </TableBody>\n                    );\n                  })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default LedgerTImeList;\n","/** @format */\n\nimport { Typography, Box, Grid } from \"@mui/material\";\nimport React, { Fragment } from \"react\";\nimport Fillters from \"./Fillters\";\nimport LedgerCards from \"./LedgerCards\";\nimport LedgerTimeList from \"./LedgerTImeList\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LegderDashbard = () => {\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <Box>\n          <LedgerCards />\n          <Fillters />\n          <LedgerTimeList />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LegderDashbard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box, Typography, Paper, TextField } from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerDoc = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={1}>\n        <Grid item lg={4} sx={{}}>\n          <Box\n            sx={{\n              width: \"80%\",\n              minHeight: \"25rem\",\n              padding: \"5rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            MS Word Document On Pleading or Non Pleading Paper\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Box\n            sx={{\n              padding: \"5rem 2rem 5rem 2rem\",\n              minHeight: \"25rem\",\n              width: \"80%\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Space for 2nd Document to be opend if user wants it\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Grid container>\n            <Grid item lg={12}>\n              <Box component={Paper} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n              </Box>\n            </Grid>\n            <Grid item lg={12}>\n              <Box component={Paper} mt={2} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={5}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"filled\"\n                  name=\"detail\"\n                  type=\"text\"\n                  value=\"Quick Notes\"\n                  id=\"detail\"\n                  sx={{ borderRadius: \"1rem\" }}\n                />\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerDoc;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  RadioGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Radio,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst Time = () => {\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [timeToggle, setTimeToggle] = useToggle(true);\n  const [billable, setBillable] = useToggle(false);\n\n  // const [bill, setBill] = useToggle(false);\n  const [time, setTime] = useState(\"\");\n  const [timeData, setTimeData] = useState({\n    contact: 0,\n    matter_name: 0,\n    category: \"\",\n    sub_category: \"\",\n    // time: \"\",\n    hard: false,\n    soft: false,\n    unit: 0,\n    qty: 0,\n    rate: 0,\n    file: \"\",\n    detail: \"\",\n    bill_by: 0,\n    note: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    category,\n    sub_category,\n    hard,\n    soft,\n    unit,\n    // time,\n    qty,\n    rate,\n    file,\n    detail,\n    bill_by,\n\n    note,\n  } = timeData;\n  const onChange = (e) =>\n    setTimeData({ ...timeData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    let date = GetDate(pickDate);\n\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      category,\n      sub_category,\n      hard,\n      soft,\n      unit,\n      qty,\n      rate,\n      time,\n      date,\n      detail,\n      bill_by,\n      billable,\n      note,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/add-time/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Typography component=\"h3\" variant=\"h4\">\n          Time\n        </Typography>\n        <Grid\n          container\n          spacing={2}\n          mt={2}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n          }}\n        >\n          <Grid item xs={12}>\n            <Grid container p={3}>\n              <Grid item xs={6}>\n                <FormControlLabel\n                  size=\"large\"\n                  label=\"Time\"\n                  labelPlacement=\"start\"\n                  control={\n                    <Switch\n                      size=\"large\"\n                      checked={timeToggle}\n                      onChange={(e) => setTimeToggle(e)}\n                    />\n                  }\n                />\n                {timeToggle ? null : (\n                  <Box>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">Expense</FormLabel>\n                      <RadioGroup\n                        row\n                        aria-label=\"expense\"\n                        defaultValue=\"\"\n                        name=\"expense\"\n                        id=\"expense\"\n                      >\n                        <FormControlLabel\n                          value=\"hard\"\n                          control={<Radio />}\n                          label=\"Hard\"\n                        />\n                        <FormControlLabel\n                          value=\"soft\"\n                          control={<Radio />}\n                          label=\"Soft\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  </Box>\n                )}\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"matter\"\n                  label=\"matter\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"matter\"\n                  autoComplete=\"matter\"\n                  disabled\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"contact\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                  disabled\n                />\n              </Grid>\n            </Grid>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"category\"\n              label=\"category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"category\"\n              autoComplete=\"category\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"sub_category\"\n              label=\"sub_category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"sub_category\"\n              autoComplete=\"sub_category\"\n            />\n            {timeToggle ? (\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"rate\"\n                label=\"rate\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"rate\"\n                autoComplete=\"rate\"\n              />\n            ) : (\n              <Fragment>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"unit\"\n                  label=\"unit\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"unit\"\n                  autoComplete=\"unit\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"qty\"\n                  label=\"Qty\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"qty\"\n                  autoComplete=\"qty\"\n                />\n                <Box m={1}>\n                  <Typography component=\"lable\"> Receipt(s) </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n              </Fragment>\n            )}\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"HH:MM\"\n              mask={[\"H\", \"H\", \"M\", \"M\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time\"\n              name=\"time\"\n              id=\"time\"\n              value={time}\n              type=\"text\"\n              onValueChange={(e) => setTime(e.value)}\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Date\"\n                value={pickDate}\n                name=\"pickdate\"\n                id=\"pickdate\"\n                onChange={(e) => setPickDate(e)}\n                renderInput={(params) => <TextField size=\"small\" {...params} />}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"detail\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n              autoComplete=\"detail\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bill_by\"\n              label=\"bill_by\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bill_by\"\n              autoComplete=\"bill_by\"\n            />\n            <FormControlLabel\n              size=\"large\"\n              label=\"Billable\"\n              labelPlacement=\"start\"\n              control={\n                <Switch\n                  size=\"large\"\n                  checked={billable}\n                  onChange={() => setBillable(billable)}\n                />\n              }\n            />\n            <br />\n          </Grid>\n        </Grid>\n        <Grid container>\n          <Grid item lg={12}>\n            <TextField\n              fullWidth\n              multiline\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"note\"\n              rows={4}\n              // label=\"note\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              placeholder=\"Private / internal notes\"\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Time;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport LedgerActivity from \"./LedgerActivity\";\nimport LegderDashbard from \"./LedgerDashbard\";\nimport LedgerDoc from \"./LedgerDoc\";\nimport LedgerTImeList from \"./LedgerTImeList\";\nimport Time from \"./Time\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Ledger\">\n          <LegderDashbard />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Documents\">\n          <LedgerDoc />\n        </div>\n        <div label=\"Time\">\n          <Time />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst SubCategory = () => {\n  const [subCategory, setSubCategory] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/sub-category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setSubCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/sub-category/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n      })\n      .catch((err) => setStatus(err.statusText));\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/sub-category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n      })\n      .catch((err) => {\n        FetchData();\n      });\n  };\n  const showSubcategory = () => {\n    if (subCategory.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return subCategory.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Sub-Category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Sub-Category\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Sub-Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? showSubcategory() : <Typography>Loading ...</Typography>}\n    </Fragment>\n  );\n};\n\nexport default SubCategory;\n","/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst catHandler = (id) => {\n  console.log(id);\n};\n\nconst Category = () => {\n  const [category, setCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/category/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const showCategory = () => {\n    if (category.length === 0) {\n      return <p> no data found...</p>;\n    } else\n      return category.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Add New Category\"}</DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? showCategory() : <Typography>Loading ...</Typography>}\n    </Fragment>\n  );\n};\n\nexport default Category;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Classification = () => {\n  const [classification, setClassification] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/classification/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setClassification(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/classification/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n        return <ActionAlerts value={{ status: status }} />;\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/api/classification/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return <ActionAlerts value={{ status: res.statusText }} />;\n      })\n      .catch((err) => {\n        FetchData();\n        return <ActionAlerts value={{ status: err.statusText }} />;\n      });\n  };\n  const showClassification = () => {\n    if (classification.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return classification.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Classification\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Classification\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Classification Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? showClassification() : <Typography>Loading ...</Typography>}\n    </Fragment>\n  );\n};\n\nexport default Classification;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Typography, Grid, Button, Box } from \"@mui/material\";\n\nimport SubCategory from \"./SubCategory\";\nimport Category from \"./Category\";\nimport Classification from \"./Classification\";\n\nconst ManageCategory = () => {\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={8}>\n          <Typography component=\"h3\" variant=\"h5\">\n            Manage Category, Sub-category, Classification\n          </Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"error\">\n              Delete Checked\n            </Button>\n          </Box>\n        </Grid>\n\n        <Grid item lg={12}>\n          <Grid container spacing={5} mt={1}>\n            <Grid item lg={4}>\n              <Category />\n            </Grid>\n            <Grid item lg={4}>\n              <SubCategory />\n            </Grid>\n            <Grid item lg={4}>\n              <Classification />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageCategory;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Button,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { ActionAlerts, GetTime, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Contact = () => {\n  const [clientNo, setClientNo] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [ssn, setSsn] = useState(\"\");\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [homeNo, setHomeNo] = useState(\"\");\n  const [officeNo, setOfficeNo] = useState(\"\");\n  const [faxNo, setFaxNo] = useState(\"\");\n  const [otherNo, setOtherNo] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [plus4, setPlus4] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [contactData, setContactData] = useState({\n    // company info\n    company_name: \"\",\n    website: \"\",\n    ger_email: \"\",\n    billing_email: \"\",\n    // address\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    note: \"\",\n    f_name: \"\",\n    l_name: \"\",\n    email_1: \"\",\n    email_2: \"\",\n    email_3: \"\",\n    // other address\n    street2: \"\",\n    suite2: \"\",\n    city2: \"\",\n    state2: \"\",\n    office: \"\",\n    team: \"\",\n    member: \"\",\n    assign_to: \"\",\n    contact: \"\",\n    relation: \"\",\n  });\n\n  const {\n    company_name,\n    website,\n    ger_email,\n    billing_email,\n    street,\n    suite,\n    city,\n    state,\n    note,\n    f_name,\n    l_name,\n    email_1,\n    email_2,\n    email_3,\n    street2,\n    suite2,\n    city2,\n    state2,\n    office,\n    team,\n    member,\n    assign_to,\n    contact,\n    relation,\n  } = contactData;\n\n  const onChange = (e) => {\n    e.persist();\n    setContactData({ ...contactData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    //   let date = GetDate(pickDate);\n    //   const body = JSON.stringify({\n    //     company_name,\n    //     website,\n    //     ger_email,\n    //     billing_email,\n    //     street,\n    //     suite,\n    //     city,\n    //     state,\n    //     zip,\n    //     plus4,\n    //     client_no,\n    //     f_name,\n    //     l_name,\n    //     dob,\n    //     ssn,\n    //     mobile_no,\n    //     home_no,\n    //     office_no,\n    //     fax_no,\n    //     other_no,\n    //     email_1,\n    //     email_2,\n    //     email_3,\n    //     street2,\n    //     suite2,\n    //     city2,\n    //     state2,\n    //     zip2,\n    //     plus42,\n    //     office,\n    //     team,\n    //     member,\n    //     assign_to,\n    //     contact,\n    //     relation,\n    //   });\n    //   axios\n    //     .post(`${process.env.REACT_APP_API_URL}/api/contact/`, body, CONFIG)\n    //     .then((res) => {\n    //       <ActionAlerts value={{ status: res.statusText, message: \"Success\" }} />;\n    //     })\n    //     .catch((err) => {\n    //       <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />;\n    //     });\n    //   console.log(body);\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container p={2}>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h5\">\n              Company info\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"company_name\"\n              label=\"Company Name\"\n              type=\"text\"\n              value={company_name}\n              onChange={(e) => onChange(e)}\n              id=\"company_name\"\n              autoComplete=\"company_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Client #\"\n              id=\"clientno\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"clientno\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={clientNo}\n              onValueChange={(e) => setClientNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"First Name\"\n              label=\"f_name\"\n              type=\"text\"\n              value={f_name}\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Last Name\"\n              label=\"l_name\"\n              type=\"text\"\n              value={l_name}\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"DOB\"\n              id=\"dob\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              name=\"dob\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={dob}\n              onValueChange={(e) => setDob(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"#### #### ##\"\n              customInput={TextField}\n              label=\"SSN\"\n              id=\"ssn\"\n              name=\"ssn\"\n              value={ssn}\n              type=\"text\"\n              onValueChange={(e) => setSsn(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobileNo}\n              onValueChange={(e) => setMobileNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={homeNo}\n              onValueChange={(e) => setHomeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Office #\"\n              id=\"offlice_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"office_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={officeNo}\n              onValueChange={(e) => setOfficeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Fax #\"\n              id=\"fax_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"fax_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={faxNo}\n              onValueChange={(value) => setFaxNo(value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Other #\"\n              id=\"other_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"other_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={otherNo}\n              onValueChange={(e) => setOtherNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_1\"\n              label=\"Email 1\"\n              type=\"email\"\n              value={email_1}\n              onChange={(e) => onChange(e)}\n              id=\"email_1\"\n              autoComplete=\"email_1\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_2\"\n              label=\"Email 2\"\n              type=\"email\"\n              value={email_2}\n              onChange={(e) => onChange(e)}\n              id=\"email_2\"\n              autoComplete=\"email_2\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_3\"\n              label=\"Email 3\"\n              value={email_3}\n              type=\"email\"\n              onChange={(e) => onChange(e)}\n              id=\"email_3\"\n              autoComplete=\"email_3\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"street\"\n              type=\"text\"\n              value={street}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              value={city}\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip\"\n              label=\"zip\"\n              type=\"text\"\n              id=\"zip\"\n              type=\"text\"\n              value={zip}\n              onValueChange={(e) => setZip(e.value)}\n            />\n\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus4\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus4\"\n              type=\"text\"\n              value={plus4}\n              onValueChange={(e) => setPlus4(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              multiline\n              rows={5}\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Notes...\"\n              label=\"note\"\n              type=\"text\"\n              value={note}\n              onChange={(e) => onChange(e)}\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h6\">\n              Alternate Information\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"webiste\"\n              label=\"Webiste\"\n              type=\"text\"\n              value={website}\n              onChange={(e) => onChange(e)}\n              id=\"webiste\"\n              autoComplete=\"webiste\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"ger_email\"\n              label=\"General Email\"\n              type=\"text\"\n              value={ger_email}\n              onChange={(e) => onChange(e)}\n              id=\"ger_email\"\n              autoComplete=\"ger_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_email\"\n              label=\"Invoice/ Billing Email\"\n              type=\"text\"\n              value={billing_email}\n              onChange={(e) => onChange(e)}\n              id=\"billing_email\"\n              autoComplete=\"billing_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"Street\"\n              type=\"text\"\n              value={street2}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite2}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              type=\"text\"\n              value={city2}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip2\"\n              label=\"Zip\"\n              type=\"text\"\n              id=\"zip2\"\n              type=\"text\"\n              value={zip2}\n              onValueChange={(e) => setZip2(e.value)}\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus42\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus42\"\n              type=\"text\"\n              value={plus42}\n              onValueChange={(e) => setPlus42(e.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Source\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"office\"\n                  label=\"Office\"\n                  type=\"text\"\n                  value={office}\n                  onChange={(e) => onChange(e)}\n                  id=\"office\"\n                  autoComplete=\"office\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"team\"\n                  label=\"Team\"\n                  type=\"text\"\n                  value={team}\n                  onChange={(e) => onChange(e)}\n                  id=\"team\"\n                  autoComplete=\"team\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"member\"\n                  label=\"Member\"\n                  type=\"text\"\n                  value={member}\n                  onChange={(e) => onChange(e)}\n                  id=\"member\"\n                  autoComplete=\"member\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Assigned To\n                </Typography>\n                <FormControl\n                  size=\"small\"\n                  sx={{ mt: 2, mb: 2, minWidth: \"14rem\" }}\n                >\n                  <InputLabel id=\"demo-simple-select-autowidth-label\">\n                    Assigned To\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-autowidth-label\"\n                    id=\"demo-simple-select-autowidth\"\n                    value={assign_to}\n                    onChange={(e) => onChange(e)}\n                    autoWidth\n                    label=\"assign_to\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>Auto Assign</em>\n                    </MenuItem>\n                    <MenuItem value={10}>Twenty</MenuItem>\n                    <MenuItem value={21}>Twenty one</MenuItem>\n                    <MenuItem value={22}>Twenty one and a half</MenuItem>\n                  </Select>\n                </FormControl>\n\n                <Button variant=\"contained\" color=\"primary\">\n                  Auto Assign\n                </Button>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Linked Contacts\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"Contact\"\n                  type=\"text\"\n                  value={contact}\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"relation\"\n                  label=\"Relation\"\n                  type=\"text\"\n                  value={relation}\n                  onChange={(e) => onChange(e)}\n                  id=\"relation\"\n                  autoComplete=\"relation\"\n                />\n              </Grid>\n            </Grid>\n            <Box sx={{ float: \"right\" }}>\n              <Button variant=\"contained\" type=\"submit\" endIcon={<SaveIcon />}>\n                Save\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Contact;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Button,\n  TextField,\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Tab,\n  Paper,\n  Box,\n  Typography,\n  Switch,\n} from \"@mui/material\";\nimport { TabList, TabContext, TabPanel } from \"@mui/lab\";\nimport { connect } from \"react-redux\";\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport NumberFormat from \"react-number-format\";\n\n// import { update_profile } from \"../../store/actions/profile\";\n\nconst Profile = ({ profile }) => {\n  const [value, setValue] = React.useState(\"1\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [underGradYear, setUnderGradYear] = useState(\"\");\n\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [barNo, setBarNo] = useState(\"\");\n  const [practiceTime, setPracticeTime] = useState(\"\");\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    mobile: 0,\n    phone: 0,\n    state: \"\",\n    city: \"\",\n    language: \"\",\n    locate: false,\n    search_active: false,\n    law_school: \"\",\n    grad_year: \"\",\n    bar_admit_date: \"\",\n    undergrad_school: \"\",\n    undergrad_area: \"\",\n    undergrad_year: \"\",\n    bar_no: 0,\n    admitted_practice: \"\",\n    practice_time: \"\",\n    longest_tenure: \"\",\n    average_tenure: \"\",\n    current_tenure: \"\",\n    past_bar_companies_no: \"\",\n    primary_area: \"\",\n  });\n  const {\n    username,\n    email,\n    mobile,\n    phone,\n    state,\n    city,\n    language,\n    locate,\n    search_active,\n    law_school,\n    grad_year,\n    bar_admit_date,\n    undergrad_school,\n    undergrad_area,\n    undergrad_year,\n    bar_no,\n    admitted_practice,\n    practice_time,\n    longest_tenure,\n    average_tenure,\n    current_tenure,\n    past_bar_companies_no,\n    primary_area,\n  } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let id = profile.id;\n    const body = JSON.stringify({\n      username,\n      email,\n      mobile,\n      phone,\n      state,\n      city,\n      language,\n      locate,\n      search_active,\n      law_school,\n      grad_year,\n      bar_admit_date,\n      undergrad_school,\n      undergrad_area,\n      undergrad_year,\n      bar_no,\n      admitted_practice,\n      practice_time,\n      longest_tenure,\n      average_tenure,\n      current_tenure,\n      past_bar_companies_no,\n      primary_area,\n    });\n    console.log(body);\n    axios\n      .patch(\n        `${process.env.REACT_APP_API_URL}/api/profile/${id}/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Fragment>\n      {/* {profile ? ( */}\n      <Box p={5}>\n        <Paper elevation={5} sx={{ borderRadius: 3 }}>\n          <TabContext value={value} p={8}>\n            <Box component=\"form\" onSubmit={(e) => onSubmit(e)}>\n              <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                <TabList\n                  onChange={handleChange}\n                  aria-label=\"lab API tabs example\"\n                >\n                  <Tab label=\"Profile\" value=\"1\" />\n                  <Tab label=\"Education\" value=\"2\" />\n                  <Tab label=\"Work History\" value=\"3\" />\n                </TabList>\n              </Box>\n              <TabPanel value=\"1\">\n                <Grid container spacing={2}>\n                  <Grid item sx={12} xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Username\"\n                      value={username}\n                      id=\"username\"\n                      name=\"username\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.username}\n                      disabled\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Mobile #\"\n                      id=\"mobile\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"mobile\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={mobileNo}\n                      onValueChange={(e) => setMobileNo(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Phone #\"\n                      id=\"phone\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"phone\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={phoneNo}\n                      onValueChange={(e) => setPhoneNo(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Email\"\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.email}\n                      disabled\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"State\"\n                      id=\"state\"\n                      name=\"state\"\n                      type=\"text\"\n                      value={state}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.state}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"City\"\n                      id=\"city\"\n                      name=\"city\"\n                      type=\"text\"\n                      value={city}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.city}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Language(s)\"\n                      value={language}\n                      id=\"language\"\n                      name=\"language\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.language}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Willing to locate\"\n                      id=\"locate\"\n                      name=\"locate\"\n                      value={locate}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.locate}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Search Type (Active/ Passiv)\"\n                      id=\"search_active\"\n                      name=\"search_active\"\n                      value={search_active}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.search_active}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      m={5}\n                      variant=\"contained\"\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"2\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"2\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Law School\"\n                      id=\"law_school\"\n                      name=\"law_school\"\n                      value={law_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.law_school}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Grad year\"\n                      id=\"grad_year\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      name=\"grad_year\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={gradYear}\n                      onValueChange={(e) => setGradYear(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####/##/##\"\n                      placeholder=\"YYYY/MM/DD\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n                      customInput={TextField}\n                      label=\"Bar Admittance Date\"\n                      id=\"bar_admit_date\"\n                      name=\"bar_admit_date\"\n                      value={barDate}\n                      onValueChange={(e) => setBarDate(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrad school\"\n                      id=\"undergrad_school\"\n                      name=\"undergrad_school\"\n                      value={undergrad_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_school}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrade area of study\"\n                      id=\"undergrad_area\"\n                      name=\"undergrad_area\"\n                      value={undergrad_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_area}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      label=\"Undergrade year\"\n                      id=\"undergrad_year\"\n                      name=\"undergrad_year\"\n                      value={underGradYear}\n                      type=\"text\"\n                      onValueChange={(e) => setUnderGradYear(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"#### #### ##\"\n                      customInput={TextField}\n                      label=\"Bar #\"\n                      id=\"bar_no\"\n                      name=\"bar_no\"\n                      value={barNo}\n                      type=\"text\"\n                      onValueChange={(e) => setBarNo(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Admitted practice (state & District)\"\n                      value={admitted_practice}\n                      id=\"admitted_practice\"\n                      name=\"admitted_practice\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.admitted_practice}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      variant=\"contained\"\n                      mb={5}\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"3\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"3\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Practive Time (months / years)\"\n                      id=\"practice_time\"\n                      name=\"practice_time\"\n                      value={practiceTime}\n                      type=\"text\"\n                      onValueChange={(e) => setPracticeTime(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Longest tenure (months / years)\"\n                      id=\"longest_tenure\"\n                      name=\"longest_tenure\"\n                      value={longestTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setLongestTenure(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Average tenure (months / years)\"\n                      value={averageTenure}\n                      id=\"average_tenure\"\n                      name=\"average_tenure\"\n                      type=\"text\"\n                      onValueChange={(e) => setAverageTenure(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Time at Current Company (months / years)\"\n                      id=\"current_tenure\"\n                      name=\"current_tenure\"\n                      value={currentTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setCurrentTenure(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"# of Companies Post Bar\"\n                      id=\"past_bar_companies_no\"\n                      name=\"past_bar_companies_no\"\n                      value={past_bar_companies_no}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.past_bar_companies_no}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Primary areas of Law\"\n                      id=\"primary_area\"\n                      name=\"primary_area\"\n                      value={primary_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.primary_area}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Button\n                      variant=\"contained\"\n                      type=\"submit\"\n                      sx={{\n                        float: \"right\",\n                        marginTop: \"10rem\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n            </Box>\n          </TabContext>\n        </Paper>\n      </Box>\n      {/* // ) : ( // <Typography>Something wend wrong!</Typography>\n      // )} */}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  profile: state.auth.profile,\n});\n\nexport default connect(mapStateToProps)(Profile);\n","/** @format */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  TextField,\n  Switch,\n  FormControlLabel,\n  Box,\n  Grid,\n  Button,\n  Typography,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport axios from \"axios\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\n\nconst CreateTask = () => {\n  const [dueDate, setDueDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [bill, setBill] = useToggle(true);\n  const [matterData, setMatterData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useToggle(true);\n  const [file, setFile] = useState(\"\");\n  const [taskData, setTaskData] = useState({\n    matter_id: 0,\n    matter_contact: 0,\n    matter: \"\",\n    task: \"\",\n    filename: \"\",\n    assign_to: 0,\n    detail: \"\",\n  });\n\n  const {\n    matter_id,\n    matter_contact,\n    matter,\n    task,\n    filename,\n    assign_to,\n    detail,\n  } = taskData;\n\n  const onChange = (e) =>\n    setTaskData({ ...taskData, [e.target.name]: e.target.value });\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/matter/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setMatterData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log(matter_id, matter_contact, matter, task);\n    let due_at = GetDate(dueDate);\n    let is_billable = bill;\n    let is_private = isPrivate;\n\n    const body = JSON.stringify({\n      matter_id,\n      matter_contact,\n      matter,\n      task,\n      file,\n      is_billable,\n      is_private,\n      due_at,\n      assign_to,\n      detail,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-task/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n          \"& .MuiSelect-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Task\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_id\"\n              label=\"matter_id\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_id}\n              onChange={(e) => onChange(e)}\n              id=\"matter_id\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"matter\"\n              type=\"text\"\n              min=\"0\"\n              value={matter}\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"task\"\n              label=\"Task\"\n              type=\"text\"\n              value={task}\n              onChange={(e) => onChange(e)}\n              id=\"task\"\n              autoComplete=\"task\"\n            />\n            <Box ml={2} mt={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Attach File \"\n                labelPlacement=\"start\"\n                control={\n                  <input\n                    type=\"file\"\n                    name=\"filename\"\n                    id=\"file\"\n                    onChange={(e) => onChange(e)}\n                  />\n                }\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"file\"\n                label=\"please chose any file\"\n                type=\"text\"\n                min=\"0\"\n                value={filename}\n                onChange={(e) => setFile(filename)}\n                id=\"file\"\n                disabled\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_contact\"\n              label=\"matter_contact\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_contact}\n              onChange={(e) => onChange(e)}\n              id=\"matter_contact\"\n            />\n            <Box p={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Billable\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={bill}\n                    onChange={() => setBill(bill)}\n                  />\n                }\n              />\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Private\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={isPrivate}\n                    onChange={() => setIsPrivate(isPrivate)}\n                  />\n                }\n              />\n            </Box>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Due Date\"\n                value={dueDate}\n                name=\"dueDate\"\n                id=\"dueDate\"\n                onChange={(e) => setDueDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"Assign to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              autoComplete=\"assign_to\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              multiline\n              rows={5}\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"Detail\"\n              type=\"text\"\n              value={detail}\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n            />\n\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateTask;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport ViewTasks from \"./ViewTasks\";\nimport CreateTask from \"./CreateTask\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Task\">\n          <ViewTasks />\n        </div>\n        <div label=\"Create Task\">\n          <CreateTask />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport DashBoard from \"../Admin/DashBoard\";\n\nimport {\n  Box,\n  Typography,\n  Tabs,\n  Tab,\n  IconButton,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\n\nimport TabContext from \"@mui/lab/TabContext\";\nimport TabList from \"@mui/lab/TabList\";\n\nimport TabPanel from \"@mui/lab/TabPanel\";\nimport PropTypes from \"prop-types\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\n\n// components of tabs\nimport Invoice from \"../../Invoice\";\nimport Matter from \"../../Matter\";\nimport Ledger from \"../../Ledger\";\nimport Favorite from \"../../Favorite/Favorites\";\nimport Category from \"../../Category/ManageCategory\";\nimport Contact from \"../../Contact/Contact\";\nimport Profile from \"../../Profile/Profile\";\nimport Tasks from \"../../Tasks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport {\n  addNewTab,\n  removeNewTab,\n  removeLastNewTab,\n} from \"../../../redux/features/searchTabSlice\";\nimport { addTab, removeTab } from \"../../../redux/features/tabSlice\";\n\nconst data = [\n  { name: \"invoice\", content: <Invoice /> },\n  { name: \"matter\", content: <Matter /> },\n  { name: \"ledger\", content: <Ledger /> },\n  { name: \"favorite\", content: <Favorite /> },\n  { name: \"category\", content: <Category /> },\n  { name: \"contact\", content: <Contact /> },\n  { name: \"profile\", content: <Profile /> },\n  { name: \"tasks\", content: <Tasks /> },\n];\nconst component = {\n  invoice: <Invoice />,\n  matter: <Matter />,\n  ledger: <Ledger />,\n  favorite: <Favorite />,\n  category: <Category />,\n  contact: <Contact />,\n  profile: <Profile />,\n  tasks: <Tasks />,\n};\n\nconst AdminDashboard = () => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const tabList = useSelector((state) => state.tabs);\n  const newTabList = useSelector((state) => state.newTabs);\n  const dispatch = useDispatch();\n\n  // search tab will match the text and display tab\n  const [wordEntered, setWordEntered] = useState(\"\");\n\n  const searchItem = () => {\n    let selectedItem = data.filter((value) => {\n      if (value.name === wordEntered) {\n        return true;\n      }\n    });\n  };\n  const handleChangeSearch = (e) => {\n    setWordEntered(e.target.value);\n    let id = tabList.length + 1;\n    dispatch(\n      addTab({\n        id: id,\n        tab: e.target.value,\n      }),\n    );\n    dispatch(removeLastNewTab());\n    setValue(id);\n    searchItem();\n  };\n  const handleRemoveTab = (tab) => {\n    dispatch(removeTab(tab));\n    setValue(0);\n  };\n  const handleRemoveNewTab = (tab) => {\n    dispatch(removeNewTab(tab));\n    setValue(0);\n  };\n\n  const addSearchTab = () => {\n    let id = newTabList.length + 10;\n    setTimeout(\n      dispatch(\n        addNewTab({\n          id: id,\n          name: \"newtab\",\n        }),\n      ),\n      5000,\n    );\n\n    setValue(id);\n  };\n  const displayNewTabsName = () => {\n    if (newTabList) {\n      return newTabList.map((tab) => (\n        <Tab\n          key={tab.id}\n          value={tab.id}\n          label={\n            <span>\n              newtab\n              <IconButton\n                component=\"div\"\n                onClick={() => handleRemoveNewTab(tab)}\n              >\n                <CloseIcon />\n              </IconButton>\n            </span>\n          }\n        />\n      ));\n    } else return null;\n  };\n  const displayTabsName = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <Tab\n          key={tab.id}\n          value={tab.id}\n          label={\n            <span>\n              {\" \"}\n              {tab.name}\n              <IconButton component=\"div\" onClick={() => handleRemoveTab(tab)}>\n                <CloseIcon />\n              </IconButton>\n            </span>\n          }\n        />\n      ));\n    } else return null;\n  };\n  const searchTab = () => {\n    return (\n      <Box\n        noValidate\n        sx={{\n          p: \"2px 4px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          width: \"50%\",\n          borderRadius: \"5rem\",\n          backgroundColor: \"#dfdfdf\",\n        }}\n      >\n        <Select\n          fullWidth\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value=\"\"\n          label=\"Search....\"\n          onChange={handleChangeSearch}\n          sx={{\n            \" & .MuiOutlinedInput-notchedOutline\": {\n              border: \"none\",\n            },\n          }}\n        >\n          {data.map((item, index) => (\n            <MenuItem key={index} value={item.name}>\n              {item.name}\n            </MenuItem>\n          ))}\n        </Select>\n\n        <IconButton type=\"submit\" sx={{ p: \"10px\" }} aria-label=\"search\">\n          {wordEntered.length === 0 ? <SearchIcon /> : <CloseIcon />}\n        </IconButton>\n      </Box>\n    );\n  };\n  const displaySearchTabs = () => {\n    if (newTabList) {\n      return newTabList.map((tab) => (\n        <TabPanel value={tab.id}>{searchTab()}</TabPanel>\n      ));\n    } else return null;\n  };\n  const displayTabs = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <TabPanel value={tab.id}>{component[tab.name]}</TabPanel>\n      ));\n    } else return null;\n  };\n\n  const renderTabs = () => {\n    return (\n      <Box sx={{ width: \"100%\" }}>\n        <TabContext value={value}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              variant=\"scrollable\"\n              scrollButtons\n              allowScrollButtonsMobilearia-label=\"lab API tabs example\"\n            >\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label=\"Dashboard\"\n                value={0}\n              />\n\n              {displayTabsName()}\n              {displayNewTabsName()}\n\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label={\n                  <IconButton\n                    component=\"div\"\n                    onClick={() => dispatch(addNewTab())}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                }\n                onClick={addSearchTab}\n                value={100}\n              />\n            </Tabs>\n          </Box>\n          <TabPanel value={0}>\n            <DashBoard />\n          </TabPanel>\n          {displayTabs()}\n          {displaySearchTabs()}\n          <TabPanel value={100}></TabPanel>\n        </TabContext>\n      </Box>\n    );\n  };\n  useEffect(() => {\n    renderTabs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <Fragment>{renderTabs()}</Fragment>;\n};\n\nexport default AdminDashboard;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { LinearProgress, Box, Grid, Typography } from \"@mui/material\";\n\nconst ProgressBar = () => {\n  const [progress, setProgress] = useState(69);\n  return (\n    <Box paddingLeft={3} paddingRight={3}>\n      <Grid container>\n        <Grid item lg={1} xs={12}>\n          <Typography>{progress}%</Typography>\n        </Grid>\n        <Grid item lg={11} xs={12} mt={2} mb={5}>\n          <LinearProgress variant=\"determinate\" value={progress} />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ProgressBar;\n","/** @format */\n\nimport React from \"react\";\n\nimport { Typography, Box, Paper, Grid } from \"@mui/material\";\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from \"@mui/material\";\n\nconst randomDate = (start, end) => {\n  const getDateTime = new Date(\n    start.getTime() + Math.random() * (end.getTime() - start.getTime()),\n  );\n  const date = getDateTime.toLocaleDateString();\n  const hour = getDateTime.getHours();\n  const min = getDateTime.getMinutes();\n\n  return date + \" \" + hour + \":\" + min;\n};\n\nconst Task = () => {\n  return (\n    <Grid container>\n      <Grid item lg={12} xs={12}>\n        <Typography component=\"h5\" variant=\"h6\" color=\"primary\">\n          My Tasks\n        </Typography>\n        <TableContainer component={Paper}>\n          <Table size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    ID\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Date\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Subject\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Detail\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow bgColor=\"#e85355\">\n                <TableCell>\n                  <Typography variant=\"caption\">123452</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Submit Document X</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display first 3 links\n                  </Typography>{\" \"}\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#fd9905\">\n                <TableCell>\n                  <Typography variant=\"caption\">113457</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Y</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display more details\n                  </Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#28c570\">\n                <TableCell>\n                  <Typography variant=\"caption\">113455</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Z</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Note in popup</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"white\">\n                <TableCell>\n                  <Typography variant=\"caption\">113458</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document XY</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display First 3 links\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Task;\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nexport const AdminCards = () => {\n  return (\n    <>\n      <Grid container spacing={1}>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5} xs={12}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    New Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    Lost Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport const LawyerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Projected Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={230} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Annual Trending Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={768} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const FirmCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={6} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Lost Customers\n              </Typography>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const CustomerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={2}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Balance\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Payment Due\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={12345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nconst Cards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                New Matters\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={3425}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n// import axios from 'axios';\n\nimport { Grid } from \"@mui/material\";\n\nimport Calender from \"../Calender\";\nimport ProgressBar from \"../ProgressBar\";\n\nimport Tasks from \"../Tasks\";\nimport { CustomerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={3}>\n        <Grid item lg={2} xs={12}>\n          <CustomerCards />\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Calender />\n        </Grid>\n        <Grid item p={2} lg={6} xs={12}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <ProgressBar />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Button, Grid, Box, List, ListItem, ListItemText } from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst Templates = () => {\n  return (\n    <Fragment>\n      <Grid container mt={1} spacing={1}>\n        <Grid item xs={12} m={2}>\n          <Button variant=\"contained\" size=\"small\">\n            Merge Fields.XLS\n          </Button>\n          <Box sx={{ float: \"right\" }}>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Doc\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New PDF\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Email\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Edit\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Save\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Close\n            </Button>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Word Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Report Money</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - Report Time</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Report Billed hours</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              PDF Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>P001 - Write of Execution</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P002 - Memo of Cost</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P003 - Settlement Letter</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Email Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Invoice Email</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - New Client</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Firing Client</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              padding: \"15rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Templates can be opened here to edit them. user can add/ remove\n            merge fields directly to the document or PDF\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Templates;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Client/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\n\n\nconst ClientDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default ClientDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const PieChart = () => {\n  const state = {\n    series: [86, 14],\n    options: {\n      chart: {\n        height: 500,\n        type: \"pie\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"65%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val + \"%\";\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Prodcutive v. Non-Productive Time\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n        horizontalAlign: \"center\",\n      },\n      colors: [\"#738df5\", \"#eaa3ff\"],\n      labels: [\"Non Productive\", \"Productive\"],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"pie\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            background: \"#aaa\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shade: \"gark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\", \"pink\"],\n        stops: [0, 3],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"user 1\",\n        data: [44, 55, 41, 37, 22, 43, 21],\n      },\n      {\n        name: \"user 2\",\n        data: [53, 32, 33, 52, 13, 43, 32],\n      },\n      {\n        name: \"User 3\",\n        data: [12, 17, 11, 9, 15, 11, 20],\n      },\n      {\n        name: \"User 4\",\n        data: [9, 7, 5, 8, 6, 9, 4],\n      },\n    ],\n    options: {\n      chart: {\n        type: \"bar\",\n        height: 350,\n        stacked: true,\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        borderRadius: 8,\n        colors: [\"#fff\"],\n      },\n\n      title: {\n        text: \"% Indicating User Ranking\",\n      },\n      xaxis: {\n        categories: [\n          \"Word per Min\",\n          \"Matter Completed\",\n          \"Revenue Generated\",\n          \"Articals Submitted\",\n          \"New Client\",\n          \"New Matter\",\n        ],\n        labels: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: undefined,\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      fill: {\n        opacity: 1,\n      },\n      color: [\"#738df5\", \"#eaa3ff\", \"#738df5\", \"#eaa3ff\"],\n      legend: {\n        show: false,\n        position: \"top\",\n        horizontalAlign: \"left\",\n        offsetX: 40,\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Grid } from \"@mui/material\";\nimport Calender from \"../Calender\";\nimport Tasks from \"../Tasks\";\nimport { Chart2, PieChart, BarChart } from \"./Chart\";\nimport { LawyerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={2}>\n          <LawyerCards />\n        </Grid>\n        <Grid item lg={4}>\n          <PieChart />\n        </Grid>\n        <Grid item lg={6}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={4}>\n          <Chart2 />\n        </Grid>\n        <Grid item lg={8}>\n          <BarChart />\n        </Grid>\n        <Grid item>\n          <Calender />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Lawyer/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst LawyerDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default LawyerDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const Chart = () => {\n  const state = {\n    series: [110, 110, 19, 80],\n    options: {\n      chart: {\n        height: 500,\n        type: \"donut\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"55%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Matter by Type\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      colors: [\"#03a5fc\", \"#fcd200\", \"#fca400\", \"#003f5c\"],\n      labels: [\n        \"Business Contacts\",\n        \"Criminal Defence\",\n        \"Personal Injury\",\n        \"Family Law\",\n      ],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"donut\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            // background: \"#333\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"solid\",\n      gradient: {\n        shade: \"dark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\"],\n        stops: [0, 100],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"Profit\",\n        data: [640, 505, 210, 108, 760, 410, 440, 140, 660, 320],\n      },\n      {\n        name: \"Loss\",\n        data: [530, 302, 420, 220, 290, 800, 160, 490, 708, 110],\n      },\n    ],\n\n    options: {\n      colors: [\"#e85355\", \"#28c570\"],\n      chart: {\n        height: 100,\n        type: \"bar\",\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n        },\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function (val) {\n          return \"$\" + val;\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return \"$ \" + val + \"\";\n          },\n        },\n      },\n\n      xaxis: {\n        categories: [\n          \"Jan\",\n          \"Feb\",\n          \"Mar\",\n          \"Apr\",\n          \"May\",\n          \"Jun\",\n          \"July\",\n          \"Aug\",\n          \"Sep\",\n          \"Oct\",\n        ],\n      },\n\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"right\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart2 = () => {\n  const state = {\n    series: [\n      {\n        data: [19, 57, 78, 40, 95, 25],\n      },\n    ],\n\n    options: {\n      chart: {\n        height: 350,\n        type: \"bar\",\n      },\n      colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n      plotOptions: {\n        bar: {\n          columnWidth: \"45%\",\n          distributed: true,\n        },\n      },\n      dataLabels: {\n        enabled: true,\n        formatter: function (val) {\n          return val + \"%\";\n        },\n      },\n      legend: {\n        show: false,\n      },\n      title: {\n        text: \"% of Task Completed by User\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      xaxis: {\n        categories: [\n          \"M. Jones\",\n          \"R. Smith\",\n          \"T.Sweeney\",\n          \"S. Booker\",\n          \"A. Knighter\",\n          \"J. King\",\n        ],\n        labels: {\n          style: {\n            // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n            fontSize: \"12px\",\n          },\n        },\n\n        legend: {\n          show: false,\n          dropShadow: false,\n          position: \"right\",\n          labels: {\n            useSeriesColors: true,\n          },\n          onItemClick: {\n            toggleDataSeries: true,\n          },\n          formatter: function (seriesName, opts) {\n            return (\n              seriesName +\n              \":  <NumberFormat value={\" +\n              opts.w.globals.series[opts.seriesIndex] +\n              \"} displayType={'text'} thousandSeparator={true}/>\"\n            );\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart3 = () => {\n  const state = {\n    // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n    options: {\n      series: [\n        {\n          data: [750, 280, 500, 720],\n        },\n      ],\n      chart: {\n        type: \"bar\",\n        height: 380,\n      },\n      plotOptions: {\n        bar: {\n          barHeight: \"100%\",\n          borderRadius: 8,\n          distributed: true,\n          horizontal: true,\n          dataLabels: {\n            position: \"top\",\n          },\n        },\n      },\n      //       light blue,  yellow, orange, dark blue,\n      colors: [\"#fcd200\", \"#fca400\", \"#003f5c\", \"#03a5fc\"],\n      dataLabels: {\n        enabled: false,\n        textAnchor: \"start\",\n        style: {\n          colors: [\"#fff\"],\n        },\n        formatter: function (val, opt) {\n          return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val;\n        },\n        offsetX: 0,\n        dropShadow: {\n          enabled: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        colors: [\"#fff\"],\n      },\n      xaxis: {\n        categories: [\n          \"Criminal Defense\",\n          \"Personal Injury\",\n          \"Family Law\",\n          \"Business Contract\",\n        ],\n      },\n      yaxis: {\n        labels: {\n          show: true,\n        },\n      },\n      title: {\n        text: \"Revenue By Mater Type\",\n        align: \"center\",\n        floating: true,\n      },\n\n      tooltip: {\n        theme: \"light\",\n        x: {\n          show: false,\n        },\n        y: {\n          formatter: function (val, opt) {\n            return (\n              opt.w.globals.labels[opt.dataPointIndex] + \": $ \" + val + \" k\"\n            );\n          },\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.options.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Paper, Grid, Box } from \"@mui/material\";\n\nimport Tasks from \"../Tasks\";\nimport { FirmCards } from \"../Cards\";\n\nimport { Chart, Chart2, BarChart, BarChart2, BarChart3 } from \"./Charts\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      {/*main dashboard section for display  */}\n      <Box component={Paper} elevation={3} mt={4}>\n        <Grid container spacing={2}>\n          <Grid item lg={8} xs={12}>\n            <FirmCards />\n            <Grid container>\n              <Grid item lg={5} xs={12}>\n                <Chart2 />\n              </Grid>\n              <Grid item lg={7} xs={12}>\n                <Tasks />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Chart />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <BarChart />\n          </Grid>\n          <Grid item lg={6} xs={6}>\n            <BarChart2 />\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <BarChart3 />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Firm/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst FirmDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default FirmDashboard;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport AdminDashboard from \"../components/Dashboard/UserRoles/AdminDashboard\";\nimport ClientDashboard from \"../components/Dashboard/UserRoles/ClientDashboard\";\nimport LawyerDashboard from \"../components/Dashboard/UserRoles/LawyerDashboard\";\nimport FirmDashboard from \"../components/Dashboard/UserRoles/FirmDashboard\";\n\nconst Dashboard = () => {\n\tconst { user } = useSelector((state) => state.auth.user);\n\n\t// checker type of user\n\tconst [localuser, setLocalUser] = useState({\n\t\tusername: \"Guest\",\n\t\tis_firm: false,\n\t\tis_lawyer: false,\n\t\tis_client: true,\n\t});\n\n\tuseEffect(() => {\n\t\tif (user) {\n\t\t\tsetLocalUser({\n\t\t\t\tusername: user.username,\n\t\t\t\tis_firm: user.is_firm,\n\t\t\t\tis_lawyer: user.is_lawyer,\n\t\t\t\tis_client: user.is_client,\n\t\t\t});\n\t\t}\n\t}, [user]);\n\n\tconst dashboardRedirect = () => {\n\t\tswitch (user.username) {\n\t\t\tcase \"admin\":\n\t\t\t\treturn <AdminDashboard />;\n\t\t\tcase \"firm\":\n\t\t\t\treturn <FirmDashboard />;\n\t\t\tcase \"lawyer\":\n\t\t\t\treturn <LawyerDashboard />;\n\t\t\tdefault:\n\t\t\t\treturn <ClientDashboard />;\n\t\t}\n\t};\n\treturn <>{dashboardRedirect()}</>;\n};\n\nexport default Dashboard;\n","/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { signIn, reset } from \"../../redux/features/authSlice\";\n\nimport {\n\tAvatar,\n\tButton,\n\tPaper,\n\tGrid,\n\tBox,\n\tTypography,\n\tTextField,\n\tAlert,\n} from \"@mui/material\";\n\nimport AlertMassage from \"../../components/Alerts/Alerts\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport { toast } from \"react-toastify\";\nimport BackgroundImage from \"../../asserts/login_light.png\";\n\nconst Login = () => {\n\tconst {\n\t\tuser,\n\t\tisLoading,\n\t\tisError,\n\t\tisSuccess,\n\t\tisAuthenticated,\n\t\tmessage,\n\t} = useSelector((state) => state.auth);\n\tconst [formData, setFormData] = useState({\n\t\tusername: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t});\n\n\tconst { username, email, password } = formData;\n\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\t\n\t\tif (isAuthenticated) {\n\t\t\treturn <Redirect to='/' />;\n\t\t\n\t\t}\n\t}, [user, isError, isSuccess, message, dispatch]);\n\n\tconst onChange = (e) => {\n\t\tsetFormData((prevState) => ({\n\t\t\t...prevState,\n\t\t\t[e.target.name]: e.target.value,\n\t\t}));\n\t};\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst userData = {\n\t\t\tusername,\n\t\t\temail,\n\t\t\tpassword,\n\t\t};\n\n\t\tdispatch(signIn(userData));\n\t};\n\n\tif (isLoading) {\n\t\treturn \"Loading...\";\n\t}\n\tif (isAuthenticated) {\n\t\treturn <Redirect to='/' />;\n\t}\n\treturn (\n\t\t<Grid container component='main' sx={{ height: \"87vh\" }}>\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t\txs={false}\n\t\t\t\tsm={4}\n\t\t\t\tmd={8}\n\t\t\t\tsx={{\n\t\t\t\t\tbackgroundImage: `url(${BackgroundImage})`,\n\t\t\t\t\tbackgroundRepeat: \"no-repeat\",\n\t\t\t\t\tbackgroundColor: (t) =>\n\t\t\t\t\t\tt.palette.mode === \"light\"\n\t\t\t\t\t\t\t? t.palette.grey[50]\n\t\t\t\t\t\t\t: t.palette.grey[900],\n\t\t\t\t\tbackgroundSize: \"cover\",\n\t\t\t\t\tbackgroundPosition: \"center\",\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t<Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n\t\t\t\t<Box\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tmy: 8,\n\t\t\t\t\t\tmx: 4,\n\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t}}>\n\t\t\t\t\t\t{isError ? <Alert severity=\"warning\"> {message}</Alert>: null}\n\t\t\t\t\t<Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n\t\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t\t</Avatar>\n\t\t\t\t\t<Typography component='h1' variant='h5'>\n\t\t\t\t\t\tSign in\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Box\n\t\t\t\t\t\tcomponent='form'\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\tValidate\n\t\t\t\t\t\tsx={{ mt: 1 }}\n\t\t\t\t\t\tonSubmit={(e) => onSubmit(e)}>\n\t\t\t\t\t\t{/* csrf_token */}\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant='standard'\n\t\t\t\t\t\t\tid='username'\n\t\t\t\t\t\t\tlabel='Username'\n\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant='standard'\n\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\tlabel='Email Address'\n\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant='standard'\n\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\tminLength='6'\n\t\t\t\t\t\t\tautoComplete='password'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tsx={{ mt: 3, mb: 2 }}>\n\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t\t<Link to='/' variant='body2'>\n\t\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Link to='/signup' variant='body2'>\n\t\t\t\t\t\t\t\t{\"Don't have an account? Sign Up\"}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default Login;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../../actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n  FormControlLabel,\n  FormLabel,\n  FormGroup,\n  Checkbox,\n  RadioGroup,\n  Radio,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/signup_light.png\";\n\nconst Signup = ({ register, isAuthenticated }) => {\n  const [accountCreated, setAccountCreated] = useState(false);\n  const [isFirm, setIsFirm] = useState(false);\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    re_password: \"\",\n  });\n\n  const { username, email, first_name, last_name, password, re_password } =\n    formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    let is_firm = isFirm;\n    let is_client = !isFirm;\n\n    if (password === re_password) {\n      register(\n        email,\n        first_name,\n        last_name,\n        username,\n        password,\n        re_password,\n        is_firm,\n        is_client,\n      );\n\n      setAccountCreated(true);\n    } else {\n      console.log(\"Password no match, Please type again!\");\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (accountCreated) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"85vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            autoComplete=\"off\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={(e) => onChange(e)}\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"first_name\"\n                  label=\"First Name\"\n                  name=\"first_name\"\n                  value={first_name}\n                  onChange={(e) => onChange(e)}\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"last_name\"\n                  label=\"Last Name\"\n                  name=\"last_name\"\n                  autoComplete=\"last_name\"\n                  value={last_name}\n                  onChange={(e) => onChange(e)}\n                  autoFocus\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={(e) => onChange(e)}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(e) => onChange(e)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"re_password\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                value={re_password}\n                onChange={(e) => onChange(e)}\n                id=\"re_password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Sign up as a </FormLabel>\n              <RadioGroup\n                row\n                value={isFirm}\n                onChange={(e) => setIsFirm(e.target.value)}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Firm\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Individual\"\n                />\n              </RadioGroup>\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormGroup>\n                <FormControlLabel\n                  control={<Checkbox />}\n                  label=\"Agreed on Term and Contidions\"\n                />\n              </FormGroup>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Register\n            </Button>\n          </Box>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" variant=\"body2\">\n                {\"Already have an account? Sign in\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { register })(Signup);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  Divider,\n  FormControlLabel,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Company = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate: 0.0,\n    role: \"\",\n    time_zone: \"\",\n    group: \"\",\n    job_title: \"\",\n    bar_no: 0,\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: 0,\n    ext: 0,\n    mobile: 0,\n    home: 0,\n    work_no: 0,\n\n    phone_ext: 0,\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    role,\n    time_zone,\n    group,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      c_email,\n      rate,\n      role,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      p_email,\n      phone_ext,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Box p={3} sx={{ float: \"right\" }}>\n        <LinkButton to=\"/users\">Manage User</LinkButton>\n        <LinkButton to=\"/user-group\">Manage Group</LinkButton>\n        <LinkButton to=\"/user-role\">Manage Role</LinkButton>\n      </Box>\n\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create User\n        </Typography>\n        <Grid container spacing={2} mt={2}>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"f_name\"\n              label=\"f_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"m_name\"\n              label=\"m_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"m_name\"\n              autoComplete=\"m_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"l_name\"\n              label=\"l_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"c_email\"\n              label=\"c_email\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"c_email\"\n              autoComplete=\"c_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"rate\"\n              label=\"rate\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"rate\"\n              autoComplete=\"rate\"\n            />\n            <FormControlLabel\n              label=\"Round Entries (Round [up/down] to nearnest 0.00 fraction of the hour\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n              sx={{ width: \"35rem\" }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"role\"\n              label=\"role\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"role\"\n              autoComplete=\"role\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"time_zone\"\n              label=\"time_zone\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"time_zone\"\n              autoComplete=\"time_zone\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"group\"\n              label=\"group\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"group\"\n              autoComplete=\"group\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"job_title\"\n              label=\"job_title\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"job_title\"\n              autoComplete=\"job_title\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bar_no\"\n              label=\"bar_no\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bar_no\"\n              autoComplete=\"bar_no\"\n            />\n          </Grid>\n          <Grid item mt={2}>\n            <Divider textAlign=\"left\">\n              <Typography component=\"h3\" variant=\"h5\">\n                Contact Info\n              </Typography>\n            </Divider>\n            <Box>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"street\"\n                label=\"street\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"street\"\n                autoComplete=\"street\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"suite\"\n                label=\"suite\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"suite\"\n                autoComplete=\"suite\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"city\"\n                label=\"city\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"city\"\n                autoComplete=\"city\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"state\"\n                label=\"state\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"state\"\n                autoComplete=\"state\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"zip\"\n                label=\"zip\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"zip\"\n                autoComplete=\"zip\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"ext\"\n                label=\"ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"ext\"\n                autoComplete=\"ext\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"mobile\"\n                label=\"mobile\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"mobile\"\n                autoComplete=\"mobile\"\n              />\n              <Button\n                variant=\"contained\"\n                sx={{ background: \"#5cb85c\", marginTop: \"0.5rem\" }}\n              >\n                Set Password Automaticly\n              </Button>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"home\"\n                label=\"home\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"home\"\n                autoComplete=\"home\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"work_no\"\n                label=\"work_no\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"work_no\"\n                autoComplete=\"work_no\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"p_email\"\n                label=\"p_email\"\n                type=\"email\"\n                onChange={(e) => onChange(e)}\n                id=\"p_email\"\n                autoComplete=\"p_email\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"phone_ext\"\n                label=\"phone_ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"phone_ext\"\n                autoComplete=\"phone_ext\"\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Box\n              sx={{\n                \"& .MuiButton-root\": { m: 1 },\n                float: \"right\",\n              }}\n            >\n              <Button variant=\"contained\" type=\"submit\">\n                Create Member\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Company;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\nimport Filters from \"../../components/Matter/Filters\";\nimport MatterCards from \"../../components/Matter/MatterCards\";\nimport MatterListLong from \"../../components/Matter/MatterListLong\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item xs={12}>\n            <Filters />\n          </Grid>\n          <Grid item xs={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item xs={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Matters;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  MenuItem,\n  Button,\n  Typography,\n  Divider,\n  FormControlLabel,\n  Stack,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport NumberFormat from 'react-number-format';\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst CreateUser = ({userId}) => {\n  // const [userData, setUserData] = useState([])\n  const [roles, setRoles] = useState([]);\n  const [role, setRole] = useState(\"\");\n  const [group, setGroup] = useState(\"\");\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [rateType, setRateType] = useState(\"\");\n\n  \n  const [approvel, setApprovel] = useToggle(false);\n  const [userData, setUserData] = useState({\n    first_name: \"\",\n    middle_name: \"\",\n    last_name: \"\",\n    c_email: \"\",\n    rate_type: \"\",\n    rate: \" \",\n    time_zone: \"\",\n    job_title: \"\",\n    bar_no: \" \",\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    ext: \"\",\n    mobile: \"\",\n    home: \"\",\n    work_no: \"\",\n    p_email: \"\",\n    phone_ext: \"\",\n  });\n  const {\n    first_name,\n    middle_name,\n    last_name,\n    c_email,\n    rate,\n    time_zone,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const FetchRoleData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setRoles(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  const FetchGroupData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/groups/`, CONFIG)\n      .then((res) => {\n        setLoading2(false);\n        setGroups(res.data);\n      })\n      .catch((err) => {\n        setLoading2(false);\n      });\n  };\n  useEffect(() => {\n    if(userId >= 0){\n    \n    }\n    \n  }, []);\n  useEffect(() => {\n    FetchRoleData();\n    FetchGroupData();\n  }, []);\n\nconst handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/create-member/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\nconst handleDeactivate = (id) => {\n    axios\n      .patch(\n        `${process.env.REACT_APP_API_URL}/user/auth/is-active-user/${id}/`, false,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\nconst handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(\"some thing happen\")\n    const username = first_name.toLowerCase() + last_name.toLowerCase()\n    const password = username\n    const email = c_email\n    \n    const member = {\n      first_name,\n      middle_name,\n      last_name,\n      p_email,\n      role,\n      c_email,\n      rate,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      phone_ext,\n    };\n    const body = JSON.stringify({username, first_name, last_name, email, password, member})\n      axios.post(`${process.env.REACT_APP_API_URL}/user/auth/create-user-member/`,body, CONFIG)\n    \n      .then((res) => {\n      \n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n      \n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Box component=\"form\" autoComplete=\"off\"\n            Validate onSubmit={(e) => handleSubmit(e)}>\n        <Typography component=\"h3\" variant=\"h4\">\n          Create User\n        </Typography>\n     \n           <Grid\n                container\n                spacing={2}\n                mt={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\", \"input::-webkit-outer-spin-button\": {\n                    webkitAappearance: \"none\"\n                  },  },\n                }}\n\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"first_name\"\n                    label=\"First Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"first_name\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"middle_name\"\n                    label=\"Middle Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"middle_name\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"last_name\"\n                    label=\"Last Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"last_name\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"c_email\"\n                    label=\"Company Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"c_email\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n              \n                  <NumberFormat\n                      required\n                      id=\"rate\"\n                      customInput={TextField}\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"rate\"\n                      label=\"Rate $\"\n                      onChange={(e) => onChange(e)}\n                      format=\"####.##\"\n                      type=\"tel\"\n                      thousandSeparator={true}\n                    />\n                </Grid>\n                <Grid item lg={6}>\n                  <Stack direction=\"row\" spacing={2} ml={2}>\n                    <FormControlLabel\n                      sx={{ fontSize: \"2rem\" }}\n                      label=\"\"\n                      control={\n                        <Switch\n                          checked={approvel}\n                          onChange={() => setApprovel(approvel)}\n                        />\n                      }\n                    />\n                    <Typography>\n                      Round Entries (Round [up/down] to nearnest\n                      <TextField\n                        margin=\"dense\"\n                        variant=\"standard\"\n                        type=\"text\"\n                        size=\"small\"\n                        placeholder=\"0.00\"\n                        sx={{\n                          maxWidth: \"5rem\",\n                        }}\n                      />\n                      fraction of the hour\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"role\"\n                    label=\"Role\"\n                    onChange={(e) => setRole(e.target.value)}\n                    id=\"role\"\n                  >\n                    {!loading ? (\n                      roles.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"time_zone\"\n                    label=\"Time Zone\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"time_zone\"\n                  >\n                    <MenuItem value=\"AKST\">Alaska Standard Time</MenuItem>\n                    <MenuItem value=\"PST\">Pacific Standard Time</MenuItem>\n                    <MenuItem value=\"CST\">Central Standard Time</MenuItem>\n                    <MenuItem value=\"EST\">Eastern Standard Time</MenuItem>\n                  </TextField>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    required\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"group\"\n                    label=\"Group\"\n                    type=\"text\"\n                    onChange={(e) => setGroup(e.target.value)}\n                    id=\"group\"\n                  >\n                    {!loading2 ? (\n                      groups.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                  required\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"job_title\"\n                    label=\"Job Title\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"job_title\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                   <NumberFormat\n                   required\n                      customInput={TextField}\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"bar_no\"\n                      label=\"Bar #\"\n                      onChange={(e) => onChange(e)}\n                      id=\"bar_no\"\n\n                      format=\"######\"\n                      type=\"tel\"\n                    />\n                </Grid>\n              </Grid>\n              <Box mt={4} mb={2}>\n                <Divider />\n                <Typography mt={2} component=\"h3\" color=\"primary\" variant=\"h5\">\n                  Contact Info\n                </Typography>\n              </Box>Admin\n              <Grid\n                container\n                spacing={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\" },\n                }}\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"street\"\n                    label=\"Street\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"street\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"suite\"\n                    label=\"Suite\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"suite\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"city\"\n                    label=\"City\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"city\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"state\"\n                    label=\"State\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"state\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"#####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"zip\"\n                      label=\"Zip\"\n                      type=\"tel\"\n                      onChange={(e) => onChange(e)}\n                      id=\"zip\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}> \n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"ext\"\n                      label=\"+4\"\n                      type=\"tel\"\n                      onChange={(e) => onChange(e)}\n                      id=\"ext\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"p_email\"\n                    label=\"Personal Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"p_email\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <Box mt={1} ml={1}>\n                    <Button variant=\"contained\" color=\"primary\">\n                      Reset Password\n                    </Button>\n                  </Box>\n                </Grid>\n                <Grid item lg={3}>\n                  \n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                       size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"mobile\"\n                      label=\"Mobile #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"mobile\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                       size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"home\"\n                      label=\"Home #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"home\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"work\"\n                      label=\"Work #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"work\"\n\n                    />\n                </Grid>\n                <Grid item lg={3}>\n              \n                  <NumberFormat\n                    customInput={TextField}\n                    format=\"####\"\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"phone_ext\"\n                    label=\"Extesion\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"phone_ext\"\n                    />\n                </Grid>\n              </Grid>\n              <Grid item lg={12}>\n                <Box\n                  sx={{\n                    \"& .MuiButton-root\": { m: 1, mr:5 },\n                    float: \"right\",\n                    color:\"white\"\n                  }}\n                >\n                 <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    type=\"submit\"\n                    sx={{ color: \"white\" }}\n                    \n                  >\n                    Activate\n                  </Button>\n                  \n                  <Button variant=\"contained\" color=\"warning\"sx={{color:\"#fff\"}}>\n                    Deactivate\n                  </Button>\n                  <Button variant=\"contained\" color=\"error\" sx={{color:\"#fff\"}}>\n                    Delete\n                  </Button>\n                </Box>\n              </Grid>\n       \n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateUser;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Switch,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Button,\n  TextField,\n  Box,\n  Grid,\n  MenuItem,\n  Typography,\n  Divider,\n  FormControlLabel,\n  Stack,\n} from \"@mui/material\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport NumberFormat from 'react-number-format';\nimport CreateUser from \"./CreateUser\";\nimport {\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useToggle } from \"../../context/useToggle\";\n\nconst User = () => {\n  const [usersData, setUsersData] = useState([]);\n  const [userId, setUserId] = useState([])\n  const [isActive, setIsActive] = useToggle(false);\n  const [searchItem, setSearchItem] = useState(\"\")\n\n  const [roles, setRoles] = useState([]);\n  const [role, setRole] = useState(\"\");\n  const [group, setGroup] = useState(\"\");\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [rateType, setRateType] = useState(\"\");\n\n  const handleChange = (event) => {\n    setRateType(event.target.value);\n  };\n  \n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = (data) => {\n    setUserId(data)\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setUsersData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  \n  const showUsers = () => {\n    if (usersData.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return usersData.filter((val)=>{\n        if (searchItem === \"\"){\n          return val\n        } else if(val.first_name.toLowerCase().includes(searchItem.toLowerCase())) {\n          return val\n        }else if(val.last_name.toLowerCase().includes(searchItem.toLowerCase())) {\n          return val\n        }\n\n      }).map((data) => {if(isActive){\n        return data.is_active === \"True\"? (<TableRow>\n          <TableCell>{data.first_name}</TableCell>\n          <TableCell>{data.last_name}</TableCell>\n          <TableCell>{data.c_email}</TableCell>\n          <TableCell>{data.role}</TableCell>\n          <TableCell>{data.group}</TableCell>\n          <TableCell>{data.last_login}</TableCell>\n          <TableCell>{data.is_active === \"True\" ? \"active\":\"inactive\"}</TableCell>\n          <TableCell><Button onClick={()=>handleClickOpen(data)}>View</Button></TableCell>\n          <TableCell></TableCell>\n        </TableRow>) : null\n      }\n    else return <TableRow>\n          <TableCell> {data.first_name}</TableCell>\n          <TableCell>{data.last_name}</TableCell>\n          <TableCell>{data.c_email}</TableCell>\n          <TableCell>{data.role}</TableCell>\n          <TableCell>{data.group}</TableCell>\n          <TableCell>{data.last_login}</TableCell>\n          <TableCell>{data.is_active === \"True\" ? \"active\":\"inactive\"}</TableCell>\n          <TableCell><Button onClick={()=>handleClickOpen(data)}>View</Button></TableCell>\n          <TableCell></TableCell>\n        </TableRow>});\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <Typography component=\"h4\" variant=\"h5\" color=\"primary\" mb={2}>\n          Manage Users\n        </Typography>\n        <Stack p={3} direction=\"row\" spacing={2} sx={{ float: \"right\" }}>\n          <Search sx={{ width: \"15rem\" }}>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange ={e => setSearchItem(e.target.value)}\n            />\n          </Search>\n          <Button\n            color=\"success\"\n            onClick={()=>handleClickOpen(userId)}\n            variant=\"contained\"\n            sx={{ color: \"white\", background: \"#28c570\" }}\n          >\n            + Add User\n          </Button>\n          <Dialog\n           \n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth=\"true\"\n            maxWidth=\"xl\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New User\"}</DialogTitle>\n            <DialogContent>\n              <CreateUser data={{data:userId}}/>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n            </DialogActions>\n          </Dialog>\n        </Stack>\n\n        <TableContainer>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  <Typography color=\"white\">First Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Role</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Group</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Login</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Status</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Action</Typography>\n                </TableCell>\n                \n                <TableCell>\n                  <Switch\n                    color=\"success\"\n                    value={isActive}\n                    onChange={() => setIsActive()}\n                  />\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {!loading ? showUsers() : <Typography>Loading ...</Typography>}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default User;","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  Table,\n  Paper,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Stack,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst ManageUserGroup = () => {\n  const [filter, setFilter] = useState(\"\");\n  const [searchItem, setSearchItem] = useState(\"\")\n\n  const handleChange = (event) => {\n    setFilter(event.target.value);\n  };\n  const [group, setGroup] = useState([]);\n  const [usersData, setUsersData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingUser, setLoadingUser] = useState(true);\n  const [status, setStatus] = useState(\"\")\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchUserData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        // setLoading(false);\n        setStatus(res.statusText);\n        setUsersData(res.data);\n        setLoadingUser(false);\n        console.log(usersData)\n\n      })\n      .catch((err) => {\n        setLoadingUser(false);\n      });\n  };\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/groups/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setGroup(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n    FetchUserData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/user/auth/groups/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/user/auth/groups/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const showGroup = () => {\n    if (group.length === 0) {\n      return <p> No data found...</p>;\n    } else {\n      return group.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n    }\n  };\n  const showUser = () => {\n    if (usersData.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return usersData.filter((val)=>{\n        if (searchItem === \"\"){\n          return val\n        } else if((filter === \"group\") && (val.group.toLowerCase().includes(searchItem.toLowerCase()))) {\n          return val\n        }else if((filter === \"role\") &&(val.role.toLowerCase().includes(searchItem.toLowerCase()))){\n          return val\n        }\n        else if((filter === \"name\") &&(val.last_name.toLowerCase().includes(searchItem.toLowerCase()))){\n          return val\n        }\n        else if((filter === \"name\") &&(val.first_name.toLowerCase().includes(searchItem.toLowerCase()))){\n          return val\n        }\n      }).map((data) => \n          <TableRow>\n            <TableCell>{data.first_name}</TableCell>\n            <TableCell>{data.last_name} </TableCell>\n            <TableCell>{data.role}</TableCell>\n            <TableCell>{data.group}</TableCell>\n          </TableRow>\n  );\n    \n  };\n  return (\n    <Fragment>\n      <Grid container spacing={3}>\n        <Grid item lg={12}>\n          <Grid container spacing={3} direction=\"row\">\n            <Grid item lg={3}>\n              <Typography variant=\"h5\" component=\"h5\" m={1} color=\"primary\">\n                Manage Group\n              </Typography>\n            </Grid>\n            <Grid item lg={9}>\n              <Stack direction=\"row\" sx={{ float: \"right\" }}>\n                <Typography m={2} component=\"span\" color=\"primary\">\n                  Filter & Sort By\n                </Typography>\n                <FormControl sx={{ width: \"10rem\", height: \"2.5rem\" }}>\n                  <InputLabel id=\"demo-simple-select-label\" color=\"primary\">\n                    Custom Sort\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={filter}\n                    label=\"Age\"\n                    onChange={handleChange}\n                  >\n                    <MenuItem value=\"name\">By Name</MenuItem>\n                    <MenuItem value=\"role\">By Role</MenuItem>\n                    <MenuItem value=\"group\">By Group</MenuItem>\n                  </Select>\n                </FormControl>\n                <Search sx={{ width: \"20rem\", height: \"2.5rem\", m: 1 }}>\n                  <SearchIconWrapper>\n                    <SearchIcon />\n                  </SearchIconWrapper>\n                  <StyledInputBase\n                    placeholder=\"Search…\"\n                    inputProps={{ \"aria-label\": \"search\" }}\n                    onChange ={e => setSearchItem(e.target.value)}\n                  />\n                </Search>\n              </Stack>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3} component={Paper} p={3} elevation={3}>\n          <Typography\n            variant=\"h5\"\n            component=\"h5\"\n            color=\"primary\"\n            align=\"center\"\n          >\n            Groups\n          </Typography>\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            fullWidth\n            sx={{\n              borderRadius: \"0.5rem\",\n            }}\n          >\n            + New Group\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New Group\"}</DialogTitle>\n            <DialogContent>\n              <TextField\n                required\n                fullWidth\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"name\"\n                label=\"Group Name\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n              <Button type=\"submit\" autoFocus>\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {!loading ? showGroup() : <Typography>Loading ...</Typography>}\n        </Grid>\n        <Grid item lg={9}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow bgColor=\"#796ef0\">\n                  <TableCell>\n                    <Typography color=\"white\">First Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Last Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Role</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Group</Typography>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>{!loadingUser ? showUser() : <>Loading.. </>}</TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item lg={12}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"success\" sx={{ color: \"white\" }}>\n              Done\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageUserGroup;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\"\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport { toast } from 'react-toastify'\n\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,TableBody,\n  Paper,\n  Button,\n  \n  Typography,\n  IconButton,\n  Switch,\n} from \"@mui/material\";\nimport RectangleIcon from '@mui/icons-material/Rectangle';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useToggle } from \"../../context/useToggle\";\nimport {\n\tgetPermissions,\n\tupdatePermission\n} from \"../../redux/features/permissionSlice\";\n\n\n\n\nconst RoleFuncions = ({permission}) => {\n  const name = permission.name\n  const id =  permission.id\n  const role = permission.role\n\n  const [isView, setIsView] = useToggle(permission.is_view)\n  const [isEdit, setIsEdit] = useToggle(permission.is_edit)\n  const [isCreate, setIsCreate] = useToggle(permission.is_create)\n  const [isDelete, setIsDelete] = useToggle(permission.is_delete)\n  const [isContacts, setIsContacts] = useToggle(permission.is_contacts)\n  const [isTeam, setIsTeam] = useToggle(permission.is_team)\n  const [isOffice, setIsOffice] = useToggle(permission.is_office)\n  const [isRegion, setIsRegion] = useToggle(permission.is_region)\n  const [isAll, setIsAll] = useToggle(false)\n         \nconst dispatch = useDispatch()\nconst updateFunctions = () =>{\n  const is_view = isView\n  const is_edit = isEdit\n  const is_create = isCreate\n  const is_delete = isDelete\n  const is_contacts = isContacts\n  const is_team = isTeam\n  const is_office = isOffice\n  const is_region = isRegion\n\n  const body =  JSON.stringify({ id, name, role, is_view, is_edit, is_create,is_delete,is_contacts,is_team,is_office,is_region})\n\n  axios.patch(\n\t\t`http://localhost:8000/user/auth/permissions/${id}/`,\n\t\tbody, \n\t\tCONFIG,\n\t).then((res)=>{\n    // dispatch(getPermissions)\n    console.log(res)\n  }).catch((err)=>{\n    console.log(err)\n  });\n  // dispatch(updatePermission({id, permissions}))\n}\nconst settingAll = () =>{\n  setIsAll(isAll)\n  if (permission.name === \"Contact\") {\n    if (isAll) {\n      setIsView(true)\n      setIsEdit(true)\n      setIsCreate(true)\n      setIsDelete(true)\n      setIsContacts(true)\n      setIsTeam(true)\n      setIsOffice(true)\n      setIsRegion(true)\n      \n    }\n    else {\n      setIsView(false)\n      setIsEdit(false)\n      setIsCreate(false)\n      setIsDelete(false)\n      setIsContacts(false)\n      setIsTeam(false)\n      setIsOffice(false)\n      setIsRegion(false)\n      \n    }\n  }\n  else {\n    if (isAll) {\n      setIsView(true)\n      setIsEdit(true)\n      setIsCreate(true)\n      setIsDelete(true)\n    }\n    else {\n      setIsView(false)\n      setIsEdit(false)\n      setIsCreate(false)\n      setIsDelete(false)      \n    }\n\n  }\n }\n  \n\nuseEffect(() => {\n  updateFunctions()\n}, [isView,isEdit,isCreate,isDelete,isContacts,isTeam,isOffice,isRegion])\n\n\n \n  return (\n    <Fragment>\n      <TableRow>\n        <TableCell>{name}</TableCell>\n        <TableCell>\n          <Button\n            sx={\n              isView\n                ? {\n                    \"color\": \"#4BB543\",\n                    \"backgroundColor\": \"#4BB543\",\n                    \"&:hover\": {\n                      backgroundColor: \"#4BB545\",\n                      color: \"#4BB545\",\n                    },\n                  }\n                : {\n                    \"color\": \"#D3D3D3\",\n                    \"backgroundColor\": \"#D3D3D3\",\n                    \"&:hover\": {\n                      backgroundColor: \"#D3D3D3\",\n                      color: \"#D3D3D3\",\n                    },\n                  }\n            }\n            onClick ={()=> setIsView(isView)}\n            size='large'\n            aria-label='toggle'>\n            <RectangleIcon />\n          </Button>\n        </TableCell>\n        <TableCell>\n          <Button\n          \n            sx={\n                isEdit           \n                ? {\n                    \"color\": \"#4BB543\",\n                    \"backgroundColor\": \"#4BB543\",\n                    \"&:hover\": {\n                      backgroundColor: \"#4BB545\",\n                      color: \"#4BB545\",\n                    },\n                  }\n                : {\n                    \"color\": \"#D3D3D3\",\n                    \"backgroundColor\": \"#D3D3D3\",\n                    \"&:hover\": {\n                      backgroundColor: \"#D3D3D3\",\n                      color: \"#D3D3D3\",\n                    },\n                  }\n            }\n            onClick ={()=> setIsEdit(isEdit)}\n            size='large'\n            aria-label='toggle'>\n            <RectangleIcon />\n          </Button>\n        </TableCell>\n        <TableCell>\n          <Button\n            \n            sx={\n              isCreate\n                ? {\n                    \"color\": \"#4BB543\",\n                    \"backgroundColor\": \"#4BB543\",\n                    \"&:hover\": {\n                      backgroundColor: \"#4BB545\",\n                      color: \"#4BB545\",\n                    },\n                  }\n                : {\n                    \"color\": \"#D3D3D3\",\n                    \"backgroundColor\": \"#D3D3D3\",\n                    \"&:hover\": {\n                      backgroundColor: \"#D3D3D3\",\n                      color: \"#D3D3D3\",\n                    },\n                  }\n            }\n            onClick ={()=>setIsCreate(isCreate)}\n            size='large'\n            aria-label='toggle'>\n            <RectangleIcon />\n          </Button>\n        </TableCell>\n        <TableCell>\n          <Button\n           \n            sx={\n              isDelete\n                ? {\n                    \"color\": \"#4BB543\",\n                    \"backgroundColor\": \"#4BB543\",\n                    \"&:hover\": {\n                      backgroundColor: \"#4BB545\",\n                      color: \"#4BB545\",\n                    },\n                  }\n                : {\n                    \"color\": \"#D3D3D3\",\n                    \"backgroundColor\": \"#D3D3D3\",\n                    \"&:hover\": {\n                      backgroundColor: \"#D3D3D3\",\n                      color: \"#D3D3D3\",\n                    },\n                  }\n            }\n            onClick={()=>setIsDelete(isDelete)}\n            size='large'\n            aria-label='toggle'>\n            <RectangleIcon />\n          </Button>\n        </TableCell>\n\n        {permission.name === \"Contact\" ? (\n          <>\n            <TableCell>\n              <Button\n               \n                sx={\n                  isContacts\n                    ? {\n                        \"color\": \"#4BB543\",\n                        \"backgroundColor\": \"#4BB543\",\n                        \"&:hover\": {\n                          backgroundColor: \"#4BB545\",\n                          color: \"#4BB545\",\n                        },\n                      }\n                    : {\n                        \"color\": \"#D3D3D3\",\n                        \"backgroundColor\": \"#D3D3D3\",\n                        \"&:hover\": {\n                          backgroundColor: \"#D3D3D3\",\n                          color: \"#D3D3D3\",\n                        },\n                      }\n                }\n                onClick={()=>setIsContacts(isContacts)}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n            <TableCell>\n              <Button\n               \n                sx={\n                  isTeam\n                    ? {\n                        \"color\": \"#4BB543\",\n                        \"backgroundColor\": \"#4BB543\",\n                        \"&:hover\": {\n                          backgroundColor: \"#4BB545\",\n                          color: \"#4BB545\",\n                        },\n                      }\n                    : {\n                        \"color\": \"#D3D3D3\",\n                        \"backgroundColor\": \"#D3D3D3\",\n                        \"&:hover\": {\n                          backgroundColor: \"#D3D3D3\",\n                          color: \"#D3D3D3\",\n                        },\n                      }\n                }\n                onClick={()=>setIsTeam(isTeam)}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n            <TableCell>\n              <Button\n               \n                sx={\n                  isOffice\n                    ? {\n                        \"color\": \"#4BB543\",\n                        \"backgroundColor\": \"#4BB543\",\n                        \"&:hover\": {\n                          backgroundColor: \"#4BB545\",\n                          color: \"#4BB545\",\n                        },\n                      }\n                    : {\n                        \"color\": \"#D3D3D3\",\n                        \"backgroundColor\": \"#D3D3D3\",\n                        \"&:hover\": {\n                          backgroundColor: \"#D3D3D3\",\n                          color: \"#D3D3D3\",\n                        },\n                      }\n                }\n                onClick={()=> setIsOffice(isOffice)}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n            <TableCell>\n              <Button\n               \n                sx={\n                  isRegion\n                    ? {\n                        \"color\": \"#4BB543\",\n                        \"backgroundColor\": \"#4BB543\",\n                        \"&:hover\": {\n                          backgroundColor: \"#4BB545\",\n                          color: \"#4BB545\",\n                        },\n                      }\n                    : {\n                        \"color\": \"#D3D3D3\",\n                        \"backgroundColor\": \"#D3D3D3\",\n                        \"&:hover\": {\n                          backgroundColor: \"#D3D3D3\",\n                          color: \"#D3D3D3\",\n                        },\n                      }\n                }\n                onClick={()=>setIsRegion(isRegion)}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n            <TableCell>\n              <Button\n                sx={\n                  isAll ? {\n                        \"color\": \"#4BB543\",\n                        \"backgroundColor\": \"#4BB543\",\n                        \"&:hover\": {\n                          backgroundColor: \"#4BB545\",\n                          color: \"#4BB545\",\n                        },\n                      }\n                    : {\n                        \"color\": \"#D3D3D3\",\n                        \"backgroundColor\": \"#D3D3D3\",\n                        \"&:hover\": {\n                          backgroundColor: \"#D3D3D3\",\n                          color: \"#D3D3D3\",\n                        },\n                      }\n                }\n                onClick={()=>settingAll()}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n          </>\n        ) : (\n          <>\n            <TableCell>\n              <Button\n                sx={{\n                  color: \"#eee\",\n                  backgroundColor: \"#eee\",\n                }}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n            <TableCell>\n              <Button\n                sx={{\n                  color: \"#eee\",\n                  backgroundColor: \"#eee\",\n                }}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n            <TableCell>\n              <Button\n                sx={{\n                  color: \"#eee\",\n                  backgroundColor: \"#eee\",\n                }}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n            <TableCell>\n              <Button\n                sx={{\n                  color: \"#eee\",\n                  backgroundColor: \"#eee\",\n                }}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n            <TableCell>\n              <Button\n                sx={\n                  isAll ? {\n                        \"color\": \"#4BB543\",\n                        \"backgroundColor\": \"#4BB543\",\n                        \"&:hover\": {\n                          backgroundColor: \"#4BB545\",\n                          color: \"#4BB545\",\n                        },\n                      }\n                    : {\n                        \"color\": \"#D3D3D3\",\n                        \"backgroundColor\": \"#D3D3D3\",\n                        \"&:hover\": {\n                          backgroundColor: \"#D3D3D3\",\n                          color: \"#D3D3D3\",\n                        },\n                      }\n                }\n                onClick={()=>settingAll()}\n                size='large'\n                aria-label='toggle'>\n                <RectangleIcon />\n              </Button>\n            </TableCell>\n          </>\n        )}\n      </TableRow>\n    </Fragment>\n  );\n};\n\nexport default RoleFuncions;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport {\n\tTable,\n\tTableCell,\n\tTableContainer,\n\tTableHead,\n\tTableRow,\n\tTableBody,\n\tButton,\n\tList,\n\tGrid,\n\tBox,\n\tTypography,\n\tListItem,\n\tListItemText,\n\tIconButton,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogTitle,\n\tTextField,\n\tPaper,\n} from \"@mui/material\";\nimport RectangleIcon from \"@mui/icons-material/Rectangle\";\nimport RoleFunctions from \"./RoleFuncions\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n\tgetPermissions,\n\treset,\n\n} from \"../../redux/features/permissionSlice\";\nimport { useToggle } from \"../../context/useToggle\";\n\nconst ManageRole = () => {\n\tconst dispatch = useDispatch();\n\n\n\tconst { user } = useSelector((state) => state.auth);\n\tconst { updateData, setUpdateData } = useState([]);\n\tconst { permissions, isLoading, isError, message } = useSelector(\n\t\t(state) => state.permissions,\n\t);\n\n\tconst [roles, setRoles] = useState([]);\n\tconst [role, setRole] = useState(null);\n\tconst [loading, setLoading] = useState(true);\n\tconst [error, setError] = useState(\"\");\n\tconst [status, setStatus] = useState(\"\");\n\n\tconst [formData, setFormData] = useState({\n\t\tname: \"\",\n\t});\n\n\tconst { name } = formData;\n\n\tconst onChange = (e) =>\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n\n\tconst [open, setOpen] = useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\tconst FetchData = () => {\n\t\taxios\n\t\t\t.get(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, CONFIG)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetStatus(res.statusText);\n\t\t\t\tsetRoles(res.data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetError(err.message);\n\t\t\t});\n\t};\n\tuseEffect(() => {\n\t\tFetchData();\n\t}, []);\n\tconst handleDelete = (id) => {\n\t\taxios\n\t\t\t.delete(`${process.env.REACT_APP_API_URL}/user/auth/roles/${id}/`, CONFIG)\n\t\t\t.then((res) => {\n\t\t\t\tFetchData();\n\t\t\t\treturn (\n\t\t\t\t\t<ActionAlerts\n\t\t\t\t\t\tvalue={{ status: res.statusText, message: \"Success\" }}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t});\n\t};\n\tconst selectRole = (id) => {\n\t\tsetRole(id);\n\t\tdispatch(getPermissions(id));\n\t};\n\t\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst body = JSON.stringify({ name });\n\t\taxios\n\t\t\t.post(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, body, CONFIG)\n\t\t\t.then((res) => {\n\t\t\t\tFetchData();\n\t\t\t\treturn (\n\t\t\t\t\t<ActionAlerts\n\t\t\t\t\t\tvalue={{ status: res.statusText, message: \"Success\" }}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tFetchData();\n\t\t\t\treturn (\n\t\t\t\t\t<ActionAlerts\n\t\t\t\t\t\tvalue={{ status: err.statusText, message: \"Success\" }}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t});\n\t};\n\treturn (\n\t\t<Fragment>\n\t\t\t<Grid container spacing={2}>\n\t\t\t\t<Grid item lg={12}></Grid>\n\t\t\t\t<Grid item lg={2} component={Paper} elevation={5}>\n\t\t\t\t\t<Box p={2}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tonClick={handleClickOpen}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tborderRadius: \"0.5rem\",\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t+ New Role\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\tcomponent='form'\n\t\t\t\t\t\t\tValidate\n\t\t\t\t\t\t\tonSubmit={(e) => handleSubmit(e)}\n\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\n\t\t\t\t\t\t\taria-describedby='alert-dialog-description'>\n\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>\n\t\t\t\t\t\t\t\t{\"Add New Role\"}\n\t\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\tlabel='Role Name'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\t\t\tid='name'\n\t\t\t\t\t\t\t\t\tautoComplete='name'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t<Button onClick={handleClose}>Close</Button>\n\t\t\t\t\t\t\t\t<Button type='submit' autoFocus>\n\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\troles.map((data, index) => (\n\t\t\t\t\t\t\t\t<Box key={index}>\n\t\t\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t\t\t<ListItem disablePadding>\n\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.id === role\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? { backgroundColor: \"#796ef0\", color: \"white\" }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => selectRole(data.id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{data.name}\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={data.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleDelete(data.id)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"0.5rem\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfloat: \"right\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ClearIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Typography>Loading ...</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item lg={10}>\n\t\t\t\t\t<TableContainer sx={{ overflowX: \"auto\" }}>\n\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\"fontSize\": \"1rem\",\n\t\t\t\t\t\t\t\t\"&MuiTableCell\": {\n\t\t\t\t\t\t\t\t\tborder: \"solid 2px black\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t\t<TableRow bgColor='#796ef0'>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Function</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>View </Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Edit</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Create</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Delete</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Contacts</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Team</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Office</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Region</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>All</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t{role !== null && permissions.permissions.length > 0 ? (\n\t\t\t\t\t\t\t\t\tpermissions.permissions.map((permission, index) => (\n\t\t\t\t\t\t\t\t\t\t<RoleFunctions key={permission.id} permission={permission}/>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>please selete a role</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</TableContainer>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Fragment>\n\t);\n};\n\nexport default ManageRole;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport CreateUser from \"./CreateUser\";\nimport ManageUser from \"./ManageUser\";\nimport User from \"./User\"\nimport ManageUserGroup from \"./ManageUserGroup\";\n// import UserRole from \"./UserRole\";\nimport ManageRole from \"./ManageRole\"\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <ManageUser/>\n      {/* <Tabs>\n        <div label=\"Manage Users\">\n          <ManageUser />\n        </div>\n\n        <div label=\"User Group\">\n          <ManageUserGroup />\n        </div>\n        <div label=\"User Role\">\n          <ManageRole />\n        </div>\n      </Tabs> */}\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst TimeList = () => {\n  const [timeData, setTimeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTimeData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <Box>\n        <LinkButton to=\"/ledgers\" sx={{ float: \"right\" }}>\n          Ledger Dashboard\n        </LinkButton>\n        <Box p={3}>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Ledger Dashbaord\n          </LinkButton>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Add Time\n          </LinkButton>\n          <LinkButton to=\"/ledger-list\" sx={{ float: \"right\" }}>\n            Ledger List\n          </LinkButton>\n          <LinkButton to=\"/ledger-documents\" sx={{ float: \"right\" }}>\n            Documents\n          </LinkButton>\n        </Box>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Add</TableCell>\n\n                <TableCell>Matter #</TableCell>\n                <TableCell>Matter Name</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Billable Time</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell>Category</TableCell>\n                <TableCell>Activity</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n              ? null\n              : timeData?.map((data) => {\n                  return (\n                    <TableBody id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n\n                      <TableCell>{data.conatact}</TableCell>\n                      <TableCell>{data.date}</TableCell>\n                      <TableCell>{data.time}</TableCell>\n                      <TableCell>{data.rate}</TableCell>\n                      <TableCell>{data.category}</TableCell>\n                      <TableCell>{data.sub_category}</TableCell>\n                    </TableBody>\n                  );\n                })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TimeList;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Switch, FormControlLabel } from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Search = () => {\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [searchData, setSearchData] = useState({\n    state: \"\",\n    city: \"\",\n    practice_area: \"\",\n    law_school: \"\",\n\n    undergrad_study: \"\",\n    lamguages: \"\",\n    admitted_state: \"\",\n    relocate: false,\n  });\n\n  const {\n    state,\n    city,\n    practice_area,\n    law_school,\n\n    undergrad_study,\n    lamguages,\n    admitted_state,\n    relocate,\n  } = searchData;\n\n  const onChange = (e) =>\n    setSearchData({ ...searchData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"number\"\n              min=\"0\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Longest tenure (months / years)\"\n              id=\"longest_tenure\"\n              name=\"longest_tenure\"\n              value={longestTenure}\n              type=\"text\"\n              onValueChange={(e) => setLongestTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Average tenure (months / years)\"\n              value={averageTenure}\n              id=\"average_tenure\"\n              name=\"average_tenure\"\n              type=\"text\"\n              onValueChange={(e) => setAverageTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time at Current Company (months / years)\"\n              id=\"current_tenure\"\n              name=\"current_tenure\"\n              value={currentTenure}\n              type=\"text\"\n              onValueChange={(e) => setCurrentTenure(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"admitted_state\"\n              label=\"admitted_state\"\n              type=\"text\"\n              value={admitted_state}\n              onChange={(e) => onChange(e)}\n              id=\"admitted_state\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={gradYear}\n              onValueChange={(e) => setGradYear(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"undergrad_study\"\n              label=\"undergrad_study\"\n              step=\"0.01\"\n              type=\"text\"\n              value={undergrad_study}\n              onChange={(e) => onChange(e)}\n              id=\"undergrad_study\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"practice_area\"\n              label=\"practice_area\"\n              type=\"text\"\n              value={practice_area}\n              onChange={(e) => onChange(e)}\n              id=\"practice_area\"\n              disabled\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance Date\"\n              id=\"bar_admit_date\"\n              name=\"bar_admit_date\"\n              value={barDate}\n              onValueChange={(e) => setBarDate(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"lamguages\"\n              label=\"lamguages\"\n              type=\"text\"\n              value={lamguages}\n              onChange={(e) => onChange(e)}\n              id=\"lamguages\"\n            />\n            {/* <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Apply\n            </Button> */}\n            <Box m={3}>\n              <LinkButton to=\"/job-result\" sx={{ float: \"right\" }}>\n                Apply\n              </LinkButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Search;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\n// import axios from \"axios\";\n// import { CONFIG } from \"../../api/MatterApi\";\n// import { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Result = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(\"\");\n  // const [status, setStatus] = useState(\"\");\n  //   const FetchData = () => {\n  //     axios\n  //       .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n  //       .then((res) => {\n  //         setLoading(false);\n  //         setStatus(res.statusText);\n  //         setActivityData(res.data);\n  //       })\n  //       .catch((err) => {\n  //         setLoading(false);\n  //         setStatus(err.statusText);\n  //       });\n  //   };\n  //   useEffect(() => {\n  //     FetchData();\n  //   }, []);\n  return (\n    <Fragment>\n      <Box>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Rate</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Name</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">City</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">State</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Active</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Grage Year</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practice Area</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Relocation</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practicing</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading ? (\n              <TableBody>\n                <TableRow>\n                  <TableCell>74%</TableCell>\n                  <TableCell>Smith, John</TableCell>\n                  <TableCell>San Diego</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2000</TableCell>\n                  <TableCell>Criminal</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>22y - 03M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>72%</TableCell>\n                  <TableCell>Cassidy, Butch</TableCell>\n                  <TableCell>Los Angeles</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>2021</TableCell>\n                  <TableCell>Transctional</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>0y - 02M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>50%</TableCell>\n                  <TableCell>Short, Mart</TableCell>\n                  <TableCell>Sacramento</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2013</TableCell>\n                  <TableCell>Civil</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>06y - 11M</TableCell>\n                </TableRow>\n              </TableBody>\n            ) : (\n              activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })\n            )} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Result;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  FormControlLabel,\n  FormGroup,\n  Checkbox,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Saved = () => {\n  const [pickTime, setPickTime] = useState(new Date(\"2021-12-01T21:00:00\"));\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [jobData, setJobData] = useState({\n    name: \"\",\n    state: \"\",\n    city: \"\",\n    email: \"\",\n    mobile: \"\",\n    home: \"\",\n    law_school: \"\",\n    grad_year: \"\",\n    bar_adm_year: \"\",\n    practice_area: \"\",\n    mail_add: \"\",\n    relocate: false,\n    date: \"\",\n    time: \"\",\n    link: \"\",\n    notes: \"\",\n    file: \"\",\n  });\n\n  const {\n    name,\n    state,\n    city,\n    email,\n    mobile,\n    home,\n    law_school,\n    grad_year,\n    bar_adm_year,\n    practice_area,\n    mail_add,\n    relocate,\n    date,\n    time,\n    link,\n    notes,\n    file,\n  } = jobData;\n\n  const onChange = (e) =>\n    setJobData({ ...jobData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <FormGroup aria-label=\"position\" row>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Save\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Contacted\"\n                labelPlacement=\"start\"\n              />\n              <Typography component=\"label\" m={1}>\n                Interested :\n              </Typography>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Yes\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"No\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Interviewed\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Accept\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Reject\"\n                labelPlacement=\"start\"\n              />\n              <Box ml={3}>\n                <Typography component=\"h4\" color=\"success\" variant=\"h5\">\n                  Overall Score: 74%\n                </Typography>\n              </Box>\n            </FormGroup>\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"name\"\n              label=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(e) => onChange(e)}\n              id=\"name\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email\"\n              label=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              id=\"email\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobile}\n              onValueChange={(value) => onChange(value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={home}\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={grad_year}\n              onValueChange={(value) => onChange(value)}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance\"\n              id=\"bar_adm_year\"\n              name=\"bar_adm_year\"\n              value={bar_adm_year}\n              type=\"text\"\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"mail_add\"\n              label=\"mail_add\"\n              type=\"text\"\n              value={mail_add}\n              onChange={(e) => onChange(e)}\n              id=\"mail_add\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xs={4}>\n                <Box m={1}>\n                  <Typography component=\"lable\"> Writing Sample </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <TimePicker\n                    label=\"Pick Time\"\n                    name=\"picktime\"\n                    id=\"picktime\"\n                    value={pickTime}\n                    onChange={(e) => {\n                      setPickTime(e);\n                    }}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    inputFormat=\"yyyy-MM-dd\"\n                    mask=\"____-__-__\"\n                    label=\"Pick Date\"\n                    value={pickDate}\n                    name=\"pickdate\"\n                    id=\"pickdate\"\n                    onChange={(e) => setPickDate(e)}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n\n                <TextField\n                  size=\"small\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"link\"\n                  type=\"link\"\n                  defaultValue=\"2021-12-01\"\n                  value={link}\n                  onChange={(e) => onChange(e)}\n                  id=\"link\"\n                />\n              </Grid>\n              <Grid item xs={8}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={8}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"notes\"\n                  type=\"text\"\n                  value=\"Notes ...\"\n                  id=\"notes\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Saved;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport Search from \"./Search\";\nimport Result from \"./Result\";\nimport Saved from \"./Saved\";\nconst index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Search\">\n          <Search />\n        </div>\n        <div label=\"Result\">\n          <Result />\n        </div>\n        <div label=\"Saved\">\n          <Saved />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default index;\n","/** @format */\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nimport { Provider } from \"react-redux\";\n\nimport store, { persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport Layout from \"./hocs/Layout\";\n\nimport PrivateRoutes from \"./utils/PrivateRoute\";\n\nimport { UserProvider } from \"./context/User\";\n\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"./hocs/Theme\";\n\nimport Home from \"./containers/Home\";\n\n// Authentication links\nimport Login from \"./containers/Auth/Login\";\nimport Signup from \"./containers/Auth/Signup\";\n\nimport Profile from \"./components/Profile/Profile\";\nimport Company from \"./components/Profile/Company\";\n\nimport Matter from \"./components/Matter\";\n\nimport Matters from \"./containers/Matters/Matters\";\nimport MatterDetail from \"./components/Matter/MatterDetail\";\nimport NewMatter from \"./components/Matter/NewMatter\";\n\nimport Invoice from \"./components/Invoice\";\n\nimport CreateInvoice from \"./components/Invoice/CreateInvoice\";\n\nimport Payment from \"./components/Invoice/Payment\";\nimport ManageCategory from \"./components/Category/ManageCategory\";\n\nimport User from \"./components/User\";\n\nimport Time from \"./components/Ledger/Time\";\nimport TimeList from \"./components/Ledger/TimeList\";\n\nimport Ledger from \"./components/Ledger\";\n\nimport LedgerTImeList from \"./components/Ledger/LedgerTImeList\";\nimport LedgerActivity from \"./components/Ledger/LedgerActivity\";\n\nimport Tasks from \"./components/Tasks\";\nimport CreateTask from \"./components/Tasks/CreateTask\";\nimport ViewTasks from \"./components/Tasks/ViewTasks\";\nimport LedgerDoc from \"./components/Ledger/LedgerDoc\";\n\nimport Employee from \"./components/Employee\";\nimport Templates from \"./components/Template/Templates\";\n\nimport Contact from \"./components/Contact/Contact\";\nimport UserRole from \"./components/User/UserRole\";\nimport ManageRole from \"./components/User/ManageRole\";\nimport ManageUserGroup from \"./components/User/ManageUserGroup\";\n\nconst App = () => {\n  const alertOptions = {\n    timeout: 3000,\n    position: \"top center\",\n  };\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <UserProvider>\n          <ThemeProvider theme={theme}>\n            <AlertProvider template={AlertTemplate} {...alertOptions}>\n              <Router>\n                <Layout>\n                  <Switch>\n                    {/* loging regierter routes */}\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/signup\" component={Signup} />\n\n                    {/* private route after login  */}\n\n                    <PrivateRoutes exact path=\"/\" component={Home} />\n                    <PrivateRoutes path=\"/profile\" component={Profile} />\n                    <PrivateRoutes path=\"/company-detail\" component={Company} />\n\n                    <PrivateRoutes\n                      path=\"/matter-dashboard\"\n                      component={Matter}\n                    />\n                    <PrivateRoutes path=\"/matters\" component={Matters} />\n                    <PrivateRoutes\n                      path=\"/matter-detail\"\n                      component={MatterDetail}\n                    />\n                    <PrivateRoutes\n                      path=\"/create-matter\"\n                      component={NewMatter}\n                    />\n\n                    <PrivateRoutes path=\"/invoices\" component={Invoice} />\n                    <PrivateRoutes\n                      path=\"/create-invoice\" \n                      component={CreateInvoice}\n                    />\n                    <PrivateRoutes path=\"/recive-invoice\" component={Payment} />\n\n                    {/* <PrivateRoutes path=\"/create-user\" component={CreateUser} /> */}\n                    <PrivateRoutes path=\"/users\" component={User} />\n                    <PrivateRoutes path=\"/user-roles\" component={ManageRole} />\n                    <PrivateRoutes\n                      path=\"/user-groups\"\n                      component={ManageUserGroup}\n                    />\n\n                    <PrivateRoutes\n                      path=\"/manage-categories\"\n                      component={ManageCategory}\n                    />\n                    <PrivateRoutes\n                      path=\"/ledger-documents\"\n                      component={LedgerDoc}\n                    />\n                    <PrivateRoutes path=\"/time\" component={Time} />\n                    <PrivateRoutes path=\"/time-list\" component={TimeList} />\n                    <PrivateRoutes path=\"/ledgers\" component={Ledger} />\n                    <PrivateRoutes\n                      path=\"/ledger-list\"\n                      component={LedgerTImeList}\n                    />\n                    <PrivateRoutes\n                      path=\"/activity-list\"\n                      component={LedgerActivity}\n                    />\n\n                    <PrivateRoutes path=\"/tasks\" component={Tasks} />\n                    <PrivateRoutes path=\"/create-task\" component={CreateTask} />\n                    <PrivateRoutes path=\"/view-tasks\" component={ViewTasks} />\n\n                    <PrivateRoutes\n                      path=\"/employee-search\"\n                      component={Employee}\n                    />\n\n                    <PrivateRoutes path=\"/templates\" component={Templates} />\n                    <PrivateRoutes path=\"/contact\" component={Contact} />\n                  </Switch>\n                </Layout>\n              </Router>\n            </AlertProvider>\n          </ThemeProvider>\n        </UserProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { Box } from \"@mui/material\";\n// import NumberFormat from \"react-number-format\";\n\nexport const Appointments = () => {\n  const options = {\n    chart: {\n      type: \"bar\",\n      height: 500,\n    },\n    series: [\n      {\n        data: [\n          {\n            x: \"Zoom\",\n            y: 150,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Phone\",\n            y: 250,\n            fillColor: \"#546E7A\",\n            strokeColor: \"#546E7A\",\n          },\n          {\n            x: \"In Person\",\n            y: 500,\n            fillColor: \"#f48024\",\n            strokeColor: \"#f48024\",\n          },\n          {\n            x: \"Met\",\n            y: 300,\n            fillColor: \"#13d8aa\",\n            strokeColor: \"#13d8aa\",\n          },\n          {\n            x: \"Rescheduled\",\n            y: 125,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Canceled\",\n            y: 30,\n            fillColor: \"#A5978B\",\n            strokeColor: \"#A5978B\",\n          },\n        ],\n      },\n    ],\n\n    options: {\n      plotOptions: {\n        bar: {\n          barHeight: \"50%\",\n          borderRadius: 4,\n\n          horizontal: true,\n          dataLabels: {\n            position: \"bottom\",\n          },\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      title: {\n        text: \"Appointments\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n    },\n    xaxis: {\n      style: {\n        fontSize: \"20px\",\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={options.options}\n          series={options.series}\n          height=\"300\"\n          type=\"bar\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\nexport const Marketing = () => {\n  const config = {\n    series: [\n      {\n        name: \"Google\",\n        data: [10, 51, 35, 41, 29, 62, 99, 41, 18],\n      },\n      {\n        name: \"Youtube\",\n        data: [10, 80, 35, 41, 99, 62, 79, 21, 68],\n      },\n      {\n        name: \"Website\",\n        data: [60, 21, 45, 41, 89, 62, 59, 71, 98],\n      },\n    ],\n    options: {\n      chart: {\n        height: 250,\n        toolbar: {\n          show: false,\n        },\n      },\n\n      legend: {\n        position: \"top\",\n        horizontalAlign: \"right\",\n        onItemHover: {\n          highlightDataSeries: true,\n        },\n        labels: {\n          colors: \"#dddddd\",\n          useSeriesColors: true,\n        },\n      },\n\n      dataLabels: {\n        enabled: false,\n      },\n\n      stroke: {\n        curve: \"smooth\",\n        width: 2,\n      },\n\n      title: {\n        text: \"Marketing\",\n        align: \"left\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      xaxis: {\n        categories: [\n          \"31/01\",\n          \"01/02\",\n          \"02/03\",\n          \"03/04\",\n          \"31/05\",\n          \"04/06\",\n          \"06/07\",\n          \"02/08\",\n          \"09/09\",\n        ],\n        style: {\n          fontSize: \"20px\",\n        },\n      },\n\n      yaxis: {},\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={config.options}\n        series={config.series}\n        height=\"250\"\n        type=\"line\"\n      />\n    </Fragment>\n  );\n};\nexport const Calls = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 300,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Calls\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Inbound\", \"Outbound\", \"Sales\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const Email = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total Emails\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Email\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Send\", \"Open\", \"Delete\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueInActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueInCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 460;\n      case \"weekly\":\n        return 3254;\n      case \"monthly\":\n        return 32564;\n      case \"quarterly\":\n        return 130256;\n      case \"yearly\":\n        return 521024;\n      case \"range\":\n        return 1500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue In\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueInCards);\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueOutActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueOutCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 35;\n      case \"weekly\":\n        return 240;\n      case \"monthly\":\n        return 4520;\n      case \"quarterly\":\n        return 18080;\n      case \"yearly\":\n        return 72320;\n      case \"range\":\n        return 500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue out\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueOutCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { newCustomerActive } from \"../../../../redux/features/sidebarSlice\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const NewCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 2;\n      case \"weekly\":\n        return 23;\n      case \"monthly\":\n        return 69;\n      case \"quarterly\":\n        return 200;\n      case \"yearly\":\n        return 610;\n      case \"range\":\n        return 10;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              New Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 23 : 69}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={23}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={69}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={15}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={50}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={200}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(newCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </IconButton>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(NewCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Button,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { lostCustomerActive } from \"../../../../redux/features/sidebarSlice\";\n\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const LostCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 0;\n      case \"weekly\":\n        return 0;\n      case \"monthly\":\n        return 3;\n      case \"quarterly\":\n        return 6;\n      case \"yearly\":\n        return 15;\n      case \"range\":\n        return 3;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              Lost Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 0 : 3}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={3}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={1}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={6}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <Button\n                  component={IconButton}\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(lostCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </Button>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(LostCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport { Circle } from \"@mui/icons-material\";\nimport MAP_STYLE from \"../../../utils/style.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapboxWorker from \"mapbox-gl/dist/mapbox-gl-csp-worker\";\nmapboxgl.workerClass = MapboxWorker;\n\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\";\n\nconst Map = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 38.7577,\n    longitude: -95.4376,\n    zoom: 3,\n  });\n\n  return (\n    <Fragment>\n      <ReactMapGL\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle={MAP_STYLE}\n        onViewportChange={setViewport}\n        mapboxApiAccessToken={\n          \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\"\n        }\n        style={{ zIndex: 200 }}\n      >\n        <Marker\n          latitude={40.7128}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={47.6062}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={41.8781}\n          longitude={-87.6298}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n      </ReactMapGL>\n    </Fragment>\n  );\n};\n\nexport default Map;\n","/** @format */\n\nimport {\n  Paper,\n  Box,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  TableCell,\n} from \"@mui/material\";\nimport React, { Fragment } from \"react\";\n\nconst NewAccounts = () => {\n  return (\n    <Fragment>\n      <Box p={1}>\n        <Typography color=\"blue\">New Accounts</Typography>\n        <TableContainer>\n          <Table fullWidth>\n            <TableHead color=\"blue\">\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"blue\">Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewAccounts;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Box, Grid, Typography } from \"@mui/material\";\n\nimport NumberFormat from \"react-number-format\";\n\nconst EmpOversite = () => {\n  return (\n    <Fragment>\n      <Typography color=\"blue\" sx={{ fontSize: \"1.1rem\" }}>\n        Employee Oversite\n      </Typography>\n      <Typography variant=\"h3\" component=\"h3\" sx={{ fontSize: \"1.8rem\" }}>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.1rem\" }}>\n        Employees logged in\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"purple\" }}> Total ticket issued:</span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"seagreen\" }}>Trouble ticket Resolved: </span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n    </Fragment>\n  );\n};\n\nexport default EmpOversite;\n","/** @format */\n\nimport React from \"react\";\n\nimport {\n  IconButton,\n  Typography,\n  Card,\n  CardContent,\n  CardActions,\n} from \"@mui/material\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { Appointments, Calls, Marketing, Email } from \"../Charts\";\n\nimport RevenueInCards from \"../Cards/RevenueIn\";\nimport RevenueOutCards from \"../Cards/RevenueOut\";\nimport NewCustomerCards from \"../Cards/NewCustomer\";\nimport LostCustomerCards from \"../Cards/LostCustomer\";\n\nimport Map from \"../Map\";\n\nimport NewAccounts from \"../NewAccounts\";\nimport EmpOversite from \"../EmpOversite\";\n\nconst widgetNames = {\n  a: <RevenueInCards />,\n  b: <RevenueOutCards />,\n  c: <NewCustomerCards />,\n  d: <LostCustomerCards />,\n  e: <NewAccounts />,\n  f: <Map />,\n  g: <EmpOversite />,\n  h: <Calls />,\n  i: <Appointments />,\n  j: <Marketing />,\n  k: <Email />,\n};\n\nexport default function Widget({ id, onRemoveItem }) {\n  return (\n    <Card\n      sx={{\n        width: \"100%\",\n        height: \"100%\",\n        paddingTop: \"0.5rem\",\n        padding: \"1rem\",\n      }}\n    >\n      <CardActions>\n        <IconButton\n          aria-label=\"delete\"\n          onClick={() => onRemoveItem(id)}\n          sx={{ position: \"fixed\", right: \"16px\" }}\n        >\n          <CloseIcon fontSize=\"small\" />\n        </IconButton>\n      </CardActions>\n      {widgetNames[id]}\n    </Card>\n  );\n}\n"],"sourceRoot":""}