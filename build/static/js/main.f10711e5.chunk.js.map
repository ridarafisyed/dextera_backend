{"version":3,"sources":["asserts/logo_white copy.png","components/Tabs/tabs.module.css","asserts/login_light.png","asserts/signup_light.png","components/Dashboard/Admin/Charts.jsx","components/Dashboard/Admin/Cards/RevenueIn.jsx","components/Dashboard/Admin/Cards/RevenueOut.jsx","components/Dashboard/Admin/Cards/NewCustomer.jsx","components/Dashboard/Admin/Cards/LostCustomer.jsx","components/Dashboard/Admin/Map.jsx","components/Dashboard/Admin/NewAccounts.jsx","components/Dashboard/Admin/EmpOversite.jsx","components/Dashboard/Admin/DashboardLayout/Widget.jsx","reducers/profile.js","reducers/errors.js","reducers/messages.js","reducers/auth.js","reducers/data.js","redux/features/tabSlice.js","redux/features/favoriteSlice.js","reducers/index.js","actions/types.js","store.js","actions/messages.js","actions/auth.js","context/useToggle.jsx","styles/styles.jsx","actions/data.js","components/Navbars/NavbarResponsive.jsx","components/Navbars/Navbar.jsx","components/Chat/Chat.jsx","components/Dashboard/Calender.jsx","components/Tasks/ViewTasks.jsx","components/Favorite/Favorites.jsx","components/Navbars/DrawerComp.jsx","components/Navbars/NavbarSec.jsx","components/Sidebar/TestingSidebar.jsx","components/Sidebar/Sidebar.jsx","components/Footer/Footer.jsx","hocs/Layout.js","utils/PrivateRoute.js","context/User/reducer.js","context/User/index.js","hocs/Theme.js","components/Dashboard/Admin/DashBoard.jsx","components/Tabs/Tabs.jsx","components/Invoice/CreateInvoice.jsx","components/Invoice/Payment.jsx","components/Invoice/Filters.jsx","components/Invoice/InvoiceList.jsx","components/Invoice/index.jsx","api/MatterApi.js","utils/ActionAlerts.js","components/Matter/MatterList.jsx","components/Matter/Cards.jsx","components/Matter/Calendar.jsx","components/Matter/Filters.jsx","components/Matter/MatterCards.jsx","components/Matter/MatterListLong.jsx","components/Matter/NewMatter.jsx","components/Matter/MatterDetail.jsx","components/Matter/index.jsx","components/Ledger/LedgerActivity.jsx","components/Ledger/Fillters.jsx","components/Ledger/LedgerCards.jsx","components/Ledger/LedgerTImeList.jsx","components/Ledger/LedgerDashbard.jsx","components/Ledger/LedgerDoc.jsx","components/Ledger/Time.jsx","components/Ledger/index.jsx","components/Category/SubCategory.jsx","components/Category/Category.jsx","components/Category/Classification.jsx","components/Category/ManageCategory.jsx","components/Contact/Contact.jsx","components/Profile/Profile.js","components/Tasks/CreateTask.jsx","components/Tasks/index.jsx","components/Dashboard/UserRoles/AdminDashboard.jsx","components/Dashboard/ProgressBar.jsx","components/Dashboard/Tasks.jsx","components/Dashboard/Cards.jsx","components/Dashboard/Client/DashBoard.jsx","components/Template/Templates.jsx","components/Dashboard/UserRoles/ClientDashboard.jsx","components/Dashboard/Lawyer/Chart.jsx","components/Dashboard/Lawyer/DashBoard.jsx","components/Dashboard/UserRoles/LawyerDashboard.jsx","components/Dashboard/Firm/Charts.jsx","components/Dashboard/Firm/DashBoard.jsx","components/Dashboard/UserRoles/FirmDashboard.jsx","containers/Home.js","containers/Auth/Login.js","containers/Auth/Signup.js","components/Profile/Company.jsx","containers/Matters/Matters.jsx","components/User/ManageUser.jsx","components/User/ManageUserGroup.jsx","components/User/RoleFuncions.jsx","components/User/UserRole.jsx","components/User/index.jsx","components/Ledger/TimeList.jsx","components/Employee/Search.jsx","components/Employee/Result.jsx","components/Employee/Saved.jsx","components/Employee/index.jsx","App.jsx","index.js","redux/features/sidebarSlice.js","components/Dashboard/Admin/DashboardLayout/DashboardContent.jsx"],"names":["module","exports","__webpack_require__","p","tabs","current","content","Appointments","options","chart","type","height","series","data","x","y","fillColor","strokeColor","plotOptions","bar","barHeight","borderRadius","horizontal","dataLabels","position","enabled","title","text","style","fontSize","fontWeight","color","xaxis","react_default","a","createElement","react","Box","react_apexcharts_min_default","Marketing","config","name","toolbar","show","legend","horizontalAlign","onItemHover","highlightDataSeries","labels","colors","useSeriesColors","stroke","curve","width","align","categories","yaxis","Calls","state","radialBar","lable","value","total","formatter","w","floating","onItemClick","toggleDataSeries","seriesName","opts","globals","seriesIndex","Email","connect","isWeekly","_ref","useDispatch","Grid","container","item","lg","Typography","sx","gutterBottom","variant","mt","component","react_number_format_es","amount","displayType","thousandSeparator","prefix","_useState","useState","_useState2","Object","slicedToArray","dateValue","setDateValue","_useState3","_useState4","xs","listStyleType","LocalizationProvider","dateAdapter","AdapterDateFns","DateRangePicker","startText","endText","onChange","newValue","renderInput","startProps","endProps","TextField","assign","size","mx","mapboxgl","workerClass","MapboxWorker","Map","latitude","longitude","zoom","viewport","setViewport","esm","mapStyle","MAP_STYLE","onViewportChange","mapboxApiAccessToken","zIndex","offsetLeft","offsetTop","Circle","NewAccounts","TableContainer","Table","fullWidth","TableHead","TableRow","TableCell","TableBody","EmpOversite","d","__webpack_exports__","Widget","widgetNames","RevenueIn","b","RevenueOut","c","NewCustomer","LostCustomer","e","Admin_NewAccounts","f","Admin_Map","g","Admin_EmpOversite","h","Charts_Calls","i","Charts_Appointments","j","Charts_Marketing","k","Charts_Email","id","onRemoveItem","Card","paddingTop","padding","CardActions","IconButton","aria-label","onClick","right","Close_default","initialState","profile","msg","status","token","localStorage","getItem","isAuthenticated","isLoading","user","tabSlice","createSlice","reducers","addTab","action","newTask","payload","tab","push","removeTab","filter","reset","actions","favoriteSlice","addFav","newFav","page","favorite","length","isAvailable","removeFav","combineReducers","auth","arguments","undefined","objectSpread","setItem","removeItem","errors","messages","sidebar","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","persistor","persistStore","returnErrors","logout","dispatch","getState","axios","post","concat","process","tokenConfig","then","res","headers","Content-Type","useToggle","isToggled","setIsToggled","useCallback","SideBarBtn","styled","Button","theme","textTransform","textAlign","margin","borderColor","&:hover","backgroundColor","palette","primary","main","&:visited","SecNavbar","_ref2","boxShadow","overflow","FooterBar","_ref3","bottom","left","alignContent","FooterLink","Link","_ref4","fontFamily","textDecoration","marginTop","FooterButton","_ref5","marginX","paddingX","LinkButton","_ref6","cursor","Search","_ref7","marginRight","spacing","marginLeft","SearchIconWrapper","_ref8","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","_ref9","& .MuiInputBase-input","defineProperty","paddingLeft","transition","transitions","create","breakpoints","up","MainSearch","_ref10","MainSearchIconWrapper","_ref12","StyledMainInputBase","_ref13","updateIsWeekly","NavbarResponsive","useSelector","Intl","DateTimeFormat","resolvedOptions","timeZone","Date","currentTime","_useState5","_useState6","timeFormater","checked","toLocaleTimeString","hour","minute","hour12","_useToggle","_useToggle2","_useState7","_useState8","settingAcnchorEl","_useState9","Boolean","_useState10","_React$useState","React","_React$useState2","anchorEl","_React$useState3","_React$useState4","setChecked","handleChange","event","target","handleOnChage","_useState11","_useState12","openDrawer","setOpenDrawer","noWrap","react_router_dom","to","src","Logo","alt","Switch","defaultChecked","inputProps","transform","float","Menu_default","Drawer","anchor","open","onClose","List","ListItemButton","ListItemIcon","Search_default","placeholder","Select","labelId","label","MenuItem","Navbar","isTabletOrMobile","useMediaQuery","query","redirect","flexGrow","AppBar","border","Toolbar","Fragment","Navbars_NavbarResponsive","sm","md","ml","mr","react_router","ChatHistory","Chip","avatar","Avatar","Chatting","Chat_ChatHistory","& .MuiTextField-root","m","endIcon","Send_default","Calender","setValue","tasks","Paper","LocalizationProvider_LocalizationProvider","StaticDatePicker","shouldDisableDate","isWeekend","handleOnChange","params","map","task","ViewTasks","Divider","my","Favorites","ListItem","disablePadding","Star","ListItemText","NavBarSecResponsive","openFav","setOpenFav","handleCloseFav","openCal","setOpenCal","handleCloseCal","openChat","setOpenChat","handleCloseChat","useHistory","username","is_firm","is_lawyer","is_client","setLocalUser","useEffect","setRedirect","_useState13","_useState14","setSettingAcnchorEl","_useState15","_useState16","settingAcnchorEl2","setSettingAcnchorEl2","openSetting2","openSetting","handleClose2","handleClose","_useState17","_useState18","className","anchorOrigin","vertical","Message","Dialog","Validate","aria-labelledby","aria-describedby","DialogTitle","DialogContent","Chat","DialogActions","pathname","EmailRounded","CalendarToday","maxWidth","Dashboard_Calender","aria-controls","aria-expanded","aria-haspopup","currentTarget","CheckBox","Menu_Menu","MenuListProps","TransitionComponent","Fade","Favorite_Favorites","autoFocus","Settings","console","log","NotificationAdd","NavbarSec","localuser","handleLogout","handleClick","DrawerComp_NavBarSecResponsive","Person","Controls","px","AddCircle","Receipt","FileCopy","MoneyOff","esm_Task","Work","AssignmentTurnedIn","marketingActive","marketing","emailsActive","emails","Mail","HumanResources","Group","RevenueControls","revenueInActive","revenueIn","revenueOutActive","revenueOut","AccountControls","newCustomerActive","newCustomer","lostCustomerActive","lostCustomer","newAccountActive","newAccount","mapActive","EmployeeOversite","empOversiteActive","empOversite","callsActive","calls","Phone","appointmentActive","appointment","accordionData","tiles","TestingSidebar_Controls","TestingSidebar_HumanResources","TestingSidebar_RevenueControls","TestingSidebar_AccountControls","TestingSidebar_Marketing","TestingSidebar_EmployeeOversite","TestingSidebar","accordions","updateAccordions","react_beautiful_dnd_esm","onDragEnd","result","destination","items","Array","from","_items$splice","splice","source","index","reorderedItem","droppableId","provided","droppableProps","ref","innerRef","draggableId","Accordion","draggableProps","dragHandleProps","AccordionSummary","expandIcon","ExpandMore_default","AccordionDetails","Stack","elevation","overflowY","Sidebar_TestingSidebar","Footer","setOpen","handleClickOpen","children","isDesktopOrLaptop","useTheme","isBigScreen","sidebarToggle","drawerOpen","setDrawerOpen","openPopover","handleSidebarToggle","hideSidebar","showSidebar","descriptionElementRef","useRef","descriptionElement","focus","contianer","rowSpacing","columnSpacing","Navbars_NavbarSec","Navbars_Navbar","direction","wrap","components_Sidebar_Sidebar","top","components_Footer_Footer","Fab","Report","esm_Chat","Popover","transformOrigin","rest","objectWithoutProperties","active","UserContext","createContext","UserProvider","_React$useReducer","useReducer","_React$useReducer2","Provider","createTheme","mode","error","warning","success","contrastThreshold","tonalOffset","typography","htmlFontSize","DashBoard","DashboardContent","Tabs","props","activeTab","setActiveTab","styles","startIcon","MoreVert","newActiveTab","preventDefault","one","CreateInvoice","approvel","setApprovel","matter","contact","billable","date_range","create_date","due_date","template","invoice_no","discount","submit","invoiceData","setInvoiceData","dateRange","setDateRange","onSubmit","autoComplete","FormControlLabel","control","Checkbox","varient","DateRangePicker_DateRangePicker","calendars","InputLabelProps","shrink","PaymentPlan","payment_no","due","late_fee","total_due","payment","posted","method","paymentData","mb","paddingInline","InvoicePayment","tax","interest","time","hard","soft","Payment","isPlan","setIsPlan","payment_type","date","retainer","menu","bank_account","payment_method","FormControl","RadioGroup","row","defaultValue","Radio","InputLabel","Payment_PaymentPlan","Payment_InvoicePayment","Filters","invoiceToggle","setInvoiceToggle","_useToggle3","_useToggle4","paymentToggle","setPaymentToggle","_useToggle5","_useToggle6","paid","setPaid","age","setAge","& .MuiFormControl-root","DialogContentText","Invoice_CreateInvoice","Invoice_Payment","styles_Search","styles_SearchIconWrapper","styles_StyledInputBase","InvoiceList","Invoice_Filters","Index","Invoice_InvoiceList","CONFIG","Accept","ActionAlerts","Alert","severity","TotalDays","date1","date2","dt1","dt2","Math","floor","UTC","getFullYear","getMonth","getDate","GetDate","MatterList","setTasks","setStatus","setLoading","redTask","setRedTask","greenTask","setGreenTask","yellowTask","setYellowTask","myTask","setMyTask","get","statusText","catch","err","FormGroup","Cards","minWidth","CardContent","Calendar","Box_Box","MatterCards","bgcolor","MatterListLong","setMatters","NewMatter","mask","openDate","setOpenDate","whenDate","setWhenDate","closeDate","setCloseDate","totalDays","setTotalDays","matter_name","matter_type","matter_source","matter_status","assign_to","assign_by","billing_rate","alerts","jurisdiction","status_limitaion","opposing_counsel","where","involved","witnesses","narrative","matterData","setMatterData","days","open_date","close_date","when","total_days","body","JSON","stringify","ActionAlerts_ActionAlerts","message","min","disabled","step","DatePicker","inputFormat","multiline","rows","Save_default","MatterTask","components","Activities","MatterDetail","MatterDetail_Activities","MatterDetail_MatterTask","MatterDetail_Cards","Matters","Matter_Filters","Matter_MatterCards","Matter_MatterListLong","MatterDashboard","Matter_MatterList","Matter_Calendar","Matter_Cards","components_Tabs_Tabs","Matter_MatterDashboard","Matter_Matters","Matter_NewMatter","Matter_MatterDetail","LedgerActivity","setActivityData","bgColor","Fillters","billedby","setBilledby","setFilter","LedgerCards","decimalScale","fixedDecimalScale","LedgerTImeList","setLedgerData","LegderDashbard","Ledger_LedgerCards","Ledger_Fillters","Ledger_LedgerTImeList","LedgerDoc","minHeight","Time","pickDate","setPickDate","timeToggle","setTimeToggle","setBillable","setTime","category","sub_category","unit","qty","rate","file","detail","bill_by","note","timeData","setTimeData","labelPlacement","FormLabel","format","customInput","onValueChange","LedgerDashbard","Ledger_LedgerActivity","Ledger_LedgerDoc","Ledger_Time","SubCategory","subCategory","setSubCategory","loading","formData","setFormData","FetchData","handleSubmit","required","delete","Clear_default","Category","setCategory","setError","Classification","classification","setClassification","ManageCategory","components_Category_Category","Category_SubCategory","Category_Classification","Contact","_React$createElement","_React$createElement2","_React$createElement3","_React$createElement4","clientNo","setClientNo","dob","setDob","ssn","setSsn","mobileNo","setMobileNo","homeNo","setHomeNo","officeNo","setOfficeNo","faxNo","setFaxNo","otherNo","setOtherNo","zip","setZip","_useState19","_useState20","plus4","setPlus4","_useState21","_useState22","zip2","setZip2","_useState23","_useState24","plus42","setPlus42","_useState25","company_name","website","ger_email","billing_email","street","suite","city","f_name","l_name","email_1","email_2","email_3","street2","suite2","city2","state2","office","team","member","relation","_useState26","contactData","setContactData","persist","thousandsGroupStyle","autoWidth","gradYear","setGradYear","barDate","setBarDate","underGradYear","setUnderGradYear","phoneNo","setPhoneNo","barNo","setBarNo","practiceTime","setPracticeTime","longestTenure","setLongestTenure","averageTenure","setAverageTenure","currentTenure","setCurrentTenure","email","mobile","phone","language","locate","search_active","law_school","grad_year","bar_admit_date","undergrad_school","undergrad_area","undergrad_year","bar_no","admitted_practice","practice_time","longest_tenure","average_tenure","current_tenure","past_bar_companies_no","primary_area","TabContext","patch","borderBottom","TabList","Tab","TabPanel","KeyboardArrowRight_default","CreateTask","dueDate","setDueDate","bill","setBill","isPrivate","setIsPrivate","setFile","matter_id","matter_contact","filename","taskData","setTaskData","& .MuiSelect-root","due_at","is_billable","is_private","Tasks_ViewTasks","Tasks_CreateTask","Invoice","Matter","Ledger","Category_ManageCategory","components_Contact_Contact","components_Profile_Profile","Tasks","invoice","ledger","AdminDashboard","tabList","wordEntered","setWordEntered","handleChangeSearch","renderTabs","Tabs_Tabs","scrollButtons","allowScrollButtonsMobilearia-label","icon","iconPosition","esm_Close","Admin_DashBoard","noValidate"," & .MuiOutlinedInput-notchedOutline","ProgressBar","progress","paddingRight","LinearProgress","randomDate","start","end","getDateTime","getTime","random","toLocaleDateString","getHours","getMinutes","Task","LawyerCards","postfix","FirmCards","CustomerCards","Cards_CustomerCards","Dashboard_Tasks","Dashboard_ProgressBar","Templates","ClientDashboard","Client_DashBoard","Template_Templates","PieChart","pie","donut","val","dropShadow","Chart2","startAngle","endAngle","track","background","hollow","fill","gradient","shade","gradientToColors","stops","BarChart","stacked","tooltip","opacity","offsetX","Cards_LawyerCards","Chart_PieChart","Chart_Chart2","Chart_BarChart","LawyerDashboard","Lawyer_DashBoard","Chart","BarChart2","columnWidth","distributed","BarChart3","textAnchor","opt","dataPointIndex","Cards_FirmCards","Charts_Chart2","Charts_Chart","Charts_BarChart","Charts_BarChart2","Charts_BarChart3","FirmDashboard","Firm_DashBoard","UserRoles_AdminDashboard","UserRoles_FirmDashboard","UserRoles_LawyerDashboard","UserRoles_ClientDashboard","dashboardRedirect","login","password","response","LoginSuccess","backgroundImage","BackgroundImage","backgroundRepeat","t","grey","backgroundSize","backgroundPosition","square","flexDirection","LockOutlined_default","minLength","register","accountCreated","setAccountCreated","isFirm","setIsFirm","first_name","last_name","re_password","Company","m_name","c_email","role","time_zone","group","job_title","ext","home","work_no","phone_ext","userData","setUserData","p_email","& .MuiButton-root","ManageUser","isActive","setIsActive","roles","setRoles","setRole","setGroup","groups","setGroups","loading2","setLoading2","rate_type","select","ManageUserGroup","setLoadingUser","RoleFuncions","overflowX","UserRole","User_RoleFuncions","User_ManageUser","User_ManageUserGroup","User_UserRole","TimeList","practice_area","undergrad_study","lamguages","admitted_state","relocate","searchData","setSearchData","Result","Saved","pickTime","setPickTime","bar_adm_year","mail_add","link","notes","jobData","setJobData","TimePicker","Employee_Search","Employee_Result","Employee_Saved","App","es","integration_react","User_UserProvider","ThemeProvider","react_alert","AlertTemplate","timeout","Layout","path","Login","Signup","PrivateRoute","exact","Home","Profile","User","Employee","ReactDOM","render","StrictMode","CssBaseline","src_App","document","getElementById","_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__","sidebarSlice","isDisplay","originalItems","initialLayouts","xxs","withSize","refreshMode","refreshRate","fnCall","_home_supersis03_Projects_Dextera_Phase_3_dextera_project_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","ls","global","parse","getFromLS","layouts","setLayouts","itemId","displayItemList","react__WEBPACK_IMPORTED_MODULE_3___default","data-grid","Infinity","_Widget__WEBPACK_IMPORTED_MODULE_8__","react_grid_layout__WEBPACK_IMPORTED_MODULE_4__","cols","rowHeight","onLayoutChange","_","allLayouts"],"mappings":"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","file":"static/js/main.f10711e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white copy.aa470428.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"tabs_tabs__2iP2q\",\"current\":\"tabs_current__UH0Eq\",\"content\":\"tabs_content__Vh0J0\"};","module.exports = __webpack_public_path__ + \"static/media/login_light.a12d3677.png\";","module.exports = __webpack_public_path__ + \"static/media/signup_light.181ee8a6.png\";","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { Box } from \"@mui/material\";\n// import NumberFormat from \"react-number-format\";\n\nexport const Appointments = () => {\n  const options = {\n    chart: {\n      type: \"bar\",\n      height: 500,\n    },\n    series: [\n      {\n        data: [\n          {\n            x: \"Zoom\",\n            y: 150,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Phone\",\n            y: 250,\n            fillColor: \"#546E7A\",\n            strokeColor: \"#546E7A\",\n          },\n          {\n            x: \"In Person\",\n            y: 500,\n            fillColor: \"#f48024\",\n            strokeColor: \"#f48024\",\n          },\n          {\n            x: \"Met\",\n            y: 300,\n            fillColor: \"#13d8aa\",\n            strokeColor: \"#13d8aa\",\n          },\n          {\n            x: \"Rescheduled\",\n            y: 125,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Canceled\",\n            y: 30,\n            fillColor: \"#A5978B\",\n            strokeColor: \"#A5978B\",\n          },\n        ],\n      },\n    ],\n\n    options: {\n      plotOptions: {\n        bar: {\n          barHeight: \"50%\",\n          borderRadius: 4,\n\n          horizontal: true,\n          dataLabels: {\n            position: \"bottom\",\n          },\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      title: {\n        text: \"Appointments\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n    },\n    xaxis: {\n      style: {\n        fontSize: \"20px\",\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={options.options}\n          series={options.series}\n          height=\"300\"\n          type=\"bar\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\nexport const Marketing = () => {\n  const config = {\n    series: [\n      {\n        name: \"Google\",\n        data: [10, 51, 35, 41, 29, 62, 99, 41, 18],\n      },\n      {\n        name: \"Youtube\",\n        data: [10, 80, 35, 41, 99, 62, 79, 21, 68],\n      },\n      {\n        name: \"Website\",\n        data: [60, 21, 45, 41, 89, 62, 59, 71, 98],\n      },\n    ],\n    options: {\n      chart: {\n        height: 250,\n        toolbar: {\n          show: false,\n        },\n      },\n\n      legend: {\n        position: \"top\",\n        horizontalAlign: \"right\",\n        onItemHover: {\n          highlightDataSeries: true,\n        },\n        labels: {\n          colors: \"#dddddd\",\n          useSeriesColors: true,\n        },\n      },\n\n      dataLabels: {\n        enabled: false,\n      },\n\n      stroke: {\n        curve: \"smooth\",\n        width: 2,\n      },\n\n      title: {\n        text: \"Marketing\",\n        align: \"left\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      xaxis: {\n        categories: [\n          \"31/01\",\n          \"01/02\",\n          \"02/03\",\n          \"03/04\",\n          \"31/05\",\n          \"04/06\",\n          \"06/07\",\n          \"02/08\",\n          \"09/09\",\n        ],\n        style: {\n          fontSize: \"20px\",\n        },\n      },\n\n      yaxis: {},\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={config.options}\n        series={config.series}\n        height=\"250\"\n        type=\"line\"\n      />\n    </Fragment>\n  );\n};\nexport const Calls = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 300,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Calls\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Inbound\", \"Outbound\", \"Sales\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const Email = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total Emails\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Email\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Send\", \"Open\", \"Delete\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueInActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueInCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 460;\n      case \"weekly\":\n        return 3254;\n      case \"monthly\":\n        return 32564;\n      case \"quarterly\":\n        return 130256;\n      case \"yearly\":\n        return 521024;\n      case \"range\":\n        return 1500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue In\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueInCards);\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueOutActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueOutCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 35;\n      case \"weekly\":\n        return 240;\n      case \"monthly\":\n        return 4520;\n      case \"quarterly\":\n        return 18080;\n      case \"yearly\":\n        return 72320;\n      case \"range\":\n        return 500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue out\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueOutCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { newCustomerActive } from \"../../../../redux/features/sidebarSlice\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const NewCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 2;\n      case \"weekly\":\n        return 23;\n      case \"monthly\":\n        return 69;\n      case \"quarterly\":\n        return 200;\n      case \"yearly\":\n        return 610;\n      case \"range\":\n        return 10;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              New Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 23 : 69}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={23}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={69}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={15}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={50}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={200}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(newCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </IconButton>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(NewCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Button,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { lostCustomerActive } from \"../../../../redux/features/sidebarSlice\";\n\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const LostCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 0;\n      case \"weekly\":\n        return 0;\n      case \"monthly\":\n        return 3;\n      case \"quarterly\":\n        return 6;\n      case \"yearly\":\n        return 15;\n      case \"range\":\n        return 3;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              Lost Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 0 : 3}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={3}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={1}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={6}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <Button\n                  component={IconButton}\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(lostCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </Button>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(LostCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport { Circle } from \"@mui/icons-material\";\nimport MAP_STYLE from \"../../../utils/style.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapboxWorker from \"mapbox-gl/dist/mapbox-gl-csp-worker\";\nmapboxgl.workerClass = MapboxWorker;\n\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\";\n\nconst Map = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 38.7577,\n    longitude: -95.4376,\n    zoom: 3,\n  });\n\n  return (\n    <Fragment>\n      <ReactMapGL\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle={MAP_STYLE}\n        onViewportChange={setViewport}\n        mapboxApiAccessToken={\n          \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\"\n        }\n        style={{ zIndex: 200 }}\n      >\n        <Marker\n          latitude={40.7128}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={47.6062}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={41.8781}\n          longitude={-87.6298}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n      </ReactMapGL>\n    </Fragment>\n  );\n};\n\nexport default Map;\n","/** @format */\n\nimport {\n  Paper,\n  Box,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  TableCell,\n} from \"@mui/material\";\nimport React, { Fragment } from \"react\";\n\nconst NewAccounts = () => {\n  return (\n    <Fragment>\n      <Box p={1}>\n        <Typography color=\"blue\">New Accounts</Typography>\n        <TableContainer>\n          <Table fullWidth>\n            <TableHead color=\"blue\">\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"blue\">Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewAccounts;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Box, Grid, Typography } from \"@mui/material\";\n\nimport NumberFormat from \"react-number-format\";\n\nconst EmpOversite = () => {\n  return (\n    <Fragment>\n      <Typography color=\"blue\" sx={{ fontSize: \"1.1rem\" }}>\n        Employee Oversite\n      </Typography>\n      <Typography variant=\"h3\" component=\"h3\" sx={{ fontSize: \"1.8rem\" }}>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.1rem\" }}>\n        Employees logged in\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"purple\" }}> Total ticket issued:</span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"seagreen\" }}>Trouble ticket Resolved: </span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n    </Fragment>\n  );\n};\n\nexport default EmpOversite;\n","/** @format */\n\nimport React from \"react\";\n\nimport {\n  IconButton,\n  Typography,\n  Card,\n  CardContent,\n  CardActions,\n} from \"@mui/material\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { Appointments, Calls, Marketing, Email } from \"../Charts\";\n\nimport RevenueInCards from \"../Cards/RevenueIn\";\nimport RevenueOutCards from \"../Cards/RevenueOut\";\nimport NewCustomerCards from \"../Cards/NewCustomer\";\nimport LostCustomerCards from \"../Cards/LostCustomer\";\n\nimport Map from \"../Map\";\n\nimport NewAccounts from \"../NewAccounts\";\nimport EmpOversite from \"../EmpOversite\";\n\nconst widgetNames = {\n  a: <RevenueInCards />,\n  b: <RevenueOutCards />,\n  c: <NewCustomerCards />,\n  d: <LostCustomerCards />,\n  e: <NewAccounts />,\n  f: <Map />,\n  g: <EmpOversite />,\n  h: <Calls />,\n  i: <Appointments />,\n  j: <Marketing />,\n  k: <Email />,\n};\n\nexport default function Widget({ id, onRemoveItem }) {\n  return (\n    <Card\n      sx={{\n        width: \"100%\",\n        height: \"100%\",\n        paddingTop: \"0.5rem\",\n        padding: \"1rem\",\n      }}\n    >\n      <CardActions>\n        <IconButton\n          aria-label=\"delete\"\n          onClick={() => onRemoveItem(id)}\n          sx={{ position: \"fixed\", right: \"16px\" }}\n        >\n          <CloseIcon fontSize=\"small\" />\n        </IconButton>\n      </CardActions>\n      {widgetNames[id]}\n    </Card>\n  );\n}\n","/** @format */\n\nimport { GET_PROFILE } from \"../actions/types\";\n\nconst initialState = {\n  profile: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {\n  msg: {},\n  status: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { CREATE_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case CREATE_MESSAGE:\n      return (state = action.payload);\n\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload,\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport {\n  GET_IS_WEEKLY,\n  MONTLY_REVENUE,\n  WEEKLY_REVENUE,\n} from \"../actions/types\";\n\nconst initialState = {\n  isWeekly: \"daily\",\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_IS_WEEKLY:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case MONTLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case WEEKLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst tabSlice = createSlice({\n  name: \"tab\",\n  initialState: initialState,\n  reducers: {\n    addTab: (state, action) => {\n      const newTask = {\n        id: action.payload.id,\n        name: action.payload.tab,\n      };\n      state.push(newTask);\n    },\n    removeTab: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n    reset: (state) => initialState,\n  },\n});\n\nexport const { addTab, removeTab, reset } = tabSlice.actions;\nexport default tabSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  favorite: {},\n  isAvailable: true,\n};\n\nconst favoriteSlice = createSlice({\n  name: \"favorite\",\n  initialState: [],\n  reducers: {\n    addFav: (state, action) => {\n      const newFav = {\n        id: action.payload.id,\n        name: action.payload.name,\n        page: action.payload.page,\n      };\n      if (state.favorite.length < 10) {\n        state.favorite.push(newFav);\n      } else state.isAvailable = false;\n    },\n\n    removeFav: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n  },\n});\n\nexport const { addFav, removeFav } = favoriteSlice.actions;\nexport default favoriteSlice.reducer;\n","/** @format */\n\nimport { combineReducers } from \"redux\";\n// import leads from \"./leads\";\nimport profile from \"./profile\";\nimport errors from \"./errors\";\nimport messages from \"./messages\";\nimport auth from \"./auth\";\nimport data from \"./data\";\nimport sidebar from \"../redux/features/sidebarSlice\";\nimport tabs from \"../redux/features/tabSlice\";\nimport favorite from \"../redux/features/favoriteSlice\";\n\nexport default combineReducers({\n  auth,\n  profile,\n  errors,\n  messages,\n  data,\n  sidebar,\n  favorite,\n  tabs,\n});\n","/** @format */\n\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const DELETE_PROFILE = \"DELETE_PROFILE\";\nexport const ADD_PROFILE = \"ADD_PROFILE\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const CLEAR_PROFILES = \"CLEAR_PROFILES\";\nexport const MONTLY_REVENUE = \"GET_MONTLY_REVENUE\";\nexport const WEEKLY_REVENUE = \"GET_WEEKLY_REVENUE\";\nexport const GET_IS_WEEKLY = \"GET_IS_WEEKLY\";\nexport const UPDATE_IS_WEEKLY = \"UPDATE_IS_WEEKLY\";\n\nexport const CREATE_MEMBER_SUCCESS = \"CREATE_MEMBER_SUCCESS\";\nexport const CREATE_MEMBER_FAIL = \"CREATE_MEMBER_FAIL\";\n\nexport const GET_MEMBER_SUCCESS = \"GET_MEMBER_SUCCESS\";\nexport const GET_MEMBER_FAIL = \"GET_MEMBER_FAIL\";\n\nexport const GET_TIMEZONE_SUCCESS = \"GET_TIMEZONE_SUCCESS\";\nexport const GET_TIMEZONE_FAIL = \"GET_TIMEZONE_FAIL\";\nexport const GET_CURRENT_TIME_SCUSSESS = \"GET_CURRENT_TIME_SCUSSESS\";\nexport const GET_CURRENT_TIME_FAIL = \"GET_CURRENT_TIME_FAIL\";\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\n// export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\n// export const SIGNUP_FAIL = 'SIGNUP_FAIL';\n// export const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\n// export const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\n// export const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\n// export const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\n// export const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\n// export const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\n// export const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\n// export const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\n// export const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\n// export const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\n// export const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\n// export const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\n// export const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\n// export const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\n// export const LOGOUT = 'LOGOUT';\n\n// export const PROFILE_CREATED_SUCCESS = 'PROFILE_CREATED_SUCCESS';\n// export const PROFILE_CREATED_FAIL = 'PROFILE_CREATED_FAIL';\n\n// export const PROFILE_LOADED_SUCCESS = 'PROFILE_LOADED_SUCCESS';\n// export const PROFILE_LOADED_FAIL = 'PROFILE_LOADED_FAIL';\n\n// export const PROFILE_UPDATE_SUCCESS = 'PROFILE_UPDATE_SUCCESS';\n// export const PROFILE_UPDATE_FAIL = 'PROFILE_UPDATE_FAIL';\n","/** @format */\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./reducers\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({ reducer: persistedReducer });\n\nexport const persistor = persistStore(store);\n\nexport default store;\n","/** @format */\n\nimport { CREATE_MESSAGE, GET_ERRORS } from \"./types\";\n\n// CREATE MESSAGE\nexport const createMessage = (msg) => {\n  return {\n    type: CREATE_MESSAGE,\n    payload: msg,\n  };\n};\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status },\n  };\n};\n","/** @format */\n\nimport axios from \"axios\";\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from \"./types\";\nimport { createMessage, returnErrors } from \"./messages\";\nimport { useSelector } from \"react-redux\";\nimport { reset } from \"../redux/features/tabSlice\";\n\n// CHECK TOKEN & LOAD USER\nexport const loadUser = () => (dispatch, getState) => {\n  // User Loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get(\n      `${process.env.REACT_APP_API_URL}/user/auth/user`,\n      tokenConfig(getState),\n    )\n    .then((res) => {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data.message, err.response.status));\n      dispatch({\n        type: AUTH_ERROR,\n      });\n    });\n};\n\n// LOGIN USER\nexport const login = (username, email, password) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ username, password });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/user/auth/login`, body, config)\n    .then(function(response) {\n      console.log(response);\n      dispatch(createMessage({ LoginSuccess: \"Login Successful\" }));\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: response.data,\n      });\n    })\n    .catch(function(error) {\n      dispatch(returnErrors(error.response.data, error.response.status));\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n      console.log(error);\n    });\n};\n\n// REGISTER USER\nexport const register = ({ username, email, password }) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ username, email, password });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/user/auth/register`, body, config)\n    .then((res) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n    });\n};\n\n// LOGOUT USER\nexport const logout = () => (dispatch, getState) => {\n  axios\n    .post(\n      `${process.env.REACT_APP_API_URL}/user/auth/logout`,\n      null,\n      tokenConfig(getState),\n    )\n    .then((res) => {\n      localStorage.removeItem(\"token\");\n      dispatch(reset());\n      dispatch({\n        type: LOGOUT_SUCCESS,\n      });\n    });\n};\n\n// Setup config with token - helper function\nexport const tokenConfig = (getState) => {\n  // const token = useSelector((state) => state.auth.token);\n  // Get token from state\n  const token = getState().auth.token;\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // If token, add to headers config\n  if (token) {\n    config.headers[\"Authorization\"] = `Token ${token}`;\n  }\n\n  return config;\n};\n","/** @format */\n\nimport { useState, useCallback } from \"react\";\n\nexport const useToggle = (initialState) => {\n  const [isToggled, setIsToggled] = useState(initialState);\n\n  // put [setIsToggled] into the useCallback's dependencies array\n  // this value never changes so the callback is not going to be ever re-created\n  const toggle = useCallback(\n    () => setIsToggled((state) => !state),\n    [setIsToggled],\n  );\n\n  return [isToggled, toggle];\n};\n","/** @format */\n\n// import * as React from 'react';\nimport { styled } from \"@mui/material/styles\";\nimport { Link } from \"react-router-dom\";\nimport { Button, InputBase } from \"@mui/material\";\n\nexport const SideBarBtn = styled(Button)(({ theme }) => ({\n  fontSize: \"0.6em\",\n  textTransform: \"none\",\n  // color: theme.palette.primary.main,\n  color: \"#eee\",\n  textAlign: \"center\",\n  width: \"8em\",\n  height: \"8em\",\n  margin: \"0.7em\",\n  borderColor: \"#eee\",\n  padding: \"1em\",\n  \"&:hover\": {\n    backgroundColor: \"white\",\n    color: theme.palette.primary.main,\n  },\n  \"&:visited\": {\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport const SecNavbar = styled(\"nav\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  overflow: \"hidden\",\n  color: \"#eee\",\n  position: \"reletive\",\n  padding: \"0\",\n  margin: \"0\",\n  height: \"3.5rem\",\n  width: \"100%\",\n}));\n\nexport const FooterBar = styled(\"footer\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  color: \"#eee\",\n  position: \"fixed\",\n  bottom: \"0\",\n  left: \"0\",\n\n  margin: \"0\",\n  height: \"2.5rem\",\n  textAlign: \"center\",\n  alignContent: \"center\",\n  width: \"100%\",\n}));\n\nexport const FooterLink = styled(Link)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  fontSize: \"1rem\",\n  textTransform: \"uppercase\",\n  fontWeight: 500,\n  textDecoration: \"none\",\n  marginTop: \"0.7rem\",\n  padding: \" 2rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\nexport const FooterButton = styled(Button)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  fontSize: \"1rem\",\n  fontWeight: 500,\n  marginX: \"2rem\",\n  paddingX: \"3rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\n\nexport const LinkButton = styled(Link)(({ theme }) => ({\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  margin: \"0.7em\",\n  backgroundColor: theme.palette.primary.main,\n  borderColor: \"#2979ff\",\n  color: \"white\",\n  padding: \"0.65rem 1.2rem\",\n  borderRadius: \"0.5rem\",\n  \"&:hover\": {\n    backgroundColor: \"#1c54b2\",\n    cursor: \"pointer\",\n    color: \"white\",\n  },\n}));\n\nexport const Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#ddd\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"40%\",\n}));\n\nexport const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\nexport const MainSearch = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#eee\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(3),\n    width: \"auto\",\n  },\n}));\n\nexport const MainSearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledMainInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n","/** @format */\n\n/** @format */ // import axios from \"axios\";\n\nimport { GET_IS_WEEKLY, MONTLY_REVENUE, WEEKLY_REVENUE } from \"./types\";\n// GET LEADS\nexport const updateIsWeekly = (data) => (dispatch) => {\n  if (data) {\n    dispatch({\n      type: WEEKLY_REVENUE,\n      payload: data,\n    });\n  } else {\n    dispatch({\n      type: MONTLY_REVENUE,\n    });\n  }\n};\n\nexport const getIsWeekly = () => (dispatch) =>\n  dispatch({\n    type: GET_IS_WEEKLY,\n    // payload: this.state,\n  });\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport NumberFormat from \"react-number-format\";\nimport { useToggle } from \"../../context/useToggle\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  ListSubheader,\n  TextField,\n} from \"@mui/material\";\nimport {\n  MainSearch,\n  MainSearchIconWrapper,\n  StyledMainInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Logo from \"../../asserts/logo_white copy.png\";\nimport { updateIsWeekly } from \"../../actions/data\";\nimport {\n  IconButton,\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\n\nconst NavbarResponsive = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const [today, setToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [dateValue, setDateValue] = useState([null, null]);\n\n  const timeFormater = () => {\n    if (checked) {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n    } else {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: false,\n      });\n    }\n  };\n  const [isChecked, setIsChecked] = useToggle(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOnChage = (e) => {\n    dispatch(updateIsWeekly(e.target.value));\n  };\n\n  const logout_user = () => {\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Typography variant=\"h5\" component=\"h5\">\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          color=\"primary\"\n          style={{ marginRight: \"0.5rem\" }}\n        >\n          Expected Balance :\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">\n              Expected Balance\n            </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={isWeekly}\n              label=\"Expected Balance\"\n              onChange={handleOnChage}\n            >\n              <MenuItem value=\"daily\">Daily</MenuItem>\n              <MenuItem value=\"weekly\">Weekly</MenuItem>\n              <MenuItem value=\"monthly\">Monthly</MenuItem>\n              <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n              <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n              <MenuItem value=\"range\">Custom Range</MenuItem>\n              {isWeekly === \"range\" ? (\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              ) : null}\n            </Select>\n          </FormControl>\n        </Typography>\n        <NumberFormat\n          value={isWeekly ? 3254 : 32564}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix=\"$\"\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" ml={1} mr={1}>\n        {\" \"}\n        |{\" \"}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h5\">\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          defaultChecked\n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n    </Fragment>\n  );\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <Typography noWrap component=\"div\" sx={{ display: \"block\" }}>\n        <Link to=\"/\">\n          <img\n            src={Logo}\n            alt=\"logo\"\n            style={{ height: \"2rem\", width: \"auto\" }}\n          />\n        </Link>\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" sx={{ marginLeft: \"1rem\" }}>\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          defaultChecked\n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n      <IconButton\n        sx={{ color: \"#7a4ebf\", float: \"right\" }}\n        onClick={() => setOpenDrawer(!openDrawer)}\n      >\n        <MenuIcon color=\"#7a4ebf\" />\n      </IconButton>\n      <Drawer\n        anchor=\"right\"\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <MainSearch>\n                <MainSearchIconWrapper>\n                  <SearchIcon />\n                </MainSearchIconWrapper>\n                <StyledMainInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </MainSearch>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <Typography variant=\"h5\" component=\"h5\">\n                <Typography\n                  component=\"span\"\n                  variant=\"h5\"\n                  color=\"primary\"\n                  style={{ marginRight: \"0.5rem\" }}\n                >\n                  Set Interval :\n                  <Select\n                    size=\"small\"\n                    sx={{ marginX: \"1rem\" }}\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={isWeekly}\n                    label=\"Expected Balance\"\n                    onChange={handleOnChage}\n                  >\n                    <MenuItem value=\"daily\">Daily</MenuItem>\n                    <MenuItem value=\"weekly\">Weekly</MenuItem>\n                    <MenuItem value=\"monthly\">Monthly</MenuItem>\n                    <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n                    <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n                    <MenuItem value=\"range\">Custom Range</MenuItem>\n                    {isWeekly === \"range\" ? (\n                      <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DateRangePicker\n                          startText=\"Start Date\"\n                          endText=\"End Date\"\n                          value={dateValue}\n                          onChange={(newValue) => {\n                            setDateValue(newValue);\n                          }}\n                          renderInput={(startProps, endProps) => (\n                            <Fragment>\n                              <TextField {...startProps} />\n                              <Box sx={{ mx: 2 }}> to </Box>\n                              <TextField {...endProps} />\n                            </Fragment>\n                          )}\n                        />\n                      </LocalizationProvider>\n                    ) : null}\n                  </Select>\n                </Typography>\n              </Typography>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              {\" \"}\n              <Typography variant=\"h5\" component=\"h5\">\n                Expected Balance :{\" \"}\n                <NumberFormat\n                  value={isWeekly ? 3254 : 32564}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon></ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon></ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <MainSearch>\n                <MainSearchIconWrapper>\n                  <SearchIcon />\n                </MainSearchIconWrapper>\n                <StyledMainInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </MainSearch>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n      </Drawer>\n    </Fragment>\n  );\n};\n\nexport default NavbarResponsive;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport NumberFormat from \"react-number-format\";\nimport { useToggle } from \"../../context/useToggle\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  ListSubheader,\n  TextField,\n} from \"@mui/material\";\nimport {\n  MainSearch,\n  MainSearchIconWrapper,\n  StyledMainInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Logo from \"../../asserts/logo_white copy.png\";\nimport { updateIsWeekly } from \"../../actions/data\";\nimport { useMediaQuery } from \"react-responsive\";\nimport NavbarResponsive from \"./NavbarResponsive\";\n\nconst Navbar = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const [today, setToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [dateValue, setDateValue] = useState([null, null]);\n\n  const timeFormater = () => {\n    if (checked) {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n    } else {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: false,\n      });\n    }\n  };\n  const [isChecked, setIsChecked] = useToggle(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOnChage = (e) => {\n    dispatch(updateIsWeekly(e.target.value));\n  };\n\n  const logout_user = () => {\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Typography variant=\"h5\" component=\"h5\">\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          color=\"primary\"\n          style={{ marginRight: \"0.8rem\" }}\n        >\n          Expected Balance :\n          <Select\n            sx={{ marginX: \"1rem\" }}\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={isWeekly}\n            label=\"Expected Balance\"\n            onChange={handleOnChage}\n          >\n            <MenuItem value=\"daily\">Daily</MenuItem>\n            <MenuItem value=\"weekly\">Weekly</MenuItem>\n            <MenuItem value=\"monthly\">Monthly</MenuItem>\n            <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n            <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n            <MenuItem value=\"range\">Custom Range</MenuItem>\n            {isWeekly === \"range\" ? (\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateRangePicker\n                  startText=\"Start Date\"\n                  endText=\"End Date\"\n                  value={dateValue}\n                  onChange={(newValue) => {\n                    setDateValue(newValue);\n                  }}\n                  renderInput={(startProps, endProps) => (\n                    <Fragment>\n                      <TextField {...startProps} />\n                      <Box sx={{ mx: 2 }}> to </Box>\n                      <TextField {...endProps} />\n                    </Fragment>\n                  )}\n                />\n              </LocalizationProvider>\n            ) : null}\n          </Select>\n        </Typography>\n        <NumberFormat\n          value={isWeekly ? 3254 : 32564}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix=\"$\"\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" ml={1} mr={1}>\n        {\" \"}\n        |{\" \"}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h5\">\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          defaultChecked\n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n    </Fragment>\n  );\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <Box sx={{ flexGrow: 1, backgroundColor: \"white\" }} component=\"nav\">\n        <AppBar position=\"static\" color=\"transparent\" sx={{ border: \"none\" }}>\n          <Toolbar>\n            {isTabletOrMobile ? (\n              <>\n                <NavbarResponsive />\n              </>\n            ) : (\n              <>\n                <Typography\n                  noWrap\n                  component=\"div\"\n                  sx={{ display: { xs: \"none\", sm: \"block\" } }}\n                >\n                  <Link to=\"/\">\n                    <img\n                      src={Logo}\n                      alt=\"logo\"\n                      style={{ height: \"2rem\", width: \"auto\" }}\n                    />\n                  </Link>\n                </Typography>\n                <MainSearch>\n                  <MainSearchIconWrapper>\n                    <SearchIcon />\n                  </MainSearchIconWrapper>\n                  <StyledMainInputBase\n                    placeholder=\"Search…\"\n                    inputProps={{ \"aria-label\": \"search\" }}\n                  />\n                </MainSearch>\n                <Box sx={{ flexGrow: 1 }} />\n                <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\n                  {isAuthenticated ? authLinks() : guestLinks()}\n                </Box>\n              </>\n            )}\n          </Toolbar>\n        </AppBar>\n      </Box>\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\n\nexport default Navbar;\n","/** @format */\n\nimport { Box, Typography, Button, TextField, Chip } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport React, { Fragment } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\n\nconst ChatHistory = () => {\n  return (\n    <Typography>\n      <Box\n        p={2}\n        sx={{\n          border: \"1px solid lightgray\",\n          borderRadius: \"1rem\",\n        }}\n      >\n        <Chip\n          label=\"Hi\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          size=\"large\"\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip label=\"Hello\" variant=\"outlined\" avatar={<Avatar>M</Avatar>} />\n        <br />\n        <Chip\n          label=\"Message by M\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"Message by D\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"this is just a ui design\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{ marginTop: \"1rem\" }}\n        />\n        <br />\n        <Chip\n          label=\"the chat feature is not working at backend\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n\n        <br />\n      </Box>\n    </Typography>\n  );\n};\n\nconst Chatting = () => {\n  return (\n    <Fragment>\n      <ChatHistory />\n      <br />\n      <Box\n        component=\"form\"\n        sx={{\n          //   border: \"1px solid lightgray\",\n          //   borderRadius: \"1rem\",\n          \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n        }}\n      >\n        <TextField type=\"text\" size=\"small\" variant=\"outlined\" />\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          endIcon={<SendIcon />}\n          type=\"submit\"\n          sx={{\n            m: 1,\n          }}\n        >\n          Send\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Chatting;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport isWeekend from \"date-fns/isWeekend\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport StaticDatePicker from \"@mui/lab/StaticDatePicker\";\nimport { TextField, Box, Paper, Grid } from \"@mui/material\";\n\nconst Calender = () => {\n  const [value, setValue] = useState(new Date());\n  const [tasks, setTasks] = useState([]);\n\n  const handleOnChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <Box component={Paper} m={2}>\n      <Grid container>\n        {\" \"}\n        <Grid item lg={6} xs={12}>\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <StaticDatePicker\n              value={value}\n              shouldDisableDate={isWeekend}\n              onChange={(e) => {\n                handleOnChange(e);\n              }}\n              renderInput={(params) => <TextField {...params} />}\n            />\n          </LocalizationProvider>\n        </Grid>{\" \"}\n        <Grid item lg={6} xs={12}>\n          {tasks.length !== 0 ? (\n            tasks.map((task) => (\n              <li>\n                {task.id} - {task.name}\n              </li>\n            ))\n          ) : (\n            <h4> No record found</h4>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Calender;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Menu, MenuItem, Divider } from \"@mui/material\";\n\nconst ViewTasks = () => {\n  return (\n    <Fragment>\n      <MenuItem>Profile</MenuItem>\n      <MenuItem>Account</MenuItem>\n      <MenuItem>Setting</MenuItem>\n      <Divider sx={{ my: 0.5 }} />\n      <MenuItem>Logout</MenuItem>\n    </Fragment>\n  );\n};\n\nexport default ViewTasks;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nimport { Star } from \"@mui/icons-material\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Favorites = () => {\n  const favList = useSelector((state) => state.favorite.favorite);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <List>\n        <ListItem disablePadding>\n          <ListItemButton>\n            <ListItemIcon>\n              <Star sx={{ color: \"orange\" }} />\n            </ListItemIcon>\n          </ListItemButton>\n          <ListItemText primary=\"Favorite 1\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Favorites;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport Chatting from \"../Chat/Chat\";\n\n// styling imports\nimport {\n  Box,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  Fade,\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { SecNavbar } from \"../../styles/styles\";\n\nimport {\n  Message,\n  EmailRounded,\n  CalendarToday,\n  CheckBox,\n  Person,\n  NotificationAdd,\n  Settings,\n  Star,\n  StarBorder,\n} from \"@mui/icons-material/\";\nimport { useToggle } from \"../../context/useToggle\";\nimport Calender from \"../Dashboard/Calender\";\nimport ViewTasks from \"../Tasks/ViewTasks\";\nimport Favorites from \"../Favorite/Favorites\";\nimport serverTime from \"../../utils/ServerTime\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { useMediaQuery } from \"react-responsive\";\nimport {\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nexport const NavBarSecResponsive = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  const [openFav, setOpenFav] = useState(false);\n\n  const handleClickOpenFav = () => {\n    setOpenFav(true);\n  };\n\n  const handleCloseFav = () => {\n    setOpenFav(false);\n  };\n  const [openTask, setOpenTask] = useState(false);\n\n  const handleClickOpenTask = () => {\n    setOpenTask(true);\n  };\n\n  const handleCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const [openCal, setOpenCal] = useState(false);\n\n  const handleClickOpenCal = () => {\n    setOpenCal(true);\n  };\n\n  const handleCloseCal = () => {\n    setOpenCal(false);\n  };\n\n  const [openChat, setOpenChat] = useState(false);\n\n  const handleClickOpenChat = () => {\n    setOpenChat(true);\n  };\n\n  const handleCloseChat = () => {\n    setOpenChat(false);\n  };\n\n  const history = useHistory();\n  const [isLogout, setIsLogout] = useToggle(false);\n  const today = new Date();\n  const time = today.toLocaleTimeString();\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n  const [redirect, setRedirect] = useState(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [settingAcnchorEl2, setSettingAcnchorEl2] = useState(null);\n\n  const [anchorEl2, setAnchorEl2] = React.useState(null);\n\n  const handleLogout = () => {\n    console.log(\"logout button just clicked\");\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const open = Boolean(anchorEl);\n  const open2 = Boolean(anchorEl);\n\n  const userRoleChecker = () => {\n    switch (user.username) {\n      case \"admin\":\n        return \"Admin\";\n      case \"firm\":\n        return \"Firm\";\n      case \"lawyer\":\n        return \"Lawyer\";\n      default:\n        return \"Client\";\n    }\n  };\n\n  const openSetting2 = Boolean(settingAcnchorEl2);\n\n  const handleClick2 = (event) => {\n    setSettingAcnchorEl2(event.currentTarget);\n  };\n  const openSetting = Boolean(settingAcnchorEl);\n  const handleClose2 = () => {\n    setSettingAcnchorEl2(null);\n  };\n\n  const handleClick = (event) => {\n    setSettingAcnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setSettingAcnchorEl(null);\n  };\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <IconButton\n        sx={{ color: \"white\" }}\n        onClick={() => setOpenDrawer(!openDrawer)}\n      >\n        <MenuIcon color=\"white\" />\n      </IconButton>\n      <Drawer\n        anchor=\"left\"\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                className=\"nav-items\"\n                size=\"large\"\n                onClick={handleClickOpenChat}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"#fff\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n              >\n                <Message />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          className=\"nav-items\"\n          Validate\n          open={openChat}\n          onClose={handleCloseChat}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          sx={{\n            position: \"absolute\",\n            right: \"20px\",\n            bottom: \"150px\",\n          }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Chatting Application\"}\n          </DialogTitle>\n          <DialogContent>\n            <Chatting />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseChat}>Close</Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                size=\"large\"\n                className=\"nav-items\"\n                component={Link}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n                to={{\n                  pathname:\n                    \"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=someone@gmail.com\",\n                }}\n                target=\"_blank\"\n              >\n                <EmailRounded />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                size=\"large\"\n                className=\"nav-items\"\n                onClick={handleClickOpenCal}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <CalendarToday />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          Validate\n          open={openCal}\n          maxWidth=\"lg\"\n          fullWidth\n          onClose={handleCloseCal}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          sx={{\n            position: \"absolute\",\n            right: \"20px\",\n            bottom: \"150px\",\n          }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Calender\"}</DialogTitle>\n          <DialogContent>\n            <Calender />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseCal}>Close</Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                aria-label=\"more\"\n                className=\"nav-items\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting2 ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick2}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <CheckBox />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Menu\n          id=\"fade-menu\"\n          MenuListProps={{\n            \"aria-labelledby\": \"fade-button\",\n          }}\n          className=\"nav-items\"\n          anchorEl={settingAcnchorEl2}\n          open={openSetting2}\n          onClose={handleClose2}\n          TransitionComponent={Fade}\n        >\n          <MenuItem onClick={handleClose2}>Task 1: This is task one</MenuItem>\n          <MenuItem onClick={handleClose2}>Task 2: This is task two</MenuItem>\n          <MenuItem onClick={handleClose2}>Task 3: This is task three</MenuItem>\n          <Divider sx={{ my: 0.5 }} />\n          <MenuItem onClick={handleClose2}>Task 4: This is task four</MenuItem>\n        </Menu>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                className=\"nav-items\"\n                aria-expanded={openSetting2 ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClickOpenFav}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <Star />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          open={openFav}\n          onClose={handleCloseFav}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n          <DialogContent>\n            <Favorites />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseFav} autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                className=\"nav-items\"\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                <MenuItem component={Link} to=\"/profile\">\n                  Profile\n                </MenuItem>\n                {/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n              </Menu>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                sx={{\n                  color: \"#7a4ebf\",\n                }}\n              >\n                <Settings />\n              </IconButton>\n              <Menu\n                id=\"fade-menu\"\n                MenuListProps={{\n                  \"aria-labelledby\": \"fade-button\",\n                }}\n                anchorEl={settingAcnchorEl}\n                open={openSetting}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Account</MenuItem>\n                <MenuItem onClick={handleClose}>Setting</MenuItem>\n                <Divider sx={{ my: 0.5 }} />\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n              </Menu>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n      </Drawer>\n\n      <NotificationAdd mr={2} />\n    </Fragment>\n  );\n};\n","/** @format */\n/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport Chatting from \"../Chat/Chat\";\n\n// styling imports\nimport {\n  Box,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  Fade,\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { SecNavbar } from \"../../styles/styles\";\n\nimport {\n  Message,\n  EmailRounded,\n  CalendarToday,\n  CheckBox,\n  Person,\n  NotificationAdd,\n  Settings,\n  Star,\n  StarBorder,\n} from \"@mui/icons-material/\";\nimport { useToggle } from \"../../context/useToggle\";\nimport Calender from \"../Dashboard/Calender\";\nimport ViewTasks from \"../Tasks/ViewTasks\";\nimport Favorites from \"../Favorite/Favorites\";\nimport serverTime from \"../../utils/ServerTime\";\n\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { NavBarSecResponsive } from \"./DrawerComp\";\n\nconst NavbarSec = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  const [openFav, setOpenFav] = useState(false);\n\n  const handleClickOpenFav = () => {\n    setOpenFav(true);\n  };\n\n  const handleCloseFav = () => {\n    setOpenFav(false);\n  };\n  const [openTask, setOpenTask] = useState(false);\n\n  const handleClickOpenTask = () => {\n    setOpenTask(true);\n  };\n\n  const handleCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const [openCal, setOpenCal] = useState(false);\n\n  const handleClickOpenCal = () => {\n    setOpenCal(true);\n  };\n\n  const handleCloseCal = () => {\n    setOpenCal(false);\n  };\n\n  const [openChat, setOpenChat] = useState(false);\n\n  const handleClickOpenChat = () => {\n    setOpenChat(true);\n  };\n\n  const handleCloseChat = () => {\n    setOpenChat(false);\n  };\n\n  const history = useHistory();\n  const [isLogout, setIsLogout] = useToggle(false);\n  const today = new Date();\n  const time = today.toLocaleTimeString();\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n  const [redirect, setRedirect] = useState(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [settingAcnchorEl2, setSettingAcnchorEl2] = useState(null);\n\n  const [anchorEl2, setAnchorEl2] = React.useState(null);\n\n  const handleLogout = () => {\n    console.log(\"logout button just clicked\");\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const open = Boolean(anchorEl);\n  const open2 = Boolean(anchorEl);\n\n  const userRoleChecker = () => {\n    switch (user.username) {\n      case \"admin\":\n        return \"Admin\";\n      case \"firm\":\n        return \"Firm\";\n      case \"lawyer\":\n        return \"Lawyer\";\n      default:\n        return \"Client\";\n    }\n  };\n\n  const openSetting2 = Boolean(settingAcnchorEl2);\n\n  const handleClick2 = (event) => {\n    setSettingAcnchorEl2(event.currentTarget);\n  };\n  const openSetting = Boolean(settingAcnchorEl);\n  const handleClose2 = () => {\n    setSettingAcnchorEl2(null);\n  };\n\n  const handleClick = (event) => {\n    setSettingAcnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setSettingAcnchorEl(null);\n  };\n\n  return (\n    <Fragment>\n      <SecNavbar>\n        <Toolbar>\n          {isTabletOrMobile ? (\n            <>\n              <NavBarSecResponsive />\n            </>\n          ) : (\n            <>\n              <Box component=\"div\" sx={{ flexGrow: 1 }}>\n                <IconButton\n                  className=\"nav-items\"\n                  size=\"large\"\n                  onClick={handleClickOpenChat}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"#eee\",\n                    \"&:hover\": {\n                      color: \"#fff\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                  anchorOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"left\",\n                  }}\n                >\n                  <Message />\n                </IconButton>\n                <Dialog\n                  className=\"nav-items\"\n                  Validate\n                  open={openChat}\n                  onClose={handleCloseChat}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                  sx={{\n                    position: \"absolute\",\n                    right: \"20px\",\n                    bottom: \"150px\",\n                  }}\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    {\"Chatting Application\"}\n                  </DialogTitle>\n                  <DialogContent>\n                    <Chatting />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleCloseChat}>Close</Button>\n                  </DialogActions>\n                </Dialog>\n\n                <IconButton\n                  size=\"large\"\n                  className=\"nav-items\"\n                  component={Link}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"white\",\n                    \"&:hover\": {\n                      color: \"white\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                  to={{\n                    pathname:\n                      \"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=someone@gmail.com\",\n                  }}\n                  target=\"_blank\"\n                >\n                  <EmailRounded />\n                </IconButton>\n\n                <IconButton\n                  size=\"large\"\n                  className=\"nav-items\"\n                  onClick={handleClickOpenCal}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"white\",\n                    \"&:hover\": {\n                      color: \"white\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                >\n                  <CalendarToday />\n                </IconButton>\n                <Dialog\n                  Validate\n                  open={openCal}\n                  maxWidth=\"lg\"\n                  fullWidth\n                  onClose={handleCloseCal}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                  sx={{\n                    position: \"absolute\",\n                    right: \"20px\",\n                    bottom: \"150px\",\n                  }}\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    {\"Calender\"}\n                  </DialogTitle>\n                  <DialogContent>\n                    <Calender />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleCloseCal}>Close</Button>\n                  </DialogActions>\n                </Dialog>\n                <IconButton\n                  aria-label=\"more\"\n                  className=\"nav-items\"\n                  id=\"long-button\"\n                  aria-controls=\"long-menu\"\n                  aria-expanded={openSetting2 ? \"true\" : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={handleClick2}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"white\",\n                    \"&:hover\": {\n                      color: \"white\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                >\n                  <CheckBox />\n                </IconButton>\n                <Menu\n                  id=\"fade-menu\"\n                  MenuListProps={{\n                    \"aria-labelledby\": \"fade-button\",\n                  }}\n                  className=\"nav-items\"\n                  anchorEl={settingAcnchorEl2}\n                  open={openSetting2}\n                  onClose={handleClose2}\n                  TransitionComponent={Fade}\n                >\n                  <MenuItem onClick={handleClose2}>\n                    Task 1: This is task one\n                  </MenuItem>\n                  <MenuItem onClick={handleClose2}>\n                    Task 2: This is task two\n                  </MenuItem>\n                  <MenuItem onClick={handleClose2}>\n                    Task 3: This is task three\n                  </MenuItem>\n                  <Divider sx={{ my: 0.5 }} />\n                  <MenuItem onClick={handleClose2}>\n                    Task 4: This is task four\n                  </MenuItem>\n                </Menu>\n                <IconButton\n                  aria-label=\"more\"\n                  id=\"long-button\"\n                  aria-controls=\"long-menu\"\n                  className=\"nav-items\"\n                  aria-expanded={openSetting2 ? \"true\" : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={handleClickOpenFav}\n                  sx={{\n                    fontSize: \"2rem\",\n                    color: \"white\",\n                    \"&:hover\": {\n                      color: \"white\",\n                      backgroundColor: \"#7a4ebf\",\n                    },\n                  }}\n                >\n                  <Star />\n                </IconButton>\n                <Dialog\n                  open={openFav}\n                  onClose={handleCloseFav}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    {\"Favorites\"}\n                  </DialogTitle>\n                  <DialogContent>\n                    <Favorites />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleCloseFav} autoFocus>\n                      Close\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </Box>\n              <NotificationAdd mr={2} />\n              <Typography component=\"h5\" variant=\"h6\" ml={2} mr={2}>\n                |\n              </Typography>\n\n              <Button\n                color=\"inherit\"\n                aria-controls=\"basic-menu\"\n                aria-haspopup=\"true\"\n                className=\"nav-items\"\n                aria-expanded={open ? \"true\" : undefined}\n                onClick={handleClick}\n              >\n                <Person /> {localuser.username} - ({localuser.username} )\n              </Button>\n              <Button\n                color=\"inherit\"\n                className=\"nav-items\"\n                onClick={handleLogout}\n              >\n                Logout\n              </Button>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                className=\"nav-items\"\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                <MenuItem component={Link} to=\"/profile\">\n                  Profile\n                </MenuItem>\n                {/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n              </Menu>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                sx={{\n                  color: \"white\",\n                }}\n              >\n                <Settings />\n              </IconButton>\n              <Menu\n                id=\"fade-menu\"\n                MenuListProps={{\n                  \"aria-labelledby\": \"fade-button\",\n                }}\n                anchorEl={settingAcnchorEl}\n                open={openSetting}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Account</MenuItem>\n                <MenuItem onClick={handleClose}>Setting</MenuItem>\n                <Divider sx={{ my: 0.5 }} />\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n              </Menu>\n            </>\n          )}\n        </Toolbar>\n      </SecNavbar>\n\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\n\nexport default NavbarSec;\n","/** @format */\n\nimport React, { useState, Fragment } from \"react\";\nimport {\n  Box,\n  Accordion,\n  AccordionSummary,\n  Typography,\n  AccordionDetails,\n  Grid,\n} from \"@mui/material\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  Mail,\n  Phone,\n  Group,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  marketingActive,\n  appointmentActive,\n  empOversiteActive,\n  emailsActive,\n  mapActive,\n  callsActive,\n} from \"../../redux/features/sidebarSlice\";\n\nimport \"./style.css\";\n\nconst Controls = () => {\n  return (\n    <Fragment>\n      <Box px={3} sx={{ color: \"#796ef0\" }}>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/\">\n              <Grid item>\n                <AddCircle fontSize=\"medium\" />\n              </Grid>\n              <Grid item>DashBoard</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/invoices\">\n              <Grid item>\n                <Receipt fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Invoices</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/manage-categories\">\n              <Grid item>\n                <FileCopy fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Categories</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/ledgers\">\n              <Grid item>\n                <MoneyOff fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Ledger</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/create-task\">\n              <Grid item>\n                <Task fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Task</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/employee-search\">\n              <Grid item>\n                <Work fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Search</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/matter-dashboard\">\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Matters</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/contact\">\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Contact</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Marketing = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(marketingActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.marketing ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Marketing</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(emailsActive())}>\n          <Grid>\n            <Box sx={sidebar.emails ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Email</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst HumanResources = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageUserActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/users\">\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage User</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageRoleActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/user-roles\">\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Role</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageGroupActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/user-groups\">\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Group</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst RevenueControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueInActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueIn ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue In</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueOutActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueOut ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue Out</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst AccountControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.newCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Customers</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(lostCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.lostCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Lost Customer</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newAccountActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.newAccount ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Accounts</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(mapActive())}>\n          <Grid>\n            <Box sx={sidebar.map ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Trouble Ticket Map</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\nconst EmployeeOversite = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(empOversiteActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.empOversite ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Oversite</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(callsActive())}>\n          <Grid>\n            <Box sx={sidebar.calls ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Phone fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Calls</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(appointmentActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.appointment ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Appointments</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const accordionData = [\n  {\n    name: \"Controls\",\n    id: \"controls\",\n    tiles: <Controls />,\n  },\n\n  {\n    name: \"Human Resources\",\n    id: \"human_resource\",\n    tiles: <HumanResources />,\n  },\n  {\n    name: \"Revenue\",\n    id: \"revenue\",\n    tiles: <RevenueControls />,\n  },\n  {\n    name: \"Customers\",\n    id: \"customers\",\n    tiles: <AccountControls />,\n  },\n  {\n    name: \"Marketing\",\n    id: \"marketing\",\n    tiles: <Marketing />,\n  },\n  {\n    name: \"Employee Oversite\",\n    id: \"empOversite\",\n    tiles: <EmployeeOversite />,\n  },\n];\n\nconst TestingSidebar = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n\n  const [accordions, updateAccordions] = useState(accordionData);\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n\n    const items = Array.from(accordions);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    updateAccordions(items);\n  }\n\n  return (\n    <Fragment>\n      <Box mt={5}>\n        <DragDropContext onDragEnd={handleOnDragEnd}>\n          <Droppable droppableId=\"accordions\">\n            {(provided) => (\n              <Box\n                className=\"accordions\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {accordions.map((item, index) => {\n                  return (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <Accordion\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          <AccordionSummary\n                            expandIcon={<ExpandMoreIcon color=\"primary\" />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                          >\n                            <Typography\n                              align=\"center\"\n                              color=\"primary\"\n                              sx={{ textTransform: \"uppercase\" }}\n                            >\n                              {item.name}\n                            </Typography>\n                          </AccordionSummary>\n                          <AccordionDetails>{item.tiles}</AccordionDetails>\n                        </Accordion>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </Box>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TestingSidebar;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  Box,\n  Paper,\n  Link,\n  Grid,\n  Container,\n  Stack,\n} from \"@mui/material\";\n\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\n\nimport { useToggle } from \"../../context/useToggle\";\nimport AdminSidebar from \"./AdminSidebar\";\nimport LawyerSidebar from \"./LawyerSidebar\";\nimport FirmSidebar from \"./FirmSidebar\";\nimport CustomerSidebar from \"./CutomerSidebar\";\nimport \"./style.css\";\nimport TestingSidebar from \"./TestingSidebar\";\n\nconst Sidebar = ({ user }) => {\n  const [controlToggle, setControlToggle] = useToggle(true);\n\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: true,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const SidebarRedirect = () => {\n    switch (user.username) {\n      case \"admin\":\n        return <AdminSidebar />;\n      case \"firm\":\n        return <FirmSidebar />;\n      case \"lawyer\":\n        return <LawyerSidebar />;\n      default:\n        return <CustomerSidebar />;\n    }\n  };\n\n  // const [state, dispatch] = useContext(UserContext);\n  return (\n    <Fragment>\n      <Paper component={Stack} elevation={3} spacing={1}>\n        <Box\n          sx={{\n            height: \"calc(83vh - 40px)\",\n            overflowY: \"scroll\",\n          }}\n        >\n          {/* {SidebarRedirect()} */}\n          <TestingSidebar />\n        </Box>\n        {/* <Box p={2}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"error\"\n            style={{\n              padding: \"1rem\",\n              \"&:hover\": {\n                color: \"#fff\",\n              },\n            }}\n          >\n            Report\n          </Button>\n        </Box> */}\n      </Paper>\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Sidebar);\n\n// export default Sidebar;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  BottomNavigation,\n  BottomNavigationAction,\n  Link,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@mui/material\";\nimport { FooterBar, FooterLink, FooterButton } from \"../../styles/styles\";\nimport {\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport Favorites from \"../Favorite/Favorites\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst Footer = () => {\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <Box mt={3}>\n        {isTabletOrMobile ? (\n          <Box sx={{ color: \"#eee\", backgroundColor: \"#7a4ebf\" }}>\n            <List>\n              <FooterLink to={\"/ledgers\"}>Accounting</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}> Calendar</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}>Contacts</FooterLink>\n            </List>\n            <List>\n              <FooterButton\n                sx={{\n                  color: \"#eee\",\n                  marginLeft: \"1.2rem\",\n                  textTransform: \"uppercase\",\n                  textDecoration: \"none\",\n                  \"&:visited\": {\n                    color: \"#eee\",\n                  },\n                }}\n                variant=\"text\"\n                onClick={handleClickOpen}\n              >\n                Favorites\n              </FooterButton>\n            </List>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n              <DialogContent>\n                <Favorites />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} autoFocus>\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n            <List>\n              <FooterLink to={\"/matters\"}>Matters</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/tasks\"}>Tasks</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}>Workflow</FooterLink>\n            </List>\n          </Box>\n        ) : (\n          <FooterBar>\n            <FooterLink to={\"/ledgers\"}>Accounting</FooterLink> |\n            <FooterLink to={\"/\"}> Calendar</FooterLink> |\n            <FooterLink to={\"/\"}>Contacts</FooterLink> |\n            <FooterButton\n              sx={{\n                color: \"#eee\",\n                textTransform: \"uppercase\",\n                textDecoration: \"none\",\n                \"&:visited\": {\n                  color: \"#eee\",\n                },\n              }}\n              variant=\"text\"\n              onClick={handleClickOpen}\n            >\n              Favorites\n            </FooterButton>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n              <DialogContent>\n                <Favorites />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} autoFocus>\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n            |<FooterLink to={\"/matters\"}>Matters</FooterLink> |\n            <FooterLink to={\"/tasks\"}>Tasks</FooterLink> |\n            <FooterLink to={\"/\"}>Workflow</FooterLink>\n          </FooterBar>\n        )}\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Footer;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Navbar from \"../components/Navbars/Navbar\";\nimport NavbarSec from \"../components/Navbars/NavbarSec\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport { connect } from \"react-redux\";\nimport Chatting from \"../components/Chat/Chat\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  isDisplay,\n  hideSidebar,\n  showSidebar,\n} from \"../redux/features/sidebarSlice\";\n\nimport { Paper, Fab, Popover } from \"@mui/material\";\nimport { Grid, Box, Button } from \"@mui/material\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { Chat, Report } from \"@mui/icons-material\";\n\nimport Footer from \"../components/Footer/Footer\";\n\nconst InnerLayout = ({ isAuthenticated, children }) => {\n  const theme = useTheme();\n\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  const sidebarToggle = useSelector((state) => state.sidebar.display);\n  const dispatch = useDispatch();\n\n  const [drawerOpen, setDrawerOpen] = React.useState(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setDrawerOpen(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setDrawerOpen(null);\n  };\n\n  const openPopover = Boolean(drawerOpen);\n  const id = openPopover ? \"simple-popover\" : undefined;\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleSidebarToggle = () => {\n    if (sidebarToggle) {\n      dispatch(hideSidebar());\n    } else {\n      dispatch(showSidebar());\n    }\n  };\n  const descriptionElementRef = React.useRef(null);\n\n  useEffect(() => {\n    if (isBigScreen) {\n      dispatch(showSidebar());\n    } else if (isTabletOrMobile) {\n      dispatch(hideSidebar());\n    }\n  }, []);\n  useEffect(() => {\n    if (drawerOpen) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [drawerOpen]);\n\n  return (\n    <Paper style={{ margin: \"0\" }}>\n      <Grid contianer rowSpacing={2} columnSpacing={2}>\n        <Grid item lg={12} md={12}>\n          {isAuthenticated ? (\n            <Fragment>\n              <NavbarSec />\n            </Fragment>\n          ) : (\n            <Navbar />\n          )}\n        </Grid>\n\n        {isAuthenticated ? (\n          <Fragment>\n            <Grid item lg={12}>\n              <Navbar />\n            </Grid>\n            <Grid container direction=\"row\" wrap=\"nowrap\">\n              {sidebarToggle ? (\n                <Fragment>\n                  <Grid item lg={2} xs={12} m={3}>\n                    <Sidebar />\n                  </Grid>\n                  <Grid item lg={10} xs={12} p={1}>\n                    <Box>\n                      <Button\n                        onClick={handleSidebarToggle}\n                        p={5}\n                        sx={{\n                          left: \"-8rem\",\n                          top: \"2rem\",\n                        }}\n                      >\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <Grid item lg={12} xs={12} p={1}>\n                    <Box>\n                      <Button onClick={handleSidebarToggle}>\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              )}\n            </Grid>\n            <Grid item lg={12}>\n              <Footer />\n            </Grid>\n          </Fragment>\n        ) : (\n          <Grid item lg={12} xs={12}>\n            {children}\n          </Grid>\n        )}\n        <Fab\n          size=\"large\"\n          sx={\n            isDesktopOrLaptop\n              ? {\n                  borderRadius: \"50%\",\n                  backgroundColor: \"#edb4b6\",\n                  position: \"fixed\",\n                  bottom: \"16px\",\n                  left: \"16px\",\n                  color: \"red\",\n                  zIndex: \"200\",\n                  \"&:hover\": {\n                    color: \"red\",\n                  },\n                }\n              : { display: \"none\" }\n          }\n          aria-label=\"report\"\n        >\n          <Report />\n        </Fab>\n        <Fab\n          size=\"large\"\n          onClick={handlePopoverOpen}\n          sx={\n            isDesktopOrLaptop\n              ? {\n                  borderRadius: \"50%\",\n                  backgroundColor: \"#eee\",\n                  position: \"fixed\",\n                  bottom: \"16px\",\n                  right: \"16px\",\n                  color: \"#461594\",\n                  zIndex: \"200\",\n                  \"&:hover\": {\n                    color: \"#7a4ebf\",\n                  },\n                }\n              : { display: \"none\" }\n          }\n          aria-label=\"chat\"\n        >\n          <Chat />\n        </Fab>\n        <Popover\n          open={openPopover}\n          anchorEl={drawerOpen}\n          onClose={handlePopoverClose}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          sx={{ margin: \"-2rem\" }}\n        >\n          <Chatting />\n        </Popover>\n      </Grid>\n    </Paper>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps)(InnerLayout);\n","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nconst PrivateRoutes = ({ isAuthenticated, children, ...rest}) => {\n    \n\n    return (\n        <Route {...rest}>\n            {isAuthenticated ? children: <Redirect to=\"/login\"/>}\n        </Route>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(PrivateRoutes);","/** @format */\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'toggle_button':\n      return {\n        ...state,\n        active: !state.active,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initialState = {\n  active: false,\n};\n","/** @format */\n\nimport React from 'react';\nimport { reducer, initialState } from './reducer';\n\nexport const UserContext = React.createContext({\n  state: initialState,\n  dispatch: () => null,\n});\n\nexport const UserProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <UserContext.Provider value={[state, dispatch]}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","/** @format */\n\n// import styled from \"styled-components\";\nimport { createTheme } from \"@mui/material/styles\";\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    mode: \"light\",\n    primary: {\n      main: \"#796ef0\", //blueish purple\n    },\n    // secondary: {\n    //   main: \"\",\n    // },\n    error: {\n      main: \"#e85355\", //red\n    },\n    warning: {\n      main: \"#fd9905\", // orange\n    },\n    success: {\n      main: \"#28c570\", //green\n    },\n\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n  typography: {\n    htmlFontSize: 14,\n    fontSize: 12,\n    color: \"#333\",\n  },\n});\n\nexport default theme;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport \"./DashboardLayout/style.css\";\n\nimport DashboardContent from \"./DashboardLayout/DashboardContent\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <DashboardContent />\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\nimport { Button, Stack, IconButton } from \"@mui/material\";\nimport styles from \"./tabs.module.css\";\n\nconst Tabs = ({ children }) => {\n  const [activeTab, setActiveTab] = useState(children[0].props.label);\n  const handleClick = (e, newActiveTab) => {\n    e.preventDefault();\n    setActiveTab(newActiveTab);\n  };\n  return (\n    <Fragment>\n      <Stack direction=\"row\" spacing={1}>\n        <ul className={styles.tabs}>\n          {children.map((tab) => (\n            <li\n              className={tab.props.label === activeTab ? styles.current : \"\"}\n              key={tab.props.label}\n            >\n              <Button\n                variant=\"text\"\n                size=\"small\"\n                startIcon={<MoreVert />}\n                onClick={(e) => handleClick(e, tab.props.label)}\n              >\n                {tab.props.label}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      </Stack>\n\n      {children.map((one) =>\n        one.props.label === activeTab ? (\n          <div className={styles.content} key={one.props.label}>\n            {one.props.children}\n          </div>\n        ) : (\n          \"\"\n        ),\n      )}\n    </Fragment>\n  );\n};\n\nexport default Tabs;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  FormControlLabel,\n  Switch,\n  Button,\n  Stack,\n} from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst CreateInvoice = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    matter: \"\",\n    contact: \"\",\n    billable: false,\n    date_range: \"\",\n    create_date: \"\",\n    due_date: \"\",\n    template: \"\",\n    invoice_no: \"\",\n    discount: \"\",\n    submit: false,\n  });\n\n  // const {\n  //   matter,\n  //   contact,\n  //   billable,\n  //   date_range,\n  //   create_date,\n  //   due_date,\n  //   template,\n  //   invoice_no,\n  //   discount,\n  //   submit,\n  // } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  const [invoice, setInvoice] = useState(null);\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoice`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  const [dateRange, setDateRange] = React.useState([null, null]);\n  return (\n    <Fragment>\n      {/* <Typography component=\"h3\" variant=\"h4\">\n        Create New Invoice\n      </Typography>\n      <Box p={3}>\n        <LinkButton to=\"/invoices\" sx={{ float: \"right\" }}>\n          Invoice Dashboard\n        </LinkButton>\n      </Box> */}\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Grid\n          spacing={3}\n          container\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"Matter\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n              autoComplete=\"matter\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"Contact\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              autoComplete=\"contact\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <FormControlLabel\n              sx={{ fontSize: \"12px\", marginLeft: \"1rem\" }}\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Unbillable\"\n            />\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Stack direction=\"row\">\n              <Typography varient=\"caption\" sx={{ marginTop: \"0.7rem\" }}>\n                Range:\n              </Typography>\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateRangePicker\n                  calendars={1}\n                  value={dateRange}\n                  onChange={(newValue) => {\n                    setDateRange(newValue);\n                  }}\n                  renderInput={(startProps, endProps) => (\n                    <Fragment>\n                      <TextField size=\"small\" {...startProps} />\n                      <Box sx={{ mx: 2 }}> to </Box>\n                      <TextField size=\"small\" {...endProps} />\n                    </Fragment>\n                  )}\n                />\n              </LocalizationProvider>\n            </Stack>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          spacing={3}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"create_date\"\n              label=\"Create Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"due_date\"\n              label=\"Due Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"template\"\n              label=\"Template\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"template\"\n              autoComplete=\"template\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"invoice_no\"\n              label=\"Invoice #\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"invoice_no\"\n              autoComplete=\"invoice_no\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"discount\"\n              label=\"Discount\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"discount\"\n              autoComplete=\"discount\"\n            />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <FormControlLabel\n              label=\"Submit For Approvel\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n            />\n          </Grid>\n        </Grid>\n\n        <Grid item lg={12} mt={2}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Sub-Category</TableCell>\n                  <TableCell>Description</TableCell>\n                  <TableCell>Date</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Rate</TableCell>\n                  <TableCell>Sub</TableCell>\n                  <TableCell>Tax</TableCell>\n                  <TableCell>int</TableCell>\n                  <TableCell>Disc.</TableCell>\n                  <TableCell>Total</TableCell>\n                  <TableCell>Biller</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                {/* {invoice?.map((invoice) => (\n                  <TableRow id={invoice.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n\n                    <TableCell>{invoice.sub_cat}</TableCell>\n                    <TableCell>{invoice.discription}</TableCell>\n                    <TableCell>{invoice.date}</TableCell>\n                    <TableCell>{invoice.hours}</TableCell>\n                    <TableCell>{invoice.rate}</TableCell>\n                    <TableCell>{invoice.sub}</TableCell>\n                    <TableCell>{invoice.tax}</TableCell>\n                    <TableCell>{invoice.int}</TableCell>\n                    <TableCell>{invoice.dics}</TableCell>\n                    <TableCell>{invoice.total}</TableCell>\n                    <TableCell>{invoice.biller}</TableCell>\n                  </TableRow>\n                ))} */}\n              </TableHead>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item mt={3} direction=\"row\">\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Notes\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"Accept Online Payment\"\n              />\n            }\n            label=\"Accept Online Payment\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Accept Payments for Less\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (Compound / Simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Terms and Conditions\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (compund/ simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Use Trust Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add all unpaid invoices\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"use Operating Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Send Reminders Every\"\n          />\n          <TextField size=\"small\" sx={{ width: \"5rem\" }} />\n          <Typography\n            varient=\"caption\"\n            component=\"span\"\n            sx={{ marginLeft: \"0.5rem \" }}\n          >\n            day(s)/week(s)\n          </Typography>\n\n          {/* <Button\n            variant=\"contained\"\n            sx={{ float: \"right\" }}\n            endIcon={<SaveIcon />}\n          >\n            Send\n          </Button> */}\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateInvoice;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Grid,\n  Box,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormControl,\n  Checkbox,\n  Typography,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  MenuItem,\n  InputLabel,\n  Select,\n  Button,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst PaymentPlan = () => {\n  const [paymentData, setPaymentData] = useState({\n    payment_no: \"File# - 001\",\n    due: \"2020/07/01\",\n    amount: \"$ 750.00\",\n    late_fee: \"$22.00\",\n    total_due: \"$ 775.00\",\n    payment: \"$775.00\",\n    posted: \"$2020/07/05\",\n    method: \"Check\",\n  });\n\n  return (\n    <Fragment>\n      <Grid container mt={3} mb={3}>\n        <Grid item lg={4}>\n          <Typography>Start Balance:</Typography>\n          <Typography>Start Date:</Typography>\n          <Typography>Interest Rate:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Amout:</Typography>\n          <Typography>Payment Date:</Typography>\n          <Typography>No Payments:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Remaining:</Typography>\n          <Typography>Last Payment:</Typography>\n          <Typography>Last Payment $:</Typography>\n        </Grid>\n      </Grid>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Payment #</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Amout</TableCell>\n            <TableCell>Late Fee</TableCell>\n            <TableCell>Total Due</TableCell>\n            <TableCell>Payment</TableCell>\n            <TableCell>Posted</TableCell>\n            <TableCell>Method</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{paymentData.payment_no}</TableCell>\n          <TableCell>{paymentData.due}</TableCell>\n          <TableCell>{paymentData.amount} </TableCell>\n          <TableCell>{paymentData.late_fee}</TableCell>\n          <TableCell>{paymentData.total_due}</TableCell>\n          <TableCell>{paymentData.payment}</TableCell>\n          <TableCell>{paymentData.posted}</TableCell>\n          <TableCell>{paymentData.method}</TableCell>\n        </TableBody>\n      </Table>\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Close\n      </Button>\n      <Grid container>\n        <Grid item lg={6}>\n          <Typography>Post agreement Balance:</Typography>\n        </Grid>\n        <Grid item lg={6}>\n          <Typography>Start Date:</Typography>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst InvoicePayment = () => {\n  const [invoiceData, setInvoiceData] = useState({\n    invoice_no: \"i-2106-0004542\",\n    due: \"2020/07/01\",\n    tax: \"$ 15.00\",\n    interest: \"$2.35\",\n    time: \"$ 1,234.50\",\n    hard: \"$457.00\",\n    soft: \"$45.00\",\n    total: \"$ 1,753.85\",\n  });\n\n  return (\n    <Fragment>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Invoice</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Tax</TableCell>\n            <TableCell>Interest</TableCell>\n            <TableCell>Time</TableCell>\n            <TableCell>Hard</TableCell>\n            <TableCell>Soft</TableCell>\n            <TableCell>Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{invoiceData.invoice_no}</TableCell>\n          <TableCell>{invoiceData.due}</TableCell>\n          <TableCell>{invoiceData.tax} </TableCell>\n          <TableCell>{invoiceData.interest}</TableCell>\n          <TableCell>{invoiceData.time}</TableCell>\n          <TableCell>{invoiceData.hard}</TableCell>\n          <TableCell>{invoiceData.soft}</TableCell>\n          <TableCell>{invoiceData.total}</TableCell>\n        </TableBody>\n      </Table>{\" \"}\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Pay\n      </Button>{\" \"}\n    </Fragment>\n  );\n};\n\nconst Payment = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [isPlan, setIsPlan] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    payment_type: \"\",\n    date: \"\",\n    retainer: \"\",\n    payment: \"\",\n    date_range: \"\",\n    menu: \"\",\n    bank_account: \"\",\n    payment_method: \"\",\n  });\n\n  const {\n    payment_type,\n    date,\n    retainer,\n    payment,\n    date_range,\n    menu,\n    bank_account,\n    payment_method,\n  } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{\n              \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n            }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"payment_type\"\n                defaultValue=\"cash\"\n                name=\"payment_type\"\n                onChange={(e) => onChange(e)}\n                id=\"payment_type\"\n                autoComplete=\"payment_type\"\n              >\n                <FormControlLabel\n                  value=\"cash\"\n                  control={<Radio />}\n                  label=\"Cash\"\n                />\n                <FormControlLabel value=\"cc\" control={<Radio />} label=\"CC\" />\n                <FormControlLabel\n                  value=\"wire\"\n                  control={<Radio />}\n                  label=\"Wire\"\n                />\n                <FormControlLabel\n                  value=\"check\"\n                  control={<Radio />}\n                  label=\"Check\"\n                />\n              </RadioGroup>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              id=\"date\"\n              label=\"date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <FormControlLabel\n              value=\"retainer\"\n              control={<Checkbox />}\n              label=\"Retainer\"\n            />\n            <FormControlLabel\n              value=\"payment\"\n              control={<Checkbox />}\n              label=\"Payment\"\n            />\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n              <DateRangePicker\n                calendars={1}\n                value={dateRange}\n                onChange={(newValue) => {\n                  setDateRange(newValue);\n                }}\n                renderInput={(startProps, endProps) => (\n                  <Fragment>\n                    <TextField size=\"small\" {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField size=\"small\" {...endProps} />\n                  </Fragment>\n                )}\n              />\n            </LocalizationProvider> */}\n            <FormControl sx={{ width: \"12rem\" }}>\n              <InputLabel id=\"demo-simple-select-label\">Date Range</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={date_range}\n                label=\"Age\"\n                onChange={(e) => onChange(e)}\n              >\n                <MenuItem value={10}>Ten</MenuItem>\n                <MenuItem value={20}>Twenty</MenuItem>\n                <MenuItem value={30}>Thirty</MenuItem>\n              </Select>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"menu\"\n              label=\"menu\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"menu\"\n              autoComplete=\"menu\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bank_account\"\n              label=\"bank_account\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"bank_account\"\n              autoComplete=\"bank_account\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"payment_method\"\n              label=\"payment_method\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"payment_method\"\n              autoComplete=\"payment_method\"\n            />\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"isPlan\"\n                defaultValue={isPlan}\n                name=\"isPlan\"\n                onChange={(e) => setIsPlan(e)}\n                id=\"isPlan\"\n                autoComplete=\"isPlan\"\n              >\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Invoice Payment\"\n                />\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Payment Plan\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Box>\n        </Grid>\n        <Grid item lg={12}>\n          <TableContainer>\n            {isPlan ? <PaymentPlan /> : <InvoicePayment />}\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Payment;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  FormControlLabel,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  Button,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport { styled } from \"@mui/material/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\nimport CreateInvoice from \"./CreateInvoice\";\nimport Payment from \"./Payment\";\n\nconst Filters = () => {\n  const [invoiceToggle, setInvoiceToggle] = useToggle(false);\n  const [paymentToggle, setPaymentToggle] = useToggle(false);\n  const [paid, setPaid] = useToggle(false);\n\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid\n          spacing={2}\n          item\n          lg={12}\n          direction=\"Row\"\n          sx={{\n            \"& .MuiTextField-root\": { m: 1 },\n            \"& .MuiFormControl-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            onClick={() => setInvoiceToggle(invoiceToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Create Invoice\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={invoiceToggle}\n            onClose={() => setInvoiceToggle(invoiceToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {\"Create Invoice\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <CreateInvoice />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <Button\n            variant=\"contained\"\n            onClick={() => setPaymentToggle(paymentToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Receive Money\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={paymentToggle}\n            onClose={() => setPaymentToggle(paymentToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Receive Money\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <Payment />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <FormControlLabel\n            label=\" Paid/ Unpaid\"\n            control={<Switch checked={paid} onChange={() => setPaid(paid)} />}\n          />\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Invoice</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Bill Date</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Times</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <Typography\n            component=\"span\"\n            variant=\"caption\"\n            sx={{ width: \"8rem\", m: 2, fontSize: \"1.2rem\" }}\n          >\n            Status:\n          </Typography>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Any </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Dropd-own</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n} from \"@mui/material\";\nimport Filters from \"./Filters\";\n\nconst InvoiceList = () => {\n  const [invoice, setInvoice] = useState(null);\n\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoices`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  return (\n    <Fragment>\n      <Filters />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Invoice</TableCell>\n              <TableCell>Created</TableCell>\n              <TableCell>Due</TableCell>\n              <TableCell>Tax</TableCell>\n              <TableCell>Interest</TableCell>\n              <TableCell>Discount</TableCell>\n              <TableCell>Total</TableCell>\n              <TableCell>Balance</TableCell>\n              <TableCell>Last Payment</TableCell>\n              <TableCell>Approval Date</TableCell>\n              <TableCell>Approval by</TableCell>\n              <TableCell>Created by</TableCell>\n            </TableRow>\n            {/* {invoice?.map((invoice) => (\n              <TableRow id={invoice.id}>\n                <TableCell>\n                  <Checkbox />\n                </TableCell>\n                <TableCell>{invoice.id}</TableCell>\n                <TableCell>{invoice.created}</TableCell>\n                <TableCell>{invoice.due}</TableCell>\n                <TableCell>{invoice.tax}</TableCell>\n                <TableCell>{invoice.interest}</TableCell>\n                <TableCell>{invoice.discount}</TableCell>\n                <TableCell>{invoice.total}</TableCell>\n                <TableCell>{invoice.balance}</TableCell>\n                <TableCell>{invoice.last_payment}</TableCell>\n                <TableCell>{invoice.approvel_date}</TableCell>\n                <TableCell>{invoice.approvel.by}</TableCell>\n                <TableCell>{invoice.created_by}</TableCell>\n              </TableRow>\n            ))} */}\n          </TableHead>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default InvoiceList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport InvoiceList from \"./InvoiceList\";\nimport Payment from \"./Payment\";\nimport CreateInvoice from \"./CreateInvoice\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <InvoiceList />\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\n// import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport const CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nexport const CreateMatter = (\n  contact,\n  matter_name,\n  matter_type,\n  matter_source,\n  matter_status,\n  assign_to,\n  assign_by,\n  billing_rate,\n  alerts,\n  open_date,\n  close_date,\n  total_days,\n  jurisdiction,\n  status_limitaion,\n  opposing_counsel,\n  where,\n  when,\n  involved,\n  witnesses,\n  narrative,\n) => {\n  let status = \"\";\n  const body = JSON.stringify({\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n    open_date,\n    close_date,\n    total_days,\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    when,\n    involved,\n    witnesses,\n    narrative,\n  });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n    .then((res) => {\n      status = res.statusText;\n    })\n    .catch((err) => {\n      status = err.message;\n    });\n\n  return status;\n};\n\nexport const retrive_matter = () => {};\n","/** @format */\n\nimport React from \"react\";\nimport { Alert } from \"@mui/material\";\n\nexport const ActionAlerts = (status) => {\n  return <Alert severity=\"error\">{status}</Alert>;\n};\n\nexport const TotalDays = (date1, date2) => {\n  let dt1 = new Date(date1);\n  let dt2 = new Date(date2);\n  return Math.floor(\n    (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) -\n      Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) /\n      (1000 * 60 * 60 * 24),\n  );\n};\n\nexport const GetDate = (date) => {\n  let newDate =\n    date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n  return newDate;\n};\n\nexport const GetTime = (time) => {\n  let newTime =\n    time.getHours() + \":\" + time.getMinutes() + \":\" + time.getSeconds();\n  return newTime;\n};\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Box,\n  containerClasses,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\n\nconst MatterList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const [redTask, setRedTask] = useState(false);\n  const [greenTask, setGreenTask] = useState(false);\n  const [yellowTask, setYellowTask] = useState(false);\n  const [myTask, setMyTask] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/tasks/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTasks(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Box component={Paper} p={2}>\n      <FormGroup aria-label=\"position\" row>\n        <FormControlLabel\n          control={\n            <Checkbox value={myTask} onChange={() => setMyTask(!myTask)} />\n          }\n          label=\"My Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox value={redTask} onChange={() => setRedTask(!redTask)} />\n          }\n          label=\"Red Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={greenTask}\n              onChange={() => setGreenTask(!greenTask)}\n            />\n          }\n          label=\"Green Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={yellowTask}\n              onChange={() => setYellowTask(!yellowTask)}\n            />\n          }\n          label=\"Yellow Tasks\"\n        />\n      </FormGroup>\n      <Typography component=\"h3\">All Matters Task's List</Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assign To</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : tasks?.map((data) => {\n                  return (\n                    <TableRow id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        {data.task_nature === \"urgent\" ? (\n                          <CircleIcon color=\"error\" />\n                        ) : (\n                          <CircleIcon color=\"success\" />\n                        )}\n                      </TableCell>\n                      <TableCell>{data.matter}</TableCell>\n                      <TableCell>\n                        {data.last_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>\n                        {data.next_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default MatterList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, CardContent, Typography } from \"@mui/material\";\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Tasks cleared Last day\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Goal Today\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Personal Best\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Company Record\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Link, Typography, List, ListItem, Paper } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nconst Calendar = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography variant=\"h6\" component=\"h7\">\n          My Calendar at a Glance\n        </Typography>\n        <List>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Start motion for trail</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Calendar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  Typography,\n} from \"@mui/material\";\n\nconst Filters = () => {\n  // const [user, setUser] = useState(\"Any user\");\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item>\n          <Typography>Assign To</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Organized By</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Status</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, Button, Typography } from \"@mui/material\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst MatterCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2} mt={1.5}>\n        <Grid item lg={9}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"error.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Urgent\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"warning.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Concern\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"success.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Start\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"white\",\n                  color: \"black\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      New\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3}>\n          <Button\n            variant=\"outlined\"\n            sx={{\n              minWidth: 100,\n              height: 40,\n              borderRadius: \"0.5rem\",\n              bgcolor: \"white\",\n              color: \"black\",\n            }}\n          >\n            Import\n          </Button>\n          <LinkButton to=\"/create-matter\"> + New </LinkButton>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterCards;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  TableBody,\n} from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst MatterListLong = () => {\n  const [matters, setMatters] = useState([]);\n\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/new-matter/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setMatters(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Matter Contact</TableCell>\n              <TableCell>Matter Type</TableCell>\n              <TableCell>Bill Rate</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assigned to</TableCell>\n              <TableCell>Billable</TableCell>\n              <TableCell>Open Invoice</TableCell>\n              <TableCell>Trust Account</TableCell>\n              <TableCell>Last Payment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : matters?.map((data, index) => {\n                  return (\n                    <TableRow id={index}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        <CircleIcon color=\"error\" />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n                      <TableCell>{data.contact}</TableCell>\n                      <TableCell>{data.matter_type}</TableCell>\n                      <TableCell>{data.billing_rate}</TableCell>\n                      <TableCell>{data.open_date}</TableCell>\n                      <TableCell>{data.close_date}</TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 100)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {\" \"}\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />{\" \"}\n                        - {data.close_date}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default MatterListLong;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Button, Typography } from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\n\nimport { LocalizationProvider, DateRangePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { CreateMatter, CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, TotalDays, GetDate } from \"../../utils/ActionAlerts\";\n\nconst NewMatter = () => {\n  // const matter_number = Math.floor(Math.random() * 10000000);\n  const mask = \"____-__-__\";\n  const matter_number = 23568;\n  const [openDate, setOpenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [whenDate, setWhenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [closeDate, setCloseDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [totalDays, setTotalDays] = useState(0);\n  const [matterData, setMatterData] = useState({\n    contact: 0,\n    matter_name: \"\",\n    matter_type: \"\",\n    matter_source: \"\",\n    matter_status: \"\",\n    assign_to: 0,\n    assign_by: 0,\n    billing_rate: 0,\n    alerts: \"\",\n\n    jurisdiction: \"\",\n    status_limitaion: null,\n    opposing_counsel: \"\",\n    where: \"\",\n    involved: \"\",\n    witnesses: \"\",\n    narrative: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    involved,\n    witnesses,\n    narrative,\n  } = matterData;\n\n  const onChange = (e) =>\n    setMatterData({ ...matterData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let open_date = GetDate(openDate);\n    let close_date = GetDate(closeDate);\n    let when = GetDate(whenDate);\n    let total_days = totalDays;\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      matter_type,\n      matter_source,\n      matter_status,\n      assign_to,\n      assign_by,\n      billing_rate,\n      alerts,\n      open_date,\n      close_date,\n      total_days,\n      jurisdiction,\n      status_limitaion,\n      opposing_counsel,\n      where,\n      when,\n      involved,\n      witnesses,\n      narrative,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  useEffect(() => {\n    let days = TotalDays(openDate, closeDate);\n    setTotalDays(days);\n  }, [openDate, closeDate]);\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Matter\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item lg={8}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"contact\"\n              type=\"number\"\n              min=\"0\"\n              value={contact}\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_number\"\n              label=\"matter_number\"\n              type=\"text\"\n              value={matter_number}\n              // onChange={(e) => onChange(e)}\n              id=\"matter_number\"\n              disabled\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_name\"\n              label=\"matter_name\"\n              type=\"text\"\n              value={matter_name}\n              onChange={(e) => onChange(e)}\n              id=\"matter_name\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"alerts\"\n              label=\"alerts\"\n              type=\"text\"\n              value={alerts}\n              onChange={(e) => onChange(e)}\n              id=\"alerts\"\n              autoComplete=\"alerts\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_type\"\n              label=\"matter_type\"\n              type=\"text\"\n              value={matter_type}\n              onChange={(e) => onChange(e)}\n              id=\"matter_type\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_source\"\n              label=\"matter_source\"\n              type=\"text\"\n              value={matter_source}\n              onChange={(e) => onChange(e)}\n              id=\"matter_source\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_status\"\n              label=\"matter_status\"\n              type=\"text\"\n              value={matter_status}\n              onChange={(e) => onChange(e)}\n              id=\"matter_status\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"assign_to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_rate\"\n              label=\"billing_rate\"\n              step=\"0.01\"\n              type=\"number\"\n              value={billing_rate}\n              onChange={(e) => onChange(e)}\n              id=\"billing_rate\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Open Date\"\n                value={openDate}\n                name=\"open\"\n                id=\"open\"\n                onChange={(e) => setOpenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Close Date\"\n                value={closeDate}\n                name=\"closed\"\n                id=\"closed\"\n                onChange={(e) => setCloseDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"total_days\"\n              label=\"total_days\"\n              type=\"number\"\n              value={totalDays}\n              onChange={(e) => setTotalDays(TotalDays(openDate, closeDate))}\n              id=\"total_days\"\n              disabled\n            />\n          </Grid>\n\n          <Grid item lg={4}>\n            <br />\n            <Typography component=\"h5\" variant=\"h6\">\n              Legal Concerns\n            </Typography>\n            <br />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"jurisdiction\"\n              label=\"jurisdiction\"\n              type=\"text\"\n              value={jurisdiction}\n              onChange={(e) => onChange(e)}\n              id=\"jurisdiction\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"status_limitaion\"\n              label=\"status_limitaion\"\n              type=\"text\"\n              value={status_limitaion}\n              onChange={(e) => onChange(e)}\n              id=\"status_limitaion\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"opposing_counsel\"\n              label=\"opposing_counsel\"\n              type=\"text\"\n              value={opposing_counsel}\n              onChange={(e) => onChange(e)}\n              id=\"opposing_counsel\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <Typography component=\"h5\" variant=\"h6\" sx={{ fontSize: \"1rem\" }}>\n              Event Detail\n            </Typography>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"where\"\n              label=\"where\"\n              type=\"text\"\n              value={where}\n              onChange={(e) => onChange(e)}\n              id=\"where\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"When\"\n                value={whenDate}\n                name=\"when\"\n                id=\"when\"\n                onChange={(e) => setWhenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"involved\"\n              label=\"Who was involved\"\n              type=\"text\"\n              value={involved}\n              onChange={(e) => onChange(e)}\n              id=\"involved\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"witnesses\"\n              label=\"witnesses\"\n              type=\"text\"\n              value={witnesses}\n              onChange={(e) => onChange(e)}\n              id=\"witnesses\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              label=\"Customer Narrative of the Event\"\n              multiline\n              type=\"text\"\n              rows={10}\n              value={narrative}\n              onChange={(e) => onChange(e)}\n              defaultValue=\"Narrative\"\n              name=\"narrative\"\n              id=\"narrative\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewMatter;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { styled } from \"@mui/material/styles\";\n\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  CardContent,\n  Typography,\n  Card,\n  Grid,\n  Box,\n  List,\n  ListItem,\n  Paper,\n  InputBase,\n} from \"@mui/material\";\n\nconst MatterTask = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components=\"p\">\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components=\"p\">\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components=\"p\">YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Activities = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components={Typography}>\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components={Typography}>\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components={Typography}>YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Classification\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                % time spent\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Matter Completion\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst MatterDetail = () => {\n  const Search = styled(\"div\")(({ theme }) => ({\n    position: \"relative\",\n    borderRadius: \"1.5rem\",\n    backgroundColor: \"#eee\",\n    \"&:hover\": {\n      backgroundColor: \"#ddd\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"40%\",\n  }));\n\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }));\n\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: \"inherit\",\n    \"& .MuiInputBase-input\": {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"md\")]: {\n        width: \"20ch\",\n      },\n    },\n  }));\n  // const [matters, setMatters] = useState(null);\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n        </Grid>\n        <Grid item lg={12}>\n          <Grid container spacing={2}>\n            <Grid item mt={2} lg={7}>\n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Recent Document</TableCell>\n                      <TableCell>Version</TableCell>\n                      <TableCell>Last Open</TableCell>\n                      <TableCell>User</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>1</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>2</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>3</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableContainer>\n              <Grid container spacing={3}>\n                <Grid item>\n                  <Activities />\n                </Grid>\n                <Grid item>\n                  <MatterTask />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item mt={2} lg={5}>\n              <Cards />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterDetail;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport MatterList from \"./MatterList\";\nimport { Grid, Box } from \"@mui/material\";\nimport Cards from \"./Cards\";\nimport Calendar from \"./Calendar\";\nimport Filters from \"./Filters\";\nimport MatterCards from \"./MatterCards\";\nimport MatterListLong from \"./MatterListLong\";\nimport NewMatter from \"./NewMatter\";\nimport MatterDetail from \"./MatterDetail\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item lg={12}>\n            <Filters />\n          </Grid>\n          <Grid item lg={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item lg={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst MatterDashboard = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container spacing={2}>\n          <Grid item lg={7}>\n            <MatterList />\n            <Calendar />\n          </Grid>\n          <Grid item lg={5}>\n            <Cards />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashboard\">\n          <MatterDashboard />\n        </div>\n        <div label=\"Matter\">\n          <Matters />\n        </div>\n        <div label=\"New Matter\">\n          <NewMatter />\n        </div>\n        <div label=\"Smith vs. Jhon\">\n          <MatterDetail />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerActivity = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setActivityData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow bgColor=\"#796ef0\">\n              <TableCell>\n                <Typography color=\"white\">Date</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Files</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Sub-Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Notes</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Source</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">User</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">In/Out</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          {/* {loading\n            ? null\n            : activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })} */}\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default LedgerActivity;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  TextField,\n  FormControlLabel,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Fillters = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [billedby, setBilledby] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Filter By</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={filter}\n            label=\"Filter By\"\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Billed by</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={billedby}\n            label=\"Billed By\"\n            onChange={(e) => setBilledby(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={status}\n            label=\"Age\"\n            onChange={(e) => setStatus(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n          <DateRangePicker\n            calendars={1}\n            value={dateRange}\n            onChange={(newValue) => {\n              setDateRange(newValue);\n            }}\n            renderInput={(startProps, endProps) => (\n              <Fragment>\n                <TextField size=\"small\" {...startProps} />\n                <Box sx={{ mx: 2 }}> to </Box>\n                <TextField size=\"small\" {...endProps} />\n              </Fragment>\n            )}\n          />\n        </LocalizationProvider>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Fillters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={7}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Time Entries\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={200}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      f\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Soft Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={65000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Hard Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={5000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={70000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Trust\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={4000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Due\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={100000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item={5}>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>User</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell> Jhon Johnson</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={74.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={39007.05}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Mark MacCalloff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={4.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={800.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Cindy Madenuff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={127.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={41372.5}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerCards;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n  Button,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { LinkButton } from \"../../styles/styles\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerTImeList = () => {\n  const [ledgerData, setLedgerData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setLedgerData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <Box>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Print\n        </Button>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Export\n        </Button>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>Cateagory</TableCell>\n                <TableCell>Sub-Category</TableCell>\n                <TableCell>Detail</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Qty</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Total</TableCell>\n                <TableCell>BillBy</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n                ? null\n                : ledgerData?.map((data) => {\n                    return (\n                      <TableBody id={data.id}>\n                        <TableCell>\n                          <Checkbox />\n                        </TableCell>\n                        <TableCell>{data.category}</TableCell>\n                        <TableCell>{data.sub_category}</TableCell>\n                        <TableCell>{data.detail}</TableCell>\n                        <TableCell>{data.date}</TableCell>\n                        <TableCell>{data.qty}</TableCell>\n                        <TableCell>\n                          {data.billable ? \"Billable\" : \"Paid\"}\n                        </TableCell>\n                        <TableCell>\n                          <NumberFormat\n                            value={data.qty * 25}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix=\"$\"\n                          />\n                        </TableCell>\n                        <TableCell>{data.bill_by}</TableCell>\n                      </TableBody>\n                    );\n                  })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default LedgerTImeList;\n","/** @format */\n\nimport { Typography, Box, Grid } from \"@mui/material\";\nimport React, { Fragment } from \"react\";\nimport Fillters from \"./Fillters\";\nimport LedgerCards from \"./LedgerCards\";\nimport LedgerTimeList from \"./LedgerTImeList\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LegderDashbard = () => {\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <Box>\n          <LedgerCards />\n          <Fillters />\n          <LedgerTimeList />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LegderDashbard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box, Typography, Paper, TextField } from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerDoc = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={1}>\n        <Grid item lg={4} sx={{}}>\n          <Box\n            sx={{\n              width: \"80%\",\n              minHeight: \"25rem\",\n              padding: \"5rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            MS Word Document On Pleading or Non Pleading Paper\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Box\n            sx={{\n              padding: \"5rem 2rem 5rem 2rem\",\n              minHeight: \"25rem\",\n              width: \"80%\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Space for 2nd Document to be opend if user wants it\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Grid container>\n            <Grid item lg={12}>\n              <Box component={Paper} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n              </Box>\n            </Grid>\n            <Grid item lg={12}>\n              <Box component={Paper} mt={2} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={5}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"filled\"\n                  name=\"detail\"\n                  type=\"text\"\n                  value=\"Quick Notes\"\n                  id=\"detail\"\n                  sx={{ borderRadius: \"1rem\" }}\n                />\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerDoc;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  RadioGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Radio,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst Time = () => {\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [timeToggle, setTimeToggle] = useToggle(true);\n  const [billable, setBillable] = useToggle(false);\n\n  // const [bill, setBill] = useToggle(false);\n  const [time, setTime] = useState(\"\");\n  const [timeData, setTimeData] = useState({\n    contact: 0,\n    matter_name: 0,\n    category: \"\",\n    sub_category: \"\",\n    // time: \"\",\n    hard: false,\n    soft: false,\n    unit: 0,\n    qty: 0,\n    rate: 0,\n    file: \"\",\n    detail: \"\",\n    bill_by: 0,\n    note: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    category,\n    sub_category,\n    hard,\n    soft,\n    unit,\n    // time,\n    qty,\n    rate,\n    file,\n    detail,\n    bill_by,\n\n    note,\n  } = timeData;\n  const onChange = (e) =>\n    setTimeData({ ...timeData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    let date = GetDate(pickDate);\n\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      category,\n      sub_category,\n      hard,\n      soft,\n      unit,\n      qty,\n      rate,\n      time,\n      date,\n      detail,\n      bill_by,\n      billable,\n      note,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/add-time/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Typography component=\"h3\" variant=\"h4\">\n          Time\n        </Typography>\n        <Grid\n          container\n          spacing={2}\n          mt={2}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n          }}\n        >\n          <Grid item xs={12}>\n            <Grid container p={3}>\n              <Grid item xs={6}>\n                <FormControlLabel\n                  size=\"large\"\n                  label=\"Time\"\n                  labelPlacement=\"start\"\n                  control={\n                    <Switch\n                      size=\"large\"\n                      checked={timeToggle}\n                      onChange={(e) => setTimeToggle(e)}\n                    />\n                  }\n                />\n                {timeToggle ? null : (\n                  <Box>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">Expense</FormLabel>\n                      <RadioGroup\n                        row\n                        aria-label=\"expense\"\n                        defaultValue=\"\"\n                        name=\"expense\"\n                        id=\"expense\"\n                      >\n                        <FormControlLabel\n                          value=\"hard\"\n                          control={<Radio />}\n                          label=\"Hard\"\n                        />\n                        <FormControlLabel\n                          value=\"soft\"\n                          control={<Radio />}\n                          label=\"Soft\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  </Box>\n                )}\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"matter\"\n                  label=\"matter\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"matter\"\n                  autoComplete=\"matter\"\n                  disabled\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"contact\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                  disabled\n                />\n              </Grid>\n            </Grid>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"category\"\n              label=\"category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"category\"\n              autoComplete=\"category\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"sub_category\"\n              label=\"sub_category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"sub_category\"\n              autoComplete=\"sub_category\"\n            />\n            {timeToggle ? (\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"rate\"\n                label=\"rate\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"rate\"\n                autoComplete=\"rate\"\n              />\n            ) : (\n              <Fragment>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"unit\"\n                  label=\"unit\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"unit\"\n                  autoComplete=\"unit\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"qty\"\n                  label=\"Qty\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"qty\"\n                  autoComplete=\"qty\"\n                />\n                <Box m={1}>\n                  <Typography component=\"lable\"> Receipt(s) </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n              </Fragment>\n            )}\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"HH:MM\"\n              mask={[\"H\", \"H\", \"M\", \"M\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time\"\n              name=\"time\"\n              id=\"time\"\n              value={time}\n              type=\"text\"\n              onValueChange={(e) => setTime(e.value)}\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Date\"\n                value={pickDate}\n                name=\"pickdate\"\n                id=\"pickdate\"\n                onChange={(e) => setPickDate(e)}\n                renderInput={(params) => <TextField size=\"small\" {...params} />}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"detail\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n              autoComplete=\"detail\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bill_by\"\n              label=\"bill_by\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bill_by\"\n              autoComplete=\"bill_by\"\n            />\n            <FormControlLabel\n              size=\"large\"\n              label=\"Billable\"\n              labelPlacement=\"start\"\n              control={\n                <Switch\n                  size=\"large\"\n                  checked={billable}\n                  onChange={() => setBillable(billable)}\n                />\n              }\n            />\n            <br />\n          </Grid>\n        </Grid>\n        <Grid container>\n          <Grid item lg={12}>\n            <TextField\n              fullWidth\n              multiline\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"note\"\n              rows={4}\n              // label=\"note\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              placeholder=\"Private / internal notes\"\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Time;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport LedgerActivity from \"./LedgerActivity\";\nimport LegderDashbard from \"./LedgerDashbard\";\nimport LedgerDoc from \"./LedgerDoc\";\nimport LedgerTImeList from \"./LedgerTImeList\";\nimport Time from \"./Time\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Ledger\">\n          <LegderDashbard />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Documents\">\n          <LedgerDoc />\n        </div>\n        <div label=\"Time\">\n          <Time />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst SubCategory = () => {\n  const [subCategory, setSubCategory] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/sub-category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setSubCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/sub-category/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n      })\n      .catch((err) => setStatus(err.statusText));\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/sub-category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n      })\n      .catch((err) => {\n        FetchData();\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Sub-Category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Sub-Category\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Sub-Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? (\n        subCategory.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default SubCategory;\n","/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst catHandler = (id) => {\n  console.log(id);\n};\n\nconst Category = () => {\n  const [category, setCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/category/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Add New Category\"}</DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* {!loading ? (\n        category?.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )} */}\n    </Fragment>\n  );\n};\n\nexport default Category;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Classification = () => {\n  const [classification, setClassification] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/classification/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setClassification(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/classification/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n        return <ActionAlerts value={{ status: status }} />;\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/api/classification/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return <ActionAlerts value={{ status: res.statusText }} />;\n      })\n      .catch((err) => {\n        FetchData();\n        return <ActionAlerts value={{ status: err.statusText }} />;\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Classification\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Classification\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Classification Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? (\n        classification.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Classification;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Typography, Grid, Button, Box } from \"@mui/material\";\n\nimport SubCategory from \"./SubCategory\";\nimport Category from \"./Category\";\nimport Classification from \"./Classification\";\n\nconst ManageCategory = () => {\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={8}>\n          <Typography component=\"h3\" variant=\"h5\">\n            Manage Category, Sub-category, Classification\n          </Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"error\">\n              Delete Checked\n            </Button>\n          </Box>\n        </Grid>\n\n        <Grid item lg={12}>\n          <Grid container spacing={5} mt={1}>\n            <Grid item lg={4}>\n              <Category />\n            </Grid>\n            <Grid item lg={4}>\n              <SubCategory />\n            </Grid>\n            <Grid item lg={4}>\n              <Classification />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageCategory;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Button,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { ActionAlerts, GetTime, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Contact = () => {\n  const [clientNo, setClientNo] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [ssn, setSsn] = useState(\"\");\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [homeNo, setHomeNo] = useState(\"\");\n  const [officeNo, setOfficeNo] = useState(\"\");\n  const [faxNo, setFaxNo] = useState(\"\");\n  const [otherNo, setOtherNo] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [plus4, setPlus4] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [contactData, setContactData] = useState({\n    // company info\n    company_name: \"\",\n    website: \"\",\n    ger_email: \"\",\n    billing_email: \"\",\n    // address\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    note: \"\",\n    f_name: \"\",\n    l_name: \"\",\n    email_1: \"\",\n    email_2: \"\",\n    email_3: \"\",\n    // other address\n    street2: \"\",\n    suite2: \"\",\n    city2: \"\",\n    state2: \"\",\n    office: \"\",\n    team: \"\",\n    member: \"\",\n    assign_to: \"\",\n    contact: \"\",\n    relation: \"\",\n  });\n\n  const {\n    company_name,\n    website,\n    ger_email,\n    billing_email,\n    street,\n    suite,\n    city,\n    state,\n    note,\n    f_name,\n    l_name,\n    email_1,\n    email_2,\n    email_3,\n    street2,\n    suite2,\n    city2,\n    state2,\n    office,\n    team,\n    member,\n    assign_to,\n    contact,\n    relation,\n  } = contactData;\n\n  const onChange = (e) => {\n    e.persist();\n    setContactData({ ...contactData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    //   let date = GetDate(pickDate);\n    //   const body = JSON.stringify({\n    //     company_name,\n    //     website,\n    //     ger_email,\n    //     billing_email,\n    //     street,\n    //     suite,\n    //     city,\n    //     state,\n    //     zip,\n    //     plus4,\n    //     client_no,\n    //     f_name,\n    //     l_name,\n    //     dob,\n    //     ssn,\n    //     mobile_no,\n    //     home_no,\n    //     office_no,\n    //     fax_no,\n    //     other_no,\n    //     email_1,\n    //     email_2,\n    //     email_3,\n    //     street2,\n    //     suite2,\n    //     city2,\n    //     state2,\n    //     zip2,\n    //     plus42,\n    //     office,\n    //     team,\n    //     member,\n    //     assign_to,\n    //     contact,\n    //     relation,\n    //   });\n    //   axios\n    //     .post(`${process.env.REACT_APP_API_URL}/api/contact/`, body, CONFIG)\n    //     .then((res) => {\n    //       <ActionAlerts value={{ status: res.statusText, message: \"Success\" }} />;\n    //     })\n    //     .catch((err) => {\n    //       <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />;\n    //     });\n    //   console.log(body);\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container p={2}>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h5\">\n              Company info\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"company_name\"\n              label=\"Company Name\"\n              type=\"text\"\n              value={company_name}\n              onChange={(e) => onChange(e)}\n              id=\"company_name\"\n              autoComplete=\"company_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Client #\"\n              id=\"clientno\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"clientno\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={clientNo}\n              onValueChange={(e) => setClientNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"First Name\"\n              label=\"f_name\"\n              type=\"text\"\n              value={f_name}\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Last Name\"\n              label=\"l_name\"\n              type=\"text\"\n              value={l_name}\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"DOB\"\n              id=\"dob\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              name=\"dob\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={dob}\n              onValueChange={(e) => setDob(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"#### #### ##\"\n              customInput={TextField}\n              label=\"SSN\"\n              id=\"ssn\"\n              name=\"ssn\"\n              value={ssn}\n              type=\"text\"\n              onValueChange={(e) => setSsn(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobileNo}\n              onValueChange={(e) => setMobileNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={homeNo}\n              onValueChange={(e) => setHomeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Office #\"\n              id=\"offlice_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"office_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={officeNo}\n              onValueChange={(e) => setOfficeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Fax #\"\n              id=\"fax_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"fax_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={faxNo}\n              onValueChange={(value) => setFaxNo(value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Other #\"\n              id=\"other_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"other_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={otherNo}\n              onValueChange={(e) => setOtherNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_1\"\n              label=\"Email 1\"\n              type=\"email\"\n              value={email_1}\n              onChange={(e) => onChange(e)}\n              id=\"email_1\"\n              autoComplete=\"email_1\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_2\"\n              label=\"Email 2\"\n              type=\"email\"\n              value={email_2}\n              onChange={(e) => onChange(e)}\n              id=\"email_2\"\n              autoComplete=\"email_2\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_3\"\n              label=\"Email 3\"\n              value={email_3}\n              type=\"email\"\n              onChange={(e) => onChange(e)}\n              id=\"email_3\"\n              autoComplete=\"email_3\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"street\"\n              type=\"text\"\n              value={street}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              value={city}\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip\"\n              label=\"zip\"\n              type=\"text\"\n              id=\"zip\"\n              type=\"text\"\n              value={zip}\n              onValueChange={(e) => setZip(e.value)}\n            />\n\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus4\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus4\"\n              type=\"text\"\n              value={plus4}\n              onValueChange={(e) => setPlus4(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              multiline\n              rows={5}\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Notes...\"\n              label=\"note\"\n              type=\"text\"\n              value={note}\n              onChange={(e) => onChange(e)}\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h6\">\n              Alternate Information\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"webiste\"\n              label=\"Webiste\"\n              type=\"text\"\n              value={website}\n              onChange={(e) => onChange(e)}\n              id=\"webiste\"\n              autoComplete=\"webiste\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"ger_email\"\n              label=\"General Email\"\n              type=\"text\"\n              value={ger_email}\n              onChange={(e) => onChange(e)}\n              id=\"ger_email\"\n              autoComplete=\"ger_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_email\"\n              label=\"Invoice/ Billing Email\"\n              type=\"text\"\n              value={billing_email}\n              onChange={(e) => onChange(e)}\n              id=\"billing_email\"\n              autoComplete=\"billing_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"Street\"\n              type=\"text\"\n              value={street2}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite2}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              type=\"text\"\n              value={city2}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip2\"\n              label=\"Zip\"\n              type=\"text\"\n              id=\"zip2\"\n              type=\"text\"\n              value={zip2}\n              onValueChange={(e) => setZip2(e.value)}\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus42\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus42\"\n              type=\"text\"\n              value={plus42}\n              onValueChange={(e) => setPlus42(e.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Source\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"office\"\n                  label=\"Office\"\n                  type=\"text\"\n                  value={office}\n                  onChange={(e) => onChange(e)}\n                  id=\"office\"\n                  autoComplete=\"office\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"team\"\n                  label=\"Team\"\n                  type=\"text\"\n                  value={team}\n                  onChange={(e) => onChange(e)}\n                  id=\"team\"\n                  autoComplete=\"team\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"member\"\n                  label=\"Member\"\n                  type=\"text\"\n                  value={member}\n                  onChange={(e) => onChange(e)}\n                  id=\"member\"\n                  autoComplete=\"member\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Assigned To\n                </Typography>\n                <FormControl\n                  size=\"small\"\n                  sx={{ mt: 2, mb: 2, minWidth: \"14rem\" }}\n                >\n                  <InputLabel id=\"demo-simple-select-autowidth-label\">\n                    Assigned To\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-autowidth-label\"\n                    id=\"demo-simple-select-autowidth\"\n                    value={assign_to}\n                    onChange={(e) => onChange(e)}\n                    autoWidth\n                    label=\"assign_to\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>Auto Assign</em>\n                    </MenuItem>\n                    <MenuItem value={10}>Twenty</MenuItem>\n                    <MenuItem value={21}>Twenty one</MenuItem>\n                    <MenuItem value={22}>Twenty one and a half</MenuItem>\n                  </Select>\n                </FormControl>\n\n                <Button variant=\"contained\" color=\"primary\">\n                  Auto Assign\n                </Button>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Linked Contacts\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"Contact\"\n                  type=\"text\"\n                  value={contact}\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"relation\"\n                  label=\"Relation\"\n                  type=\"text\"\n                  value={relation}\n                  onChange={(e) => onChange(e)}\n                  id=\"relation\"\n                  autoComplete=\"relation\"\n                />\n              </Grid>\n            </Grid>\n            <Box sx={{ float: \"right\" }}>\n              <Button variant=\"contained\" type=\"submit\" endIcon={<SaveIcon />}>\n                Save\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Contact;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Button,\n  TextField,\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Tab,\n  Paper,\n  Box,\n  Typography,\n  Switch,\n} from \"@mui/material\";\nimport { TabList, TabContext, TabPanel } from \"@mui/lab\";\nimport { connect } from \"react-redux\";\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport NumberFormat from \"react-number-format\";\n\n// import { update_profile } from \"../../store/actions/profile\";\n\nconst Profile = ({ profile }) => {\n  const [value, setValue] = React.useState(\"1\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [underGradYear, setUnderGradYear] = useState(\"\");\n\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [barNo, setBarNo] = useState(\"\");\n  const [practiceTime, setPracticeTime] = useState(\"\");\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    mobile: 0,\n    phone: 0,\n    state: \"\",\n    city: \"\",\n    language: \"\",\n    locate: false,\n    search_active: false,\n    law_school: \"\",\n    grad_year: \"\",\n    bar_admit_date: \"\",\n    undergrad_school: \"\",\n    undergrad_area: \"\",\n    undergrad_year: \"\",\n    bar_no: 0,\n    admitted_practice: \"\",\n    practice_time: \"\",\n    longest_tenure: \"\",\n    average_tenure: \"\",\n    current_tenure: \"\",\n    past_bar_companies_no: \"\",\n    primary_area: \"\",\n  });\n  const {\n    username,\n    email,\n    mobile,\n    phone,\n    state,\n    city,\n    language,\n    locate,\n    search_active,\n    law_school,\n    grad_year,\n    bar_admit_date,\n    undergrad_school,\n    undergrad_area,\n    undergrad_year,\n    bar_no,\n    admitted_practice,\n    practice_time,\n    longest_tenure,\n    average_tenure,\n    current_tenure,\n    past_bar_companies_no,\n    primary_area,\n  } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let id = profile.id;\n    const body = JSON.stringify({\n      username,\n      email,\n      mobile,\n      phone,\n      state,\n      city,\n      language,\n      locate,\n      search_active,\n      law_school,\n      grad_year,\n      bar_admit_date,\n      undergrad_school,\n      undergrad_area,\n      undergrad_year,\n      bar_no,\n      admitted_practice,\n      practice_time,\n      longest_tenure,\n      average_tenure,\n      current_tenure,\n      past_bar_companies_no,\n      primary_area,\n    });\n    console.log(body);\n    axios\n      .patch(\n        `${process.env.REACT_APP_API_URL}/api/profile/${id}/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Fragment>\n      {/* {profile ? ( */}\n      <Box p={5}>\n        <Paper elevation={5} sx={{ borderRadius: 3 }}>\n          <TabContext value={value} p={8}>\n            <Box component=\"form\" onSubmit={(e) => onSubmit(e)}>\n              <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                <TabList\n                  onChange={handleChange}\n                  aria-label=\"lab API tabs example\"\n                >\n                  <Tab label=\"Profile\" value=\"1\" />\n                  <Tab label=\"Education\" value=\"2\" />\n                  <Tab label=\"Work History\" value=\"3\" />\n                </TabList>\n              </Box>\n              <TabPanel value=\"1\">\n                <Grid container spacing={2}>\n                  <Grid item sx={12} xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Username\"\n                      value={username}\n                      id=\"username\"\n                      name=\"username\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.username}\n                      disabled\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Mobile #\"\n                      id=\"mobile\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"mobile\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={mobileNo}\n                      onValueChange={(e) => setMobileNo(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Phone #\"\n                      id=\"phone\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"phone\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={phoneNo}\n                      onValueChange={(e) => setPhoneNo(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Email\"\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.email}\n                      disabled\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"State\"\n                      id=\"state\"\n                      name=\"state\"\n                      type=\"text\"\n                      value={state}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.state}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"City\"\n                      id=\"city\"\n                      name=\"city\"\n                      type=\"text\"\n                      value={city}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.city}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Language(s)\"\n                      value={language}\n                      id=\"language\"\n                      name=\"language\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.language}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Willing to locate\"\n                      id=\"locate\"\n                      name=\"locate\"\n                      value={locate}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.locate}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Search Type (Active/ Passiv)\"\n                      id=\"search_active\"\n                      name=\"search_active\"\n                      value={search_active}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.search_active}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      m={5}\n                      variant=\"contained\"\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"2\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"2\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Law School\"\n                      id=\"law_school\"\n                      name=\"law_school\"\n                      value={law_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.law_school}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Grad year\"\n                      id=\"grad_year\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      name=\"grad_year\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={gradYear}\n                      onValueChange={(e) => setGradYear(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####/##/##\"\n                      placeholder=\"YYYY/MM/DD\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n                      customInput={TextField}\n                      label=\"Bar Admittance Date\"\n                      id=\"bar_admit_date\"\n                      name=\"bar_admit_date\"\n                      value={barDate}\n                      onValueChange={(e) => setBarDate(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrad school\"\n                      id=\"undergrad_school\"\n                      name=\"undergrad_school\"\n                      value={undergrad_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_school}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrade area of study\"\n                      id=\"undergrad_area\"\n                      name=\"undergrad_area\"\n                      value={undergrad_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_area}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      label=\"Undergrade year\"\n                      id=\"undergrad_year\"\n                      name=\"undergrad_year\"\n                      value={underGradYear}\n                      type=\"text\"\n                      onValueChange={(e) => setUnderGradYear(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"#### #### ##\"\n                      customInput={TextField}\n                      label=\"Bar #\"\n                      id=\"bar_no\"\n                      name=\"bar_no\"\n                      value={barNo}\n                      type=\"text\"\n                      onValueChange={(e) => setBarNo(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Admitted practice (state & District)\"\n                      value={admitted_practice}\n                      id=\"admitted_practice\"\n                      name=\"admitted_practice\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.admitted_practice}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      variant=\"contained\"\n                      mb={5}\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"3\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"3\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Practive Time (months / years)\"\n                      id=\"practice_time\"\n                      name=\"practice_time\"\n                      value={practiceTime}\n                      type=\"text\"\n                      onValueChange={(e) => setPracticeTime(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Longest tenure (months / years)\"\n                      id=\"longest_tenure\"\n                      name=\"longest_tenure\"\n                      value={longestTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setLongestTenure(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Average tenure (months / years)\"\n                      value={averageTenure}\n                      id=\"average_tenure\"\n                      name=\"average_tenure\"\n                      type=\"text\"\n                      onValueChange={(e) => setAverageTenure(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Time at Current Company (months / years)\"\n                      id=\"current_tenure\"\n                      name=\"current_tenure\"\n                      value={currentTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setCurrentTenure(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"# of Companies Post Bar\"\n                      id=\"past_bar_companies_no\"\n                      name=\"past_bar_companies_no\"\n                      value={past_bar_companies_no}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.past_bar_companies_no}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Primary areas of Law\"\n                      id=\"primary_area\"\n                      name=\"primary_area\"\n                      value={primary_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.primary_area}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Button\n                      variant=\"contained\"\n                      type=\"submit\"\n                      sx={{\n                        float: \"right\",\n                        marginTop: \"10rem\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n            </Box>\n          </TabContext>\n        </Paper>\n      </Box>\n      {/* // ) : ( // <Typography>Something wend wrong!</Typography>\n      // )} */}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  profile: state.auth.profile,\n});\n\nexport default connect(mapStateToProps)(Profile);\n","/** @format */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  TextField,\n  Switch,\n  FormControlLabel,\n  Box,\n  Grid,\n  Button,\n  Typography,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport axios from \"axios\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\n\nconst CreateTask = () => {\n  const [dueDate, setDueDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [bill, setBill] = useToggle(true);\n  const [matterData, setMatterData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useToggle(true);\n  const [file, setFile] = useState(\"\");\n  const [taskData, setTaskData] = useState({\n    matter_id: 0,\n    matter_contact: 0,\n    matter: \"\",\n    task: \"\",\n    filename: \"\",\n    assign_to: 0,\n    detail: \"\",\n  });\n\n  const {\n    matter_id,\n    matter_contact,\n    matter,\n    task,\n    filename,\n    assign_to,\n    detail,\n  } = taskData;\n\n  const onChange = (e) =>\n    setTaskData({ ...taskData, [e.target.name]: e.target.value });\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/matter/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setMatterData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log(matter_id, matter_contact, matter, task);\n    let due_at = GetDate(dueDate);\n    let is_billable = bill;\n    let is_private = isPrivate;\n\n    const body = JSON.stringify({\n      matter_id,\n      matter_contact,\n      matter,\n      task,\n      file,\n      is_billable,\n      is_private,\n      due_at,\n      assign_to,\n      detail,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-task/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n          \"& .MuiSelect-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Task\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_id\"\n              label=\"matter_id\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_id}\n              onChange={(e) => onChange(e)}\n              id=\"matter_id\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"matter\"\n              type=\"text\"\n              min=\"0\"\n              value={matter}\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"task\"\n              label=\"Task\"\n              type=\"text\"\n              value={task}\n              onChange={(e) => onChange(e)}\n              id=\"task\"\n              autoComplete=\"task\"\n            />\n            <Box ml={2} mt={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Attach File \"\n                labelPlacement=\"start\"\n                control={\n                  <input\n                    type=\"file\"\n                    name=\"filename\"\n                    id=\"file\"\n                    onChange={(e) => onChange(e)}\n                  />\n                }\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"file\"\n                label=\"please chose any file\"\n                type=\"text\"\n                min=\"0\"\n                value={filename}\n                onChange={(e) => setFile(filename)}\n                id=\"file\"\n                disabled\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_contact\"\n              label=\"matter_contact\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_contact}\n              onChange={(e) => onChange(e)}\n              id=\"matter_contact\"\n            />\n            <Box p={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Billable\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={bill}\n                    onChange={() => setBill(bill)}\n                  />\n                }\n              />\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Private\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={isPrivate}\n                    onChange={() => setIsPrivate(isPrivate)}\n                  />\n                }\n              />\n            </Box>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Due Date\"\n                value={dueDate}\n                name=\"dueDate\"\n                id=\"dueDate\"\n                onChange={(e) => setDueDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"Assign to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              autoComplete=\"assign_to\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              multiline\n              rows={5}\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"Detail\"\n              type=\"text\"\n              value={detail}\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n            />\n\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateTask;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport ViewTasks from \"./ViewTasks\";\nimport CreateTask from \"./CreateTask\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Task\">\n          <ViewTasks />\n        </div>\n        <div label=\"Create Task\">\n          <CreateTask />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport DashBoard from \"../Admin/DashBoard\";\n\nimport {\n  Box,\n  Typography,\n  Tabs,\n  Tab,\n  IconButton,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\n\nimport TabContext from \"@mui/lab/TabContext\";\nimport TabList from \"@mui/lab/TabList\";\n\nimport TabPanel from \"@mui/lab/TabPanel\";\nimport PropTypes from \"prop-types\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\n\n// components of tabs\nimport Invoice from \"../../Invoice\";\nimport Matter from \"../../Matter\";\nimport Ledger from \"../../Ledger\";\nimport Favorite from \"../../Favorite/Favorites\";\nimport Category from \"../../Category/ManageCategory\";\nimport Contact from \"../../Contact/Contact\";\nimport Profile from \"../../Profile/Profile\";\nimport Tasks from \"../../Tasks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTab, removeTab } from \"../../../redux/features/tabSlice\";\n\nconst data = [\n  { name: \"invoice\", content: <Invoice /> },\n  { name: \"matter\", content: <Matter /> },\n  { name: \"ledger\", content: <Ledger /> },\n  { name: \"favorite\", content: <Favorite /> },\n  { name: \"category\", content: <Category /> },\n  { name: \"contact\", content: <Contact /> },\n  { name: \"profile\", content: <Profile /> },\n  { name: \"tasks\", content: <Tasks /> },\n];\nconst component = {\n  invoice: <Invoice />,\n  matter: <Matter />,\n  ledger: <Ledger />,\n  favorite: <Favorite />,\n  category: <Category />,\n  contact: <Contact />,\n  profile: <Profile />,\n  tasks: <Tasks />,\n};\n\nconst AdminDashboard = () => {\n  const tabList = useSelector((state) => state.tabs);\n  const dispatch = useDispatch();\n  const [wordEntered, setWordEntered] = useState(\"\");\n  const searchItem = () => {\n    let selectedItem = data.filter((value) => {\n      if (value.name === wordEntered) {\n        return true;\n      }\n    });\n  };\n\n  const handleChangeSearch = (e) => {\n    setWordEntered(e.target.value);\n    dispatch(\n      addTab({\n        id: tabList.length + 1,\n        tab: e.target.value,\n      }),\n    );\n    searchItem();\n  };\n  const displayTabsName = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <Tab\n          icon={<Close />}\n          iconPosition=\"end\"\n          label={tab.name}\n          value={tab.id}\n        />\n      ));\n    } else return null;\n  };\n\n  const displayTabs = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <TabPanel value={tab.id}>{component[tab.name]}</TabPanel>\n      ));\n    } else return null;\n  };\n  const searchTab = () => {\n    return (\n      <Box\n        noValidate\n        sx={{\n          p: \"2px 4px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          width: \"50%\",\n          borderRadius: \"5rem\",\n          backgroundColor: \"#dfdfdf\",\n        }}\n      >\n        <Select\n          fullWidth\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={wordEntered}\n          label=\"Search....\"\n          onChange={handleChangeSearch}\n          sx={{\n            \" & .MuiOutlinedInput-notchedOutline\": {\n              border: \"none\",\n            },\n          }}\n        >\n          {data.map((item, index) => (\n            <MenuItem key={index} value={item.name}>\n              {item.name}\n            </MenuItem>\n          ))}\n        </Select>\n\n        <IconButton type=\"submit\" sx={{ p: \"10px\" }} aria-label=\"search\">\n          {wordEntered.length === 0 ? <SearchIcon /> : <CloseIcon />}\n        </IconButton>\n      </Box>\n    );\n  };\n\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const renderTabs = () => {\n    return (\n      <Box sx={{ width: \"100%\" }}>\n        <TabContext value={value}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              variant=\"scrollable\"\n              scrollButtons\n              allowScrollButtonsMobilearia-label=\"lab API tabs example\"\n            >\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label=\"Dashboard\"\n                value={0}\n              />\n\n              {displayTabsName()}\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label=\"+\"\n                value={10}\n              />\n            </Tabs>\n          </Box>\n          <TabPanel value={0}>\n            <DashBoard />\n          </TabPanel>\n          {displayTabs()}\n          <TabPanel value={10}>{searchTab()}</TabPanel>\n        </TabContext>\n      </Box>\n    );\n  };\n  useEffect(() => {\n    renderTabs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <Fragment>{renderTabs()}</Fragment>;\n};\n\nexport default AdminDashboard;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { LinearProgress, Box, Grid, Typography } from \"@mui/material\";\n\nconst ProgressBar = () => {\n  const [progress, setProgress] = useState(69);\n  return (\n    <Box paddingLeft={3} paddingRight={3}>\n      <Grid container>\n        <Grid item lg={1} xs={12}>\n          <Typography>{progress}%</Typography>\n        </Grid>\n        <Grid item lg={11} xs={12} mt={2} mb={5}>\n          <LinearProgress variant=\"determinate\" value={progress} />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ProgressBar;\n","/** @format */\n\nimport React from \"react\";\n\nimport { Typography, Box, Paper, Grid } from \"@mui/material\";\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from \"@mui/material\";\n\nconst randomDate = (start, end) => {\n  const getDateTime = new Date(\n    start.getTime() + Math.random() * (end.getTime() - start.getTime()),\n  );\n  const date = getDateTime.toLocaleDateString();\n  const hour = getDateTime.getHours();\n  const min = getDateTime.getMinutes();\n\n  return date + \" \" + hour + \":\" + min;\n};\n\nconst Task = () => {\n  return (\n    <Grid container>\n      <Grid item lg={12} xs={12}>\n        <Typography component=\"h5\" variant=\"h6\" color=\"primary\">\n          My Tasks\n        </Typography>\n        <TableContainer component={Paper}>\n          <Table size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    ID\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Date\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Subject\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Detail\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow bgColor=\"#e85355\">\n                <TableCell>\n                  <Typography variant=\"caption\">123452</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Submit Document X</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display first 3 links\n                  </Typography>{\" \"}\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#fd9905\">\n                <TableCell>\n                  <Typography variant=\"caption\">113457</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Y</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display more details\n                  </Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#28c570\">\n                <TableCell>\n                  <Typography variant=\"caption\">113455</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Z</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Note in popup</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"white\">\n                <TableCell>\n                  <Typography variant=\"caption\">113458</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document XY</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display First 3 links\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Task;\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nexport const AdminCards = () => {\n  return (\n    <>\n      <Grid container spacing={1}>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5} xs={12}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    New Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    Lost Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport const LawyerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Projected Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={230} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Annual Trending Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={768} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const FirmCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={6} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Lost Customers\n              </Typography>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const CustomerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={2}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Balance\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Payment Due\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={12345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nconst Cards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                New Matters\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={3425}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n// import axios from 'axios';\n\nimport { Grid } from \"@mui/material\";\n\nimport Calender from \"../Calender\";\nimport ProgressBar from \"../ProgressBar\";\n\nimport Tasks from \"../Tasks\";\nimport { CustomerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={3}>\n        <Grid item lg={2} xs={12}>\n          <CustomerCards />\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Calender />\n        </Grid>\n        <Grid item p={2} lg={6} xs={12}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <ProgressBar />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Button, Grid, Box, List, ListItem, ListItemText } from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst Templates = () => {\n  return (\n    <Fragment>\n      <Grid container mt={1} spacing={1}>\n        <Grid item xs={12} m={2}>\n          <Button variant=\"contained\" size=\"small\">\n            Merge Fields.XLS\n          </Button>\n          <Box sx={{ float: \"right\" }}>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Doc\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New PDF\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Email\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Edit\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Save\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Close\n            </Button>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Word Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Report Money</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - Report Time</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Report Billed hours</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              PDF Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>P001 - Write of Execution</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P002 - Memo of Cost</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P003 - Settlement Letter</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Email Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Invoice Email</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - New Client</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Firing Client</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              padding: \"15rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Templates can be opened here to edit them. user can add/ remove\n            merge fields directly to the document or PDF\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Templates;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Client/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst ClientDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default ClientDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const PieChart = () => {\n  const state = {\n    series: [86, 14],\n    options: {\n      chart: {\n        height: 500,\n        type: \"pie\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"65%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val + \"%\";\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Prodcutive v. Non-Productive Time\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n        horizontalAlign: \"center\",\n      },\n      colors: [\"#738df5\", \"#eaa3ff\"],\n      labels: [\"Non Productive\", \"Productive\"],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"pie\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            background: \"#aaa\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shade: \"gark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\", \"pink\"],\n        stops: [0, 3],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"user 1\",\n        data: [44, 55, 41, 37, 22, 43, 21],\n      },\n      {\n        name: \"user 2\",\n        data: [53, 32, 33, 52, 13, 43, 32],\n      },\n      {\n        name: \"User 3\",\n        data: [12, 17, 11, 9, 15, 11, 20],\n      },\n      {\n        name: \"User 4\",\n        data: [9, 7, 5, 8, 6, 9, 4],\n      },\n    ],\n    options: {\n      chart: {\n        type: \"bar\",\n        height: 350,\n        stacked: true,\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        borderRadius: 8,\n        colors: [\"#fff\"],\n      },\n\n      title: {\n        text: \"% Indicating User Ranking\",\n      },\n      xaxis: {\n        categories: [\n          \"Word per Min\",\n          \"Matter Completed\",\n          \"Revenue Generated\",\n          \"Articals Submitted\",\n          \"New Client\",\n          \"New Matter\",\n        ],\n        labels: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: undefined,\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      fill: {\n        opacity: 1,\n      },\n      color: [\"#738df5\", \"#eaa3ff\", \"#738df5\", \"#eaa3ff\"],\n      legend: {\n        show: false,\n        position: \"top\",\n        horizontalAlign: \"left\",\n        offsetX: 40,\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Grid } from \"@mui/material\";\nimport Calender from \"../Calender\";\nimport Tasks from \"../Tasks\";\nimport { Chart2, PieChart, BarChart } from \"./Chart\";\nimport { LawyerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={2}>\n          <LawyerCards />\n        </Grid>\n        <Grid item lg={4}>\n          <PieChart />\n        </Grid>\n        <Grid item lg={6}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={4}>\n          <Chart2 />\n        </Grid>\n        <Grid item lg={8}>\n          <BarChart />\n        </Grid>\n        <Grid item>\n          <Calender />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Lawyer/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst LawyerDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default LawyerDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const Chart = () => {\n  const state = {\n    series: [110, 110, 19, 80],\n    options: {\n      chart: {\n        height: 500,\n        type: \"donut\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"55%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Matter by Type\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      colors: [\"#03a5fc\", \"#fcd200\", \"#fca400\", \"#003f5c\"],\n      labels: [\n        \"Business Contacts\",\n        \"Criminal Defence\",\n        \"Personal Injury\",\n        \"Family Law\",\n      ],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"donut\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            // background: \"#333\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"solid\",\n      gradient: {\n        shade: \"dark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\"],\n        stops: [0, 100],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"Profit\",\n        data: [640, 505, 210, 108, 760, 410, 440, 140, 660, 320],\n      },\n      {\n        name: \"Loss\",\n        data: [530, 302, 420, 220, 290, 800, 160, 490, 708, 110],\n      },\n    ],\n\n    options: {\n      colors: [\"#e85355\", \"#28c570\"],\n      chart: {\n        height: 100,\n        type: \"bar\",\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n        },\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function (val) {\n          return \"$\" + val;\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return \"$ \" + val + \"\";\n          },\n        },\n      },\n\n      xaxis: {\n        categories: [\n          \"Jan\",\n          \"Feb\",\n          \"Mar\",\n          \"Apr\",\n          \"May\",\n          \"Jun\",\n          \"July\",\n          \"Aug\",\n          \"Sep\",\n          \"Oct\",\n        ],\n      },\n\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"right\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart2 = () => {\n  const state = {\n    series: [\n      {\n        data: [19, 57, 78, 40, 95, 25],\n      },\n    ],\n\n    options: {\n      chart: {\n        height: 350,\n        type: \"bar\",\n      },\n      colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n      plotOptions: {\n        bar: {\n          columnWidth: \"45%\",\n          distributed: true,\n        },\n      },\n      dataLabels: {\n        enabled: true,\n        formatter: function (val) {\n          return val + \"%\";\n        },\n      },\n      legend: {\n        show: false,\n      },\n      title: {\n        text: \"% of Task Completed by User\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      xaxis: {\n        categories: [\n          \"M. Jones\",\n          \"R. Smith\",\n          \"T.Sweeney\",\n          \"S. Booker\",\n          \"A. Knighter\",\n          \"J. King\",\n        ],\n        labels: {\n          style: {\n            // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n            fontSize: \"12px\",\n          },\n        },\n\n        legend: {\n          show: false,\n          dropShadow: false,\n          position: \"right\",\n          labels: {\n            useSeriesColors: true,\n          },\n          onItemClick: {\n            toggleDataSeries: true,\n          },\n          formatter: function (seriesName, opts) {\n            return (\n              seriesName +\n              \":  <NumberFormat value={\" +\n              opts.w.globals.series[opts.seriesIndex] +\n              \"} displayType={'text'} thousandSeparator={true}/>\"\n            );\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart3 = () => {\n  const state = {\n    // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n    options: {\n      series: [\n        {\n          data: [750, 280, 500, 720],\n        },\n      ],\n      chart: {\n        type: \"bar\",\n        height: 380,\n      },\n      plotOptions: {\n        bar: {\n          barHeight: \"100%\",\n          borderRadius: 8,\n          distributed: true,\n          horizontal: true,\n          dataLabels: {\n            position: \"top\",\n          },\n        },\n      },\n      //       light blue,  yellow, orange, dark blue,\n      colors: [\"#fcd200\", \"#fca400\", \"#003f5c\", \"#03a5fc\"],\n      dataLabels: {\n        enabled: false,\n        textAnchor: \"start\",\n        style: {\n          colors: [\"#fff\"],\n        },\n        formatter: function (val, opt) {\n          return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val;\n        },\n        offsetX: 0,\n        dropShadow: {\n          enabled: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        colors: [\"#fff\"],\n      },\n      xaxis: {\n        categories: [\n          \"Criminal Defense\",\n          \"Personal Injury\",\n          \"Family Law\",\n          \"Business Contract\",\n        ],\n      },\n      yaxis: {\n        labels: {\n          show: true,\n        },\n      },\n      title: {\n        text: \"Revenue By Mater Type\",\n        align: \"center\",\n        floating: true,\n      },\n\n      tooltip: {\n        theme: \"light\",\n        x: {\n          show: false,\n        },\n        y: {\n          formatter: function (val, opt) {\n            return (\n              opt.w.globals.labels[opt.dataPointIndex] + \": $ \" + val + \" k\"\n            );\n          },\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.options.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Paper, Grid, Box } from \"@mui/material\";\n\nimport Tasks from \"../Tasks\";\nimport { FirmCards } from \"../Cards\";\n\nimport { Chart, Chart2, BarChart, BarChart2, BarChart3 } from \"./Charts\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      {/*main dashboard section for display  */}\n      <Box component={Paper} elevation={3} mt={4}>\n        <Grid container spacing={2}>\n          <Grid item lg={8} xs={12}>\n            <FirmCards />\n            <Grid container>\n              <Grid item lg={5} xs={12}>\n                <Chart2 />\n              </Grid>\n              <Grid item lg={7} xs={12}>\n                <Tasks />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Chart />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <BarChart />\n          </Grid>\n          <Grid item lg={6} xs={6}>\n            <BarChart2 />\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <BarChart3 />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Firm/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst FirmDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default FirmDashboard;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport AdminDashboard from \"../components/Dashboard/UserRoles/AdminDashboard\";\nimport ClientDashboard from \"../components/Dashboard/UserRoles/ClientDashboard\";\nimport LawyerDashboard from \"../components/Dashboard/UserRoles/LawyerDashboard\";\nimport FirmDashboard from \"../components/Dashboard/UserRoles/FirmDashboard\";\n\nconst Dashboard = ({ user }) => {\n  // checker type of user\n  const [localuser, setLocalUser] = useState({\n    username: \"Guest\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: true,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const dashboardRedirect = () => {\n    switch (user.username) {\n      case \"admin\":\n        return <AdminDashboard />;\n      case \"firm\":\n        return <FirmDashboard />;\n      case \"lawyer\":\n        return <LawyerDashboard />;\n      default:\n        return <ClientDashboard />;\n    }\n  };\n  return <>{dashboardRedirect()}</>;\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/login_light.png\";\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const { username, email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    login(username, email, password);\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"87vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            {/* csrf_token */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              value={username}\n              onChange={(e) => onChange(e)}\n              autoComplete=\"new-password\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              autoComplete=\"new-password\"\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => onChange(e)}\n              id=\"password\"\n              minLength=\"6\"\n              autoComplete=\"password\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n          </Box>\n          <Grid container>\n            <Grid item xs>\n              <Link to=\"/\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../../actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n  FormControlLabel,\n  FormLabel,\n  FormGroup,\n  Checkbox,\n  RadioGroup,\n  Radio,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/signup_light.png\";\n\nconst Signup = ({ register, isAuthenticated }) => {\n  const [accountCreated, setAccountCreated] = useState(false);\n  const [isFirm, setIsFirm] = useState(false);\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    re_password: \"\",\n  });\n\n  const { username, email, first_name, last_name, password, re_password } =\n    formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    let is_firm = isFirm;\n    let is_client = !isFirm;\n\n    if (password === re_password) {\n      register(\n        email,\n        first_name,\n        last_name,\n        username,\n        password,\n        re_password,\n        is_firm,\n        is_client,\n      );\n\n      setAccountCreated(true);\n    } else {\n      console.log(\"Password no match, Please type again!\");\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (accountCreated) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"85vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={(e) => onChange(e)}\n                  autoComplete=\"new-password\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"first_name\"\n                  label=\"First Name\"\n                  name=\"first_name\"\n                  value={first_name}\n                  onChange={(e) => onChange(e)}\n                  autoComplete=\"new-password\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"last_name\"\n                  label=\"Last Name\"\n                  name=\"last_name\"\n                  autoComplete=\"last_name\"\n                  value={last_name}\n                  onChange={(e) => onChange(e)}\n                  autoFocus\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={(e) => onChange(e)}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                value={password}\n                onChange={(e) => onChange(e)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"re_password\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                value={re_password}\n                onChange={(e) => onChange(e)}\n                id=\"re_password\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Sign up as a </FormLabel>\n              <RadioGroup\n                row\n                value={isFirm}\n                onChange={(e) => setIsFirm(e.target.value)}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Firm\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Individual\"\n                />\n              </RadioGroup>\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormGroup>\n                <FormControlLabel\n                  control={<Checkbox />}\n                  label=\"Agreed on Term and Contidions\"\n                />\n              </FormGroup>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Register\n            </Button>\n          </Box>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" variant=\"body2\">\n                {\"Already have an account? Sign in\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { register })(Signup);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  Divider,\n  FormControlLabel,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Company = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate: 0.0,\n    role: \"\",\n    time_zone: \"\",\n    group: \"\",\n    job_title: \"\",\n    bar_no: 0,\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: 0,\n    ext: 0,\n    mobile: 0,\n    home: 0,\n    work_no: 0,\n\n    phone_ext: 0,\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    role,\n    time_zone,\n    group,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      c_email,\n      rate,\n      role,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      p_email,\n      phone_ext,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Box p={3} sx={{ float: \"right\" }}>\n        <LinkButton to=\"/users\">Manage User</LinkButton>\n        <LinkButton to=\"/user-group\">Manage Group</LinkButton>\n        <LinkButton to=\"/user-role\">Manage Role</LinkButton>\n      </Box>\n\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create User\n        </Typography>\n        <Grid container spacing={2} mt={2}>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"f_name\"\n              label=\"f_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"m_name\"\n              label=\"m_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"m_name\"\n              autoComplete=\"m_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"l_name\"\n              label=\"l_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"c_email\"\n              label=\"c_email\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"c_email\"\n              autoComplete=\"c_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"rate\"\n              label=\"rate\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"rate\"\n              autoComplete=\"rate\"\n            />\n            <FormControlLabel\n              label=\"Round Entries (Round [up/down] to nearnest 0.00 fraction of the hour\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n              sx={{ width: \"35rem\" }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"role\"\n              label=\"role\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"role\"\n              autoComplete=\"role\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"time_zone\"\n              label=\"time_zone\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"time_zone\"\n              autoComplete=\"time_zone\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"group\"\n              label=\"group\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"group\"\n              autoComplete=\"group\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"job_title\"\n              label=\"job_title\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"job_title\"\n              autoComplete=\"job_title\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bar_no\"\n              label=\"bar_no\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bar_no\"\n              autoComplete=\"bar_no\"\n            />\n          </Grid>\n          <Grid item mt={2}>\n            <Divider textAlign=\"left\">\n              <Typography component=\"h3\" variant=\"h5\">\n                Contact Info\n              </Typography>\n            </Divider>\n            <Box>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"street\"\n                label=\"street\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"street\"\n                autoComplete=\"street\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"suite\"\n                label=\"suite\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"suite\"\n                autoComplete=\"suite\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"city\"\n                label=\"city\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"city\"\n                autoComplete=\"city\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"state\"\n                label=\"state\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"state\"\n                autoComplete=\"state\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"zip\"\n                label=\"zip\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"zip\"\n                autoComplete=\"zip\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"ext\"\n                label=\"ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"ext\"\n                autoComplete=\"ext\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"mobile\"\n                label=\"mobile\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"mobile\"\n                autoComplete=\"mobile\"\n              />\n              <Button\n                variant=\"contained\"\n                sx={{ background: \"#5cb85c\", marginTop: \"0.5rem\" }}\n              >\n                Set Password Automaticly\n              </Button>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"home\"\n                label=\"home\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"home\"\n                autoComplete=\"home\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"work_no\"\n                label=\"work_no\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"work_no\"\n                autoComplete=\"work_no\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"p_email\"\n                label=\"p_email\"\n                type=\"email\"\n                onChange={(e) => onChange(e)}\n                id=\"p_email\"\n                autoComplete=\"p_email\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"phone_ext\"\n                label=\"phone_ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"phone_ext\"\n                autoComplete=\"phone_ext\"\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Box\n              sx={{\n                \"& .MuiButton-root\": { m: 1 },\n                float: \"right\",\n              }}\n            >\n              <Button variant=\"contained\" type=\"submit\">\n                Create Member\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Company;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\nimport Filters from \"../../components/Matter/Filters\";\nimport MatterCards from \"../../components/Matter/MatterCards\";\nimport MatterListLong from \"../../components/Matter/MatterListLong\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item xs={12}>\n            <Filters />\n          </Grid>\n          <Grid item xs={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item xs={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Matters;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Switch,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Button,\n  TextField,\n  Box,\n  Grid,\n  MenuItem,\n  Typography,\n  Divider,\n  FormControlLabel,\n  Stack,\n} from \"@mui/material\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport CreateUser from \"./CreateUser\";\nimport {\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useToggle } from \"../../context/useToggle\";\n\nconst ManageUser = () => {\n  const [activityData, setActivityData] = useState([]);\n\n  const [isActive, setIsActive] = useToggle(false);\n\n  const [roles, setRoles] = useState([]);\n  const [role, setRole] = useState(\"\");\n  const [group, setGroup] = useState(\"\");\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [rateType, setRateType] = useState(\"\");\n\n  const handleChange = (event) => {\n    setRateType(event.target.value);\n  };\n\n  const [approvel, setApprovel] = useToggle(false);\n\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate_type: \"\",\n    rate: \" \",\n    time_zone: \"\",\n    job_title: \"\",\n    bar_no: \" \",\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    ext: \"\",\n    mobile: \"\",\n    home: \"\",\n    work_no: \"\",\n    p_email: \"\",\n    phone_ext: \"\",\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    time_zone,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      p_email,\n      role,\n      c_email,\n      rate,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      phone_ext,\n    });\n\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/create-member/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchRoleData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/role/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setRoles(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  const FetchGroupData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/group/`, CONFIG)\n      .then((res) => {\n        setLoading2(false);\n        setGroups(res.data);\n      })\n      .catch((err) => {\n        setLoading2(false);\n      });\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setActivityData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchRoleData();\n    FetchData();\n    FetchGroupData();\n  }, []);\n\n  return (\n    <Fragment>\n      <Box>\n        <Typography component=\"h4\" variant=\"h5\" color=\"primary\" mb={2}>\n          Manage Users\n        </Typography>\n        <Stack p={3} direction=\"row\" spacing={2} sx={{ float: \"right\" }}>\n          <Search sx={{ width: \"15rem\" }}>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n          <Button\n            color=\"success\"\n            onClick={handleClickOpen}\n            variant=\"contained\"\n            sx={{ color: \"white\", background: \"#28c570\" }}\n          >\n            + Add User\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth=\"true\"\n            maxWidth=\"xl\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New User\"}</DialogTitle>\n            <DialogContent>\n              <Grid\n                container\n                spacing={2}\n                mt={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\" },\n                }}\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"f_name\"\n                    label=\"First Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"f_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"m_name\"\n                    label=\"Middle Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"m_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"l_name\"\n                    label=\"Last Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"l_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"c_email\"\n                    label=\"Company Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"c_email\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"rate\"\n                    label=\"Rate $\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"rate\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={6}>\n                  <Stack direction=\"row\" spacing={2} ml={2}>\n                    <FormControlLabel\n                      sx={{ fontSize: \"2rem\" }}\n                      label=\"\"\n                      control={\n                        <Switch\n                          checked={approvel}\n                          onChange={() => setApprovel(approvel)}\n                        />\n                      }\n                    />\n                    <Typography>\n                      Round Entries (Round [up/down] to nearnest\n                      <TextField\n                        margin=\"dense\"\n                        variant=\"standard\"\n                        type=\"text\"\n                        size=\"small\"\n                        placeholder=\"0.00\"\n                        sx={{\n                          maxWidth: \"5rem\",\n                        }}\n                      />\n                      fraction of the hour\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"role\"\n                    label=\"Role\"\n                    onChange={(e) => setRole(e.target.value)}\n                    id=\"role\"\n                    autoComplete=\"new-password\"\n                  >\n                    {!loading ? (\n                      roles.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"time_zone\"\n                    label=\"Time Zone\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"time_zone\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"group\"\n                    label=\"Group\"\n                    type=\"text\"\n                    onChange={(e) => setGroup(e.target.value)}\n                    id=\"group\"\n                    autoComplete=\"new-password\"\n                  >\n                    {!loading2 ? (\n                      groups.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"job_title\"\n                    label=\"Job Title\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"job_title\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"bar_no\"\n                    label=\"Bar #\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"bar_no\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={4} mb={2}>\n                <Divider />\n                <Typography mt={2} component=\"h3\" color=\"primary\" variant=\"h5\">\n                  Contact Info\n                </Typography>\n              </Box>\n\n              <Grid\n                container\n                spacing={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\" },\n                }}\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"street\"\n                    label=\"Street\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"street\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"suite\"\n                    label=\"Suite\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"suite\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"city\"\n                    label=\"City\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"city\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"state\"\n                    label=\"State\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"state\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"zip\"\n                    label=\"Zip\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"zip\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"ext\"\n                    label=\"+4\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"ext\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"p_email\"\n                    label=\"Personal Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"p_email\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <Box mt={1} ml={1}>\n                    <Button variant=\"contained\" color=\"primary\">\n                      Reset Password\n                    </Button>\n                  </Box>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"mobile\"\n                    label=\"Mobile #\"\n                    type=\"phone\"\n                    onChange={(e) => onChange(e)}\n                    id=\"mobile\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"home\"\n                    label=\"Home #\"\n                    type=\"phone\"\n                    onChange={(e) => onChange(e)}\n                    id=\"home\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"work_no\"\n                    label=\"Work #\"\n                    type=\"phone\"\n                    onChange={(e) => onChange(e)}\n                    id=\"work_no\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"phone_ext\"\n                    label=\"Extesion\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"phone_ext\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n              </Grid>\n              <Grid item lg={12}>\n                <Box\n                  sx={{\n                    \"& .MuiButton-root\": { m: 1, mr: 8 },\n                    float: \"right\",\n                  }}\n                >\n                  <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    type=\"submit\"\n                    sx={{ color: \"white\" }}\n                  >\n                    Activate\n                  </Button>\n                  <Button variant=\"contained\" color=\"error\">\n                    Deactivate\n                  </Button>\n                </Box>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n            </DialogActions>\n          </Dialog>\n        </Stack>\n\n        <TableContainer>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  <Typography color=\"white\">First Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Role</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Group</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Login</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Status</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Deactivate</Typography>\n                </TableCell>\n                <TableCell>\n                  <Switch\n                    color=\"success\"\n                    value={isActive}\n                    onChange={() => setIsActive()}\n                  />\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {/* {loading && isActive\n                ? activityData?.map((data) => (\n                    <TableRow>\n                      <TableCell>{data.f_name}</TableCell>\n                      <TableCell>{data.l_name}</TableCell>\n                      <TableCell>{data.p_email}</TableCell>\n                      <TableCell>{data.role}</TableCell>\n                      <TableCell>{data.group}</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>inactive</TableCell>\n                      <TableCell>\n                        <Button\n                          variant=\"contained\"\n                          value={data.id}\n                          onClick={() => handleDelete(data.id)}\n                          sx={{\n                            borderRadius: \"0.5rem\",\n                            float: \"right\",\n                          }}\n                        >\n                          <ClearIcon />\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                : null} */}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default ManageUser;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Stack,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst ManageUserGroup = () => {\n  const [filter, setFilter] = useState(\"\");\n\n  const handleChange = (event) => {\n    setFilter(event.target.value);\n  };\n  const [group, setGroup] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingUser, setLoadingUser] = useState(true);\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchUserData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        setLoadingUser(false);\n\n        setUserData(res.data);\n      })\n      .catch((err) => {\n        setLoadingUser(false);\n      });\n  };\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/group/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setGroup(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n    FetchUserData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/group/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/group/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={12}>\n          <Grid container spacing={2} direction=\"row\">\n            <Grid item lg={3}>\n              <Typography variant=\"h5\" component=\"h5\" m={1} color=\"primary\">\n                Manage Group\n              </Typography>\n            </Grid>\n            <Grid item lg={9}>\n              <Stack direction=\"row\" sx={{ float: \"right\" }}>\n                <Typography m={2} component=\"span\" color=\"primary\">\n                  Filter & Sort By\n                </Typography>\n                <FormControl sx={{ width: \"10rem\", height: \"2.5rem\" }}>\n                  <InputLabel id=\"demo-simple-select-label\" color=\"primary\">\n                    Custom Sort\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={filter}\n                    label=\"Age\"\n                    onChange={handleChange}\n                  >\n                    <MenuItem value=\"name\">By Name</MenuItem>\n                    <MenuItem value=\"role\">By Role</MenuItem>\n                    <MenuItem value=\"gorup\">By Group</MenuItem>\n                  </Select>\n                </FormControl>\n                <Search sx={{ width: \"20rem\", height: \"2.5rem\", m: 1 }}>\n                  <SearchIconWrapper>\n                    <SearchIcon />\n                  </SearchIconWrapper>\n                  <StyledInputBase\n                    placeholder=\"Search…\"\n                    inputProps={{ \"aria-label\": \"search\" }}\n                  />\n                </Search>\n              </Stack>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3}>\n          <Typography\n            variant=\"h5\"\n            component=\"h5\"\n            color=\"primary\"\n            align=\"center\"\n          >\n            Groups\n          </Typography>\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            fullWidth\n            sx={{\n              borderRadius: \"0.5rem\",\n            }}\n          >\n            + New Group\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New Group\"}</DialogTitle>\n            <DialogContent>\n              <TextField\n                required\n                fullWidth\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"name\"\n                label=\"Group Name\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n              <Button type=\"submit\" autoFocus>\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {/* {!loading ? (\n            group.map((data) => (\n              <Box mt={1}>\n                <List>\n                  <ListItem disablePadding>\n                    <ListItemText>{data.name}</ListItemText>\n                    <Button\n                      variant=\"contained\"\n                      value={data.id}\n                      onClick={() => handleDelete(data.id)}\n                      sx={{\n                        borderRadius: \"0.5rem\",\n                        float: \"right\",\n                      }}\n                    >\n                      <ClearIcon />\n                    </Button>\n                  </ListItem>\n                </List>\n              </Box>\n            ))\n          ) : (\n            <Typography>Loading ...</Typography>\n          )} */}\n        </Grid>\n        <Grid item lg={9}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow bgColor=\"#796ef0\">\n                  <TableCell>\n                    <Typography color=\"white\">First Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Last Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Role</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Group</Typography>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {/* {loadingUser\n                  ? null\n                  : userData?.map((data) => {\n                      return (\n                        <TableRow>\n                          <TableCell>{data.f_name}</TableCell>\n                          <TableCell>{data.l_name}</TableCell>\n                          <TableCell>{data.role}</TableCell>\n                          <TableCell>{data.group}</TableCell>\n                        </TableRow>\n                      );\n                    })} */}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item lg={12}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"success\" sx={{ color: \"white\" }}>\n              Done\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageUserGroup;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TableBody,\n  Typography,\n  Switch,\n} from \"@mui/material\";\n\nconst RoleFuncions = ({ data }) => {\n  const functions = [\n    \"Contacts\",\n    \"Matter\",\n    \"Calendar\",\n    \"Flat Fee\",\n    \"Expenses\",\n    \"Trust\",\n    \"Task(s)\",\n    \"Invoice\",\n    \"Payments\",\n    \"Full DOB\",\n    \"Full SSN\",\n    \"Partial SSN\",\n    \"Partial DOB\",\n    \"Roles\",\n    \"Run Reports\",\n    \"Discounts\",\n    \"Bank Accounts\",\n  ];\n  return (\n    <Fragment>\n      <TableContainer sx={{ overflowX: \"auto\" }}>\n        <Table size=\"small\" sx={{ fontSize: \"1rem\" }}>\n          <TableHead>\n            <TableRow bgColor=\"#796ef0\">\n              <TableCell>\n                <Typography color=\"white\">Function</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">View </Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Edit</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Create</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Delete</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Contacts</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Team</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Office</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Region</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">All</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {functions.map((data) => (\n              <TableRow>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  {data}\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default RoleFuncions;\n","/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  List,\n  Grid,\n  Box,\n  Typography,\n  ListItem,\n  ListItemText,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport RoleFuncions from \"./RoleFuncions\";\n\nconst UserRole = () => {\n  const [roles, setRoles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/role/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setRoles(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/role/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/role/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={12}></Grid>\n        <Grid item lg={2}>\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            fullWidth\n            sx={{\n              borderRadius: \"0.5rem\",\n            }}\n          >\n            + New Role\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New Role\"}</DialogTitle>\n            <DialogContent>\n              <TextField\n                required\n                fullWidth\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"name\"\n                label=\"Role Name\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n              <Button type=\"submit\" autoFocus>\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {!loading ? (\n            roles.map((data) => (\n              <Box mt={1}>\n                <List>\n                  <ListItem disablePadding>\n                    <ListItemText>{data.name}</ListItemText>\n                    <Button\n                      variant=\"contained\"\n                      value={data.id}\n                      size=\"small\"\n                      onClick={() => handleDelete(data.id)}\n                      sx={{\n                        borderRadius: \"0.5rem\",\n                        float: \"right\",\n                      }}\n                    >\n                      <ClearIcon />\n                    </Button>\n                  </ListItem>\n                </List>\n              </Box>\n            ))\n          ) : (\n            <Typography>Loading ...</Typography>\n          )}\n        </Grid>\n        <Grid item lg={10}>\n          <RoleFuncions data={roles} />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default UserRole;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport CreateUser from \"./CreateUser\";\nimport ManageUser from \"./ManageUser\";\nimport ManageUserGroup from \"./ManageUserGroup\";\nimport UserRole from \"./UserRole\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Manage Users\">\n          <ManageUser />\n        </div>\n\n        <div label=\"User Group\">\n          <ManageUserGroup />\n        </div>\n        <div label=\"User Role\">\n          <UserRole />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst TimeList = () => {\n  const [timeData, setTimeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTimeData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <Box>\n        <LinkButton to=\"/ledgers\" sx={{ float: \"right\" }}>\n          Ledger Dashboard\n        </LinkButton>\n        <Box p={3}>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Ledger Dashbaord\n          </LinkButton>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Add Time\n          </LinkButton>\n          <LinkButton to=\"/ledger-list\" sx={{ float: \"right\" }}>\n            Ledger List\n          </LinkButton>\n          <LinkButton to=\"/ledger-documents\" sx={{ float: \"right\" }}>\n            Documents\n          </LinkButton>\n        </Box>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Add</TableCell>\n\n                <TableCell>Matter #</TableCell>\n                <TableCell>Matter Name</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Billable Time</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell>Category</TableCell>\n                <TableCell>Activity</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n              ? null\n              : timeData?.map((data) => {\n                  return (\n                    <TableBody id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n\n                      <TableCell>{data.conatact}</TableCell>\n                      <TableCell>{data.date}</TableCell>\n                      <TableCell>{data.time}</TableCell>\n                      <TableCell>{data.rate}</TableCell>\n                      <TableCell>{data.category}</TableCell>\n                      <TableCell>{data.sub_category}</TableCell>\n                    </TableBody>\n                  );\n                })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TimeList;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Switch, FormControlLabel } from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Search = () => {\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [searchData, setSearchData] = useState({\n    state: \"\",\n    city: \"\",\n    practice_area: \"\",\n    law_school: \"\",\n\n    undergrad_study: \"\",\n    lamguages: \"\",\n    admitted_state: \"\",\n    relocate: false,\n  });\n\n  const {\n    state,\n    city,\n    practice_area,\n    law_school,\n\n    undergrad_study,\n    lamguages,\n    admitted_state,\n    relocate,\n  } = searchData;\n\n  const onChange = (e) =>\n    setSearchData({ ...searchData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"number\"\n              min=\"0\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Longest tenure (months / years)\"\n              id=\"longest_tenure\"\n              name=\"longest_tenure\"\n              value={longestTenure}\n              type=\"text\"\n              onValueChange={(e) => setLongestTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Average tenure (months / years)\"\n              value={averageTenure}\n              id=\"average_tenure\"\n              name=\"average_tenure\"\n              type=\"text\"\n              onValueChange={(e) => setAverageTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time at Current Company (months / years)\"\n              id=\"current_tenure\"\n              name=\"current_tenure\"\n              value={currentTenure}\n              type=\"text\"\n              onValueChange={(e) => setCurrentTenure(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"admitted_state\"\n              label=\"admitted_state\"\n              type=\"text\"\n              value={admitted_state}\n              onChange={(e) => onChange(e)}\n              id=\"admitted_state\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={gradYear}\n              onValueChange={(e) => setGradYear(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"undergrad_study\"\n              label=\"undergrad_study\"\n              step=\"0.01\"\n              type=\"text\"\n              value={undergrad_study}\n              onChange={(e) => onChange(e)}\n              id=\"undergrad_study\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"practice_area\"\n              label=\"practice_area\"\n              type=\"text\"\n              value={practice_area}\n              onChange={(e) => onChange(e)}\n              id=\"practice_area\"\n              disabled\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance Date\"\n              id=\"bar_admit_date\"\n              name=\"bar_admit_date\"\n              value={barDate}\n              onValueChange={(e) => setBarDate(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"lamguages\"\n              label=\"lamguages\"\n              type=\"text\"\n              value={lamguages}\n              onChange={(e) => onChange(e)}\n              id=\"lamguages\"\n            />\n            {/* <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Apply\n            </Button> */}\n            <Box m={3}>\n              <LinkButton to=\"/job-result\" sx={{ float: \"right\" }}>\n                Apply\n              </LinkButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Search;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\n// import axios from \"axios\";\n// import { CONFIG } from \"../../api/MatterApi\";\n// import { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Result = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(\"\");\n  // const [status, setStatus] = useState(\"\");\n  //   const FetchData = () => {\n  //     axios\n  //       .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n  //       .then((res) => {\n  //         setLoading(false);\n  //         setStatus(res.statusText);\n  //         setActivityData(res.data);\n  //       })\n  //       .catch((err) => {\n  //         setLoading(false);\n  //         setStatus(err.statusText);\n  //       });\n  //   };\n  //   useEffect(() => {\n  //     FetchData();\n  //   }, []);\n  return (\n    <Fragment>\n      <Box>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Rate</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Name</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">City</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">State</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Active</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Grage Year</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practice Area</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Relocation</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practicing</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading ? (\n              <TableBody>\n                <TableRow>\n                  <TableCell>74%</TableCell>\n                  <TableCell>Smith, John</TableCell>\n                  <TableCell>San Diego</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2000</TableCell>\n                  <TableCell>Criminal</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>22y - 03M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>72%</TableCell>\n                  <TableCell>Cassidy, Butch</TableCell>\n                  <TableCell>Los Angeles</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>2021</TableCell>\n                  <TableCell>Transctional</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>0y - 02M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>50%</TableCell>\n                  <TableCell>Short, Mart</TableCell>\n                  <TableCell>Sacramento</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2013</TableCell>\n                  <TableCell>Civil</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>06y - 11M</TableCell>\n                </TableRow>\n              </TableBody>\n            ) : (\n              activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })\n            )} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Result;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  FormControlLabel,\n  FormGroup,\n  Checkbox,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Saved = () => {\n  const [pickTime, setPickTime] = useState(new Date(\"2021-12-01T21:00:00\"));\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [jobData, setJobData] = useState({\n    name: \"\",\n    state: \"\",\n    city: \"\",\n    email: \"\",\n    mobile: \"\",\n    home: \"\",\n    law_school: \"\",\n    grad_year: \"\",\n    bar_adm_year: \"\",\n    practice_area: \"\",\n    mail_add: \"\",\n    relocate: false,\n    date: \"\",\n    time: \"\",\n    link: \"\",\n    notes: \"\",\n    file: \"\",\n  });\n\n  const {\n    name,\n    state,\n    city,\n    email,\n    mobile,\n    home,\n    law_school,\n    grad_year,\n    bar_adm_year,\n    practice_area,\n    mail_add,\n    relocate,\n    date,\n    time,\n    link,\n    notes,\n    file,\n  } = jobData;\n\n  const onChange = (e) =>\n    setJobData({ ...jobData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <FormGroup aria-label=\"position\" row>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Save\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Contacted\"\n                labelPlacement=\"start\"\n              />\n              <Typography component=\"label\" m={1}>\n                Interested :\n              </Typography>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Yes\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"No\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Interviewed\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Accept\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Reject\"\n                labelPlacement=\"start\"\n              />\n              <Box ml={3}>\n                <Typography component=\"h4\" color=\"success\" variant=\"h5\">\n                  Overall Score: 74%\n                </Typography>\n              </Box>\n            </FormGroup>\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"name\"\n              label=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(e) => onChange(e)}\n              id=\"name\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email\"\n              label=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              id=\"email\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobile}\n              onValueChange={(value) => onChange(value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={home}\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={grad_year}\n              onValueChange={(value) => onChange(value)}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance\"\n              id=\"bar_adm_year\"\n              name=\"bar_adm_year\"\n              value={bar_adm_year}\n              type=\"text\"\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"mail_add\"\n              label=\"mail_add\"\n              type=\"text\"\n              value={mail_add}\n              onChange={(e) => onChange(e)}\n              id=\"mail_add\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xs={4}>\n                <Box m={1}>\n                  <Typography component=\"lable\"> Writing Sample </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <TimePicker\n                    label=\"Pick Time\"\n                    name=\"picktime\"\n                    id=\"picktime\"\n                    value={pickTime}\n                    onChange={(e) => {\n                      setPickTime(e);\n                    }}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    inputFormat=\"yyyy-MM-dd\"\n                    mask=\"____-__-__\"\n                    label=\"Pick Date\"\n                    value={pickDate}\n                    name=\"pickdate\"\n                    id=\"pickdate\"\n                    onChange={(e) => setPickDate(e)}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n\n                <TextField\n                  size=\"small\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"link\"\n                  type=\"link\"\n                  defaultValue=\"2021-12-01\"\n                  value={link}\n                  onChange={(e) => onChange(e)}\n                  id=\"link\"\n                />\n              </Grid>\n              <Grid item xs={8}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={8}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"notes\"\n                  type=\"text\"\n                  value=\"Notes ...\"\n                  id=\"notes\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Saved;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport Search from \"./Search\";\nimport Result from \"./Result\";\nimport Saved from \"./Saved\";\nconst index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Search\">\n          <Search />\n        </div>\n        <div label=\"Result\">\n          <Result />\n        </div>\n        <div label=\"Saved\">\n          <Saved />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default index;\n","/** @format */\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nimport { Provider } from \"react-redux\";\n\nimport store, { persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport Layout from \"./hocs/Layout\";\n\nimport PrivateRoutes from \"./utils/PrivateRoute\";\n\nimport { UserProvider } from \"./context/User\";\n\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"./hocs/Theme\";\n\nimport Home from \"./containers/Home\";\n\n// Authentication links\nimport Login from \"./containers/Auth/Login\";\nimport Signup from \"./containers/Auth/Signup\";\n\nimport Profile from \"./components/Profile/Profile\";\nimport Company from \"./components/Profile/Company\";\n\nimport Matter from \"./components/Matter\";\n\nimport Matters from \"./containers/Matters/Matters\";\nimport MatterDetail from \"./components/Matter/MatterDetail\";\nimport NewMatter from \"./components/Matter/NewMatter\";\n\nimport Invoice from \"./components/Invoice\";\n\nimport CreateInvoice from \"./components/Invoice/CreateInvoice\";\n\nimport Payment from \"./components/Invoice/Payment\";\nimport ManageCategory from \"./components/Category/ManageCategory\";\n\nimport User from \"./components/User\";\n\nimport Time from \"./components/Ledger/Time\";\nimport TimeList from \"./components/Ledger/TimeList\";\n\nimport Ledger from \"./components/Ledger\";\n\nimport LedgerTImeList from \"./components/Ledger/LedgerTImeList\";\nimport LedgerActivity from \"./components/Ledger/LedgerActivity\";\n\nimport Tasks from \"./components/Tasks\";\nimport CreateTask from \"./components/Tasks/CreateTask\";\nimport ViewTasks from \"./components/Tasks/ViewTasks\";\nimport LedgerDoc from \"./components/Ledger/LedgerDoc\";\n\nimport Employee from \"./components/Employee\";\nimport Templates from \"./components/Template/Templates\";\n\nimport Contact from \"./components/Contact/Contact\";\nimport UserRole from \"./components/User/UserRole\";\nimport ManageUserGroup from \"./components/User/ManageUserGroup\";\n\nconst App = () => {\n  const alertOptions = {\n    timeout: 3000,\n    position: \"top center\",\n  };\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <UserProvider>\n          <ThemeProvider theme={theme}>\n            <AlertProvider template={AlertTemplate} {...alertOptions}>\n              <Router>\n                <Layout>\n                  <Switch>\n                    {/* loging regierter routes */}\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/signup\" component={Signup} />\n\n                    {/* private route after login  */}\n\n                    <PrivateRoutes exact path=\"/\" component={Home} />\n                    <PrivateRoutes path=\"/profile\" component={Profile} />\n                    <PrivateRoutes path=\"/company-detail\" component={Company} />\n\n                    <PrivateRoutes\n                      path=\"/matter-dashboard\"\n                      component={Matter}\n                    />\n                    <PrivateRoutes path=\"/matters\" component={Matters} />\n                    <PrivateRoutes\n                      path=\"/matter-detail\"\n                      component={MatterDetail}\n                    />\n                    <PrivateRoutes\n                      path=\"/create-matter\"\n                      component={NewMatter}\n                    />\n\n                    <PrivateRoutes path=\"/invoices\" component={Invoice} />\n                    <PrivateRoutes\n                      path=\"/create-invoice\" \n                      component={CreateInvoice}\n                    />\n                    <PrivateRoutes path=\"/recive-invoice\" component={Payment} />\n\n                    {/* <PrivateRoutes path=\"/create-user\" component={CreateUser} /> */}\n                    <PrivateRoutes path=\"/users\" component={User} />\n                    <PrivateRoutes path=\"/user-roles\" component={UserRole} />\n                    <PrivateRoutes\n                      path=\"/user-groups\"\n                      component={ManageUserGroup}\n                    />\n\n                    <PrivateRoutes\n                      path=\"/manage-categories\"\n                      component={ManageCategory}\n                    />\n                    <PrivateRoutes\n                      path=\"/ledger-documents\"\n                      component={LedgerDoc}\n                    />\n                    <PrivateRoutes path=\"/time\" component={Time} />\n                    <PrivateRoutes path=\"/time-list\" component={TimeList} />\n                    <PrivateRoutes path=\"/ledgers\" component={Ledger} />\n                    <PrivateRoutes\n                      path=\"/ledger-list\"\n                      component={LedgerTImeList}\n                    />\n                    <PrivateRoutes\n                      path=\"/activity-list\"\n                      component={LedgerActivity}\n                    />\n\n                    <PrivateRoutes path=\"/tasks\" component={Tasks} />\n                    <PrivateRoutes path=\"/create-task\" component={CreateTask} />\n                    <PrivateRoutes path=\"/view-tasks\" component={ViewTasks} />\n\n                    <PrivateRoutes\n                      path=\"/employee-search\"\n                      component={Employee}\n                    />\n\n                    <PrivateRoutes path=\"/templates\" component={Templates} />\n                    <PrivateRoutes path=\"/contact\" component={Contact} />\n                  </Switch>\n                </Layout>\n              </Router>\n            </AlertProvider>\n          </ThemeProvider>\n        </UserProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  revenueIn: true,\n  revenueOut: true,\n  newCustomer: true,\n  lostCustomer: true,\n  newAccount: true,\n  appointment: true,\n  marketing: true,\n  empOversite: true,\n  emails: true,\n  calls: true,\n  map: true,\n  display: true,\n};\n\nconst sidebarSlice = createSlice({\n  name: \"sidebar\",\n  initialState,\n  reducers: {\n    isDisplay: (state) => {\n      state.display = !state.display;\n    },\n    hideSidebar: (state) => {\n      state.display = false;\n    },\n    showSidebar: (state) => {\n      state.display = true;\n    },\n    // manageRoleActive: (state) => {\n    //   state.manageRole = !state.manageRole;\n    // },\n    // manageUserActive: (state) => {\n    //   state.manageUser = !state.manageUser;\n    // },\n    // manageGroupActive: (state) => {\n    //   state.manageGroup = !state.manageGroup;\n    // },\n    revenueInActive: (state) => {\n      state.revenueIn = !state.revenueIn;\n    },\n    revenueOutActive: (state) => {\n      state.revenueOut = !state.revenueOut;\n    },\n    newCustomerActive: (state) => {\n      state.newCustomer = !state.newCustomer;\n    },\n    lostCustomerActive: (state) => {\n      state.lostCustomer = !state.lostCustomer;\n    },\n    newAccountActive: (state) => {\n      state.newAccount = !state.newAccount;\n    },\n    appointmentActive: (state) => {\n      state.appointment = !state.appointment;\n    },\n    marketingActive: (state) => {\n      state.marketing = !state.marketing;\n    },\n    empOversiteActive: (state) => {\n      state.empOversite = !state.empOversite;\n    },\n    emailsActive: (state) => {\n      state.emails = !state.emails;\n    },\n    callsActive: (state) => {\n      state.calls = !state.calls;\n    },\n    mapActive: (state) => {\n      state.map = !state.map;\n    },\n  },\n});\n\nexport const {\n  isDisplay,\n  // manageRoleActive,\n  // manageGroupActive,\n  // manageUserActive,\n  hideSidebar,\n  showSidebar,\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} = sidebarSlice.actions;\nexport default sidebarSlice.reducer;\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { Responsive as ResponsiveGridLayout } from \"react-grid-layout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withSize } from \"react-sizeme\";\n\nimport {\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} from \"../../../../redux/features/sidebarSlice\";\n\nimport Widget from \"./Widget\";\n\nconst originalItems = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\"];\n\nconst initialLayouts = {\n  lg: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  md: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  sm: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  xs: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 3 },\n    { i: \"b\", x: 0, y: 4, w: 2, h: 3 },\n    { i: \"c\", x: 0, y: 8, w: 4, h: 6 },\n    { i: \"d\", x: 0, y: 12, w: 4, h: 6 },\n\n    { i: \"e\", x: 0, y: 18, w: 5, h: 6 },\n    { i: \"f\", x: 0, y: 24, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 30, w: 3, h: 4 },\n    { i: \"h\", x: 0, y: 36, w: 3, h: 4 },\n    { i: \"i\", x: 0, y: 42, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 48, w: 8, h: 5 },\n    { i: \"k\", x: 0, y: 53, w: 4, h: 5 },\n  ],\n  xxs: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 3 },\n    { i: \"b\", x: 0, y: 4, w: 2, h: 3 },\n    { i: \"c\", x: 0, y: 8, w: 4, h: 6 },\n    { i: \"d\", x: 0, y: 12, w: 4, h: 6 },\n\n    { i: \"e\", x: 0, y: 18, w: 5, h: 6 },\n    { i: \"f\", x: 0, y: 24, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 30, w: 3, h: 4 },\n    { i: \"h\", x: 0, y: 36, w: 3, h: 4 },\n    { i: \"i\", x: 0, y: 42, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 48, w: 8, h: 5 },\n    { i: \"k\", x: 0, y: 53, w: 4, h: 4 },\n  ],\n};\n\nfunction Content({ size: { width } }) {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  const components = {\n    a: sidebar.revenueIn,\n    b: sidebar.revenueOut,\n    c: sidebar.newCustomer,\n    d: sidebar.lostCustomer,\n    e: sidebar.newAccount,\n    f: sidebar.map,\n    g: sidebar.empOversite,\n    h: sidebar.calls,\n    i: sidebar.appointment,\n    j: sidebar.marketing,\n    k: sidebar.emails,\n  };\n  const fnCall = {\n    a: revenueInActive(),\n    b: revenueOutActive(),\n    c: newCustomerActive(),\n    d: lostCustomerActive(),\n    e: newAccountActive(),\n    f: mapActive(),\n    g: empOversiteActive(),\n    h: callsActive(),\n    i: appointmentActive(),\n    j: marketingActive(),\n    k: emailsActive(),\n  };\n  const [items, setItems] = useState(originalItems);\n  const [layouts, setLayouts] = useState(\n    getFromLS(\"layouts\") || initialLayouts,\n  );\n  const onLayoutChange = (_, allLayouts) => {\n    setLayouts(allLayouts);\n  };\n  const onLayoutSave = () => {\n    saveToLS(\"layouts\", layouts);\n  };\n  const onRemoveItem = (itemId) => {\n    // setItems(items.filter((i) => i !== itemId));\n    dispatch(fnCall[itemId]);\n  };\n  const onAddItem = (itemId) => {\n    setItems([...items, itemId]);\n    dispatch(fnCall[itemId]);\n  };\n  const displayItemList = () => {\n    return items.map((key) => (\n      <div\n        key={key}\n        className=\"widget\"\n        data-grid={{ w: 3, h: 2, x: 0, y: Infinity }}\n        style={components[key] ? { display: \"block\" } : { display: \"none\" }}\n      >\n        <Widget\n          id={key}\n          onRemoveItem={onRemoveItem}\n          backgroundColor=\"#867ae9\"\n        />\n      </div>\n    ));\n  };\n  useEffect(() => {\n    displayItemList();\n  }, [sidebar]);\n\n  return (\n    <>\n      <ResponsiveGridLayout\n        className=\"layout\"\n        layouts={layouts}\n        breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n        cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n        rowHeight={60}\n        width={width}\n        onLayoutChange={onLayoutChange}\n      >\n        {displayItemList()}\n      </ResponsiveGridLayout>\n    </>\n  );\n}\n\nexport default withSize({ refreshMode: \"debounce\", refreshRate: 60 })(Content);\n\nfunction getFromLS(key) {\n  let ls = {};\n  if (global.localStorage) {\n    try {\n      ls = JSON.parse(global.localStorage.getItem(\"rgl-8\")) || {};\n    } catch (e) {}\n  }\n  return ls[key];\n}\n\nfunction saveToLS(key, value) {\n  if (global.localStorage) {\n    global.localStorage.setItem(\n      \"rgl-8\",\n      JSON.stringify({\n        [key]: value,\n      }),\n    );\n  }\n}\n"],"sourceRoot":""}