{"version":3,"sources":["asserts/logo_white copy.png","components/Tabs/tabs.module.css","redux/features/sidebarSlice.js","components/Dashboard/Admin/DashboardLayout/DashboardContent.jsx","asserts/login_light.png","asserts/signup_light.png","reducers/profile.js","reducers/errors.js","reducers/messages.js","reducers/data.js","redux/features/tabSlice.js","redux/features/searchTabSlice.js","redux/features/favoriteSlice.js","api/MatterApi.js","redux/services/roleFnService.js","redux/features/roleFnSlice.js","redux/services/permissionService.js","redux/features/permissionSlice.js","redux/services/authService.js","redux/features/authSlice.js","reducers/index.js","actions/types.js","store.js","actions/messages.js","actions/auth.js","context/useToggle.jsx","styles/styles.jsx","actions/data.js","components/Navbars/NavbarResponsive.jsx","components/Navbars/Navbar.jsx","components/Chat/Chat.jsx","components/Dashboard/Calender.jsx","components/Tasks/ViewTasks.jsx","components/Favorite/Favorites.jsx","components/Navbars/DrawerComp.jsx","components/Navbars/NavbarSec.jsx","components/Sidebar/TestingSidebar.jsx","components/Sidebar/Sidebar.jsx","components/Footer/Footer.jsx","hocs/Layout.js","utils/PrivateRoute.js","context/User/reducer.js","context/User/index.js","hocs/Theme.js","components/Dashboard/Admin/DashBoard.jsx","components/Tabs/Tabs.jsx","components/Invoice/CreateInvoice.jsx","components/Invoice/Payment.jsx","components/Invoice/Filters.jsx","components/Invoice/InvoiceList.jsx","components/Invoice/index.jsx","utils/ActionAlerts.js","components/Matter/MatterList.jsx","components/Matter/Cards.jsx","components/Matter/Calendar.jsx","components/Matter/Filters.jsx","components/Matter/MatterCards.jsx","components/Matter/MatterListLong.jsx","components/Matter/NewMatter.jsx","components/Matter/MatterDetail.jsx","components/Matter/index.jsx","components/Ledger/LedgerActivity.jsx","components/Ledger/Fillters.jsx","components/Ledger/LedgerCards.jsx","components/Ledger/LedgerTImeList.jsx","components/Ledger/LedgerDashbard.jsx","components/Ledger/LedgerDoc.jsx","components/Ledger/Time.jsx","components/Ledger/index.jsx","components/Category/SubCategory.jsx","components/Category/Category.jsx","components/Category/Classification.jsx","components/Category/ManageCategory.jsx","components/Contact/Contact.jsx","components/Profile/Profile.js","components/Tasks/CreateTask.jsx","components/Tasks/index.jsx","components/Dashboard/UserRoles/AdminDashboard.jsx","components/Dashboard/ProgressBar.jsx","components/Dashboard/Tasks.jsx","components/Dashboard/Cards.jsx","components/Dashboard/Client/DashBoard.jsx","components/Template/Templates.jsx","components/Dashboard/UserRoles/ClientDashboard.jsx","components/Dashboard/Lawyer/Chart.jsx","components/Dashboard/Lawyer/DashBoard.jsx","components/Dashboard/UserRoles/LawyerDashboard.jsx","components/Dashboard/Firm/Charts.jsx","components/Dashboard/Firm/DashBoard.jsx","components/Dashboard/UserRoles/FirmDashboard.jsx","containers/Home.js","containers/Auth/Login.js","containers/Auth/Signup.js","components/Profile/Company.jsx","containers/Matters/Matters.jsx","components/User/ManageUser.jsx","components/User/ManageUserGroup.jsx","components/User/ManageRole.jsx","components/User/index.jsx","components/Ledger/TimeList.jsx","components/Employee/Search.jsx","components/Employee/Result.jsx","components/Employee/Saved.jsx","components/Employee/index.jsx","App.jsx","index.js","components/Dashboard/Admin/Charts.jsx","components/Dashboard/Admin/Cards/RevenueIn.jsx","components/Dashboard/Admin/Cards/RevenueOut.jsx","components/Dashboard/Admin/Cards/NewCustomer.jsx","components/Dashboard/Admin/Cards/LostCustomer.jsx","components/Dashboard/Admin/Map.jsx","components/Dashboard/Admin/NewAccounts.jsx","components/Dashboard/Admin/EmpOversite.jsx","components/Dashboard/Admin/DashboardLayout/Widget.jsx"],"names":["module","exports","__webpack_require__","p","tabs","current","content","d","__webpack_exports__","hideSidebar","showSidebar","revenueInActive","revenueOutActive","newCustomerActive","lostCustomerActive","newAccountActive","appointmentActive","marketingActive","empOversiteActive","emailsActive","callsActive","mapActive","_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__","sidebarSlice","createSlice","name","initialState","revenueIn","revenueOut","newCustomer","lostCustomer","newAccount","appointment","marketing","empOversite","emails","calls","map","display","reducers","isDisplay","state","actions","originalItems","initialLayouts","lg","i","x","y","w","h","md","sm","xs","xxs","withSize","refreshMode","refreshRate","_ref","width","size","sidebar","useSelector","dispatch","useDispatch","components","a","b","c","e","f","g","j","k","fnCall","_useState","useState","_useState2","Object","_home_supersis03_Projects_Dextera_Phase_3_dextera_project_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","items","_useState3","key","ls","global","localStorage","JSON","parse","getItem","getFromLS","_useState4","layouts","setLayouts","onRemoveItem","itemId","displayItemList","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","data-grid","Infinity","style","_Widget__WEBPACK_IMPORTED_MODULE_8__","id","backgroundColor","useEffect","Fragment","react_grid_layout__WEBPACK_IMPORTED_MODULE_4__","breakpoints","cols","rowHeight","onLayoutChange","_","allLayouts","profile","msg","status","isWeekly","tabSlice","addTab","action","newTask","payload","tab","push","removeTab","filter","item","reset","newTabSlice","addNewTab","removeNewTab","removeLastNewTab","pop","resetNewTab","favoriteSlice","addFav","newFav","page","favorite","length","isAvailable","removeFav","CONFIG","headers","Content-Type","Accept","API_URL","concat","process","getRoleFn","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","RoleId","response","wrap","_context2","prev","next","axios","get","sent","abrupt","data","stop","_x3","apply","this","arguments","roleFnService","goals","isError","isSuccess","isLoading","message","createGoal","createAsyncThunk","_callee","goalData","thunkAPI","token","_context","getState","auth","user","goalService","t0","toString","rejectWithValue","_x","_x2","getGoals","_x4","deleteGoal","_ref3","_callee3","_context3","_x5","_x6","goalSlice","extraReducers","builder","addCase","pending","fulfilled","rejected","goal","_id","permissionService","createpermission","permissionData","getPermissions","deletePermission","delete","updatePermission","_ref4","_callee4","_context4","put","permissions","all","createPermission","permissionSlice","updateIsView","permission","find","is_view","updateIsEdit","is_edit","updateIsCreate","is_create","updateIsDelete","is_delete","updateIsContacts","is_contacts","updateIsTeam","is_team","updateIsOffice","is_office","updateIsRegion","is_region","updateIsAll","value","signUp","userData","post","setItem","stringify","authService","signIn","signOut","removeItem","isAuthenticated","authSlice","combineReducers","undefined","type","objectSpread","errors","messages","sidebarReducer","favoriteReducer","tabsReducer","newTabs","newTabsReducer","permissionReducer","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","persistor","persistStore","returnErrors","logout","tokenConfig","then","res","config","useToggle","slicedToArray","isToggled","setIsToggled","useCallback","SideBarBtn","styled","Button","theme","fontSize","textTransform","color","textAlign","height","margin","borderColor","padding","&:hover","palette","primary","main","&:visited","SecNavbar","boxShadow","overflow","position","FooterBar","bottom","left","alignContent","FooterLink","Link","fontFamily","fontWeight","textDecoration","marginTop","FooterButton","_ref5","marginX","paddingX","LinkButton","_ref6","borderRadius","cursor","Search","_ref7","marginRight","spacing","marginLeft","SearchIconWrapper","_ref8","pointerEvents","alignItems","justifyContent","StyledInputBase","InputBase","_ref9","& .MuiInputBase-input","defineProperty","paddingLeft","transition","transitions","create","up","MainSearch","_ref10","MainSearchIconWrapper","_ref12","StyledMainInputBase","_ref13","updateIsWeekly","NavbarResponsive","Intl","DateTimeFormat","resolvedOptions","timeZone","Date","currentTime","_useState5","_useState6","dateValue","setDateValue","timeFormater","checked","toLocaleTimeString","hour","minute","hour12","_useToggle","_useToggle2","_useState7","_useState8","settingAcnchorEl","_useState9","Boolean","_useState10","_React$useState","React","_React$useState2","anchorEl","_React$useState3","_React$useState4","setChecked","handleChange","event","target","handleOnChage","_useState11","_useState12","openDrawer","setOpenDrawer","react_default","react","Typography","noWrap","component","sx","react_router_dom","to","src","Logo","alt","variant","Switch","onChange","inputProps","aria-label","transform","IconButton","float","onClick","Menu_default","Drawer","anchor","open","onClose","List","ListItemButton","ListItemIcon","Search_default","placeholder","Select","labelId","label","MenuItem","LocalizationProvider","dateAdapter","AdapterDateFns","DateRangePicker","startText","endText","newValue","renderInput","startProps","endProps","TextField","Box","mx","react_number_format_es","displayType","thousandSeparator","prefix","Navbar","isTabletOrMobile","useMediaQuery","query","redirect","flexGrow","AppBar","border","Toolbar","Navbars_NavbarResponsive","ml","mr","react_router","ChatHistory","Chip","avatar","Avatar","Chatting","Chat_ChatHistory","& .MuiTextField-root","m","endIcon","Send_default","Calender","setValue","tasks","Paper","Grid","container","StaticDatePicker","orientation","openTo","shouldDisableDate","isWeekend","params","task","ViewTasks","Divider","my","Favorites","ListItem","disablePadding","Star","ListItemText","NavBarSecResponsive","openFav","setOpenFav","handleCloseFav","openCal","setOpenCal","handleCloseCal","openChat","setOpenChat","handleCloseChat","useHistory","username","is_firm","is_lawyer","is_client","setLocalUser","setRedirect","_useState13","_useState14","setSettingAcnchorEl","_useState15","_useState16","settingAcnchorEl2","setSettingAcnchorEl2","openSetting2","openSetting","handleClose2","handleClose","_useState17","_useState18","anchorOrigin","vertical","horizontal","Message","Dialog","Validate","aria-labelledby","aria-describedby","right","DialogTitle","DialogContent","Chat","DialogActions","pathname","EmailRounded","CalendarToday","maxWidth","fullWidth","Dashboard_Calender","aria-controls","aria-expanded","aria-haspopup","currentTarget","CheckBox","Menu_Menu","MenuListProps","TransitionComponent","Fade","Favorite_Favorites","autoFocus","Settings","console","log","NotificationAdd","NavbarSec","handleLogout","handleClick","DrawerComp_NavBarSecResponsive","Person","Controls","px","AddCircle","Receipt","FileCopy","MoneyOff","esm_Task","Work","AssignmentTurnedIn","Marketing","Mail","HumanResources","Group","RevenueControls","AccountControls","EmployeeOversite","Phone","accordionData","tiles","TestingSidebar_Controls","TestingSidebar_HumanResources","TestingSidebar_RevenueControls","TestingSidebar_AccountControls","TestingSidebar_Marketing","TestingSidebar_EmployeeOversite","TestingSidebar","accordions","updateAccordions","mt","react_beautiful_dnd_esm","onDragEnd","result","destination","Array","from","_items$splice","splice","source","index","reorderedItem","droppableId","provided","assign","droppableProps","ref","innerRef","draggableId","Accordion","draggableProps","dragHandleProps","AccordionSummary","expandIcon","ExpandMore_default","align","AccordionDetails","connect","Stack","elevation","overflowY","Sidebar_TestingSidebar","Footer","setOpen","handleClickOpen","InnerLayout","children","_useSelector","isDesktopOrLaptop","useTheme","isBigScreen","sidebarToggle","drawerOpen","setDrawerOpen","openPopover","handleSidebarToggle","descriptionElementRef","useRef","descriptionElement","focus","contianer","rowSpacing","columnSpacing","Navbars_NavbarSec","Navbars_Navbar","direction","components_Sidebar_Sidebar","top","components_Footer_Footer","Fab","zIndex","Report","esm_Chat","Popover","transformOrigin","PrivateRoutes","rest","objectWithoutProperties","active","UserContext","createContext","UserProvider","_React$useReducer","useReducer","_React$useReducer2","Provider","createTheme","mode","error","warning","success","contrastThreshold","tonalOffset","typography","htmlFontSize","DashBoard","DashboardContent","Tabs","props","activeTab","setActiveTab","styles","startIcon","MoreVert","newActiveTab","preventDefault","one","CreateInvoice","approvel","setApprovel","matter","contact","billable","date_range","create_date","due_date","template","invoice_no","discount","submit","invoiceData","setInvoiceData","dateRange","setDateRange","onSubmit","autoComplete","FormControlLabel","control","Checkbox","varient","LocalizationProvider_LocalizationProvider","DateRangePicker_DateRangePicker","calendars","InputLabelProps","shrink","TableContainer","Table","TableHead","TableRow","TableCell","PaymentPlan","payment_no","due","amount","late_fee","total_due","payment","posted","method","paymentData","mb","TableBody","paddingInline","InvoicePayment","tax","interest","time","hard","soft","total","Payment","isPlan","setIsPlan","payment_type","date","retainer","menu","bank_account","payment_method","FormControl","RadioGroup","row","defaultValue","Radio","InputLabel","Payment_PaymentPlan","Payment_InvoicePayment","Filters","invoiceToggle","setInvoiceToggle","_useToggle3","_useToggle4","paymentToggle","setPaymentToggle","_useToggle5","_useToggle6","paid","setPaid","age","setAge","& .MuiFormControl-root","DialogContentText","Invoice_CreateInvoice","Invoice_Payment","styles_Search","styles_SearchIconWrapper","styles_StyledInputBase","InvoiceList","Invoice_Filters","Index","Invoice_InvoiceList","ActionAlerts","Alert","severity","TotalDays","date1","date2","dt1","dt2","Math","floor","UTC","getFullYear","getMonth","getDate","GetDate","MatterList","setTasks","setStatus","setLoading","redTask","setRedTask","greenTask","setGreenTask","yellowTask","setYellowTask","myTask","setMyTask","statusText","catch","err","FormGroup","Cards","Card","minWidth","CardContent","gutterBottom","Calendar","Box_Box","MatterCards","bgcolor","MatterListLong","setMatters","NewMatter","mask","openDate","setOpenDate","whenDate","setWhenDate","closeDate","setCloseDate","totalDays","setTotalDays","matter_name","matter_type","matter_source","matter_status","assign_to","assign_by","billing_rate","alerts","jurisdiction","status_limitaion","opposing_counsel","where","involved","witnesses","narrative","matterData","setMatterData","days","open_date","close_date","when","total_days","body","ActionAlerts_ActionAlerts","min","disabled","step","DatePicker","inputFormat","multiline","rows","Save_default","MatterTask","Activities","MatterDetail","MatterDetail_Activities","MatterDetail_MatterTask","MatterDetail_Cards","Matters","Matter_Filters","Matter_MatterCards","Matter_MatterListLong","MatterDashboard","Matter_MatterList","Matter_Calendar","Matter_Cards","components_Tabs_Tabs","Matter_MatterDashboard","Matter_Matters","Matter_NewMatter","Matter_MatterDetail","LedgerActivity","setActivityData","bgColor","Fillters","billedby","setBilledby","setFilter","LedgerCards","decimalScale","fixedDecimalScale","LedgerTImeList","setLedgerData","LegderDashbard","Ledger_LedgerCards","Ledger_Fillters","Ledger_LedgerTImeList","LedgerDoc","minHeight","Time","pickDate","setPickDate","timeToggle","setTimeToggle","setBillable","setTime","category","sub_category","unit","qty","rate","file","detail","bill_by","note","timeData","setTimeData","labelPlacement","FormLabel","format","customInput","onValueChange","LedgerDashbard","Ledger_LedgerActivity","Ledger_LedgerDoc","Ledger_Time","SubCategory","subCategory","setSubCategory","loading","formData","setFormData","FetchData","handleSubmit","required","Clear_default","Category","setCategory","setError","Classification","classification","setClassification","ManageCategory","components_Category_Category","Category_SubCategory","Category_Classification","Contact","_React$createElement","_React$createElement2","_React$createElement3","_React$createElement4","clientNo","setClientNo","dob","setDob","ssn","setSsn","mobileNo","setMobileNo","homeNo","setHomeNo","officeNo","setOfficeNo","faxNo","setFaxNo","otherNo","setOtherNo","zip","setZip","_useState19","_useState20","plus4","setPlus4","_useState21","_useState22","zip2","setZip2","_useState23","_useState24","plus42","setPlus42","_useState25","company_name","website","ger_email","billing_email","street","suite","city","f_name","l_name","email_1","email_2","email_3","street2","suite2","city2","state2","office","team","member","relation","_useState26","contactData","setContactData","persist","thousandsGroupStyle","autoWidth","gradYear","setGradYear","barDate","setBarDate","underGradYear","setUnderGradYear","phoneNo","setPhoneNo","barNo","setBarNo","practiceTime","setPracticeTime","longestTenure","setLongestTenure","averageTenure","setAverageTenure","currentTenure","setCurrentTenure","email","mobile","phone","language","locate","search_active","law_school","grad_year","bar_admit_date","undergrad_school","undergrad_area","undergrad_year","bar_no","admitted_practice","practice_time","longest_tenure","average_tenure","current_tenure","past_bar_companies_no","primary_area","TabContext","patch","borderBottom","TabList","Tab","TabPanel","defaultChecked","KeyboardArrowRight_default","CreateTask","dueDate","setDueDate","bill","setBill","isPrivate","setIsPrivate","setFile","matter_id","matter_contact","filename","taskData","setTaskData","& .MuiSelect-root","due_at","is_billable","is_private","Tasks_ViewTasks","Tasks_CreateTask","Invoice","Matter","Ledger","Category_ManageCategory","components_Contact_Contact","components_Profile_Profile","Tasks","invoice","ledger","AdminDashboard","tabList","newTabList","wordEntered","setWordEntered","handleChangeSearch","addSearchTab","setTimeout","displayNewTabsName","handleRemoveNewTab","Close_default","displayTabsName","handleRemoveTab","displaySearchTabs","noValidate"," & .MuiOutlinedInput-notchedOutline","renderTabs","Tabs_Tabs","scrollButtons","allowScrollButtonsMobilearia-label","icon","iconPosition","Add_default","Admin_DashBoard","ProgressBar","progress","paddingRight","LinearProgress","randomDate","start","end","getDateTime","getTime","random","toLocaleDateString","getHours","getMinutes","Task","LawyerCards","postfix","FirmCards","CustomerCards","Cards_CustomerCards","Dashboard_Tasks","Dashboard_ProgressBar","Templates","ClientDashboard","Client_DashBoard","Template_Templates","PieChart","series","options","chart","plotOptions","pie","donut","dataLabels","enabled","formatter","val","title","text","horizontalAlign","colors","labels","legend","show","dropShadow","useSeriesColors","onItemClick","toggleDataSeries","seriesName","opts","globals","seriesIndex","react_apexcharts_min_default","Chart2","radialBar","startAngle","endAngle","track","background","hollow","fill","gradient","shade","gradientToColors","stops","BarChart","stacked","bar","stroke","xaxis","categories","yaxis","tooltip","opacity","offsetX","Cards_LawyerCards","Chart_PieChart","Chart_Chart2","Chart_BarChart","LawyerDashboard","Lawyer_DashBoard","Chart","BarChart2","columnWidth","distributed","BarChart3","barHeight","textAnchor","opt","dataPointIndex","floating","Cards_FirmCards","Charts_Chart2","Charts_Chart","Charts_BarChart","Charts_BarChart2","Charts_BarChart3","FirmDashboard","Firm_DashBoard","Dashboard","UserRoles_AdminDashboard","UserRoles_FirmDashboard","UserRoles_LawyerDashboard","UserRoles_ClientDashboard","dashboardRedirect","Login","password","toast","prevState","backgroundImage","BackgroundImage","backgroundRepeat","t","grey","backgroundSize","backgroundPosition","square","flexDirection","LockOutlined_default","minLength","register","accountCreated","setAccountCreated","isFirm","setIsFirm","first_name","last_name","re_password","Company","m_name","c_email","role","time_zone","group","job_title","ext","home","work_no","phone_ext","setUserData","p_email","& .MuiButton-root","User","usersData","setUsersData","isActive","setIsActive","searchItem","setSearchItem","roles","setRoles","setRole","setGroup","groups","setGroups","loading2","setLoading2","rate_type","toLowerCase","body1","body2","axiosReguest1","axiosReguest2","input::-webkit-outer-spin-button","webkitAappearance","select","includes","is_active","last_login","ManageUserGroup","loadingUser","setLoadingUser","ManageRole","allValue","setAllValue","_useSelector2","updateData","setUpdateData","overflowX","&MuiTableCell","Rectangle_default","ManageUser","TimeList","practice_area","undergrad_study","lamguages","admitted_state","relocate","searchData","setSearchData","Result","Saved","pickTime","setPickTime","bar_adm_year","mail_add","link","notes","jobData","setJobData","TimePicker","Employee_Search","Employee_Result","Employee_Saved","App","es","integration_react","User_UserProvider","ThemeProvider","react_alert","AlertTemplate","timeout","Layout","path","Signup","PrivateRoute","exact","Home","Profile","Employee","ReactDOM","render","StrictMode","CssBaseline","src_App","document","getElementById","Appointments","fillColor","strokeColor","toolbar","onItemHover","highlightDataSeries","curve","Calls","lable","Email","listStyleType","mapboxgl","workerClass","MapboxWorker","Map","latitude","longitude","zoom","viewport","setViewport","esm","mapStyle","MAP_STYLE","onViewportChange","mapboxApiAccessToken","offsetLeft","offsetTop","Circle","NewAccounts","EmpOversite","Widget","widgetNames","RevenueIn","RevenueOut","NewCustomer","LostCustomer","Admin_NewAccounts","Admin_Map","Admin_EmpOversite","Charts_Calls","Charts_Appointments","Charts_Marketing","Charts_Email","paddingTop","CardActions"],"mappings":"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","file":"static/js/main.6d3cd2d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white copy.aa470428.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"tabs_tabs__2iP2q\",\"current\":\"tabs_current__UH0Eq\",\"content\":\"tabs_content__Vh0J0\"};","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  revenueIn: true,\n  revenueOut: true,\n  newCustomer: true,\n  lostCustomer: true,\n  newAccount: true,\n  appointment: true,\n  marketing: true,\n  empOversite: true,\n  emails: true,\n  calls: true,\n  map: true,\n  display: true,\n};\n\nconst sidebarSlice = createSlice({\n  name: \"sidebar\",\n  initialState,\n  reducers: {\n    isDisplay: (state) => {\n      state.display = !state.display;\n    },\n    hideSidebar: (state) => {\n      state.display = false;\n    },\n    showSidebar: (state) => {\n      state.display = true;\n    },\n    // manageRoleActive: (state) => {\n    //   state.manageRole = !state.manageRole;\n    // },\n    // manageUserActive: (state) => {\n    //   state.manageUser = !state.manageUser;\n    // },\n    // manageGroupActive: (state) => {\n    //   state.manageGroup = !state.manageGroup;\n    // },\n    revenueInActive: (state) => {\n      state.revenueIn = !state.revenueIn;\n    },\n    revenueOutActive: (state) => {\n      state.revenueOut = !state.revenueOut;\n    },\n    newCustomerActive: (state) => {\n      state.newCustomer = !state.newCustomer;\n    },\n    lostCustomerActive: (state) => {\n      state.lostCustomer = !state.lostCustomer;\n    },\n    newAccountActive: (state) => {\n      state.newAccount = !state.newAccount;\n    },\n    appointmentActive: (state) => {\n      state.appointment = !state.appointment;\n    },\n    marketingActive: (state) => {\n      state.marketing = !state.marketing;\n    },\n    empOversiteActive: (state) => {\n      state.empOversite = !state.empOversite;\n    },\n    emailsActive: (state) => {\n      state.emails = !state.emails;\n    },\n    callsActive: (state) => {\n      state.calls = !state.calls;\n    },\n    mapActive: (state) => {\n      state.map = !state.map;\n    },\n  },\n});\n\nexport const {\n  isDisplay,\n  // manageRoleActive,\n  // manageGroupActive,\n  // manageUserActive,\n  hideSidebar,\n  showSidebar,\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} = sidebarSlice.actions;\nexport default sidebarSlice.reducer;\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { Responsive as ResponsiveGridLayout } from \"react-grid-layout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withSize } from \"react-sizeme\";\n\nimport {\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} from \"../../../../redux/features/sidebarSlice\";\n\nimport Widget from \"./Widget\";\n\nconst originalItems = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\"];\n\nconst initialLayouts = {\n  lg: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  md: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  sm: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 4 },\n    { i: \"b\", x: 2, y: 0, w: 2, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 4, h: 4 },\n    { i: \"d\", x: 8, y: 0, w: 4, h: 4 },\n\n    { i: \"e\", x: 0, y: 2, w: 5, h: 6 },\n    { i: \"f\", x: 5, y: 2, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 6, w: 3, h: 6 },\n    { i: \"h\", x: 3, y: 6, w: 3, h: 6 },\n    { i: \"i\", x: 6, y: 6, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 12, w: 8, h: 5 },\n    { i: \"k\", x: 8, y: 12, w: 4, h: 5 },\n  ],\n  xs: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 3 },\n    { i: \"b\", x: 0, y: 4, w: 2, h: 3 },\n    { i: \"c\", x: 0, y: 8, w: 4, h: 6 },\n    { i: \"d\", x: 0, y: 12, w: 4, h: 6 },\n\n    { i: \"e\", x: 0, y: 18, w: 5, h: 6 },\n    { i: \"f\", x: 0, y: 24, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 30, w: 3, h: 4 },\n    { i: \"h\", x: 0, y: 36, w: 3, h: 4 },\n    { i: \"i\", x: 0, y: 42, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 48, w: 8, h: 5 },\n    { i: \"k\", x: 0, y: 53, w: 4, h: 5 },\n  ],\n  xxs: [\n    { i: \"a\", x: 0, y: 0, w: 2, h: 3 },\n    { i: \"b\", x: 0, y: 4, w: 2, h: 3 },\n    { i: \"c\", x: 0, y: 8, w: 4, h: 6 },\n    { i: \"d\", x: 0, y: 12, w: 4, h: 6 },\n\n    { i: \"e\", x: 0, y: 18, w: 5, h: 6 },\n    { i: \"f\", x: 0, y: 24, w: 7, h: 6 },\n\n    { i: \"g\", x: 0, y: 30, w: 3, h: 4 },\n    { i: \"h\", x: 0, y: 36, w: 3, h: 4 },\n    { i: \"i\", x: 0, y: 42, w: 6, h: 6 },\n\n    { i: \"j\", x: 0, y: 48, w: 8, h: 5 },\n    { i: \"k\", x: 0, y: 53, w: 4, h: 4 },\n  ],\n};\n\nfunction Content({ size: { width } }) {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  const components = {\n    a: sidebar.revenueIn,\n    b: sidebar.revenueOut,\n    c: sidebar.newCustomer,\n    d: sidebar.lostCustomer,\n    e: sidebar.newAccount,\n    f: sidebar.map,\n    g: sidebar.empOversite,\n    h: sidebar.calls,\n    i: sidebar.appointment,\n    j: sidebar.marketing,\n    k: sidebar.emails,\n  };\n  const fnCall = {\n    a: revenueInActive(),\n    b: revenueOutActive(),\n    c: newCustomerActive(),\n    d: lostCustomerActive(),\n    e: newAccountActive(),\n    f: mapActive(),\n    g: empOversiteActive(),\n    h: callsActive(),\n    i: appointmentActive(),\n    j: marketingActive(),\n    k: emailsActive(),\n  };\n  const [items, setItems] = useState(originalItems);\n  const [layouts, setLayouts] = useState(\n    getFromLS(\"layouts\") || initialLayouts,\n  );\n  const onLayoutChange = (_, allLayouts) => {\n    setLayouts(allLayouts);\n  };\n  const onLayoutSave = () => {\n    saveToLS(\"layouts\", layouts);\n  };\n  const onRemoveItem = (itemId) => {\n    // setItems(items.filter((i) => i !== itemId));\n    dispatch(fnCall[itemId]);\n  };\n  const onAddItem = (itemId) => {\n    setItems([...items, itemId]);\n    dispatch(fnCall[itemId]);\n  };\n  const displayItemList = () => {\n    return items.map((key) => (\n      <div\n        key={key}\n        className=\"widget\"\n        data-grid={{ w: 3, h: 2, x: 0, y: Infinity }}\n        style={components[key] ? { display: \"block\" } : { display: \"none\" }}\n      >\n        <Widget\n          id={key}\n          onRemoveItem={onRemoveItem}\n          backgroundColor=\"#867ae9\"\n        />\n      </div>\n    ));\n  };\n  useEffect(() => {\n    displayItemList();\n  }, [sidebar]);\n\n  return (\n    <>\n      <ResponsiveGridLayout\n        className=\"layout\"\n        layouts={layouts}\n        breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n        cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n        rowHeight={60}\n        width={width}\n        onLayoutChange={onLayoutChange}\n      >\n        {displayItemList()}\n      </ResponsiveGridLayout>\n    </>\n  );\n}\n\nexport default withSize({ refreshMode: \"debounce\", refreshRate: 60 })(Content);\n\nfunction getFromLS(key) {\n  let ls = {};\n  if (global.localStorage) {\n    try {\n      ls = JSON.parse(global.localStorage.getItem(\"rgl-8\")) || {};\n    } catch (e) {}\n  }\n  return ls[key];\n}\n\nfunction saveToLS(key, value) {\n  if (global.localStorage) {\n    global.localStorage.setItem(\n      \"rgl-8\",\n      JSON.stringify({\n        [key]: value,\n      }),\n    );\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/login_light.a12d3677.png\";","module.exports = __webpack_public_path__ + \"static/media/signup_light.181ee8a6.png\";","/** @format */\n\nimport { GET_PROFILE } from \"../actions/types\";\n\nconst initialState = {\n  profile: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {\n\tmsg: {},\n\tstatus: null,\n};\n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_ERRORS:\n\t\t\treturn {\n\t\t\t\tmsg: action.payload.msg,\n\t\t\t\tstatus: action.payload.status,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","/** @format */\n\nimport { CREATE_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase CREATE_MESSAGE:\n\t\t\treturn (state = action.payload);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","/** @format */\n\nimport {\n  GET_IS_WEEKLY,\n  MONTLY_REVENUE,\n  WEEKLY_REVENUE,\n} from \"../actions/types\";\n\nconst initialState = {\n  isWeekly: \"daily\",\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_IS_WEEKLY:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case MONTLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case WEEKLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst tabSlice = createSlice({\n  name: \"tab\",\n  initialState: initialState,\n  reducers: {\n    addTab: (state, action) => {\n      const newTask = {\n        id: action.payload.id,\n        name: action.payload.tab,\n      };\n      state.push(newTask);\n    },\n    removeTab: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n    reset: (state) => initialState,\n  },\n});\n\nexport const { addTab, removeTab, reset } = tabSlice.actions;\nexport default tabSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst newTabSlice = createSlice({\n  name: \"tab\",\n  initialState: initialState,\n  reducers: {\n    addNewTab: (state, action) => {\n      state.push({\n        id: action.payload.id,\n        name: action.payload.name,\n      });\n    },\n    removeNewTab: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n\n    removeLastNewTab: (state) => {\n      state.pop();\n    },\n    resetNewTab: (state) => initialState,\n  },\n});\n\nexport const {\n  addNewTab,\n  removeNewTab,\n  resetNewTab,\n  removeLastNewTab,\n} = newTabSlice.actions;\nexport default newTabSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  favorite: {},\n  isAvailable: true,\n};\n\nconst favoriteSlice = createSlice({\n  name: \"favorite\",\n  initialState: [],\n  reducers: {\n    addFav: (state, action) => {\n      const newFav = {\n        id: action.payload.id,\n        name: action.payload.name,\n        page: action.payload.page,\n      };\n      if (state.favorite.length < 10) {\n        state.favorite.push(newFav);\n      } else state.isAvailable = false;\n    },\n\n    removeFav: (state, action) => {\n      return state.filter((item) => item.id !== action.payload.id);\n    },\n  },\n});\n\nexport const { addFav, removeFav } = favoriteSlice.actions;\nexport default favoriteSlice.reducer;\n","/** @format */\n\n// import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport const CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nexport const CreateMatter = (\n  contact,\n  matter_name,\n  matter_type,\n  matter_source,\n  matter_status,\n  assign_to,\n  assign_by,\n  billing_rate,\n  alerts,\n  open_date,\n  close_date,\n  total_days,\n  jurisdiction,\n  status_limitaion,\n  opposing_counsel,\n  where,\n  when,\n  involved,\n  witnesses,\n  narrative,\n) => {\n  let status = \"\";\n  const body = JSON.stringify({\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n    open_date,\n    close_date,\n    total_days,\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    when,\n    involved,\n    witnesses,\n    narrative,\n  });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n    .then((res) => {\n      status = res.statusText;\n    })\n    .catch((err) => {\n      status = err.message;\n    });\n\n  return status;\n};\n\nexport const retrive_matter = () => {};\n","import axios from 'axios'\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/user/auth/`\n\n// Create new goal\nconst createRole = async (roleData, token) => {\n  // const config = {\n  //   headers: {\n  //     Authorization: `Bearer ${token}`,\n  //   },\n  // }\n\n  const response = await axios.post(API_URL, roleData, CONFIG)\n\n  return response.data\n}\n\n// Get user goals\nconst getRoleFn = async (RoleId) => {\n\n  const response = await axios.get(API_URL + RoleId , CONFIG)\n\n  return response.data\n}\n\n// Delete user goal\nconst deleteGoal = async (goalId, token) => {\n\n  const response = await axios.delete(API_URL + goalId, CONFIG)\n\n  return response.data\n}\n\nconst roleFnService = {\n  // createGoal,\n  getRoleFn,\n  // deleteGoal,\n}\n\nexport default roleFnService","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport goalService from '../services/roleFnService'\n\nconst initialState = {\n  goals: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: '',\n}\n\n// Create new goal\nexport const createGoal = createAsyncThunk(\n  'goals/create',\n  async (goalData, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      return await goalService.createGoal(goalData, token)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// Get user goals\nexport const getGoals = createAsyncThunk(\n  'goals/getAll',\n  async (_, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      return await goalService.getGoals(token)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// Delete user goal\nexport const deleteGoal = createAsyncThunk(\n  'goals/delete',\n  async (id, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token\n      return await goalService.deleteGoal(id, token)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\nexport const goalSlice = createSlice({\n  name: 'goal',\n  initialState,\n  reducers: {\n    reset: (state) => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(createGoal.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(createGoal.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.goals.push(action.payload)\n      })\n      .addCase(createGoal.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n      .addCase(getGoals.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(getGoals.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.goals = action.payload\n      })\n      .addCase(getGoals.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n      .addCase(deleteGoal.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(deleteGoal.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.goals = state.goals.filter(\n          (goal) => goal._id !== action.payload.id\n        )\n      })\n      .addCase(deleteGoal.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n  },\n})\n\nexport const { reset } = goalSlice.actions\nexport default goalSlice.reducer","/** @format */\n\nimport axios from \"axios\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst API_URL = \"https://dextera-lawfirm.herokuapp.com/user/auth/\";\n// Create new permission\nconst createpermission = async (permissionData, token) => {\n\t//   const config = {\n\t//     headers: {\n\t//       Authorization: `Bearer ${token}`,\n\t//     },\n\t//   }\n\t//   const response = await axios.post(API_URL, permissionData, config)\n\t//   return response.data\n};\n\n// Get user permissions\nconst getPermissions = async (id) => {\n\tconst response = await axios.get(\n\t\t`https://dextera-lawfirm.herokuapp.com/user/auth/role-permissions/${id}/`,\n\t\tCONFIG,\n\t);\n\n\treturn response.data;\n};\n\n// Delete user permission\nconst deletePermission = async (id) => {\n\tconst response = await axios.delete(\n\t\t`https://dextera-lawfirm.herokuapp.com/user/auth/role-permissions/${id}/`,\n\t\tCONFIG,\n\t);\n\n\treturn response.data;\n};\nconst updatePermission = async (data) => {\n\tconst response = await axios.put(\n\t\t`https://dextera-lawfirm.herokuapp.com/user/auth/permissions/${data.id}/`,\n\t\tCONFIG,\n\t);\n\n\treturn response.data;\n};\n\nconst permissionService = {\n\tcreatepermission,\n\tgetPermissions,\n\tdeletePermission,\n\tupdatePermission,\n};\n\nexport default permissionService;\n","/** @format */\n\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport permissionService from \"../services/permissionService\";\n\nconst initialState = {\n\tpermissions: [],\n\tisError: false,\n\tisSuccess: false,\n\tisLoading: false,\n\tmessage: \"\",\n\tall: false,\n};\n\n// Create new permissions\nexport const createPermission = createAsyncThunk(\n\t\"permissions/create\",\n\tasync (permissionData, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.createPermission(permissionData);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\n// Get user permissions\nexport const getPermissions = createAsyncThunk(\n\t\"permissions/getAll\",\n\tasync (id, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.getPermissions(id);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\n// Delete user permission\nexport const deletePermission = createAsyncThunk(\n\t\"permissions/delete\",\n\tasync (id, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await permissionService.deletePermission(id);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\nexport const permissionSlice = createSlice({\n\tname: \"permission\",\n\tinitialState,\n\treducers: {\n\t\treset: (state) => initialState,\n\t\tupdateIsView: (state, action) => {\n\t\t\tconst permission = state.permissions.permissions.find(\n\t\t\t\t(item) => item.id === action.payload,\n\t\t\t);\n\t\t\tif (permission) {\n\t\t\t\tpermission.is_view = !permission.is_view;\n\t\t\t}\n\t\t},\n\t\tupdateIsEdit: (state, action) => {\n\t\t\tconst permission = state.permissions.permissions.find(\n\t\t\t\t(item) => item.id === action.payload,\n\t\t\t);\n\t\t\tif (permission) {\n\t\t\t\tpermission.is_edit = !permission.is_edit;\n\t\t\t}\n\t\t},\n\t\tupdateIsCreate: (state, action) => {\n\t\t\tconst permission = state.permissions.permissions.find(\n\t\t\t\t(item) => item.id === action.payload,\n\t\t\t);\n\t\t\tif (permission) {\n\t\t\t\tpermission.is_create = !permission.is_create;\n\t\t\t}\n\t\t},\n\t\tupdateIsDelete: (state, action) => {\n\t\t\tconst permission = state.permissions.permissions.find(\n\t\t\t\t(item) => item.id === action.payload,\n\t\t\t);\n\t\t\tif (permission) {\n\t\t\t\tpermission.is_delete = !permission.is_delete;\n\t\t\t}\n\t\t},\n\t\tupdateIsContacts: (state, action) => {\n\t\t\tconst permission = state.permissions.permissions.find(\n\t\t\t\t(item) => item.id === action.payload,\n\t\t\t);\n\t\t\tif (permission) {\n\t\t\t\tpermission.is_contacts = !permission.is_contacts;\n\t\t\t}\n\t\t},\n\t\tupdateIsTeam: (state, action) => {\n\t\t\tconst permission = state.permissions.permissions.find(\n\t\t\t\t(item) => item.id === action.payload,\n\t\t\t);\n\t\t\tif (permission) {\n\t\t\t\tpermission.is_team = !permission.is_team;\n\t\t\t}\n\t\t},\n\t\tupdateIsOffice: (state, action) => {\n\t\t\tconst permission = state.permissions.permissions.find(\n\t\t\t\t(item) => item.id === action.payload,\n\t\t\t);\n\t\t\tif (permission) {\n\t\t\t\tpermission.is_office = !permission.is_office;\n\t\t\t}\n\t\t},\n\t\tupdateIsRegion: (state, action) => {\n\t\t\tconst permission = state.permissions.permissions.find(\n\t\t\t\t(item) => item.id === action.payload,\n\t\t\t);\n\t\t\tif (permission) {\n\t\t\t\tpermission.is_region = !permission.is_region;\n\t\t\t}\n\t\t},\n\t\tupdateIsAll: (state, action) => {\n\t\t\tconst permission = state.permissions.permissions.find(\n\t\t\t\t(item) => item.id === action.payload.id,\n\t\t\t);\n\t\t\tif (permission) {\n\t\t\t\tpermission.is_contacts = !action.payload.value;\n\t\t\t\tpermission.is_team = !action.payload.value;\n\t\t\t\tpermission.is_office = !action.payload.value;\n\t\t\t\tpermission.is_region = !action.payload.value;\n\t\t\t}\n\t\t},\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder\n\t\t\t.addCase(createPermission.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(createPermission.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions.push(action.payload);\n\t\t\t})\n\t\t\t.addCase(createPermission.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(getPermissions.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(getPermissions.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions = action.payload;\n\t\t\t})\n\t\t\t.addCase(getPermissions.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(deletePermission.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(deletePermission.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.permissions = state.permissions.filter(\n\t\t\t\t\t(permission) => permission._id !== action.payload.id,\n\t\t\t\t);\n\t\t\t})\n\t\t\t.addCase(deletePermission.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t});\n\t},\n});\n\nexport const {\n\treset,\n\tupdateIsView,\n\tupdateIsEdit,\n\tupdateIsCreate,\n\tupdateIsDelete,\n\tupdateIsContacts,\n\tupdateIsTeam,\n\tupdateIsOffice,\n\tupdateIsRegion,\n\tupdateIsAll,\n} = permissionSlice.actions;\nexport default permissionSlice.reducer;\n","/** @format */\n\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst API_URL = \"https://dextera-lawfirm.herokuapp.com/user/auth/\";\n\n// Register user\nconst signUp = async (userData) => {\n\tconst response = await axios.post(API_URL + \"register\", userData, CONFIG);\n\n\tif (response.data) {\n\t\tlocalStorage.setItem(\"user\", JSON.stringify(response.data.user));\n\t\tlocalStorage.setItem(\"token\", JSON.stringify(response.data.token));\n\t}\n\n\treturn response.data;\n};\n\n// Login user\nconst signIn = async (userData) => {\n\tconst response = await axios.post(API_URL + \"login\", userData, CONFIG);\n\n\tif (response.data) {\n\t\tlocalStorage.setItem(\"user\", JSON.stringify(response.data));\n\t}\n\n\treturn response.data;\n};\n\n// Logout user\nconst signOut = async (token) => {\n\tconst response = await axios.post(API_URL + \"logout\", token);\n\tif (response.data) {\n\t\tlocalStorage.removeItem(\"user\");\n\t\tlocalStorage.removeItem(\"token\");\n\t}\n\n\t// return response.data\n};\n\nconst authService = {\n\tsignIn,\n\tsignOut,\n\tsignUp,\n};\n\nexport default authService;\n","/** @format */\n\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"../services/authService\";\n\n// Get user from localStorage\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst token = JSON.parse(localStorage.getItem(\"token\"));\n\nconst initialState = {\n\tuser: user ? user : null,\n\tisAuthenticated: false,\n\tisError: false,\n\tisSuccess: false,\n\tisLoading: false,\n\tmessage: \"\",\n};\n\n// signUp user\nexport const signUp = createAsyncThunk(\n\t\"auth/signUp\",\n\tasync (user, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await authService.signUp(user);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\n// signIn user\nexport const signIn = createAsyncThunk(\n\t\"auth/signIn\",\n\tasync (user, thunkAPI) => {\n\t\ttry {\n\t\t\treturn await authService.signIn(user);\n\t\t} catch (error) {\n\t\t\tconst message =\n\t\t\t\t(error.response &&\n\t\t\t\t\terror.response.data &&\n\t\t\t\t\terror.response.data.message) ||\n\t\t\t\terror.message ||\n\t\t\t\terror.toString();\n\t\t\treturn thunkAPI.rejectWithValue(message);\n\t\t}\n\t},\n);\n\nexport const signOut = createAsyncThunk(\"auth/signOut\", async () => {\n\tawait authService.signOut(token);\n});\n\nexport const authSlice = createSlice({\n\tname: \"auth\",\n\tinitialState,\n\treducers: {\n\t\treset: (state) => {\n\t\t\tstate.isLoading = false;\n\t\t\tstate.isSuccess = false;\n\t\t\tstate.isError = false;\n\t\t\tstate.isAuthenticated = false;\n\t\t\tstate.message = \"\";\n\t\t},\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder\n\t\t\t.addCase(signUp.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(signUp.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.isAuthenticated = true;\n\t\t\t\tstate.user = action.payload;\n\t\t\t})\n\t\t\t.addCase(signUp.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.isAuthenticated = false;\n\t\t\t\tstate.message = action.payload;\n\t\t\t\tstate.user = null;\n\t\t\t})\n\t\t\t.addCase(signIn.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(signIn.fulfilled, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.isAuthenticated = true;\n\t\t\t\tstate.user = action.payload;\n\t\t\t})\n\t\t\t.addCase(signIn.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t\tstate.user = null;\n\t\t\t})\n\t\t\t.addCase(signOut.pending, (state) => {\n\t\t\t\tstate.isLoading = true;\n\t\t\t})\n\t\t\t.addCase(signOut.rejected, (state, action) => {\n\t\t\t\tstate.isLoading = false;\n\t\t\t\tstate.isError = true;\n\t\t\t\tstate.message = action.payload;\n\t\t\t})\n\t\t\t.addCase(signOut.fulfilled, (state) => {\n\t\t\t\tstate.user = null;\n\t\t\t\tstate.isSuccess = true;\n\t\t\t\tstate.isAuthenticated = false;\n\t\t\t});\n\t},\n});\n\nexport const { reset } = authSlice.actions;\nexport default authSlice.reducer;\n","/** @format */\n\nimport { combineReducers } from \"redux\";\n// import leads from \"./leads\";\nimport profile from \"./profile\";\nimport errors from \"./errors\";\nimport messages from \"./messages\";\n// import auth from \"./auth\";\nimport data from \"./data\";\nimport sidebarReducer from \"../redux/features/sidebarSlice\";\nimport tabsReducer from \"../redux/features/tabSlice\";\nimport newTabsReducer from \"../redux/features/searchTabSlice\";\nimport favoriteReducer from \"../redux/features/favoriteSlice\";\nimport rolefnsReducer from \"../redux/features/roleFnSlice\";\nimport permissionReducer from \"../redux/features/permissionSlice\";\nimport auth from \"../redux/features/authSlice\";\n\nexport default combineReducers({\n\tauth,\n\tprofile,\n\terrors,\n\tmessages,\n\tdata,\n\tsidebar: sidebarReducer,\n\tfavorite: favoriteReducer,\n\ttabs: tabsReducer,\n\tnewTabs: newTabsReducer,\n\tpermissions: permissionReducer,\n});\n","/** @format */\n\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const DELETE_PROFILE = \"DELETE_PROFILE\";\nexport const ADD_PROFILE = \"ADD_PROFILE\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const CLEAR_PROFILES = \"CLEAR_PROFILES\";\nexport const MONTLY_REVENUE = \"GET_MONTLY_REVENUE\";\nexport const WEEKLY_REVENUE = \"GET_WEEKLY_REVENUE\";\nexport const GET_IS_WEEKLY = \"GET_IS_WEEKLY\";\nexport const UPDATE_IS_WEEKLY = \"UPDATE_IS_WEEKLY\";\n\nexport const CREATE_MEMBER_SUCCESS = \"CREATE_MEMBER_SUCCESS\";\nexport const CREATE_MEMBER_FAIL = \"CREATE_MEMBER_FAIL\";\n\nexport const GET_MEMBER_SUCCESS = \"GET_MEMBER_SUCCESS\";\nexport const GET_MEMBER_FAIL = \"GET_MEMBER_FAIL\";\n\nexport const GET_TIMEZONE_SUCCESS = \"GET_TIMEZONE_SUCCESS\";\nexport const GET_TIMEZONE_FAIL = \"GET_TIMEZONE_FAIL\";\nexport const GET_CURRENT_TIME_SCUSSESS = \"GET_CURRENT_TIME_SCUSSESS\";\nexport const GET_CURRENT_TIME_FAIL = \"GET_CURRENT_TIME_FAIL\";\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\n// export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\n// export const SIGNUP_FAIL = 'SIGNUP_FAIL';\n// export const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\n// export const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\n// export const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\n// export const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\n// export const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\n// export const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\n// export const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\n// export const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\n// export const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\n// export const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\n// export const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\n// export const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\n// export const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\n// export const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\n// export const LOGOUT = 'LOGOUT';\n\n// export const PROFILE_CREATED_SUCCESS = 'PROFILE_CREATED_SUCCESS';\n// export const PROFILE_CREATED_FAIL = 'PROFILE_CREATED_FAIL';\n\n// export const PROFILE_LOADED_SUCCESS = 'PROFILE_LOADED_SUCCESS';\n// export const PROFILE_LOADED_FAIL = 'PROFILE_LOADED_FAIL';\n\n// export const PROFILE_UPDATE_SUCCESS = 'PROFILE_UPDATE_SUCCESS';\n// export const PROFILE_UPDATE_FAIL = 'PROFILE_UPDATE_FAIL';\n","/** @format */\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./reducers\";\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({ reducer: persistedReducer,});\n\nexport const persistor = persistStore(store);\n\nexport default store;\n","/** @format */\n\nimport { CREATE_MESSAGE, GET_ERRORS } from \"./types\";\n\n// CREATE MESSAGE\nexport const createMessage = (msg) => {\n\treturn {\n\t\ttype: CREATE_MESSAGE,\n\t\tpayload: msg,\n\t};\n};\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status) => {\n\treturn {\n\t\ttype: GET_ERRORS,\n\t\tpayload: { msg, status },\n\t};\n};\n","/** @format */\n\nimport axios from \"axios\";\n\nimport {\n\tUSER_LOADED,\n\tUSER_LOADING,\n\tAUTH_ERROR,\n\tLOGIN_SUCCESS,\n\tLOGIN_FAIL,\n\tLOGOUT_SUCCESS,\n\tREGISTER_SUCCESS,\n\tREGISTER_FAIL,\n} from \"./types\";\nimport { createMessage, returnErrors } from \"./messages\";\nimport { useSelector } from \"react-redux\";\nimport { reset } from \"../redux/features/tabSlice\";\nimport { resetNewTab } from \"../redux/features/searchTabSlice\";\n\n// CHECK TOKEN & LOAD USER\nexport const loadUser = () => (dispatch, getState) => {\n\t// User Loading\n\tdispatch({ type: USER_LOADING });\n\n\taxios\n\t\t.get(\n\t\t\t`${process.env.REACT_APP_API_URL}/user/auth/user`,\n\t\t\ttokenConfig(getState),\n\t\t)\n\t\t.then((res) => {\n\t\t\tdispatch({\n\t\t\t\ttype: USER_LOADED,\n\t\t\t\tpayload: res.data,\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tdispatch(returnErrors(err.response.data.message, err.response.status));\n\t\t\tdispatch({\n\t\t\t\ttype: AUTH_ERROR,\n\t\t\t});\n\t\t});\n};\n\n// LOGIN USER\nexport const login = (username, email, password) => (dispatch) => {\n\t// Headers\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\t// Request Body\n\tconst body = JSON.stringify({ username, password });\n\n\taxios\n\t\t.post(`${process.env.REACT_APP_API_URL}/user/auth/login`, body, config)\n\t\t.then(function(response) {\n\t\t\tconsole.log(response);\n\t\t\tdispatch(createMessage({ LoginSuccess: \"Login Successful\" }));\n\t\t\tdispatch({\n\t\t\t\ttype: LOGIN_SUCCESS,\n\t\t\t\tpayload: response.data,\n\t\t\t});\n\t\t})\n\t\t.catch(function(error) {\n\t\t\tdispatch(returnErrors(error.response.data, error.response.status));\n\t\t\tdispatch({\n\t\t\t\ttype: LOGIN_FAIL,\n\t\t\t});\n\t\t\tconsole.log(error);\n\t\t});\n};\n\n// REGISTER USER\nexport const register = ({ username, email, password }) => (dispatch) => {\n\t// Headers\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\t// Request Body\n\tconst body = JSON.stringify({ username, email, password });\n\n\taxios\n\t\t.post(`${process.env.REACT_APP_API_URL}/user/auth/register`, body, config)\n\t\t.then((res) => {\n\t\t\tdispatch({\n\t\t\t\ttype: REGISTER_SUCCESS,\n\t\t\t\tpayload: res.data,\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tdispatch(returnErrors(err.response.data, err.response.status));\n\t\t\tdispatch({\n\t\t\t\ttype: REGISTER_FAIL,\n\t\t\t});\n\t\t});\n};\n\n// LOGOUT USER\nexport const logout = () => (dispatch, getState) => {\n\taxios\n\t\t.post(\n\t\t\t`${process.env.REACT_APP_API_URL}/user/auth/logout`,\n\t\t\tnull,\n\t\t\ttokenConfig(getState),\n\t\t)\n\t\t.then((res) => {\n\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\tdispatch(reset());\n\t\t\tdispatch(resetNewTab());\n\t\t\tdispatch({\n\t\t\t\ttype: LOGOUT_SUCCESS,\n\t\t\t});\n\t\t});\n};\n\n// Setup config with token - helper function\nexport const tokenConfig = (getState) => {\n\t// const token = useSelector((state) => state.auth.token);\n\t// Get token from state\n\tconst token = getState().auth.token;\n\n\t// Headers\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\t// If token, add to headers config\n\tif (token) {\n\t\tconfig.headers[\"Authorization\"] = `Token ${token}`;\n\t}\n\n\treturn config;\n};\n","/** @format */\n\nimport { useState, useCallback } from \"react\";\n\nexport const useToggle = (initialState) => {\n  const [isToggled, setIsToggled] = useState(initialState);\n\n  // put [setIsToggled] into the useCallback's dependencies array\n  // this value never changes so the callback is not going to be ever re-created\n  const toggle = useCallback(\n    () => setIsToggled((state) => !state),\n    [setIsToggled],\n  );\n\n  return [isToggled, toggle];\n};\n","/** @format */\n\n// import * as React from 'react';\nimport { styled } from \"@mui/material/styles\";\nimport { Link } from \"react-router-dom\";\nimport { Button, InputBase } from \"@mui/material\";\n\nexport const SideBarBtn = styled(Button)(({ theme }) => ({\n  fontSize: \"0.6em\",\n  textTransform: \"none\",\n  // color: theme.palette.primary.main,\n  color: \"#eee\",\n  textAlign: \"center\",\n  width: \"8em\",\n  height: \"8em\",\n  margin: \"0.7em\",\n  borderColor: \"#eee\",\n  padding: \"1em\",\n  \"&:hover\": {\n    backgroundColor: \"white\",\n    color: theme.palette.primary.main,\n  },\n  \"&:visited\": {\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport const SecNavbar = styled(\"nav\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  overflow: \"hidden\",\n  color: \"#eee\",\n  position: \"reletive\",\n  padding: \"0\",\n  margin: \"0\",\n  height: \"3.5rem\",\n  width: \"100%\",\n}));\n\nexport const FooterBar = styled(\"footer\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  color: \"#eee\",\n  position: \"fixed\",\n  bottom: \"0\",\n  left: \"0\",\n\n  margin: \"0\",\n  height: \"2.5rem\",\n  textAlign: \"center\",\n  alignContent: \"center\",\n  width: \"100%\",\n}));\n\nexport const FooterLink = styled(Link)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  fontSize: \"1rem\",\n  textTransform: \"uppercase\",\n  fontWeight: 500,\n  textDecoration: \"none\",\n  marginTop: \"0.7rem\",\n  padding: \" 2rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\nexport const FooterButton = styled(Button)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  fontSize: \"1rem\",\n  fontWeight: 500,\n  marginX: \"2rem\",\n  paddingX: \"3rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\n\nexport const LinkButton = styled(Link)(({ theme }) => ({\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  margin: \"0.7em\",\n  backgroundColor: theme.palette.primary.main,\n  borderColor: \"#2979ff\",\n  color: \"white\",\n  padding: \"0.65rem 1.2rem\",\n  borderRadius: \"0.5rem\",\n  \"&:hover\": {\n    backgroundColor: \"#1c54b2\",\n    cursor: \"pointer\",\n    color: \"white\",\n  },\n}));\n\nexport const Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#ddd\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"40%\",\n}));\n\nexport const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\nexport const MainSearch = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#eee\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(3),\n    width: \"auto\",\n  },\n}));\n\nexport const MainSearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledMainInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n\n","/** @format */\n\n/** @format */ // import axios from \"axios\";\n\nimport { GET_IS_WEEKLY, MONTLY_REVENUE, WEEKLY_REVENUE } from \"./types\";\n// GET LEADS\nexport const updateIsWeekly = (data) => (dispatch) => {\n  if (data) {\n    dispatch({\n      type: WEEKLY_REVENUE,\n      payload: data,\n    });\n  } else {\n    dispatch({\n      type: MONTLY_REVENUE,\n    });\n  }\n};\n\nexport const getIsWeekly = () => (dispatch) =>\n  dispatch({\n    type: GET_IS_WEEKLY,\n    // payload: this.state,\n  });\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport NumberFormat from \"react-number-format\";\nimport { useToggle } from \"../../context/useToggle\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  ListSubheader,\n  TextField,\n} from \"@mui/material\";\nimport {\n  MainSearch,\n  MainSearchIconWrapper,\n  StyledMainInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Logo from \"../../asserts/logo_white copy.png\";\nimport { updateIsWeekly } from \"../../actions/data\";\nimport {\n  IconButton,\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\n\nconst NavbarResponsive = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const [today, setToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [dateValue, setDateValue] = useState([null, null]);\n\n  const timeFormater = () => {\n    if (checked) {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n    } else {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: false,\n      });\n    }\n  };\n  const [isChecked, setIsChecked] = useToggle(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOnChage = (e) => {\n    dispatch(updateIsWeekly(e.target.value));\n  };\n\n  const logout_user = () => {\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Typography variant=\"h5\" component=\"h5\">\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          color=\"primary\"\n          style={{ marginRight: \"0.5rem\" }}\n        >\n          Expected Balance :\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">\n              Expected Balance\n            </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={isWeekly}\n              label=\"Expected Balance\"\n              onChange={handleOnChage}\n            >\n              <MenuItem value=\"daily\">Daily</MenuItem>\n              <MenuItem value=\"weekly\">Weekly</MenuItem>\n              <MenuItem value=\"monthly\">Monthly</MenuItem>\n              <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n              <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n              <MenuItem value=\"range\">Custom Range</MenuItem>\n              {isWeekly === \"range\" ? (\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              ) : null}\n            </Select>\n          </FormControl>\n        </Typography>\n        <NumberFormat\n          value={isWeekly ? 3254 : 32564}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix=\"$\"\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" ml={1} mr={1}>\n        {\" \"}\n        |{\" \"}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h5\">\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          \n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n    </Fragment>\n  );\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <Typography noWrap component=\"div\" sx={{ display: \"block\" }}>\n        <Link to=\"/\">\n          <img\n            src={Logo}\n            alt=\"logo\"\n            style={{ height: \"2rem\", width: \"auto\" }}\n          />\n        </Link>\n      </Typography>\n      {isAuthenticated ? (\n        <>\n          <Typography variant=\"h5\" component=\"h5\" sx={{ marginLeft: \"1rem\" }}>\n            {timeFormater()}\n            <Switch\n              size=\"small\"\n              \n              checked={checked}\n              onChange={handleChange}\n              inputProps={{ \"aria-label\": \"controlled\" }}\n              sx={{ transform: \"rotate(90deg)\" }}\n            />\n          </Typography>\n          <IconButton\n            sx={{ color: \"#7a4ebf\", float: \"right\" }}\n            onClick={() => setOpenDrawer(!openDrawer)}\n          >\n            <MenuIcon color=\"#7a4ebf\" />\n          </IconButton>\n        </>\n      ) : (\n        guestLinks()\n      )}\n\n      <Drawer\n        anchor=\"right\"\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <MainSearch>\n                <MainSearchIconWrapper>\n                  <SearchIcon />\n                </MainSearchIconWrapper>\n                <StyledMainInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </MainSearch>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <Typography variant=\"h5\" component=\"h5\">\n                <Typography\n                  component=\"span\"\n                  variant=\"h5\"\n                  color=\"primary\"\n                  style={{ marginRight: \"0.5rem\" }}\n                >\n                  Set Interval :\n                  <Select\n                    size=\"small\"\n                    sx={{ marginX: \"1rem\" }}\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={isWeekly}\n                    label=\"Expected Balance\"\n                    onChange={handleOnChage}\n                  >\n                    <MenuItem value=\"daily\">Daily</MenuItem>\n                    <MenuItem value=\"weekly\">Weekly</MenuItem>\n                    <MenuItem value=\"monthly\">Monthly</MenuItem>\n                    <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n                    <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n                    <MenuItem value=\"range\">Custom Range</MenuItem>\n                    {isWeekly === \"range\" ? (\n                      <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DateRangePicker\n                          startText=\"Start Date\"\n                          endText=\"End Date\"\n                          value={dateValue}\n                          onChange={(newValue) => {\n                            setDateValue(newValue);\n                          }}\n                          renderInput={(startProps, endProps) => (\n                            <Fragment>\n                              <TextField {...startProps} />\n                              <Box sx={{ mx: 2 }}> to </Box>\n                              <TextField {...endProps} />\n                            </Fragment>\n                          )}\n                        />\n                      </LocalizationProvider>\n                    ) : null}\n                  </Select>\n                </Typography>\n              </Typography>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              {\" \"}\n              <Typography variant=\"h5\" component=\"h5\">\n                Expected Balance :{\" \"}\n                <NumberFormat\n                  value={isWeekly ? 3254 : 32564}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon></ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon></ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <MainSearch>\n                <MainSearchIconWrapper>\n                  <SearchIcon />\n                </MainSearchIconWrapper>\n                <StyledMainInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </MainSearch>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n      </Drawer>\n    </Fragment>\n  );\n};\n\nexport default NavbarResponsive;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport NumberFormat from \"react-number-format\";\nimport { useToggle } from \"../../context/useToggle\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  ListSubheader,\n  TextField,\n} from \"@mui/material\";\nimport {\n  MainSearch,\n  MainSearchIconWrapper,\n  StyledMainInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Logo from \"../../asserts/logo_white copy.png\";\nimport { updateIsWeekly } from \"../../actions/data\";\nimport { useMediaQuery } from \"react-responsive\";\nimport NavbarResponsive from \"./NavbarResponsive\";\n\nconst Navbar = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const [today, setToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [dateValue, setDateValue] = useState([null, null]);\n\n  const timeFormater = () => {\n    if (checked) {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n    } else {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: false,\n      });\n    }\n  };\n  const [isChecked, setIsChecked] = useToggle(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOnChage = (e) => {\n    dispatch(updateIsWeekly(e.target.value));\n  };\n\n  const logout_user = () => {\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Typography variant=\"h5\" component=\"h5\">\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          color=\"primary\"\n          style={{ marginRight: \"0.8rem\" }}\n        >\n          Expected Balance :\n          <Select\n            sx={{ marginX: \"1rem\" }}\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={isWeekly}\n            label=\"Expected Balance\"\n            onChange={handleOnChage}\n          >\n            <MenuItem value=\"daily\">Daily</MenuItem>\n            <MenuItem value=\"weekly\">Weekly</MenuItem>\n            <MenuItem value=\"monthly\">Monthly</MenuItem>\n            <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n            <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n            <MenuItem value=\"range\">Custom Range</MenuItem>\n            {isWeekly === \"range\" ? (\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateRangePicker\n                  startText=\"Start Date\"\n                  endText=\"End Date\"\n                  value={dateValue}\n                  onChange={(newValue) => {\n                    setDateValue(newValue);\n                  }}\n                  renderInput={(startProps, endProps) => (\n                    <Fragment>\n                      <TextField {...startProps} />\n                      <Box sx={{ mx: 2 }}> to </Box>\n                      <TextField {...endProps} />\n                    </Fragment>\n                  )}\n                />\n              </LocalizationProvider>\n            ) : null}\n          </Select>\n        </Typography>\n        <NumberFormat\n          value={isWeekly ? 3254 : 32564}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix=\"$\"\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" ml={1} mr={1}>\n        {\" \"}\n        |{\" \"}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h5\">\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          \n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n    </Fragment>\n  );\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <Box sx={{ flexGrow: 1, backgroundColor: \"white\" }} component=\"nav\">\n        <AppBar position=\"static\" color=\"transparent\" sx={{ border: \"none\" }}>\n          <Toolbar>\n            {isTabletOrMobile ? (\n              <>\n                <NavbarResponsive />\n              </>\n            ) : (\n              <>\n                <Typography\n                  noWrap\n                  component=\"div\"\n                  sx={{ display: { xs: \"none\", sm: \"block\" } }}\n                >\n                  <Link to=\"/\">\n                    <img\n                      src={Logo}\n                      alt=\"logo\"\n                      style={{ height: \"2rem\", width: \"auto\" }}\n                    />\n                  </Link>\n                </Typography>\n                <MainSearch>\n                  <MainSearchIconWrapper>\n                    <SearchIcon />\n                  </MainSearchIconWrapper>\n                  <StyledMainInputBase\n                    placeholder=\"Search…\"\n                    inputProps={{ \"aria-label\": \"search\" }}\n                  />\n                </MainSearch>\n                <Box sx={{ flexGrow: 1 }} />\n                <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\n                  {isAuthenticated ? authLinks() : guestLinks()}\n                </Box>\n              </>\n            )}\n          </Toolbar>\n        </AppBar>\n      </Box>\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\n\nexport default Navbar;\n","/** @format */\n\nimport { Box, Typography, Button, TextField, Chip } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport React, { Fragment } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\n\nconst ChatHistory = () => {\n  return (\n    <Typography>\n      <Box\n        p={2}\n        sx={{\n          border: \"1px solid lightgray\",\n          borderRadius: \"1rem\",\n        }}\n      >\n        <Chip\n          label=\"Hi\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          size=\"large\"\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip label=\"Hello\" variant=\"outlined\" avatar={<Avatar>M</Avatar>} />\n        <br />\n        <Chip\n          label=\"Message by M\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"Message by D\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"this is just a ui design\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{ marginTop: \"1rem\" }}\n        />\n        <br />\n        <Chip\n          label=\"the chat feature is not working at backend\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n\n        <br />\n      </Box>\n    </Typography>\n  );\n};\n\nconst Chatting = () => {\n  return (\n    <Fragment>\n      <ChatHistory />\n      <br />\n      <Box\n        component=\"form\"\n        sx={{\n          //   border: \"1px solid lightgray\",\n          //   borderRadius: \"1rem\",\n          \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n        }}\n      >\n        <TextField type=\"text\" size=\"small\" variant=\"outlined\" />\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          endIcon={<SendIcon />}\n          type=\"submit\"\n          sx={{\n            m: 1,\n          }}\n        >\n          Send\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Chatting;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport isWeekend from \"date-fns/isWeekend\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { StaticDatePicker } from \"@mui/x-date-pickers/StaticDatePicker\";\nimport { TextField, Box, Paper, Grid } from \"@mui/material\";\n\nconst Calender = () => {\n  const [value, setValue] = useState(new Date());\n  const [tasks, setTasks] = useState([]);\n\n  return (\n    <Box component={Paper} m={2}>\n      <Grid container>\n        {\" \"}\n        <Grid item lg={6} xs={12}>\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <StaticDatePicker\n              orientation=\"landscape\"\n              openTo=\"day\"\n              value={value}\n              shouldDisableDate={isWeekend}\n              onChange={(newValue) => {\n                setValue(newValue);\n              }}\n              renderInput={(params) => <TextField {...params} />}\n            />\n          </LocalizationProvider>\n        </Grid>{\" \"}\n        <Grid item lg={6} xs={12}>\n          {tasks.length !== 0 ? (\n            tasks.map((task) => (\n              <li>\n                {task.id} - {task.name}\n              </li>\n            ))\n          ) : (\n            <h4> No record found</h4>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Calender;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Menu, MenuItem, Divider } from \"@mui/material\";\n\nconst ViewTasks = () => {\n  return (\n    <Fragment>\n      <MenuItem>Profile</MenuItem>\n      <MenuItem>Account</MenuItem>\n      <MenuItem>Setting</MenuItem>\n      <Divider sx={{ my: 0.5 }} />\n      <MenuItem>Logout</MenuItem>\n    </Fragment>\n  );\n};\n\nexport default ViewTasks;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nimport { Star } from \"@mui/icons-material\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Favorites = () => {\n  const favList = useSelector((state) => state.favorite.favorite);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <List>\n        <ListItem disablePadding>\n          <ListItemButton>\n            <ListItemIcon>\n              <Star sx={{ color: \"orange\" }} />\n            </ListItemIcon>\n          </ListItemButton>\n          <ListItemText primary=\"Favorite 1\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Favorites;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport Chatting from \"../Chat/Chat\";\n\n// styling imports\nimport {\n  Box,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  Fade,\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { SecNavbar } from \"../../styles/styles\";\n\nimport {\n  Message,\n  EmailRounded,\n  CalendarToday,\n  CheckBox,\n  Person,\n  NotificationAdd,\n  Settings,\n  Star,\n  StarBorder,\n} from \"@mui/icons-material/\";\nimport { useToggle } from \"../../context/useToggle\";\nimport Calender from \"../Dashboard/Calender\";\nimport ViewTasks from \"../Tasks/ViewTasks\";\nimport Favorites from \"../Favorite/Favorites\";\nimport serverTime from \"../../utils/ServerTime\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { useMediaQuery } from \"react-responsive\";\nimport {\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nexport const NavBarSecResponsive = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  const isWeekly = useSelector((state) => state.data.isWeekly);\n  const user = useSelector((state) => state.auth.user);\n\n  const dispatch = useDispatch();\n\n  const [openFav, setOpenFav] = useState(false);\n\n  const handleClickOpenFav = () => {\n    setOpenFav(true);\n  };\n\n  const handleCloseFav = () => {\n    setOpenFav(false);\n  };\n  const [openTask, setOpenTask] = useState(false);\n\n  const handleClickOpenTask = () => {\n    setOpenTask(true);\n  };\n\n  const handleCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const [openCal, setOpenCal] = useState(false);\n\n  const handleClickOpenCal = () => {\n    setOpenCal(true);\n  };\n\n  const handleCloseCal = () => {\n    setOpenCal(false);\n  };\n\n  const [openChat, setOpenChat] = useState(false);\n\n  const handleClickOpenChat = () => {\n    setOpenChat(true);\n  };\n\n  const handleCloseChat = () => {\n    setOpenChat(false);\n  };\n\n  const history = useHistory();\n  const [isLogout, setIsLogout] = useToggle(false);\n  const today = new Date();\n  const time = today.toLocaleTimeString();\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n  const [redirect, setRedirect] = useState(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [settingAcnchorEl2, setSettingAcnchorEl2] = useState(null);\n\n  const [anchorEl2, setAnchorEl2] = React.useState(null);\n\n  const handleLogout = () => {\n    console.log(\"logout button just clicked\");\n    dispatch(logout());\n    setRedirect(true);\n  };\n\n  const open = Boolean(anchorEl);\n  const open2 = Boolean(anchorEl);\n\n  const userRoleChecker = () => {\n    switch (user.username) {\n      case \"admin\":\n        return \"Admin\";\n      case \"firm\":\n        return \"Firm\";\n      case \"lawyer\":\n        return \"Lawyer\";\n      default:\n        return \"Client\";\n    }\n  };\n\n  const openSetting2 = Boolean(settingAcnchorEl2);\n\n  const handleClick2 = (event) => {\n    setSettingAcnchorEl2(event.currentTarget);\n  };\n  const openSetting = Boolean(settingAcnchorEl);\n  const handleClose2 = () => {\n    setSettingAcnchorEl2(null);\n  };\n\n  const handleClick = (event) => {\n    setSettingAcnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setSettingAcnchorEl(null);\n  };\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <Fragment>\n      <IconButton\n        sx={{ color: \"white\" }}\n        onClick={() => setOpenDrawer(!openDrawer)}\n      >\n        <MenuIcon color=\"white\" />\n      </IconButton>\n      <Drawer\n        anchor=\"left\"\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                className=\"nav-items\"\n                size=\"large\"\n                onClick={handleClickOpenChat}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"#fff\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n              >\n                <Message />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          className=\"nav-items\"\n          Validate\n          open={openChat}\n          onClose={handleCloseChat}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          sx={{\n            position: \"absolute\",\n            right: \"20px\",\n            bottom: \"150px\",\n          }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Chatting Application\"}\n          </DialogTitle>\n          <DialogContent>\n            <Chatting />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseChat}>Close</Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                size=\"large\"\n                className=\"nav-items\"\n                component={Link}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n                to={{\n                  pathname:\n                    \"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=someone@gmail.com\",\n                }}\n                target=\"_blank\"\n              >\n                <EmailRounded />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                size=\"large\"\n                className=\"nav-items\"\n                onClick={handleClickOpenCal}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <CalendarToday />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          Validate\n          open={openCal}\n          maxWidth=\"lg\"\n          fullWidth\n          onClose={handleCloseCal}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          sx={{\n            position: \"absolute\",\n            right: \"20px\",\n            bottom: \"150px\",\n          }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Calender\"}</DialogTitle>\n          <DialogContent>\n            <Calender />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseCal}>Close</Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                aria-label=\"more\"\n                className=\"nav-items\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting2 ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick2}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <CheckBox />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Menu\n          id=\"fade-menu\"\n          MenuListProps={{\n            \"aria-labelledby\": \"fade-button\",\n          }}\n          className=\"nav-items\"\n          anchorEl={settingAcnchorEl2}\n          open={openSetting2}\n          onClose={handleClose2}\n          TransitionComponent={Fade}\n        >\n          <MenuItem onClick={handleClose2}>Task 1: This is task one</MenuItem>\n          <MenuItem onClick={handleClose2}>Task 2: This is task two</MenuItem>\n          <MenuItem onClick={handleClose2}>Task 3: This is task three</MenuItem>\n          <Divider sx={{ my: 0.5 }} />\n          <MenuItem onClick={handleClose2}>Task 4: This is task four</MenuItem>\n        </Menu>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                className=\"nav-items\"\n                aria-expanded={openSetting2 ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClickOpenFav}\n                sx={{\n                  fontSize: \"2rem\",\n                  color: \"#7a4ebf\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: \"#7a4ebf\",\n                  },\n                }}\n              >\n                <Star />\n              </IconButton>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n        <Dialog\n          open={openFav}\n          onClose={handleCloseFav}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n          <DialogContent>\n            <Favorites />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseFav} autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <List>\n          <ListItemButton>\n            <ListItemIcon>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                className=\"nav-items\"\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                <MenuItem component={Link} to=\"/profile\">\n                  Profile\n                </MenuItem>\n                {/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n              </Menu>\n              <IconButton\n                aria-label=\"more\"\n                id=\"long-button\"\n                aria-controls=\"long-menu\"\n                aria-expanded={openSetting ? \"true\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                sx={{\n                  color: \"#7a4ebf\",\n                }}\n              >\n                <Settings />\n              </IconButton>\n              <Menu\n                id=\"fade-menu\"\n                MenuListProps={{\n                  \"aria-labelledby\": \"fade-button\",\n                }}\n                anchorEl={settingAcnchorEl}\n                open={openSetting}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Account</MenuItem>\n                <MenuItem onClick={handleClose}>Setting</MenuItem>\n                <Divider sx={{ my: 0.5 }} />\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n              </Menu>\n            </ListItemIcon>\n          </ListItemButton>\n        </List>\n      </Drawer>\n\n      <NotificationAdd mr={2} />\n    </Fragment>\n  );\n};\n","/** @format */\n/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { signOut, reset } from \"../../redux/features/authSlice\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { logout } from \"../../actions/auth\";\nimport Chatting from \"../Chat/Chat\";\n\n// styling imports\nimport {\n\tBox,\n\tToolbar,\n\tTypography,\n\tIconButton,\n\tMenu,\n\tMenuItem,\n\tFade,\n\tDivider,\n\tDialog,\n\tDialogTitle,\n\tDialogContent,\n\tDialogContentText,\n\tDialogActions,\n\tButton,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { SecNavbar } from \"../../styles/styles\";\n\nimport {\n\tMessage,\n\tEmailRounded,\n\tCalendarToday,\n\tCheckBox,\n\tPerson,\n\tNotificationAdd,\n\tSettings,\n\tStar,\n\tStarBorder,\n} from \"@mui/icons-material/\";\nimport { useToggle } from \"../../context/useToggle\";\nimport Calender from \"../Dashboard/Calender\";\nimport ViewTasks from \"../Tasks/ViewTasks\";\nimport Favorites from \"../Favorite/Favorites\";\nimport serverTime from \"../../utils/ServerTime\";\n\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { NavBarSecResponsive } from \"./DrawerComp\";\n\nconst NavbarSec = () => {\n\tconst isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n\tconst { user } = useSelector((state) => state.auth.user);\n\n\tconst isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n\tconst isDesktopOrLaptop = useMediaQuery({\n\t\tquery: \"(min-width: 1224px)\",\n\t});\n\tconst isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\tconst isWeekly = useSelector((state) => state.data.isWeekly);\n\n\tconst dispatch = useDispatch();\n\n\tconst [openFav, setOpenFav] = useState(false);\n\n\tconst handleClickOpenFav = () => {\n\t\tsetOpenFav(true);\n\t};\n\n\tconst handleCloseFav = () => {\n\t\tsetOpenFav(false);\n\t};\n\tconst [openTask, setOpenTask] = useState(false);\n\n\tconst handleClickOpenTask = () => {\n\t\tsetOpenTask(true);\n\t};\n\n\tconst handleCloseTask = () => {\n\t\tsetOpenTask(false);\n\t};\n\n\tconst [openCal, setOpenCal] = useState(false);\n\n\tconst handleClickOpenCal = () => {\n\t\tsetOpenCal(true);\n\t};\n\n\tconst handleCloseCal = () => {\n\t\tsetOpenCal(false);\n\t};\n\n\tconst [openChat, setOpenChat] = useState(false);\n\n\tconst handleClickOpenChat = () => {\n\t\tsetOpenChat(true);\n\t};\n\n\tconst handleCloseChat = () => {\n\t\tsetOpenChat(false);\n\t};\n\n\tconst history = useHistory();\n\tconst [isLogout, setIsLogout] = useToggle(false);\n\tconst today = new Date();\n\tconst time = today.toLocaleTimeString();\n\tconst [localuser, setLocalUser] = useState({\n\t\tusername: \"Admin\",\n\t\tis_firm: false,\n\t\tis_lawyer: false,\n\t\tis_client: false,\n\t});\n\n\tuseEffect(() => {\n\t\tif (user) {\n\t\t\tsetLocalUser({\n\t\t\t\tusername: user.username,\n\t\t\t\tis_firm: user.is_firm,\n\t\t\t\tis_lawyer: user.is_lawyer,\n\t\t\t\tis_client: user.is_client,\n\t\t\t});\n\t\t}\n\t}, [user]);\n\tconst [redirect, setRedirect] = useState(false);\n\n\tconst [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\n\n\tconst [settingAcnchorEl2, setSettingAcnchorEl2] = useState(null);\n\n\tconst [anchorEl2, setAnchorEl2] = React.useState(null);\n\n\tconst handleLogout = () => {\n\t\tconsole.log(\"logout button just clicked\");\n\t\tdispatch(signOut());\n\t\tdispatch(reset());\n\t\tsetRedirect(true);\n\t};\n\n\tconst open = Boolean(anchorEl);\n\tconst open2 = Boolean(anchorEl);\n\n\tconst userRoleChecker = () => {\n\t\tswitch (user.username) {\n\t\t\tcase \"admin\":\n\t\t\t\treturn \"Admin\";\n\t\t\tcase \"firm\":\n\t\t\t\treturn \"Firm\";\n\t\t\tcase \"lawyer\":\n\t\t\t\treturn \"Lawyer\";\n\t\t\tdefault:\n\t\t\t\treturn \"Client\";\n\t\t}\n\t};\n\n\tconst openSetting2 = Boolean(settingAcnchorEl2);\n\n\tconst handleClick2 = (event) => {\n\t\tsetSettingAcnchorEl2(event.currentTarget);\n\t};\n\tconst openSetting = Boolean(settingAcnchorEl);\n\tconst handleClose2 = () => {\n\t\tsetSettingAcnchorEl2(null);\n\t};\n\n\tconst handleClick = (event) => {\n\t\tsetSettingAcnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetSettingAcnchorEl(null);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<SecNavbar>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t{isTabletOrMobile ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<NavBarSecResponsive />\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Box component='div' sx={{ flexGrow: 1 }}>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\tonClick={handleClickOpenChat}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"#fff\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<Message />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tValidate\n\t\t\t\t\t\t\t\t\topen={openChat}\n\t\t\t\t\t\t\t\t\tonClose={handleCloseChat}\n\t\t\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\n\t\t\t\t\t\t\t\t\taria-describedby='alert-dialog-description'\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\tright: \"20px\",\n\t\t\t\t\t\t\t\t\t\tbottom: \"150px\",\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>\n\t\t\t\t\t\t\t\t\t\t{\"Chatting Application\"}\n\t\t\t\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t<Chatting />\n\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleCloseChat}>Close</Button>\n\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t</Dialog>\n\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"white\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\t\tpathname:\n\t\t\t\t\t\t\t\t\t\t\t\"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=someone@gmail.com\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ttarget='_blank'>\n\t\t\t\t\t\t\t\t\t<EmailRounded />\n\t\t\t\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tonClick={handleClickOpenCal}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"white\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<CalendarToday />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\t\t\tValidate\n\t\t\t\t\t\t\t\t\topen={openCal}\n\t\t\t\t\t\t\t\t\tmaxWidth='lg'\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tonClose={handleCloseCal}\n\t\t\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\n\t\t\t\t\t\t\t\t\taria-describedby='alert-dialog-description'\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\tright: \"20px\",\n\t\t\t\t\t\t\t\t\t\tbottom: \"150px\",\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>\n\t\t\t\t\t\t\t\t\t\t{\"Calender\"}\n\t\t\t\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t<Calender />\n\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleCloseCal}>Close</Button>\n\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\taria-label='more'\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tid='long-button'\n\t\t\t\t\t\t\t\t\taria-controls='long-menu'\n\t\t\t\t\t\t\t\t\taria-expanded={openSetting2 ? \"true\" : undefined}\n\t\t\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\t\t\tonClick={handleClick2}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"white\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<CheckBox />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\t\tid='fade-menu'\n\t\t\t\t\t\t\t\t\tMenuListProps={{\n\t\t\t\t\t\t\t\t\t\t\"aria-labelledby\": \"fade-button\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\tanchorEl={settingAcnchorEl2}\n\t\t\t\t\t\t\t\t\topen={openSetting2}\n\t\t\t\t\t\t\t\t\tonClose={handleClose2}\n\t\t\t\t\t\t\t\t\tTransitionComponent={Fade}>\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose2}>\n\t\t\t\t\t\t\t\t\t\tTask 1: This is task one\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose2}>\n\t\t\t\t\t\t\t\t\t\tTask 2: This is task two\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose2}>\n\t\t\t\t\t\t\t\t\t\tTask 3: This is task three\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t<Divider sx={{ my: 0.5 }} />\n\t\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose2}>\n\t\t\t\t\t\t\t\t\t\tTask 4: This is task four\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\taria-label='more'\n\t\t\t\t\t\t\t\t\tid='long-button'\n\t\t\t\t\t\t\t\t\taria-controls='long-menu'\n\t\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\t\taria-expanded={openSetting2 ? \"true\" : undefined}\n\t\t\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\t\t\tonClick={handleClickOpenFav}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\"fontSize\": \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\"color\": \"white\",\n\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#7a4ebf\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<Star />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\t\t\topen={openFav}\n\t\t\t\t\t\t\t\t\tonClose={handleCloseFav}\n\t\t\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\n\t\t\t\t\t\t\t\t\taria-describedby='alert-dialog-description'>\n\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>\n\t\t\t\t\t\t\t\t\t\t{\"Favorites\"}\n\t\t\t\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t<Favorites />\n\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleCloseFav} autoFocus>\n\t\t\t\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<NotificationAdd mr={2} />\n\t\t\t\t\t\t\t<Typography component='h5' variant='h6' ml={2} mr={2}>\n\t\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\t\t\taria-controls='basic-menu'\n\t\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\taria-expanded={open ? \"true\" : undefined}\n\t\t\t\t\t\t\t\tonClick={handleClick}>\n\t\t\t\t\t\t\t\t<Person /> {user.username} - ({user.username} )\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\tonClick={handleLogout}>\n\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\tid='basic-menu'\n\t\t\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\t\t\tclassName='nav-items'\n\t\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\t\tMenuListProps={{\n\t\t\t\t\t\t\t\t\t\"aria-labelledby\": \"basic-button\",\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<MenuItem component={Link} to='/profile'>\n\t\t\t\t\t\t\t\t\tProfile\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t{/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\taria-label='more'\n\t\t\t\t\t\t\t\tid='long-button'\n\t\t\t\t\t\t\t\taria-controls='long-menu'\n\t\t\t\t\t\t\t\taria-expanded={openSetting ? \"true\" : undefined}\n\t\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<Settings />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\tid='fade-menu'\n\t\t\t\t\t\t\t\tMenuListProps={{\n\t\t\t\t\t\t\t\t\t\"aria-labelledby\": \"fade-button\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tanchorEl={settingAcnchorEl}\n\t\t\t\t\t\t\t\topen={openSetting}\n\t\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\t\tTransitionComponent={Fade}>\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Profile</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Account</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Setting</MenuItem>\n\t\t\t\t\t\t\t\t<Divider sx={{ my: 0.5 }} />\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleLogout}>Logout</MenuItem>\n\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Toolbar>\n\t\t\t</SecNavbar>\n\n\t\t\t{redirect ? <Redirect to='/' /> : <Fragment></Fragment>}\n\t\t</Fragment>\n\t);\n};\n\nexport default NavbarSec;\n","/** @format */\n\nimport React, { useState, Fragment } from \"react\";\nimport {\n  Box,\n  Accordion,\n  AccordionSummary,\n  Typography,\n  AccordionDetails,\n  Grid,\n} from \"@mui/material\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  Mail,\n  Phone,\n  Group,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  marketingActive,\n  appointmentActive,\n  empOversiteActive,\n  emailsActive,\n  mapActive,\n  callsActive,\n} from \"../../redux/features/sidebarSlice\";\n\nimport \"./style.css\";\n\nconst Controls = () => {\n  return (\n    <Fragment>\n      <Box px={3} sx={{ color: \"#796ef0\" }}>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/\">\n              <Grid item>\n                <AddCircle fontSize=\"medium\" />\n              </Grid>\n              <Grid item>DashBoard</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/invoices\">\n              <Grid item>\n                <Receipt fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Invoices</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/manage-categories\">\n              <Grid item>\n                <FileCopy fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Categories</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/ledgers\">\n              <Grid item>\n                <MoneyOff fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Ledger</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/create-task\">\n              <Grid item>\n                <Task fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Task</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/employee-search\">\n              <Grid item>\n                <Work fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Search</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/matter-dashboard\">\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Matters</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/contact\">\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Contact</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Marketing = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(marketingActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.marketing ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Marketing</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(emailsActive())}>\n          <Grid>\n            <Box sx={sidebar.emails ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Email</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst HumanResources = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageUserActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/users\">\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage User</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageRoleActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/user-roles\">\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Role</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          // onClick={() => dispatch(manageGroupActive())}\n        >\n          <Grid>\n            <Box sx={{ color: \"#796ef0\" }} component={Link} to=\"/user-groups\">\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Group</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst RevenueControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueInActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueIn ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue In</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueOutActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueOut ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue Out</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst AccountControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.newCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Customers</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(lostCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.lostCustomer ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Lost Customer</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newAccountActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.newAccount ? { color: \"#ddd\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Accounts</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(mapActive())}>\n          <Grid>\n            <Box sx={sidebar.map ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Trouble Ticket Map</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\nconst EmployeeOversite = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(empOversiteActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.empOversite ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Oversite</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(callsActive())}>\n          <Grid>\n            <Box sx={sidebar.calls ? { color: \"#ddd\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Phone fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Calls</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(appointmentActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.appointment ? { color: \"#ddd\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Appointments</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const accordionData = [\n  {\n    name: \"Controls\",\n    id: \"controls\",\n    tiles: <Controls />,\n  },\n\n  {\n    name: \"Human Resources\",\n    id: \"human_resource\",\n    tiles: <HumanResources />,\n  },\n  {\n    name: \"Revenue\",\n    id: \"revenue\",\n    tiles: <RevenueControls />,\n  },\n  {\n    name: \"Customers\",\n    id: \"customers\",\n    tiles: <AccountControls />,\n  },\n  {\n    name: \"Marketing\",\n    id: \"marketing\",\n    tiles: <Marketing />,\n  },\n  {\n    name: \"Employee Oversite\",\n    id: \"empOversite\",\n    tiles: <EmployeeOversite />,\n  },\n];\n\nconst TestingSidebar = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n\n  const [accordions, updateAccordions] = useState(accordionData);\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n\n    const items = Array.from(accordions);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    updateAccordions(items);\n  }\n\n  return (\n    <Fragment>\n      <Box mt={5}>\n        <DragDropContext onDragEnd={handleOnDragEnd}>\n          <Droppable droppableId=\"accordions\">\n            {(provided) => (\n              <Box\n                className=\"accordions\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {accordions.map((item, index) => {\n                  return (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <Accordion\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          <AccordionSummary\n                            expandIcon={<ExpandMoreIcon color=\"primary\" />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                          >\n                            <Typography\n                              align=\"center\"\n                              color=\"primary\"\n                              sx={{ textTransform: \"uppercase\" }}\n                            >\n                              {item.name}\n                            </Typography>\n                          </AccordionSummary>\n                          <AccordionDetails>{item.tiles}</AccordionDetails>\n                        </Accordion>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </Box>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TestingSidebar;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  Box,\n  Paper,\n  Link,\n  Grid,\n  Container,\n  Stack,\n} from \"@mui/material\";\n\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\n\nimport { useToggle } from \"../../context/useToggle\";\nimport AdminSidebar from \"./AdminSidebar\";\nimport LawyerSidebar from \"./LawyerSidebar\";\nimport FirmSidebar from \"./FirmSidebar\";\nimport CustomerSidebar from \"./CutomerSidebar\";\nimport \"./style.css\";\nimport TestingSidebar from \"./TestingSidebar\";\n\nconst Sidebar = ({ user }) => {\n  const [controlToggle, setControlToggle] = useToggle(true);\n\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: true,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const SidebarRedirect = () => {\n    switch (user.username) {\n      case \"admin\":\n        return <AdminSidebar />;\n      case \"firm\":\n        return <FirmSidebar />;\n      case \"lawyer\":\n        return <LawyerSidebar />;\n      default:\n        return <CustomerSidebar />;\n    }\n  };\n\n  // const [state, dispatch] = useContext(UserContext);\n  return (\n    <Fragment>\n      <Paper component={Stack} elevation={3} spacing={1}>\n        <Box\n          sx={{\n            height: \"calc(83vh - 40px)\",\n            overflowY: \"scroll\",\n          }}\n        >\n          {/* {SidebarRedirect()} */}\n          <TestingSidebar />\n        </Box>\n        {/* <Box p={2}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"error\"\n            style={{\n              padding: \"1rem\",\n              \"&:hover\": {\n                color: \"#fff\",\n              },\n            }}\n          >\n            Report\n          </Button>\n        </Box> */}\n      </Paper>\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Sidebar);\n\n// export default Sidebar;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  BottomNavigation,\n  BottomNavigationAction,\n  Link,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@mui/material\";\nimport { FooterBar, FooterLink, FooterButton } from \"../../styles/styles\";\nimport {\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport Favorites from \"../Favorite/Favorites\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst Footer = () => {\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <Box mt={3}>\n        {isTabletOrMobile ? (\n          <Box sx={{ color: \"#eee\", backgroundColor: \"#7a4ebf\" }}>\n            <List>\n              <FooterLink to={\"/ledgers\"}>Accounting</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}> Calendar</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}>Contacts</FooterLink>\n            </List>\n            <List>\n              <FooterButton\n                sx={{\n                  color: \"#eee\",\n                  marginLeft: \"1.2rem\",\n                  textTransform: \"uppercase\",\n                  textDecoration: \"none\",\n                  \"&:visited\": {\n                    color: \"#eee\",\n                  },\n                }}\n                variant=\"text\"\n                onClick={handleClickOpen}\n              >\n                Favorites\n              </FooterButton>\n            </List>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n              <DialogContent>\n                <Favorites />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} autoFocus>\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n            <List>\n              <FooterLink to={\"/matters\"}>Matters</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/tasks\"}>Tasks</FooterLink>\n            </List>\n            <List>\n              <FooterLink to={\"/\"}>Workflow</FooterLink>\n            </List>\n          </Box>\n        ) : (\n          <FooterBar>\n            <FooterLink to={\"/ledgers\"}>Accounting</FooterLink> |\n            <FooterLink to={\"/\"}> Calendar</FooterLink> |\n            <FooterLink to={\"/\"}>Contacts</FooterLink> |\n            <FooterButton\n              sx={{\n                color: \"#eee\",\n                textTransform: \"uppercase\",\n                textDecoration: \"none\",\n                \"&:visited\": {\n                  color: \"#eee\",\n                },\n              }}\n              variant=\"text\"\n              onClick={handleClickOpen}\n            >\n              Favorites\n            </FooterButton>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n              <DialogContent>\n                <Favorites />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} autoFocus>\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n            |<FooterLink to={\"/matters\"}>Matters</FooterLink> |\n            <FooterLink to={\"/tasks\"}>Tasks</FooterLink> |\n            <FooterLink to={\"/\"}>Workflow</FooterLink>\n          </FooterBar>\n        )}\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Footer;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Navbar from \"../components/Navbars/Navbar\";\nimport NavbarSec from \"../components/Navbars/NavbarSec\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport { connect } from \"react-redux\";\nimport Chatting from \"../components/Chat/Chat\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  isDisplay,\n  hideSidebar,\n  showSidebar,\n} from \"../redux/features/sidebarSlice\";\n\nimport { Paper, Fab, Popover } from \"@mui/material\";\nimport { Grid, Box, Button } from \"@mui/material\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { Chat, Report } from \"@mui/icons-material\";\n\nimport Footer from \"../components/Footer/Footer\";\n\nconst InnerLayout = ({ children }) => {\n  const { user, isAuthenticated} = useSelector(\n    (state) => state.auth\n  )\n\n  const theme = useTheme();\n\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  const sidebarToggle = useSelector((state) => state.sidebar.display);\n  const dispatch = useDispatch();\n\n  const [drawerOpen, setDrawerOpen] = React.useState(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setDrawerOpen(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setDrawerOpen(null);\n  };\n\n  const openPopover = Boolean(drawerOpen);\n  const id = openPopover ? \"simple-popover\" : undefined;\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleSidebarToggle = () => {\n    if (sidebarToggle) {\n      dispatch(hideSidebar());\n    } else {\n      dispatch(showSidebar());\n    }\n  };\n  const descriptionElementRef = React.useRef(null);\n\n  useEffect(() => {\n    if (isBigScreen) {\n      dispatch(showSidebar());\n    } else if (isTabletOrMobile) {\n      dispatch(hideSidebar());\n    }\n  }, []);\n  useEffect(() => {\n    if (drawerOpen) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [drawerOpen]);\n\n  return (\n    <Paper style={{ margin: \"0\" }}>\n      <Grid contianer rowSpacing={2} columnSpacing={2}>\n        <Grid item lg={12} md={12}>\n          {isAuthenticated ? (\n            <Fragment>\n              <NavbarSec />\n            </Fragment>\n          ) : (\n            <Navbar />\n          )}\n        </Grid>\n\n        {isAuthenticated ? (\n          <Fragment>\n            <Grid item lg={12}>\n              <Navbar />\n            </Grid>\n            <Grid container direction=\"row\" wrap=\"nowrap\">\n              {sidebarToggle ? (\n                <Fragment>\n                  <Grid item lg={2} xs={12} m={3}>\n                    <Sidebar />\n                  </Grid>\n                  <Grid item lg={10} xs={12} p={1}>\n                    <Box>\n                      <Button\n                        onClick={handleSidebarToggle}\n                        p={5}\n                        sx={{\n                          left: \"-8rem\",\n                          top: \"2rem\",\n                        }}\n                      >\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <Grid item lg={12} xs={12} p={1}>\n                    <Box>\n                      <Button onClick={handleSidebarToggle}>\n                        {sidebarToggle ? (\n                          <i className=\"fas fa-angle-double-left\"></i>\n                        ) : (\n                          <i className=\"fas fa-angle-double-right\"></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              )}\n            </Grid>\n            <Grid item lg={12}>\n              <Footer />\n            </Grid>\n          </Fragment>\n        ) : (\n          <Grid item lg={12} xs={12}>\n            {children}\n          </Grid>\n        )}\n        {isAuthenticated? \n        <>\n        <Fab\n          size=\"large\"\n          sx={\n            isDesktopOrLaptop\n              ? {\n                  borderRadius: \"50%\",\n                  backgroundColor: \"#edb4b6\",\n                  position: \"fixed\",\n                  bottom: \"16px\",\n                  left: \"16px\",\n                  color: \"red\",\n                  zIndex: \"200\",\n                  \"&:hover\": {\n                    color: \"red\",\n                  },\n                }\n              : { display: \"none\" }\n          }\n          aria-label=\"report\"\n        >\n          <Report />\n        </Fab>\n        <Fab\n          size=\"large\"\n          onClick={handlePopoverOpen}\n          sx={\n            isDesktopOrLaptop\n              ? {\n                  borderRadius: \"50%\",\n                  backgroundColor: \"#eee\",\n                  position: \"fixed\",\n                  bottom: \"16px\",\n                  right: \"16px\",\n                  color: \"#461594\",\n                  zIndex: \"200\",\n                  \"&:hover\": {\n                    color: \"#7a4ebf\",\n                  },\n                }\n              : { display: \"none\" }\n          }\n          aria-label=\"chat\"\n        >\n          <Chat />\n        </Fab>\n        <Popover\n          open={openPopover}\n          anchorEl={drawerOpen}\n          onClose={handlePopoverClose}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          sx={{ margin: \"-2rem\" }}\n        >\n          <Chatting />\n        </Popover>\n        </>\n        : null}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default InnerLayout;\n","/** @format */\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst PrivateRoutes = ({ children, ...rest }) => {\n\tconst { isAuthenticated } = useSelector((state) => state.auth);\n\n\treturn (\n\t\t<Route {...rest}>\n\t\t\t{isAuthenticated ? children : <Redirect to='/login' />}\n\t\t</Route>\n\t);\n};\n\nexport default PrivateRoutes;\n","/** @format */\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'toggle_button':\n      return {\n        ...state,\n        active: !state.active,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initialState = {\n  active: false,\n};\n","/** @format */\n\nimport React from 'react';\nimport { reducer, initialState } from './reducer';\n\nexport const UserContext = React.createContext({\n  state: initialState,\n  dispatch: () => null,\n});\n\nexport const UserProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <UserContext.Provider value={[state, dispatch]}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","/** @format */\n\n// import styled from \"styled-components\";\nimport { createTheme } from \"@mui/material/styles\";\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    mode: \"light\",\n    primary: {\n      main: \"#796ef0\", //blueish purple\n    },\n    // secondary: {\n    //   main: \"\",\n    // },\n    error: {\n      main: \"#e85355\", //red\n    },\n    warning: {\n      main: \"#fd9905\", // orange\n    },\n    success: {\n      main: \"#28c570\", //green\n    },\n\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n  typography: {\n    htmlFontSize: 14,\n    fontSize: 12,\n    color: \"#333\",\n  },\n});\n\nexport default theme;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport \"./DashboardLayout/style.css\";\n\nimport DashboardContent from \"./DashboardLayout/DashboardContent\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <DashboardContent />\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\nimport { Button, Stack, IconButton } from \"@mui/material\";\nimport styles from \"./tabs.module.css\";\n\nconst Tabs = ({ children }) => {\n  const [activeTab, setActiveTab] = useState(children[0].props.label);\n  const handleClick = (e, newActiveTab) => {\n    e.preventDefault();\n    setActiveTab(newActiveTab);\n  };\n  return (\n    <Fragment>\n      <Stack direction=\"row\" spacing={1}>\n        <ul className={styles.tabs}>\n          {children.map((tab) => (\n            <li\n              className={tab.props.label === activeTab ? styles.current : \"\"}\n              key={tab.props.label}\n            >\n              <Button\n                variant=\"text\"\n                size=\"small\"\n                startIcon={<MoreVert />}\n                onClick={(e) => handleClick(e, tab.props.label)}\n              >\n                {tab.props.label}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      </Stack>\n\n      {children.map((one) =>\n        one.props.label === activeTab ? (\n          <div className={styles.content} key={one.props.label}>\n            {one.props.children}\n          </div>\n        ) : (\n          \"\"\n        ),\n      )}\n    </Fragment>\n  );\n};\n\nexport default Tabs;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  FormControlLabel,\n  Switch,\n  Button,\n  Stack,\n} from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst CreateInvoice = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    matter: \"\",\n    contact: \"\",\n    billable: false,\n    date_range: \"\",\n    create_date: \"\",\n    due_date: \"\",\n    template: \"\",\n    invoice_no: \"\",\n    discount: \"\",\n    submit: false,\n  });\n\n  // const {\n  //   matter,\n  //   contact,\n  //   billable,\n  //   date_range,\n  //   create_date,\n  //   due_date,\n  //   template,\n  //   invoice_no,\n  //   discount,\n  //   submit,\n  // } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  const [invoice, setInvoice] = useState(null);\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoice`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  const [dateRange, setDateRange] = React.useState([null, null]);\n  return (\n    <Fragment>\n      {/* <Typography component=\"h3\" variant=\"h4\">\n        Create New Invoice\n      </Typography>\n      <Box p={3}>\n        <LinkButton to=\"/invoices\" sx={{ float: \"right\" }}>\n          Invoice Dashboard\n        </LinkButton>\n      </Box> */}\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Grid\n          spacing={3}\n          container\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"Matter\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n              autoComplete=\"matter\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"Contact\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              autoComplete=\"contact\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <FormControlLabel\n              sx={{ fontSize: \"12px\", marginLeft: \"1rem\" }}\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Unbillable\"\n            />\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Stack direction=\"row\">\n              <Typography varient=\"caption\" sx={{ marginTop: \"0.7rem\" }}>\n                Range:\n              </Typography>\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateRangePicker\n                  calendars={1}\n                  value={dateRange}\n                  onChange={(newValue) => {\n                    setDateRange(newValue);\n                  }}\n                  renderInput={(startProps, endProps) => (\n                    <Fragment>\n                      <TextField size=\"small\" {...startProps} />\n                      <Box sx={{ mx: 2 }}> to </Box>\n                      <TextField size=\"small\" {...endProps} />\n                    </Fragment>\n                  )}\n                />\n              </LocalizationProvider>\n            </Stack>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          spacing={3}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"create_date\"\n              label=\"Create Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"due_date\"\n              label=\"Due Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"template\"\n              label=\"Template\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"template\"\n              autoComplete=\"template\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"invoice_no\"\n              label=\"Invoice #\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"invoice_no\"\n              autoComplete=\"invoice_no\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"discount\"\n              label=\"Discount\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"discount\"\n              autoComplete=\"discount\"\n            />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <FormControlLabel\n              label=\"Submit For Approvel\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n            />\n          </Grid>\n        </Grid>\n\n        <Grid item lg={12} mt={2}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Sub-Category</TableCell>\n                  <TableCell>Description</TableCell>\n                  <TableCell>Date</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Rate</TableCell>\n                  <TableCell>Sub</TableCell>\n                  <TableCell>Tax</TableCell>\n                  <TableCell>int</TableCell>\n                  <TableCell>Disc.</TableCell>\n                  <TableCell>Total</TableCell>\n                  <TableCell>Biller</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                {/* {invoice?.map((invoice) => (\n                  <TableRow id={invoice.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n\n                    <TableCell>{invoice.sub_cat}</TableCell>\n                    <TableCell>{invoice.discription}</TableCell>\n                    <TableCell>{invoice.date}</TableCell>\n                    <TableCell>{invoice.hours}</TableCell>\n                    <TableCell>{invoice.rate}</TableCell>\n                    <TableCell>{invoice.sub}</TableCell>\n                    <TableCell>{invoice.tax}</TableCell>\n                    <TableCell>{invoice.int}</TableCell>\n                    <TableCell>{invoice.dics}</TableCell>\n                    <TableCell>{invoice.total}</TableCell>\n                    <TableCell>{invoice.biller}</TableCell>\n                  </TableRow>\n                ))} */}\n              </TableHead>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item mt={3} direction=\"row\">\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Notes\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"Accept Online Payment\"\n              />\n            }\n            label=\"Accept Online Payment\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Accept Payments for Less\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (Compound / Simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Terms and Conditions\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (compund/ simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Use Trust Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add all unpaid invoices\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"use Operating Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Send Reminders Every\"\n          />\n          <TextField size=\"small\" sx={{ width: \"5rem\" }} />\n          <Typography\n            varient=\"caption\"\n            component=\"span\"\n            sx={{ marginLeft: \"0.5rem \" }}\n          >\n            day(s)/week(s)\n          </Typography>\n\n          {/* <Button\n            variant=\"contained\"\n            sx={{ float: \"right\" }}\n            endIcon={<SaveIcon />}\n          >\n            Send\n          </Button> */}\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateInvoice;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Grid,\n  Box,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormControl,\n  Checkbox,\n  Typography,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  MenuItem,\n  InputLabel,\n  Select,\n  Button,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst PaymentPlan = () => {\n  const [paymentData, setPaymentData] = useState({\n    payment_no: \"File# - 001\",\n    due: \"2020/07/01\",\n    amount: \"$ 750.00\",\n    late_fee: \"$22.00\",\n    total_due: \"$ 775.00\",\n    payment: \"$775.00\",\n    posted: \"$2020/07/05\",\n    method: \"Check\",\n  });\n\n  return (\n    <Fragment>\n      <Grid container mt={3} mb={3}>\n        <Grid item lg={4}>\n          <Typography>Start Balance:</Typography>\n          <Typography>Start Date:</Typography>\n          <Typography>Interest Rate:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Amout:</Typography>\n          <Typography>Payment Date:</Typography>\n          <Typography>No Payments:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Remaining:</Typography>\n          <Typography>Last Payment:</Typography>\n          <Typography>Last Payment $:</Typography>\n        </Grid>\n      </Grid>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Payment #</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Amout</TableCell>\n            <TableCell>Late Fee</TableCell>\n            <TableCell>Total Due</TableCell>\n            <TableCell>Payment</TableCell>\n            <TableCell>Posted</TableCell>\n            <TableCell>Method</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{paymentData.payment_no}</TableCell>\n          <TableCell>{paymentData.due}</TableCell>\n          <TableCell>{paymentData.amount} </TableCell>\n          <TableCell>{paymentData.late_fee}</TableCell>\n          <TableCell>{paymentData.total_due}</TableCell>\n          <TableCell>{paymentData.payment}</TableCell>\n          <TableCell>{paymentData.posted}</TableCell>\n          <TableCell>{paymentData.method}</TableCell>\n        </TableBody>\n      </Table>\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Close\n      </Button>\n      <Grid container>\n        <Grid item lg={6}>\n          <Typography>Post agreement Balance:</Typography>\n        </Grid>\n        <Grid item lg={6}>\n          <Typography>Start Date:</Typography>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst InvoicePayment = () => {\n  const [invoiceData, setInvoiceData] = useState({\n    invoice_no: \"i-2106-0004542\",\n    due: \"2020/07/01\",\n    tax: \"$ 15.00\",\n    interest: \"$2.35\",\n    time: \"$ 1,234.50\",\n    hard: \"$457.00\",\n    soft: \"$45.00\",\n    total: \"$ 1,753.85\",\n  });\n\n  return (\n    <Fragment>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Invoice</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Tax</TableCell>\n            <TableCell>Interest</TableCell>\n            <TableCell>Time</TableCell>\n            <TableCell>Hard</TableCell>\n            <TableCell>Soft</TableCell>\n            <TableCell>Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{invoiceData.invoice_no}</TableCell>\n          <TableCell>{invoiceData.due}</TableCell>\n          <TableCell>{invoiceData.tax} </TableCell>\n          <TableCell>{invoiceData.interest}</TableCell>\n          <TableCell>{invoiceData.time}</TableCell>\n          <TableCell>{invoiceData.hard}</TableCell>\n          <TableCell>{invoiceData.soft}</TableCell>\n          <TableCell>{invoiceData.total}</TableCell>\n        </TableBody>\n      </Table>{\" \"}\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Pay\n      </Button>{\" \"}\n    </Fragment>\n  );\n};\n\nconst Payment = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [isPlan, setIsPlan] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    payment_type: \"\",\n    date: \"\",\n    retainer: \"\",\n    payment: \"\",\n    date_range: \"\",\n    menu: \"\",\n    bank_account: \"\",\n    payment_method: \"\",\n  });\n\n  const {\n    payment_type,\n    date,\n    retainer,\n    payment,\n    date_range,\n    menu,\n    bank_account,\n    payment_method,\n  } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{\n              \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n            }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"payment_type\"\n                defaultValue=\"cash\"\n                name=\"payment_type\"\n                onChange={(e) => onChange(e)}\n                id=\"payment_type\"\n                autoComplete=\"payment_type\"\n              >\n                <FormControlLabel\n                  value=\"cash\"\n                  control={<Radio />}\n                  label=\"Cash\"\n                />\n                <FormControlLabel value=\"cc\" control={<Radio />} label=\"CC\" />\n                <FormControlLabel\n                  value=\"wire\"\n                  control={<Radio />}\n                  label=\"Wire\"\n                />\n                <FormControlLabel\n                  value=\"check\"\n                  control={<Radio />}\n                  label=\"Check\"\n                />\n              </RadioGroup>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              id=\"date\"\n              label=\"date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <FormControlLabel\n              value=\"retainer\"\n              control={<Checkbox />}\n              label=\"Retainer\"\n            />\n            <FormControlLabel\n              value=\"payment\"\n              control={<Checkbox />}\n              label=\"Payment\"\n            />\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n              <DateRangePicker\n                calendars={1}\n                value={dateRange}\n                onChange={(newValue) => {\n                  setDateRange(newValue);\n                }}\n                renderInput={(startProps, endProps) => (\n                  <Fragment>\n                    <TextField size=\"small\" {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField size=\"small\" {...endProps} />\n                  </Fragment>\n                )}\n              />\n            </LocalizationProvider> */}\n            <FormControl sx={{ width: \"12rem\" }}>\n              <InputLabel id=\"demo-simple-select-label\">Date Range</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={date_range}\n                label=\"Age\"\n                onChange={(e) => onChange(e)}\n              >\n                <MenuItem value={10}>Ten</MenuItem>\n                <MenuItem value={20}>Twenty</MenuItem>\n                <MenuItem value={30}>Thirty</MenuItem>\n              </Select>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"menu\"\n              label=\"menu\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"menu\"\n              autoComplete=\"menu\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bank_account\"\n              label=\"bank_account\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"bank_account\"\n              autoComplete=\"bank_account\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"payment_method\"\n              label=\"payment_method\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"payment_method\"\n              autoComplete=\"payment_method\"\n            />\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"isPlan\"\n                defaultValue={isPlan}\n                name=\"isPlan\"\n                onChange={(e) => setIsPlan(e)}\n                id=\"isPlan\"\n                autoComplete=\"isPlan\"\n              >\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Invoice Payment\"\n                />\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Payment Plan\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Box>\n        </Grid>\n        <Grid item lg={12}>\n          <TableContainer>\n            {isPlan ? <PaymentPlan /> : <InvoicePayment />}\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Payment;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  FormControlLabel,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  Button,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport { styled } from \"@mui/material/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\nimport CreateInvoice from \"./CreateInvoice\";\nimport Payment from \"./Payment\";\n\nconst Filters = () => {\n  const [invoiceToggle, setInvoiceToggle] = useToggle(false);\n  const [paymentToggle, setPaymentToggle] = useToggle(false);\n  const [paid, setPaid] = useToggle(false);\n\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid\n          spacing={2}\n          item\n          lg={12}\n          direction=\"Row\"\n          sx={{\n            \"& .MuiTextField-root\": { m: 1 },\n            \"& .MuiFormControl-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            onClick={() => setInvoiceToggle(invoiceToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Create Invoice\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={invoiceToggle}\n            onClose={() => setInvoiceToggle(invoiceToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {\"Create Invoice\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <CreateInvoice />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <Button\n            variant=\"contained\"\n            onClick={() => setPaymentToggle(paymentToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Receive Money\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={paymentToggle}\n            onClose={() => setPaymentToggle(paymentToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Receive Money\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <Payment />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <FormControlLabel\n            label=\" Paid/ Unpaid\"\n            control={<Switch checked={paid} onChange={() => setPaid(paid)} />}\n          />\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Invoice</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Bill Date</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Times</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <Typography\n            component=\"span\"\n            variant=\"caption\"\n            sx={{ width: \"8rem\", m: 2, fontSize: \"1.2rem\" }}\n          >\n            Status:\n          </Typography>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Any </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Dropd-own</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n} from \"@mui/material\";\nimport Filters from \"./Filters\";\n\nconst InvoiceList = () => {\n  const [invoice, setInvoice] = useState(null);\n\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoices`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  return (\n    <Fragment>\n      <Filters />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Invoice</TableCell>\n              <TableCell>Created</TableCell>\n              <TableCell>Due</TableCell>\n              <TableCell>Tax</TableCell>\n              <TableCell>Interest</TableCell>\n              <TableCell>Discount</TableCell>\n              <TableCell>Total</TableCell>\n              <TableCell>Balance</TableCell>\n              <TableCell>Last Payment</TableCell>\n              <TableCell>Approval Date</TableCell>\n              <TableCell>Approval by</TableCell>\n              <TableCell>Created by</TableCell>\n            </TableRow>\n            {/* {invoice?.map((invoice) => (\n              <TableRow id={invoice.id}>\n                <TableCell>\n                  <Checkbox />\n                </TableCell>\n                <TableCell>{invoice.id}</TableCell>\n                <TableCell>{invoice.created}</TableCell>\n                <TableCell>{invoice.due}</TableCell>\n                <TableCell>{invoice.tax}</TableCell>\n                <TableCell>{invoice.interest}</TableCell>\n                <TableCell>{invoice.discount}</TableCell>\n                <TableCell>{invoice.total}</TableCell>\n                <TableCell>{invoice.balance}</TableCell>\n                <TableCell>{invoice.last_payment}</TableCell>\n                <TableCell>{invoice.approvel_date}</TableCell>\n                <TableCell>{invoice.approvel.by}</TableCell>\n                <TableCell>{invoice.created_by}</TableCell>\n              </TableRow>\n            ))} */}\n          </TableHead>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default InvoiceList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport InvoiceList from \"./InvoiceList\";\nimport Payment from \"./Payment\";\nimport CreateInvoice from \"./CreateInvoice\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <InvoiceList />\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React from \"react\";\nimport { Alert } from \"@mui/material\";\n\nexport const ActionAlerts = (status) => {\n  return <Alert severity=\"error\">{status}</Alert>;\n};\n\nexport const TotalDays = (date1, date2) => {\n  let dt1 = new Date(date1);\n  let dt2 = new Date(date2);\n  return Math.floor(\n    (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) -\n      Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) /\n      (1000 * 60 * 60 * 24),\n  );\n};\n\nexport const GetDate = (date) => {\n  let newDate =\n    date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n  return newDate;\n};\n\nexport const GetTime = (time) => {\n  let newTime =\n    time.getHours() + \":\" + time.getMinutes() + \":\" + time.getSeconds();\n  return newTime;\n};\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Box,\n  containerClasses,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\n\nconst MatterList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const [redTask, setRedTask] = useState(false);\n  const [greenTask, setGreenTask] = useState(false);\n  const [yellowTask, setYellowTask] = useState(false);\n  const [myTask, setMyTask] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/tasks/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTasks(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Box component={Paper} p={2}>\n      <FormGroup aria-label=\"position\" row>\n        <FormControlLabel\n          control={\n            <Checkbox value={myTask} onChange={() => setMyTask(!myTask)} />\n          }\n          label=\"My Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox value={redTask} onChange={() => setRedTask(!redTask)} />\n          }\n          label=\"Red Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={greenTask}\n              onChange={() => setGreenTask(!greenTask)}\n            />\n          }\n          label=\"Green Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={yellowTask}\n              onChange={() => setYellowTask(!yellowTask)}\n            />\n          }\n          label=\"Yellow Tasks\"\n        />\n      </FormGroup>\n      <Typography component=\"h3\">All Matters Task's List</Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assign To</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : tasks?.map((data) => {\n                  return (\n                    <TableRow id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        {data.task_nature === \"urgent\" ? (\n                          <CircleIcon color=\"error\" />\n                        ) : (\n                          <CircleIcon color=\"success\" />\n                        )}\n                      </TableCell>\n                      <TableCell>{data.matter}</TableCell>\n                      <TableCell>\n                        {data.last_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>\n                        {data.next_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default MatterList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, CardContent, Typography } from \"@mui/material\";\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Tasks cleared Last day\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Goal Today\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Personal Best\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Company Record\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Link, Typography, List, ListItem, Paper } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nconst Calendar = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography variant=\"h6\" component=\"h7\">\n          My Calendar at a Glance\n        </Typography>\n        <List>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Start motion for trail</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Calendar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  Typography,\n} from \"@mui/material\";\n\nconst Filters = () => {\n  // const [user, setUser] = useState(\"Any user\");\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item>\n          <Typography>Assign To</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Organized By</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Status</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, Button, Typography } from \"@mui/material\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst MatterCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2} mt={1.5}>\n        <Grid item lg={9}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"error.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Urgent\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"warning.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Concern\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"success.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Start\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"white\",\n                  color: \"black\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      New\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3}>\n          <Button\n            variant=\"outlined\"\n            sx={{\n              minWidth: 100,\n              height: 40,\n              borderRadius: \"0.5rem\",\n              bgcolor: \"white\",\n              color: \"black\",\n            }}\n          >\n            Import\n          </Button>\n          <LinkButton to=\"/create-matter\"> + New </LinkButton>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterCards;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  TableBody,\n} from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst MatterListLong = () => {\n  const [matters, setMatters] = useState([]);\n\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/new-matter/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setMatters(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Matter Contact</TableCell>\n              <TableCell>Matter Type</TableCell>\n              <TableCell>Bill Rate</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assigned to</TableCell>\n              <TableCell>Billable</TableCell>\n              <TableCell>Open Invoice</TableCell>\n              <TableCell>Trust Account</TableCell>\n              <TableCell>Last Payment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : matters?.map((data, index) => {\n                  return (\n                    <TableRow id={index}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        <CircleIcon color=\"error\" />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n                      <TableCell>{data.contact}</TableCell>\n                      <TableCell>{data.matter_type}</TableCell>\n                      <TableCell>{data.billing_rate}</TableCell>\n                      <TableCell>{data.open_date}</TableCell>\n                      <TableCell>{data.close_date}</TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 100)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {\" \"}\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />{\" \"}\n                        - {data.close_date}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default MatterListLong;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Button, Typography } from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\n\nimport { LocalizationProvider, DateRangePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { CreateMatter, CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, TotalDays, GetDate } from \"../../utils/ActionAlerts\";\n\nconst NewMatter = () => {\n  // const matter_number = Math.floor(Math.random() * 10000000);\n  const mask = \"____-__-__\";\n  const matter_number = 23568;\n  const [openDate, setOpenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [whenDate, setWhenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [closeDate, setCloseDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [totalDays, setTotalDays] = useState(0);\n  const [matterData, setMatterData] = useState({\n    contact: 0,\n    matter_name: \"\",\n    matter_type: \"\",\n    matter_source: \"\",\n    matter_status: \"\",\n    assign_to: 0,\n    assign_by: 0,\n    billing_rate: 0,\n    alerts: \"\",\n\n    jurisdiction: \"\",\n    status_limitaion: null,\n    opposing_counsel: \"\",\n    where: \"\",\n    involved: \"\",\n    witnesses: \"\",\n    narrative: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    involved,\n    witnesses,\n    narrative,\n  } = matterData;\n\n  const onChange = (e) =>\n    setMatterData({ ...matterData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let open_date = GetDate(openDate);\n    let close_date = GetDate(closeDate);\n    let when = GetDate(whenDate);\n    let total_days = totalDays;\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      matter_type,\n      matter_source,\n      matter_status,\n      assign_to,\n      assign_by,\n      billing_rate,\n      alerts,\n      open_date,\n      close_date,\n      total_days,\n      jurisdiction,\n      status_limitaion,\n      opposing_counsel,\n      where,\n      when,\n      involved,\n      witnesses,\n      narrative,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  useEffect(() => {\n    let days = TotalDays(openDate, closeDate);\n    setTotalDays(days);\n  }, [openDate, closeDate]);\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Matter\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item lg={8}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"contact\"\n              type=\"number\"\n              min=\"0\"\n              value={contact}\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_number\"\n              label=\"matter_number\"\n              type=\"text\"\n              value={matter_number}\n              // onChange={(e) => onChange(e)}\n              id=\"matter_number\"\n              disabled\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_name\"\n              label=\"matter_name\"\n              type=\"text\"\n              value={matter_name}\n              onChange={(e) => onChange(e)}\n              id=\"matter_name\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"alerts\"\n              label=\"alerts\"\n              type=\"text\"\n              value={alerts}\n              onChange={(e) => onChange(e)}\n              id=\"alerts\"\n              autoComplete=\"alerts\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_type\"\n              label=\"matter_type\"\n              type=\"text\"\n              value={matter_type}\n              onChange={(e) => onChange(e)}\n              id=\"matter_type\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_source\"\n              label=\"matter_source\"\n              type=\"text\"\n              value={matter_source}\n              onChange={(e) => onChange(e)}\n              id=\"matter_source\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_status\"\n              label=\"matter_status\"\n              type=\"text\"\n              value={matter_status}\n              onChange={(e) => onChange(e)}\n              id=\"matter_status\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"assign_to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_rate\"\n              label=\"billing_rate\"\n              step=\"0.01\"\n              type=\"number\"\n              value={billing_rate}\n              onChange={(e) => onChange(e)}\n              id=\"billing_rate\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Open Date\"\n                value={openDate}\n                name=\"open\"\n                id=\"open\"\n                onChange={(e) => setOpenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Close Date\"\n                value={closeDate}\n                name=\"closed\"\n                id=\"closed\"\n                onChange={(e) => setCloseDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"total_days\"\n              label=\"total_days\"\n              type=\"number\"\n              value={totalDays}\n              onChange={(e) => setTotalDays(TotalDays(openDate, closeDate))}\n              id=\"total_days\"\n              disabled\n            />\n          </Grid>\n\n          <Grid item lg={4}>\n            <br />\n            <Typography component=\"h5\" variant=\"h6\">\n              Legal Concerns\n            </Typography>\n            <br />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"jurisdiction\"\n              label=\"jurisdiction\"\n              type=\"text\"\n              value={jurisdiction}\n              onChange={(e) => onChange(e)}\n              id=\"jurisdiction\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"status_limitaion\"\n              label=\"status_limitaion\"\n              type=\"text\"\n              value={status_limitaion}\n              onChange={(e) => onChange(e)}\n              id=\"status_limitaion\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"opposing_counsel\"\n              label=\"opposing_counsel\"\n              type=\"text\"\n              value={opposing_counsel}\n              onChange={(e) => onChange(e)}\n              id=\"opposing_counsel\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <Typography component=\"h5\" variant=\"h6\" sx={{ fontSize: \"1rem\" }}>\n              Event Detail\n            </Typography>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"where\"\n              label=\"where\"\n              type=\"text\"\n              value={where}\n              onChange={(e) => onChange(e)}\n              id=\"where\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"When\"\n                value={whenDate}\n                name=\"when\"\n                id=\"when\"\n                onChange={(e) => setWhenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"involved\"\n              label=\"Who was involved\"\n              type=\"text\"\n              value={involved}\n              onChange={(e) => onChange(e)}\n              id=\"involved\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"witnesses\"\n              label=\"witnesses\"\n              type=\"text\"\n              value={witnesses}\n              onChange={(e) => onChange(e)}\n              id=\"witnesses\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              label=\"Customer Narrative of the Event\"\n              multiline\n              type=\"text\"\n              rows={10}\n              value={narrative}\n              onChange={(e) => onChange(e)}\n              defaultValue=\"Narrative\"\n              name=\"narrative\"\n              id=\"narrative\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewMatter;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { styled } from \"@mui/material/styles\";\n\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  CardContent,\n  Typography,\n  Card,\n  Grid,\n  Box,\n  List,\n  ListItem,\n  Paper,\n  InputBase,\n} from \"@mui/material\";\n\nconst MatterTask = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components=\"p\">\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components=\"p\">\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components=\"p\">YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Activities = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components={Typography}>\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components={Typography}>\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components={Typography}>YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Classification\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                % time spent\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Matter Completion\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst MatterDetail = () => {\n  const Search = styled(\"div\")(({ theme }) => ({\n    position: \"relative\",\n    borderRadius: \"1.5rem\",\n    backgroundColor: \"#eee\",\n    \"&:hover\": {\n      backgroundColor: \"#ddd\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"40%\",\n  }));\n\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }));\n\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: \"inherit\",\n    \"& .MuiInputBase-input\": {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"md\")]: {\n        width: \"20ch\",\n      },\n    },\n  }));\n  // const [matters, setMatters] = useState(null);\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n        </Grid>\n        <Grid item lg={12}>\n          <Grid container spacing={2}>\n            <Grid item mt={2} lg={7}>\n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Recent Document</TableCell>\n                      <TableCell>Version</TableCell>\n                      <TableCell>Last Open</TableCell>\n                      <TableCell>User</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>1</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>2</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>3</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableContainer>\n              <Grid container spacing={3}>\n                <Grid item>\n                  <Activities />\n                </Grid>\n                <Grid item>\n                  <MatterTask />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item mt={2} lg={5}>\n              <Cards />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterDetail;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport MatterList from \"./MatterList\";\nimport { Grid, Box } from \"@mui/material\";\nimport Cards from \"./Cards\";\nimport Calendar from \"./Calendar\";\nimport Filters from \"./Filters\";\nimport MatterCards from \"./MatterCards\";\nimport MatterListLong from \"./MatterListLong\";\nimport NewMatter from \"./NewMatter\";\nimport MatterDetail from \"./MatterDetail\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item lg={12}>\n            <Filters />\n          </Grid>\n          <Grid item lg={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item lg={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst MatterDashboard = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container spacing={2}>\n          <Grid item lg={7}>\n            <MatterList />\n            <Calendar />\n          </Grid>\n          <Grid item lg={5}>\n            <Cards />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashboard\">\n          <MatterDashboard />\n        </div>\n        <div label=\"Matter\">\n          <Matters />\n        </div>\n        <div label=\"New Matter\">\n          <NewMatter />\n        </div>\n        <div label=\"Smith vs. Jhon\">\n          <MatterDetail />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerActivity = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setActivityData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow bgColor=\"#796ef0\">\n              <TableCell>\n                <Typography color=\"white\">Date</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Files</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Sub-Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Notes</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Source</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">User</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">In/Out</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          {/* {loading\n            ? null\n            : activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })} */}\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default LedgerActivity;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  TextField,\n  FormControlLabel,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Fillters = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [billedby, setBilledby] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Filter By</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={filter}\n            label=\"Filter By\"\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Billed by</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={billedby}\n            label=\"Billed By\"\n            onChange={(e) => setBilledby(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={status}\n            label=\"Age\"\n            onChange={(e) => setStatus(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n          <DateRangePicker\n            calendars={1}\n            value={dateRange}\n            onChange={(newValue) => {\n              setDateRange(newValue);\n            }}\n            renderInput={(startProps, endProps) => (\n              <Fragment>\n                <TextField size=\"small\" {...startProps} />\n                <Box sx={{ mx: 2 }}> to </Box>\n                <TextField size=\"small\" {...endProps} />\n              </Fragment>\n            )}\n          />\n        </LocalizationProvider>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Fillters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={7}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Time Entries\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={200}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      f\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Soft Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={65000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Hard Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={5000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={70000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Trust\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={4000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Due\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={100000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item={5}>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>User</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell> Jhon Johnson</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={74.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={39007.05}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Mark MacCalloff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={4.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={800.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Cindy Madenuff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={127.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={41372.5}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerCards;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n  Button,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { LinkButton } from \"../../styles/styles\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerTImeList = () => {\n  const [ledgerData, setLedgerData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setLedgerData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <Box>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Print\n        </Button>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Export\n        </Button>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>Cateagory</TableCell>\n                <TableCell>Sub-Category</TableCell>\n                <TableCell>Detail</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Qty</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Total</TableCell>\n                <TableCell>BillBy</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n                ? null\n                : ledgerData?.map((data) => {\n                    return (\n                      <TableBody id={data.id}>\n                        <TableCell>\n                          <Checkbox />\n                        </TableCell>\n                        <TableCell>{data.category}</TableCell>\n                        <TableCell>{data.sub_category}</TableCell>\n                        <TableCell>{data.detail}</TableCell>\n                        <TableCell>{data.date}</TableCell>\n                        <TableCell>{data.qty}</TableCell>\n                        <TableCell>\n                          {data.billable ? \"Billable\" : \"Paid\"}\n                        </TableCell>\n                        <TableCell>\n                          <NumberFormat\n                            value={data.qty * 25}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix=\"$\"\n                          />\n                        </TableCell>\n                        <TableCell>{data.bill_by}</TableCell>\n                      </TableBody>\n                    );\n                  })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default LedgerTImeList;\n","/** @format */\n\nimport { Typography, Box, Grid } from \"@mui/material\";\nimport React, { Fragment } from \"react\";\nimport Fillters from \"./Fillters\";\nimport LedgerCards from \"./LedgerCards\";\nimport LedgerTimeList from \"./LedgerTImeList\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LegderDashbard = () => {\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <Box>\n          <LedgerCards />\n          <Fillters />\n          <LedgerTimeList />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LegderDashbard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box, Typography, Paper, TextField } from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerDoc = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={1}>\n        <Grid item lg={4} sx={{}}>\n          <Box\n            sx={{\n              width: \"80%\",\n              minHeight: \"25rem\",\n              padding: \"5rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            MS Word Document On Pleading or Non Pleading Paper\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Box\n            sx={{\n              padding: \"5rem 2rem 5rem 2rem\",\n              minHeight: \"25rem\",\n              width: \"80%\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Space for 2nd Document to be opend if user wants it\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Grid container>\n            <Grid item lg={12}>\n              <Box component={Paper} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n              </Box>\n            </Grid>\n            <Grid item lg={12}>\n              <Box component={Paper} mt={2} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={5}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"filled\"\n                  name=\"detail\"\n                  type=\"text\"\n                  value=\"Quick Notes\"\n                  id=\"detail\"\n                  sx={{ borderRadius: \"1rem\" }}\n                />\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerDoc;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  RadioGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Radio,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst Time = () => {\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [timeToggle, setTimeToggle] = useToggle(true);\n  const [billable, setBillable] = useToggle(false);\n\n  // const [bill, setBill] = useToggle(false);\n  const [time, setTime] = useState(\"\");\n  const [timeData, setTimeData] = useState({\n    contact: 0,\n    matter_name: 0,\n    category: \"\",\n    sub_category: \"\",\n    // time: \"\",\n    hard: false,\n    soft: false,\n    unit: 0,\n    qty: 0,\n    rate: 0,\n    file: \"\",\n    detail: \"\",\n    bill_by: 0,\n    note: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    category,\n    sub_category,\n    hard,\n    soft,\n    unit,\n    // time,\n    qty,\n    rate,\n    file,\n    detail,\n    bill_by,\n\n    note,\n  } = timeData;\n  const onChange = (e) =>\n    setTimeData({ ...timeData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    let date = GetDate(pickDate);\n\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      category,\n      sub_category,\n      hard,\n      soft,\n      unit,\n      qty,\n      rate,\n      time,\n      date,\n      detail,\n      bill_by,\n      billable,\n      note,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/add-time/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Typography component=\"h3\" variant=\"h4\">\n          Time\n        </Typography>\n        <Grid\n          container\n          spacing={2}\n          mt={2}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n          }}\n        >\n          <Grid item xs={12}>\n            <Grid container p={3}>\n              <Grid item xs={6}>\n                <FormControlLabel\n                  size=\"large\"\n                  label=\"Time\"\n                  labelPlacement=\"start\"\n                  control={\n                    <Switch\n                      size=\"large\"\n                      checked={timeToggle}\n                      onChange={(e) => setTimeToggle(e)}\n                    />\n                  }\n                />\n                {timeToggle ? null : (\n                  <Box>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">Expense</FormLabel>\n                      <RadioGroup\n                        row\n                        aria-label=\"expense\"\n                        defaultValue=\"\"\n                        name=\"expense\"\n                        id=\"expense\"\n                      >\n                        <FormControlLabel\n                          value=\"hard\"\n                          control={<Radio />}\n                          label=\"Hard\"\n                        />\n                        <FormControlLabel\n                          value=\"soft\"\n                          control={<Radio />}\n                          label=\"Soft\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  </Box>\n                )}\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"matter\"\n                  label=\"matter\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"matter\"\n                  autoComplete=\"matter\"\n                  disabled\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"contact\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                  disabled\n                />\n              </Grid>\n            </Grid>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"category\"\n              label=\"category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"category\"\n              autoComplete=\"category\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"sub_category\"\n              label=\"sub_category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"sub_category\"\n              autoComplete=\"sub_category\"\n            />\n            {timeToggle ? (\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"rate\"\n                label=\"rate\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"rate\"\n                autoComplete=\"rate\"\n              />\n            ) : (\n              <Fragment>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"unit\"\n                  label=\"unit\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"unit\"\n                  autoComplete=\"unit\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"qty\"\n                  label=\"Qty\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"qty\"\n                  autoComplete=\"qty\"\n                />\n                <Box m={1}>\n                  <Typography component=\"lable\"> Receipt(s) </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n              </Fragment>\n            )}\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"HH:MM\"\n              mask={[\"H\", \"H\", \"M\", \"M\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time\"\n              name=\"time\"\n              id=\"time\"\n              value={time}\n              type=\"text\"\n              onValueChange={(e) => setTime(e.value)}\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Date\"\n                value={pickDate}\n                name=\"pickdate\"\n                id=\"pickdate\"\n                onChange={(e) => setPickDate(e)}\n                renderInput={(params) => <TextField size=\"small\" {...params} />}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"detail\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n              autoComplete=\"detail\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bill_by\"\n              label=\"bill_by\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bill_by\"\n              autoComplete=\"bill_by\"\n            />\n            <FormControlLabel\n              size=\"large\"\n              label=\"Billable\"\n              labelPlacement=\"start\"\n              control={\n                <Switch\n                  size=\"large\"\n                  checked={billable}\n                  onChange={() => setBillable(billable)}\n                />\n              }\n            />\n            <br />\n          </Grid>\n        </Grid>\n        <Grid container>\n          <Grid item lg={12}>\n            <TextField\n              fullWidth\n              multiline\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"note\"\n              rows={4}\n              // label=\"note\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              placeholder=\"Private / internal notes\"\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Time;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport LedgerActivity from \"./LedgerActivity\";\nimport LegderDashbard from \"./LedgerDashbard\";\nimport LedgerDoc from \"./LedgerDoc\";\nimport LedgerTImeList from \"./LedgerTImeList\";\nimport Time from \"./Time\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Ledger\">\n          <LegderDashbard />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Documents\">\n          <LedgerDoc />\n        </div>\n        <div label=\"Time\">\n          <Time />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst SubCategory = () => {\n  const [subCategory, setSubCategory] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/sub-category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setSubCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/sub-category/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n      })\n      .catch((err) => setStatus(err.statusText));\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/sub-category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n      })\n      .catch((err) => {\n        FetchData();\n      });\n  };\n  const showSubcategory = () => {\n    if (subCategory.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return subCategory.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Sub-Category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Sub-Category\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Sub-Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? showSubcategory() : <Typography>Loading ...</Typography>}\n    </Fragment>\n  );\n};\n\nexport default SubCategory;\n","/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst catHandler = (id) => {\n  console.log(id);\n};\n\nconst Category = () => {\n  const [category, setCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/category/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const showCategory = () => {\n    if (category.length === 0) {\n      return <p> no data found...</p>;\n    } else\n      return category.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Add New Category\"}</DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? showCategory() : <Typography>Loading ...</Typography>}\n    </Fragment>\n  );\n};\n\nexport default Category;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Classification = () => {\n  const [classification, setClassification] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/classification/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setClassification(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/classification/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n        return <ActionAlerts value={{ status: status }} />;\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/api/classification/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return <ActionAlerts value={{ status: res.statusText }} />;\n      })\n      .catch((err) => {\n        FetchData();\n        return <ActionAlerts value={{ status: err.statusText }} />;\n      });\n  };\n  const showClassification = () => {\n    if (classification.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return classification.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Classification\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Classification\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Classification Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? showClassification() : <Typography>Loading ...</Typography>}\n    </Fragment>\n  );\n};\n\nexport default Classification;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Typography, Grid, Button, Box } from \"@mui/material\";\n\nimport SubCategory from \"./SubCategory\";\nimport Category from \"./Category\";\nimport Classification from \"./Classification\";\n\nconst ManageCategory = () => {\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={8}>\n          <Typography component=\"h3\" variant=\"h5\">\n            Manage Category, Sub-category, Classification\n          </Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"error\">\n              Delete Checked\n            </Button>\n          </Box>\n        </Grid>\n\n        <Grid item lg={12}>\n          <Grid container spacing={5} mt={1}>\n            <Grid item lg={4}>\n              <Category />\n            </Grid>\n            <Grid item lg={4}>\n              <SubCategory />\n            </Grid>\n            <Grid item lg={4}>\n              <Classification />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageCategory;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Button,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { ActionAlerts, GetTime, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Contact = () => {\n  const [clientNo, setClientNo] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [ssn, setSsn] = useState(\"\");\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [homeNo, setHomeNo] = useState(\"\");\n  const [officeNo, setOfficeNo] = useState(\"\");\n  const [faxNo, setFaxNo] = useState(\"\");\n  const [otherNo, setOtherNo] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [plus4, setPlus4] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [contactData, setContactData] = useState({\n    // company info\n    company_name: \"\",\n    website: \"\",\n    ger_email: \"\",\n    billing_email: \"\",\n    // address\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    note: \"\",\n    f_name: \"\",\n    l_name: \"\",\n    email_1: \"\",\n    email_2: \"\",\n    email_3: \"\",\n    // other address\n    street2: \"\",\n    suite2: \"\",\n    city2: \"\",\n    state2: \"\",\n    office: \"\",\n    team: \"\",\n    member: \"\",\n    assign_to: \"\",\n    contact: \"\",\n    relation: \"\",\n  });\n\n  const {\n    company_name,\n    website,\n    ger_email,\n    billing_email,\n    street,\n    suite,\n    city,\n    state,\n    note,\n    f_name,\n    l_name,\n    email_1,\n    email_2,\n    email_3,\n    street2,\n    suite2,\n    city2,\n    state2,\n    office,\n    team,\n    member,\n    assign_to,\n    contact,\n    relation,\n  } = contactData;\n\n  const onChange = (e) => {\n    e.persist();\n    setContactData({ ...contactData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    //   let date = GetDate(pickDate);\n    //   const body = JSON.stringify({\n    //     company_name,\n    //     website,\n    //     ger_email,\n    //     billing_email,\n    //     street,\n    //     suite,\n    //     city,\n    //     state,\n    //     zip,\n    //     plus4,\n    //     client_no,\n    //     f_name,\n    //     l_name,\n    //     dob,\n    //     ssn,\n    //     mobile_no,\n    //     home_no,\n    //     office_no,\n    //     fax_no,\n    //     other_no,\n    //     email_1,\n    //     email_2,\n    //     email_3,\n    //     street2,\n    //     suite2,\n    //     city2,\n    //     state2,\n    //     zip2,\n    //     plus42,\n    //     office,\n    //     team,\n    //     member,\n    //     assign_to,\n    //     contact,\n    //     relation,\n    //   });\n    //   axios\n    //     .post(`${process.env.REACT_APP_API_URL}/api/contact/`, body, CONFIG)\n    //     .then((res) => {\n    //       <ActionAlerts value={{ status: res.statusText, message: \"Success\" }} />;\n    //     })\n    //     .catch((err) => {\n    //       <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />;\n    //     });\n    //   console.log(body);\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container p={2}>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h5\">\n              Company info\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"company_name\"\n              label=\"Company Name\"\n              type=\"text\"\n              value={company_name}\n              onChange={(e) => onChange(e)}\n              id=\"company_name\"\n              autoComplete=\"company_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Client #\"\n              id=\"clientno\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"clientno\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={clientNo}\n              onValueChange={(e) => setClientNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"First Name\"\n              label=\"f_name\"\n              type=\"text\"\n              value={f_name}\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Last Name\"\n              label=\"l_name\"\n              type=\"text\"\n              value={l_name}\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"DOB\"\n              id=\"dob\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              name=\"dob\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={dob}\n              onValueChange={(e) => setDob(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"#### #### ##\"\n              customInput={TextField}\n              label=\"SSN\"\n              id=\"ssn\"\n              name=\"ssn\"\n              value={ssn}\n              type=\"text\"\n              onValueChange={(e) => setSsn(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobileNo}\n              onValueChange={(e) => setMobileNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={homeNo}\n              onValueChange={(e) => setHomeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Office #\"\n              id=\"offlice_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"office_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={officeNo}\n              onValueChange={(e) => setOfficeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Fax #\"\n              id=\"fax_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"fax_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={faxNo}\n              onValueChange={(value) => setFaxNo(value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Other #\"\n              id=\"other_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"other_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={otherNo}\n              onValueChange={(e) => setOtherNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_1\"\n              label=\"Email 1\"\n              type=\"email\"\n              value={email_1}\n              onChange={(e) => onChange(e)}\n              id=\"email_1\"\n              autoComplete=\"email_1\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_2\"\n              label=\"Email 2\"\n              type=\"email\"\n              value={email_2}\n              onChange={(e) => onChange(e)}\n              id=\"email_2\"\n              autoComplete=\"email_2\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_3\"\n              label=\"Email 3\"\n              value={email_3}\n              type=\"email\"\n              onChange={(e) => onChange(e)}\n              id=\"email_3\"\n              autoComplete=\"email_3\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"street\"\n              type=\"text\"\n              value={street}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              value={city}\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip\"\n              label=\"zip\"\n              type=\"text\"\n              id=\"zip\"\n              type=\"text\"\n              value={zip}\n              onValueChange={(e) => setZip(e.value)}\n            />\n\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus4\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus4\"\n              type=\"text\"\n              value={plus4}\n              onValueChange={(e) => setPlus4(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              multiline\n              rows={5}\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Notes...\"\n              label=\"note\"\n              type=\"text\"\n              value={note}\n              onChange={(e) => onChange(e)}\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h6\">\n              Alternate Information\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"webiste\"\n              label=\"Webiste\"\n              type=\"text\"\n              value={website}\n              onChange={(e) => onChange(e)}\n              id=\"webiste\"\n              autoComplete=\"webiste\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"ger_email\"\n              label=\"General Email\"\n              type=\"text\"\n              value={ger_email}\n              onChange={(e) => onChange(e)}\n              id=\"ger_email\"\n              autoComplete=\"ger_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_email\"\n              label=\"Invoice/ Billing Email\"\n              type=\"text\"\n              value={billing_email}\n              onChange={(e) => onChange(e)}\n              id=\"billing_email\"\n              autoComplete=\"billing_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"Street\"\n              type=\"text\"\n              value={street2}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite2}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              type=\"text\"\n              value={city2}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip2\"\n              label=\"Zip\"\n              type=\"text\"\n              id=\"zip2\"\n              type=\"text\"\n              value={zip2}\n              onValueChange={(e) => setZip2(e.value)}\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus42\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus42\"\n              type=\"text\"\n              value={plus42}\n              onValueChange={(e) => setPlus42(e.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Source\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"office\"\n                  label=\"Office\"\n                  type=\"text\"\n                  value={office}\n                  onChange={(e) => onChange(e)}\n                  id=\"office\"\n                  autoComplete=\"office\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"team\"\n                  label=\"Team\"\n                  type=\"text\"\n                  value={team}\n                  onChange={(e) => onChange(e)}\n                  id=\"team\"\n                  autoComplete=\"team\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"member\"\n                  label=\"Member\"\n                  type=\"text\"\n                  value={member}\n                  onChange={(e) => onChange(e)}\n                  id=\"member\"\n                  autoComplete=\"member\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Assigned To\n                </Typography>\n                <FormControl\n                  size=\"small\"\n                  sx={{ mt: 2, mb: 2, minWidth: \"14rem\" }}\n                >\n                  <InputLabel id=\"demo-simple-select-autowidth-label\">\n                    Assigned To\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-autowidth-label\"\n                    id=\"demo-simple-select-autowidth\"\n                    value={assign_to}\n                    onChange={(e) => onChange(e)}\n                    autoWidth\n                    label=\"assign_to\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>Auto Assign</em>\n                    </MenuItem>\n                    <MenuItem value={10}>Twenty</MenuItem>\n                    <MenuItem value={21}>Twenty one</MenuItem>\n                    <MenuItem value={22}>Twenty one and a half</MenuItem>\n                  </Select>\n                </FormControl>\n\n                <Button variant=\"contained\" color=\"primary\">\n                  Auto Assign\n                </Button>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Linked Contacts\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"Contact\"\n                  type=\"text\"\n                  value={contact}\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"relation\"\n                  label=\"Relation\"\n                  type=\"text\"\n                  value={relation}\n                  onChange={(e) => onChange(e)}\n                  id=\"relation\"\n                  autoComplete=\"relation\"\n                />\n              </Grid>\n            </Grid>\n            <Box sx={{ float: \"right\" }}>\n              <Button variant=\"contained\" type=\"submit\" endIcon={<SaveIcon />}>\n                Save\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Contact;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Button,\n  TextField,\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Tab,\n  Paper,\n  Box,\n  Typography,\n  Switch,\n} from \"@mui/material\";\nimport { TabList, TabContext, TabPanel } from \"@mui/lab\";\nimport { connect } from \"react-redux\";\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport NumberFormat from \"react-number-format\";\n\n// import { update_profile } from \"../../store/actions/profile\";\n\nconst Profile = ({ profile }) => {\n  const [value, setValue] = React.useState(\"1\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [underGradYear, setUnderGradYear] = useState(\"\");\n\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [barNo, setBarNo] = useState(\"\");\n  const [practiceTime, setPracticeTime] = useState(\"\");\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    mobile: 0,\n    phone: 0,\n    state: \"\",\n    city: \"\",\n    language: \"\",\n    locate: false,\n    search_active: false,\n    law_school: \"\",\n    grad_year: \"\",\n    bar_admit_date: \"\",\n    undergrad_school: \"\",\n    undergrad_area: \"\",\n    undergrad_year: \"\",\n    bar_no: 0,\n    admitted_practice: \"\",\n    practice_time: \"\",\n    longest_tenure: \"\",\n    average_tenure: \"\",\n    current_tenure: \"\",\n    past_bar_companies_no: \"\",\n    primary_area: \"\",\n  });\n  const {\n    username,\n    email,\n    mobile,\n    phone,\n    state,\n    city,\n    language,\n    locate,\n    search_active,\n    law_school,\n    grad_year,\n    bar_admit_date,\n    undergrad_school,\n    undergrad_area,\n    undergrad_year,\n    bar_no,\n    admitted_practice,\n    practice_time,\n    longest_tenure,\n    average_tenure,\n    current_tenure,\n    past_bar_companies_no,\n    primary_area,\n  } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let id = profile.id;\n    const body = JSON.stringify({\n      username,\n      email,\n      mobile,\n      phone,\n      state,\n      city,\n      language,\n      locate,\n      search_active,\n      law_school,\n      grad_year,\n      bar_admit_date,\n      undergrad_school,\n      undergrad_area,\n      undergrad_year,\n      bar_no,\n      admitted_practice,\n      practice_time,\n      longest_tenure,\n      average_tenure,\n      current_tenure,\n      past_bar_companies_no,\n      primary_area,\n    });\n    console.log(body);\n    axios\n      .patch(\n        `${process.env.REACT_APP_API_URL}/api/profile/${id}/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Fragment>\n      {/* {profile ? ( */}\n      <Box p={5}>\n        <Paper elevation={5} sx={{ borderRadius: 3 }}>\n          <TabContext value={value} p={8}>\n            <Box component=\"form\" onSubmit={(e) => onSubmit(e)}>\n              <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                <TabList\n                  onChange={handleChange}\n                  aria-label=\"lab API tabs example\"\n                >\n                  <Tab label=\"Profile\" value=\"1\" />\n                  <Tab label=\"Education\" value=\"2\" />\n                  <Tab label=\"Work History\" value=\"3\" />\n                </TabList>\n              </Box>\n              <TabPanel value=\"1\">\n                <Grid container spacing={2}>\n                  <Grid item sx={12} xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Username\"\n                      value={username}\n                      id=\"username\"\n                      name=\"username\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.username}\n                      disabled\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Mobile #\"\n                      id=\"mobile\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"mobile\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={mobileNo}\n                      onValueChange={(e) => setMobileNo(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Phone #\"\n                      id=\"phone\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"phone\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={phoneNo}\n                      onValueChange={(e) => setPhoneNo(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Email\"\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.email}\n                      disabled\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"State\"\n                      id=\"state\"\n                      name=\"state\"\n                      type=\"text\"\n                      value={state}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.state}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"City\"\n                      id=\"city\"\n                      name=\"city\"\n                      type=\"text\"\n                      value={city}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.city}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Language(s)\"\n                      value={language}\n                      id=\"language\"\n                      name=\"language\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.language}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Willing to locate\"\n                      id=\"locate\"\n                      name=\"locate\"\n                      value={locate}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.locate}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Search Type (Active/ Passiv)\"\n                      id=\"search_active\"\n                      name=\"search_active\"\n                      value={search_active}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.search_active}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      m={5}\n                      variant=\"contained\"\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"2\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"2\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Law School\"\n                      id=\"law_school\"\n                      name=\"law_school\"\n                      value={law_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.law_school}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Grad year\"\n                      id=\"grad_year\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      name=\"grad_year\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={gradYear}\n                      onValueChange={(e) => setGradYear(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####/##/##\"\n                      placeholder=\"YYYY/MM/DD\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n                      customInput={TextField}\n                      label=\"Bar Admittance Date\"\n                      id=\"bar_admit_date\"\n                      name=\"bar_admit_date\"\n                      value={barDate}\n                      onValueChange={(e) => setBarDate(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrad school\"\n                      id=\"undergrad_school\"\n                      name=\"undergrad_school\"\n                      value={undergrad_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_school}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrade area of study\"\n                      id=\"undergrad_area\"\n                      name=\"undergrad_area\"\n                      value={undergrad_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_area}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      label=\"Undergrade year\"\n                      id=\"undergrad_year\"\n                      name=\"undergrad_year\"\n                      value={underGradYear}\n                      type=\"text\"\n                      onValueChange={(e) => setUnderGradYear(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"#### #### ##\"\n                      customInput={TextField}\n                      label=\"Bar #\"\n                      id=\"bar_no\"\n                      name=\"bar_no\"\n                      value={barNo}\n                      type=\"text\"\n                      onValueChange={(e) => setBarNo(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Admitted practice (state & District)\"\n                      value={admitted_practice}\n                      id=\"admitted_practice\"\n                      name=\"admitted_practice\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.admitted_practice}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      variant=\"contained\"\n                      mb={5}\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"3\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"3\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Practive Time (months / years)\"\n                      id=\"practice_time\"\n                      name=\"practice_time\"\n                      value={practiceTime}\n                      type=\"text\"\n                      onValueChange={(e) => setPracticeTime(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Longest tenure (months / years)\"\n                      id=\"longest_tenure\"\n                      name=\"longest_tenure\"\n                      value={longestTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setLongestTenure(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Average tenure (months / years)\"\n                      value={averageTenure}\n                      id=\"average_tenure\"\n                      name=\"average_tenure\"\n                      type=\"text\"\n                      onValueChange={(e) => setAverageTenure(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Time at Current Company (months / years)\"\n                      id=\"current_tenure\"\n                      name=\"current_tenure\"\n                      value={currentTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setCurrentTenure(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"# of Companies Post Bar\"\n                      id=\"past_bar_companies_no\"\n                      name=\"past_bar_companies_no\"\n                      value={past_bar_companies_no}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.past_bar_companies_no}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Primary areas of Law\"\n                      id=\"primary_area\"\n                      name=\"primary_area\"\n                      value={primary_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.primary_area}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Button\n                      variant=\"contained\"\n                      type=\"submit\"\n                      sx={{\n                        float: \"right\",\n                        marginTop: \"10rem\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n            </Box>\n          </TabContext>\n        </Paper>\n      </Box>\n      {/* // ) : ( // <Typography>Something wend wrong!</Typography>\n      // )} */}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  profile: state.auth.profile,\n});\n\nexport default connect(mapStateToProps)(Profile);\n","/** @format */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  TextField,\n  Switch,\n  FormControlLabel,\n  Box,\n  Grid,\n  Button,\n  Typography,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport axios from \"axios\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\n\nconst CreateTask = () => {\n  const [dueDate, setDueDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [bill, setBill] = useToggle(true);\n  const [matterData, setMatterData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useToggle(true);\n  const [file, setFile] = useState(\"\");\n  const [taskData, setTaskData] = useState({\n    matter_id: 0,\n    matter_contact: 0,\n    matter: \"\",\n    task: \"\",\n    filename: \"\",\n    assign_to: 0,\n    detail: \"\",\n  });\n\n  const {\n    matter_id,\n    matter_contact,\n    matter,\n    task,\n    filename,\n    assign_to,\n    detail,\n  } = taskData;\n\n  const onChange = (e) =>\n    setTaskData({ ...taskData, [e.target.name]: e.target.value });\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/matter/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setMatterData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log(matter_id, matter_contact, matter, task);\n    let due_at = GetDate(dueDate);\n    let is_billable = bill;\n    let is_private = isPrivate;\n\n    const body = JSON.stringify({\n      matter_id,\n      matter_contact,\n      matter,\n      task,\n      file,\n      is_billable,\n      is_private,\n      due_at,\n      assign_to,\n      detail,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-task/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n          \"& .MuiSelect-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Task\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_id\"\n              label=\"matter_id\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_id}\n              onChange={(e) => onChange(e)}\n              id=\"matter_id\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"matter\"\n              type=\"text\"\n              min=\"0\"\n              value={matter}\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"task\"\n              label=\"Task\"\n              type=\"text\"\n              value={task}\n              onChange={(e) => onChange(e)}\n              id=\"task\"\n              autoComplete=\"task\"\n            />\n            <Box ml={2} mt={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Attach File \"\n                labelPlacement=\"start\"\n                control={\n                  <input\n                    type=\"file\"\n                    name=\"filename\"\n                    id=\"file\"\n                    onChange={(e) => onChange(e)}\n                  />\n                }\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"file\"\n                label=\"please chose any file\"\n                type=\"text\"\n                min=\"0\"\n                value={filename}\n                onChange={(e) => setFile(filename)}\n                id=\"file\"\n                disabled\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_contact\"\n              label=\"matter_contact\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_contact}\n              onChange={(e) => onChange(e)}\n              id=\"matter_contact\"\n            />\n            <Box p={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Billable\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={bill}\n                    onChange={() => setBill(bill)}\n                  />\n                }\n              />\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Private\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={isPrivate}\n                    onChange={() => setIsPrivate(isPrivate)}\n                  />\n                }\n              />\n            </Box>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Due Date\"\n                value={dueDate}\n                name=\"dueDate\"\n                id=\"dueDate\"\n                onChange={(e) => setDueDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"Assign to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              autoComplete=\"assign_to\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              multiline\n              rows={5}\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"Detail\"\n              type=\"text\"\n              value={detail}\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n            />\n\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateTask;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport ViewTasks from \"./ViewTasks\";\nimport CreateTask from \"./CreateTask\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Task\">\n          <ViewTasks />\n        </div>\n        <div label=\"Create Task\">\n          <CreateTask />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport DashBoard from \"../Admin/DashBoard\";\n\nimport {\n  Box,\n  Typography,\n  Tabs,\n  Tab,\n  IconButton,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\n\nimport TabContext from \"@mui/lab/TabContext\";\nimport TabList from \"@mui/lab/TabList\";\n\nimport TabPanel from \"@mui/lab/TabPanel\";\nimport PropTypes from \"prop-types\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\n\n// components of tabs\nimport Invoice from \"../../Invoice\";\nimport Matter from \"../../Matter\";\nimport Ledger from \"../../Ledger\";\nimport Favorite from \"../../Favorite/Favorites\";\nimport Category from \"../../Category/ManageCategory\";\nimport Contact from \"../../Contact/Contact\";\nimport Profile from \"../../Profile/Profile\";\nimport Tasks from \"../../Tasks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport {\n  addNewTab,\n  removeNewTab,\n  removeLastNewTab,\n} from \"../../../redux/features/searchTabSlice\";\nimport { addTab, removeTab } from \"../../../redux/features/tabSlice\";\n\nconst data = [\n  { name: \"invoice\", content: <Invoice /> },\n  { name: \"matter\", content: <Matter /> },\n  { name: \"ledger\", content: <Ledger /> },\n  { name: \"favorite\", content: <Favorite /> },\n  { name: \"category\", content: <Category /> },\n  { name: \"contact\", content: <Contact /> },\n  { name: \"profile\", content: <Profile /> },\n  { name: \"tasks\", content: <Tasks /> },\n];\nconst component = {\n  invoice: <Invoice />,\n  matter: <Matter />,\n  ledger: <Ledger />,\n  favorite: <Favorite />,\n  category: <Category />,\n  contact: <Contact />,\n  profile: <Profile />,\n  tasks: <Tasks />,\n};\n\nconst AdminDashboard = () => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const tabList = useSelector((state) => state.tabs);\n  const newTabList = useSelector((state) => state.newTabs);\n  const dispatch = useDispatch();\n\n  // search tab will match the text and display tab\n  const [wordEntered, setWordEntered] = useState(\"\");\n\n  const searchItem = () => {\n    let selectedItem = data.filter((value) => {\n      if (value.name === wordEntered) {\n        return true;\n      }\n    });\n  };\n  const handleChangeSearch = (e) => {\n    setWordEntered(e.target.value);\n    let id = tabList.length + 1;\n    dispatch(\n      addTab({\n        id: id,\n        tab: e.target.value,\n      }),\n    );\n    dispatch(removeLastNewTab());\n    setValue(id);\n    searchItem();\n  };\n  const handleRemoveTab = (tab) => {\n    dispatch(removeTab(tab));\n    setValue(0);\n  };\n  const handleRemoveNewTab = (tab) => {\n    dispatch(removeNewTab(tab));\n    setValue(0);\n  };\n\n  const addSearchTab = () => {\n    let id = newTabList.length + 10;\n    setTimeout(\n      dispatch(\n        addNewTab({\n          id: id,\n          name: \"newtab\",\n        }),\n      ),\n      5000,\n    );\n\n    setValue(id);\n  };\n  const displayNewTabsName = () => {\n    if (newTabList) {\n      return newTabList.map((tab) => (\n        <Tab\n          key={tab.id}\n          value={tab.id}\n          label={\n            <span>\n              newtab\n              <IconButton\n                component=\"div\"\n                onClick={() => handleRemoveNewTab(tab)}\n              >\n                <CloseIcon />\n              </IconButton>\n            </span>\n          }\n        />\n      ));\n    } else return null;\n  };\n  const displayTabsName = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <Tab\n          key={tab.id}\n          value={tab.id}\n          label={\n            <span>\n              {\" \"}\n              {tab.name}\n              <IconButton component=\"div\" onClick={() => handleRemoveTab(tab)}>\n                <CloseIcon />\n              </IconButton>\n            </span>\n          }\n        />\n      ));\n    } else return null;\n  };\n  const searchTab = () => {\n    return (\n      <Box\n        noValidate\n        sx={{\n          p: \"2px 4px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          width: \"50%\",\n          borderRadius: \"5rem\",\n          backgroundColor: \"#dfdfdf\",\n        }}\n      >\n        <Select\n          fullWidth\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value=\"\"\n          label=\"Search....\"\n          onChange={handleChangeSearch}\n          sx={{\n            \" & .MuiOutlinedInput-notchedOutline\": {\n              border: \"none\",\n            },\n          }}\n        >\n          {data.map((item, index) => (\n            <MenuItem key={index} value={item.name}>\n              {item.name}\n            </MenuItem>\n          ))}\n        </Select>\n\n        <IconButton type=\"submit\" sx={{ p: \"10px\" }} aria-label=\"search\">\n          {wordEntered.length === 0 ? <SearchIcon /> : <CloseIcon />}\n        </IconButton>\n      </Box>\n    );\n  };\n  const displaySearchTabs = () => {\n    if (newTabList) {\n      return newTabList.map((tab) => (\n        <TabPanel value={tab.id}>{searchTab()}</TabPanel>\n      ));\n    } else return null;\n  };\n  const displayTabs = () => {\n    if (tabList) {\n      return tabList.map((tab) => (\n        <TabPanel value={tab.id}>{component[tab.name]}</TabPanel>\n      ));\n    } else return null;\n  };\n\n  const renderTabs = () => {\n    return (\n      <Box sx={{ width: \"100%\" }}>\n        <TabContext value={value}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              variant=\"scrollable\"\n              scrollButtons\n              allowScrollButtonsMobilearia-label=\"lab API tabs example\"\n            >\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label=\"Dashboard\"\n                value={0}\n              />\n\n              {displayTabsName()}\n              {displayNewTabsName()}\n\n              <Tab\n                icon={<MoreVert />}\n                iconPosition=\"start\"\n                label={\n                  <IconButton\n                    component=\"div\"\n                    onClick={() => dispatch(addNewTab())}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                }\n                onClick={addSearchTab}\n                value={100}\n              />\n            </Tabs>\n          </Box>\n          <TabPanel value={0}>\n            <DashBoard />\n          </TabPanel>\n          {displayTabs()}\n          {displaySearchTabs()}\n          <TabPanel value={100}></TabPanel>\n        </TabContext>\n      </Box>\n    );\n  };\n  useEffect(() => {\n    renderTabs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <Fragment>{renderTabs()}</Fragment>;\n};\n\nexport default AdminDashboard;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { LinearProgress, Box, Grid, Typography } from \"@mui/material\";\n\nconst ProgressBar = () => {\n  const [progress, setProgress] = useState(69);\n  return (\n    <Box paddingLeft={3} paddingRight={3}>\n      <Grid container>\n        <Grid item lg={1} xs={12}>\n          <Typography>{progress}%</Typography>\n        </Grid>\n        <Grid item lg={11} xs={12} mt={2} mb={5}>\n          <LinearProgress variant=\"determinate\" value={progress} />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ProgressBar;\n","/** @format */\n\nimport React from \"react\";\n\nimport { Typography, Box, Paper, Grid } from \"@mui/material\";\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from \"@mui/material\";\n\nconst randomDate = (start, end) => {\n  const getDateTime = new Date(\n    start.getTime() + Math.random() * (end.getTime() - start.getTime()),\n  );\n  const date = getDateTime.toLocaleDateString();\n  const hour = getDateTime.getHours();\n  const min = getDateTime.getMinutes();\n\n  return date + \" \" + hour + \":\" + min;\n};\n\nconst Task = () => {\n  return (\n    <Grid container>\n      <Grid item lg={12} xs={12}>\n        <Typography component=\"h5\" variant=\"h6\" color=\"primary\">\n          My Tasks\n        </Typography>\n        <TableContainer component={Paper}>\n          <Table size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    ID\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Date\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Subject\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Detail\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow bgColor=\"#e85355\">\n                <TableCell>\n                  <Typography variant=\"caption\">123452</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Submit Document X</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display first 3 links\n                  </Typography>{\" \"}\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#fd9905\">\n                <TableCell>\n                  <Typography variant=\"caption\">113457</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Y</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display more details\n                  </Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#28c570\">\n                <TableCell>\n                  <Typography variant=\"caption\">113455</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Z</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Note in popup</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"white\">\n                <TableCell>\n                  <Typography variant=\"caption\">113458</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document XY</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display First 3 links\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Task;\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nexport const AdminCards = () => {\n  return (\n    <>\n      <Grid container spacing={1}>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5} xs={12}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    New Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    Lost Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport const LawyerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Projected Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={230} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Annual Trending Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={768} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const FirmCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={6} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Lost Customers\n              </Typography>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const CustomerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={2}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Balance\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Payment Due\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={12345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nconst Cards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                New Matters\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={3425}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n// import axios from 'axios';\n\nimport { Grid } from \"@mui/material\";\n\nimport Calender from \"../Calender\";\nimport ProgressBar from \"../ProgressBar\";\n\nimport Tasks from \"../Tasks\";\nimport { CustomerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={3}>\n        <Grid item lg={2} xs={12}>\n          <CustomerCards />\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Calender />\n        </Grid>\n        <Grid item p={2} lg={6} xs={12}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <ProgressBar />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Button, Grid, Box, List, ListItem, ListItemText } from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst Templates = () => {\n  return (\n    <Fragment>\n      <Grid container mt={1} spacing={1}>\n        <Grid item xs={12} m={2}>\n          <Button variant=\"contained\" size=\"small\">\n            Merge Fields.XLS\n          </Button>\n          <Box sx={{ float: \"right\" }}>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Doc\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New PDF\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Email\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Edit\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Save\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Close\n            </Button>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Word Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Report Money</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - Report Time</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Report Billed hours</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              PDF Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>P001 - Write of Execution</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P002 - Memo of Cost</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P003 - Settlement Letter</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Email Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Invoice Email</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - New Client</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Firing Client</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              padding: \"15rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Templates can be opened here to edit them. user can add/ remove\n            merge fields directly to the document or PDF\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Templates;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Client/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\n\n\nconst ClientDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default ClientDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const PieChart = () => {\n  const state = {\n    series: [86, 14],\n    options: {\n      chart: {\n        height: 500,\n        type: \"pie\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"65%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val + \"%\";\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Prodcutive v. Non-Productive Time\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n        horizontalAlign: \"center\",\n      },\n      colors: [\"#738df5\", \"#eaa3ff\"],\n      labels: [\"Non Productive\", \"Productive\"],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"pie\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            background: \"#aaa\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shade: \"gark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\", \"pink\"],\n        stops: [0, 3],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"user 1\",\n        data: [44, 55, 41, 37, 22, 43, 21],\n      },\n      {\n        name: \"user 2\",\n        data: [53, 32, 33, 52, 13, 43, 32],\n      },\n      {\n        name: \"User 3\",\n        data: [12, 17, 11, 9, 15, 11, 20],\n      },\n      {\n        name: \"User 4\",\n        data: [9, 7, 5, 8, 6, 9, 4],\n      },\n    ],\n    options: {\n      chart: {\n        type: \"bar\",\n        height: 350,\n        stacked: true,\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        borderRadius: 8,\n        colors: [\"#fff\"],\n      },\n\n      title: {\n        text: \"% Indicating User Ranking\",\n      },\n      xaxis: {\n        categories: [\n          \"Word per Min\",\n          \"Matter Completed\",\n          \"Revenue Generated\",\n          \"Articals Submitted\",\n          \"New Client\",\n          \"New Matter\",\n        ],\n        labels: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: undefined,\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      fill: {\n        opacity: 1,\n      },\n      color: [\"#738df5\", \"#eaa3ff\", \"#738df5\", \"#eaa3ff\"],\n      legend: {\n        show: false,\n        position: \"top\",\n        horizontalAlign: \"left\",\n        offsetX: 40,\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Grid } from \"@mui/material\";\nimport Calender from \"../Calender\";\nimport Tasks from \"../Tasks\";\nimport { Chart2, PieChart, BarChart } from \"./Chart\";\nimport { LawyerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={2}>\n          <LawyerCards />\n        </Grid>\n        <Grid item lg={4}>\n          <PieChart />\n        </Grid>\n        <Grid item lg={6}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={4}>\n          <Chart2 />\n        </Grid>\n        <Grid item lg={8}>\n          <BarChart />\n        </Grid>\n        <Grid item>\n          <Calender />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Lawyer/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst LawyerDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default LawyerDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const Chart = () => {\n  const state = {\n    series: [110, 110, 19, 80],\n    options: {\n      chart: {\n        height: 500,\n        type: \"donut\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"55%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Matter by Type\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      colors: [\"#03a5fc\", \"#fcd200\", \"#fca400\", \"#003f5c\"],\n      labels: [\n        \"Business Contacts\",\n        \"Criminal Defence\",\n        \"Personal Injury\",\n        \"Family Law\",\n      ],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"donut\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            // background: \"#333\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"solid\",\n      gradient: {\n        shade: \"dark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\"],\n        stops: [0, 100],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"Profit\",\n        data: [640, 505, 210, 108, 760, 410, 440, 140, 660, 320],\n      },\n      {\n        name: \"Loss\",\n        data: [530, 302, 420, 220, 290, 800, 160, 490, 708, 110],\n      },\n    ],\n\n    options: {\n      colors: [\"#e85355\", \"#28c570\"],\n      chart: {\n        height: 100,\n        type: \"bar\",\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n        },\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function (val) {\n          return \"$\" + val;\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return \"$ \" + val + \"\";\n          },\n        },\n      },\n\n      xaxis: {\n        categories: [\n          \"Jan\",\n          \"Feb\",\n          \"Mar\",\n          \"Apr\",\n          \"May\",\n          \"Jun\",\n          \"July\",\n          \"Aug\",\n          \"Sep\",\n          \"Oct\",\n        ],\n      },\n\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"right\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart2 = () => {\n  const state = {\n    series: [\n      {\n        data: [19, 57, 78, 40, 95, 25],\n      },\n    ],\n\n    options: {\n      chart: {\n        height: 350,\n        type: \"bar\",\n      },\n      colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n      plotOptions: {\n        bar: {\n          columnWidth: \"45%\",\n          distributed: true,\n        },\n      },\n      dataLabels: {\n        enabled: true,\n        formatter: function (val) {\n          return val + \"%\";\n        },\n      },\n      legend: {\n        show: false,\n      },\n      title: {\n        text: \"% of Task Completed by User\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      xaxis: {\n        categories: [\n          \"M. Jones\",\n          \"R. Smith\",\n          \"T.Sweeney\",\n          \"S. Booker\",\n          \"A. Knighter\",\n          \"J. King\",\n        ],\n        labels: {\n          style: {\n            // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n            fontSize: \"12px\",\n          },\n        },\n\n        legend: {\n          show: false,\n          dropShadow: false,\n          position: \"right\",\n          labels: {\n            useSeriesColors: true,\n          },\n          onItemClick: {\n            toggleDataSeries: true,\n          },\n          formatter: function (seriesName, opts) {\n            return (\n              seriesName +\n              \":  <NumberFormat value={\" +\n              opts.w.globals.series[opts.seriesIndex] +\n              \"} displayType={'text'} thousandSeparator={true}/>\"\n            );\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart3 = () => {\n  const state = {\n    // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n    options: {\n      series: [\n        {\n          data: [750, 280, 500, 720],\n        },\n      ],\n      chart: {\n        type: \"bar\",\n        height: 380,\n      },\n      plotOptions: {\n        bar: {\n          barHeight: \"100%\",\n          borderRadius: 8,\n          distributed: true,\n          horizontal: true,\n          dataLabels: {\n            position: \"top\",\n          },\n        },\n      },\n      //       light blue,  yellow, orange, dark blue,\n      colors: [\"#fcd200\", \"#fca400\", \"#003f5c\", \"#03a5fc\"],\n      dataLabels: {\n        enabled: false,\n        textAnchor: \"start\",\n        style: {\n          colors: [\"#fff\"],\n        },\n        formatter: function (val, opt) {\n          return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val;\n        },\n        offsetX: 0,\n        dropShadow: {\n          enabled: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        colors: [\"#fff\"],\n      },\n      xaxis: {\n        categories: [\n          \"Criminal Defense\",\n          \"Personal Injury\",\n          \"Family Law\",\n          \"Business Contract\",\n        ],\n      },\n      yaxis: {\n        labels: {\n          show: true,\n        },\n      },\n      title: {\n        text: \"Revenue By Mater Type\",\n        align: \"center\",\n        floating: true,\n      },\n\n      tooltip: {\n        theme: \"light\",\n        x: {\n          show: false,\n        },\n        y: {\n          formatter: function (val, opt) {\n            return (\n              opt.w.globals.labels[opt.dataPointIndex] + \": $ \" + val + \" k\"\n            );\n          },\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.options.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Paper, Grid, Box } from \"@mui/material\";\n\nimport Tasks from \"../Tasks\";\nimport { FirmCards } from \"../Cards\";\n\nimport { Chart, Chart2, BarChart, BarChart2, BarChart3 } from \"./Charts\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      {/*main dashboard section for display  */}\n      <Box component={Paper} elevation={3} mt={4}>\n        <Grid container spacing={2}>\n          <Grid item lg={8} xs={12}>\n            <FirmCards />\n            <Grid container>\n              <Grid item lg={5} xs={12}>\n                <Chart2 />\n              </Grid>\n              <Grid item lg={7} xs={12}>\n                <Tasks />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Chart />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <BarChart />\n          </Grid>\n          <Grid item lg={6} xs={6}>\n            <BarChart2 />\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <BarChart3 />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Firm/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst FirmDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default FirmDashboard;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport AdminDashboard from \"../components/Dashboard/UserRoles/AdminDashboard\";\nimport ClientDashboard from \"../components/Dashboard/UserRoles/ClientDashboard\";\nimport LawyerDashboard from \"../components/Dashboard/UserRoles/LawyerDashboard\";\nimport FirmDashboard from \"../components/Dashboard/UserRoles/FirmDashboard\";\n\nconst Dashboard = () => {\n\tconst { user } = useSelector((state) => state.auth.user);\n\n\t// checker type of user\n\tconst [localuser, setLocalUser] = useState({\n\t\tusername: \"Guest\",\n\t\tis_firm: false,\n\t\tis_lawyer: false,\n\t\tis_client: true,\n\t});\n\n\tuseEffect(() => {\n\t\tif (user) {\n\t\t\tsetLocalUser({\n\t\t\t\tusername: user.username,\n\t\t\t\tis_firm: user.is_firm,\n\t\t\t\tis_lawyer: user.is_lawyer,\n\t\t\t\tis_client: user.is_client,\n\t\t\t});\n\t\t}\n\t}, [user]);\n\n\tconst dashboardRedirect = () => {\n\t\tswitch (user.username) {\n\t\t\tcase \"admin\":\n\t\t\t\treturn <AdminDashboard />;\n\t\t\tcase \"firm\":\n\t\t\t\treturn <FirmDashboard />;\n\t\t\tcase \"lawyer\":\n\t\t\t\treturn <LawyerDashboard />;\n\t\t\tdefault:\n\t\t\t\treturn <ClientDashboard />;\n\t\t}\n\t};\n\treturn <>{dashboardRedirect()}</>;\n};\n\nexport default Dashboard;\n","/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { signIn, reset } from \"../../redux/features/authSlice\";\n\nimport {\n\tAvatar,\n\tButton,\n\tPaper,\n\tGrid,\n\tBox,\n\tTypography,\n\tTextField,\n} from \"@mui/material\";\nimport AlertMassage from \"../../components/Alerts/Alerts\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport { toast } from \"react-toastify\";\nimport BackgroundImage from \"../../asserts/login_light.png\";\n\nconst Login = () => {\n\tconst {\n\t\tuser,\n\t\tisLoading,\n\t\tisError,\n\t\tisSuccess,\n\t\tisAuthenticated,\n\t\tmessage,\n\t} = useSelector((state) => state.auth);\n\tconst [formData, setFormData] = useState({\n\t\tusername: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t});\n\n\tconst { username, email, password } = formData;\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif (isError) {\n\t\t\ttoast.error(message);\n\t\t}\n\n\t\tif (isAuthenticated) {\n\t\t\treturn <Redirect to='/' />;\n\t\t}\n\t}, [user, isError, isSuccess, message, dispatch]);\n\n\tconst onChange = (e) => {\n\t\tsetFormData((prevState) => ({\n\t\t\t...prevState,\n\t\t\t[e.target.name]: e.target.value,\n\t\t}));\n\t};\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst userData = {\n\t\t\tusername,\n\t\t\temail,\n\t\t\tpassword,\n\t\t};\n\n\t\tdispatch(signIn(userData));\n\t};\n\n\tif (isLoading) {\n\t\treturn \"Loading...\";\n\t}\n\tif (isAuthenticated) {\n\t\treturn <Redirect to='/' />;\n\t}\n\treturn (\n\t\t<Grid container component='main' sx={{ height: \"87vh\" }}>\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t\txs={false}\n\t\t\t\tsm={4}\n\t\t\t\tmd={8}\n\t\t\t\tsx={{\n\t\t\t\t\tbackgroundImage: `url(${BackgroundImage})`,\n\t\t\t\t\tbackgroundRepeat: \"no-repeat\",\n\t\t\t\t\tbackgroundColor: (t) =>\n\t\t\t\t\t\tt.palette.mode === \"light\"\n\t\t\t\t\t\t\t? t.palette.grey[50]\n\t\t\t\t\t\t\t: t.palette.grey[900],\n\t\t\t\t\tbackgroundSize: \"cover\",\n\t\t\t\t\tbackgroundPosition: \"center\",\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n\t\t\t\t<Box\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tmy: 8,\n\t\t\t\t\t\tmx: 4,\n\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t}}>\n\t\t\t\t\t<Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n\t\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t\t</Avatar>\n\t\t\t\t\t<Typography component='h1' variant='h5'>\n\t\t\t\t\t\tSign in\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Box\n\t\t\t\t\t\tcomponent='form'\n\t\t\t\t\t\tValidate\n\t\t\t\t\t\tsx={{ mt: 1 }}\n\t\t\t\t\t\tonSubmit={(e) => onSubmit(e)}>\n\t\t\t\t\t\t{/* csrf_token */}\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant='standard'\n\t\t\t\t\t\t\tid='username'\n\t\t\t\t\t\t\tlabel='Username'\n\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\tautoComplete='new-password'\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant='standard'\n\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\tlabel='Email Address'\n\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\tautoComplete='new-password'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant='standard'\n\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\tminLength='6'\n\t\t\t\t\t\t\tautoComplete='password'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tsx={{ mt: 3, mb: 2 }}>\n\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t\t<Link to='/' variant='body2'>\n\t\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Link to='/signup' variant='body2'>\n\t\t\t\t\t\t\t\t{\"Don't have an account? Sign Up\"}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default Login;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../../actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n  FormControlLabel,\n  FormLabel,\n  FormGroup,\n  Checkbox,\n  RadioGroup,\n  Radio,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/signup_light.png\";\n\nconst Signup = ({ register, isAuthenticated }) => {\n  const [accountCreated, setAccountCreated] = useState(false);\n  const [isFirm, setIsFirm] = useState(false);\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    re_password: \"\",\n  });\n\n  const { username, email, first_name, last_name, password, re_password } =\n    formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    let is_firm = isFirm;\n    let is_client = !isFirm;\n\n    if (password === re_password) {\n      register(\n        email,\n        first_name,\n        last_name,\n        username,\n        password,\n        re_password,\n        is_firm,\n        is_client,\n      );\n\n      setAccountCreated(true);\n    } else {\n      console.log(\"Password no match, Please type again!\");\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (accountCreated) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"85vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={(e) => onChange(e)}\n                  autoComplete=\"new-password\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"first_name\"\n                  label=\"First Name\"\n                  name=\"first_name\"\n                  value={first_name}\n                  onChange={(e) => onChange(e)}\n                  autoComplete=\"new-password\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"last_name\"\n                  label=\"Last Name\"\n                  name=\"last_name\"\n                  autoComplete=\"last_name\"\n                  value={last_name}\n                  onChange={(e) => onChange(e)}\n                  autoFocus\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={(e) => onChange(e)}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                value={password}\n                onChange={(e) => onChange(e)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"re_password\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                value={re_password}\n                onChange={(e) => onChange(e)}\n                id=\"re_password\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Sign up as a </FormLabel>\n              <RadioGroup\n                row\n                value={isFirm}\n                onChange={(e) => setIsFirm(e.target.value)}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Firm\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Individual\"\n                />\n              </RadioGroup>\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormGroup>\n                <FormControlLabel\n                  control={<Checkbox />}\n                  label=\"Agreed on Term and Contidions\"\n                />\n              </FormGroup>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Register\n            </Button>\n          </Box>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" variant=\"body2\">\n                {\"Already have an account? Sign in\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { register })(Signup);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  Divider,\n  FormControlLabel,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Company = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate: 0.0,\n    role: \"\",\n    time_zone: \"\",\n    group: \"\",\n    job_title: \"\",\n    bar_no: 0,\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: 0,\n    ext: 0,\n    mobile: 0,\n    home: 0,\n    work_no: 0,\n\n    phone_ext: 0,\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    role,\n    time_zone,\n    group,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      c_email,\n      rate,\n      role,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      p_email,\n      phone_ext,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Box p={3} sx={{ float: \"right\" }}>\n        <LinkButton to=\"/users\">Manage User</LinkButton>\n        <LinkButton to=\"/user-group\">Manage Group</LinkButton>\n        <LinkButton to=\"/user-role\">Manage Role</LinkButton>\n      </Box>\n\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create User\n        </Typography>\n        <Grid container spacing={2} mt={2}>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"f_name\"\n              label=\"f_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"m_name\"\n              label=\"m_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"m_name\"\n              autoComplete=\"m_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"l_name\"\n              label=\"l_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"c_email\"\n              label=\"c_email\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"c_email\"\n              autoComplete=\"c_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"rate\"\n              label=\"rate\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"rate\"\n              autoComplete=\"rate\"\n            />\n            <FormControlLabel\n              label=\"Round Entries (Round [up/down] to nearnest 0.00 fraction of the hour\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n              sx={{ width: \"35rem\" }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"role\"\n              label=\"role\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"role\"\n              autoComplete=\"role\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"time_zone\"\n              label=\"time_zone\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"time_zone\"\n              autoComplete=\"time_zone\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"group\"\n              label=\"group\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"group\"\n              autoComplete=\"group\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"job_title\"\n              label=\"job_title\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"job_title\"\n              autoComplete=\"job_title\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bar_no\"\n              label=\"bar_no\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bar_no\"\n              autoComplete=\"bar_no\"\n            />\n          </Grid>\n          <Grid item mt={2}>\n            <Divider textAlign=\"left\">\n              <Typography component=\"h3\" variant=\"h5\">\n                Contact Info\n              </Typography>\n            </Divider>\n            <Box>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"street\"\n                label=\"street\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"street\"\n                autoComplete=\"street\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"suite\"\n                label=\"suite\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"suite\"\n                autoComplete=\"suite\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"city\"\n                label=\"city\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"city\"\n                autoComplete=\"city\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"state\"\n                label=\"state\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"state\"\n                autoComplete=\"state\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"zip\"\n                label=\"zip\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"zip\"\n                autoComplete=\"zip\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"ext\"\n                label=\"ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"ext\"\n                autoComplete=\"ext\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"mobile\"\n                label=\"mobile\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"mobile\"\n                autoComplete=\"mobile\"\n              />\n              <Button\n                variant=\"contained\"\n                sx={{ background: \"#5cb85c\", marginTop: \"0.5rem\" }}\n              >\n                Set Password Automaticly\n              </Button>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"home\"\n                label=\"home\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"home\"\n                autoComplete=\"home\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"work_no\"\n                label=\"work_no\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"work_no\"\n                autoComplete=\"work_no\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"p_email\"\n                label=\"p_email\"\n                type=\"email\"\n                onChange={(e) => onChange(e)}\n                id=\"p_email\"\n                autoComplete=\"p_email\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"phone_ext\"\n                label=\"phone_ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"phone_ext\"\n                autoComplete=\"phone_ext\"\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Box\n              sx={{\n                \"& .MuiButton-root\": { m: 1 },\n                float: \"right\",\n              }}\n            >\n              <Button variant=\"contained\" type=\"submit\">\n                Create Member\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Company;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\nimport Filters from \"../../components/Matter/Filters\";\nimport MatterCards from \"../../components/Matter/MatterCards\";\nimport MatterListLong from \"../../components/Matter/MatterListLong\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item xs={12}>\n            <Filters />\n          </Grid>\n          <Grid item xs={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item xs={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Matters;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Switch,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Button,\n  TextField,\n  Box,\n  Grid,\n  MenuItem,\n  Typography,\n  Divider,\n  FormControlLabel,\n  Stack,\n} from \"@mui/material\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport NumberFormat from 'react-number-format';\nimport CreateUser from \"./CreateUser\";\nimport {\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useToggle } from \"../../context/useToggle\";\n\nconst User = () => {\n  const [usersData, setUsersData] = useState([]);\n\n  const [isActive, setIsActive] = useToggle(false);\n  const [searchItem, setSearchItem] = useState(\"\")\n\n  const [roles, setRoles] = useState([]);\n  const [role, setRole] = useState(\"\");\n  const [group, setGroup] = useState(\"\");\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [rateType, setRateType] = useState(\"\");\n\n  const handleChange = (event) => {\n    setRateType(event.target.value);\n  };\n\n  const [approvel, setApprovel] = useToggle(false);\n\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate_type: \"\",\n    rate: \" \",\n    time_zone: \"\",\n    job_title: \"\",\n    bar_no: \" \",\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    ext: \"\",\n    mobile: \"\",\n    home: \"\",\n    work_no: \"\",\n    p_email: \"\",\n    phone_ext: \"\",\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    time_zone,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const first_name = f_name;\n    const last_name = l_name;\n    const username = f_name.toLowerCase() + l_name.toLowerCase()\n    const password = username\n    const email = c_email\n    const body1 = JSON.stringify({username, first_name, last_name, email, password})\n    const body2 = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      p_email,\n      role,\n      c_email,\n      rate,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      phone_ext,\n    });\n    const axiosReguest1 = axios.post(`${process.env.REACT_APP_API_URL}/user/auth/register-firm-employee/`,body1, CONFIG)\n    const axiosReguest2 = axios.post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body2, CONFIG)\n      axios.all(axiosReguest1, axiosReguest2)   \n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/create-member/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handlleDeactivate = (id) => {\n    \n    axios\n      .put(\n        `${process.env.REACT_APP_API_URL}/user/auth/is-active-user/${id}/`, false,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchRoleData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, CONFIG)\n      .then((res) => {\n        // console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setRoles(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  const FetchGroupData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/groups/`, CONFIG)\n      .then((res) => {\n        setLoading2(false);\n        console.log(res.data)\n        setGroups(res.data);\n      })\n      .catch((err) => {\n        setLoading2(false);\n      });\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/users-list/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setUsersData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchRoleData();\n    FetchData();\n    FetchGroupData();\n  }, []);\n  const showUsers = () => {\n    if (usersData.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return usersData.filter((val)=>{\n        if (searchItem === \"\"){\n          return val\n        } else if(val.first_name.toLowerCase().includes(searchItem.toLowerCase())) {\n          return val\n        }else if(val.last_name.toLowerCase().includes(searchItem.toLowerCase())) {\n          return val\n        }\n\n      }).map((data) => {if(isActive){\n        return data.is_active ? (<TableRow>\n          <TableCell>{data.first_name}</TableCell>\n          <TableCell>{data.last_name}</TableCell>\n          <TableCell>{data.email}</TableCell>\n          <TableCell>{data.role}</TableCell>\n          <TableCell>{data.group}</TableCell>\n          <TableCell>{data.last_login}</TableCell>\n          <TableCell>{data.is_active ? \"active\":\"inactive\"}</TableCell>\n          {/* <TableCell>\n            <Button\n              variant=\"contained\"\n              value={data.is_active}\n              onClick={() => handlleDeactivate(data.id)}\n              sx={{\n                borderRadius: \"0.5rem\",\n                float: \"right\",\n              }}\n            >\n              <ClearIcon />\n            </Button>\n          </TableCell> */}\n          <TableCell></TableCell>\n        </TableRow>) : null\n      }\n    else return <TableRow>\n          <TableCell>{data.first_name}</TableCell>\n          <TableCell>{data.last_name}</TableCell>\n          <TableCell>{data.email}</TableCell>\n          <TableCell>{data.role}</TableCell>\n          <TableCell>{data.group}</TableCell>\n          <TableCell>{data.last_login}</TableCell>\n          <TableCell>{data.is_active ? \"active\":\"inactive\"}</TableCell>\n          {/* <TableCell>\n            <Button\n              variant=\"contained\"\n              value={data.is_active}\n              onClick={() => handlleDeactivate(data.id)}\n              sx={{\n                borderRadius: \"0.5rem\",\n                float: \"right\",\n              }}\n            >\n              <ClearIcon />\n            </Button>\n          </TableCell> */}\n          <TableCell></TableCell>\n        </TableRow>});\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <Typography component=\"h4\" variant=\"h5\" color=\"primary\" mb={2}>\n          Manage Users\n        </Typography>\n        <Stack p={3} direction=\"row\" spacing={2} sx={{ float: \"right\" }}>\n          <Search sx={{ width: \"15rem\" }}>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange ={e => setSearchItem(e.target.value)}\n            />\n          </Search>\n          <Button\n            color=\"success\"\n            onClick={handleClickOpen}\n            variant=\"contained\"\n            sx={{ color: \"white\", background: \"#28c570\" }}\n          >\n            + Add User\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth=\"true\"\n            maxWidth=\"xl\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New User\"}</DialogTitle>\n            <DialogContent>\n              <Grid\n                container\n                spacing={2}\n                mt={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\", \"input::-webkit-outer-spin-button\": {\n                    webkitAappearance: \"none\"\n                  },  },\n                }}\n\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"f_name\"\n                    label=\"First Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"f_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"m_name\"\n                    label=\"Middle Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"m_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"l_name\"\n                    label=\"Last Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"l_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"c_email\"\n                    label=\"Company Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"c_email\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n              \n                  <NumberFormat\n                      id=\"rate\"\n                      customInput={TextField}\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"rate\"\n                      label=\"Rate $\"\n                      onChange={(e) => onChange(e)}\n                      format=\"####.##\"\n                      type=\"tel\"\n                      autoComplete=\"new-password\"\n                      thousandSeparator={true}\n                    />\n                </Grid>\n                <Grid item lg={6}>\n                  <Stack direction=\"row\" spacing={2} ml={2}>\n                    <FormControlLabel\n                      sx={{ fontSize: \"2rem\" }}\n                      label=\"\"\n                      control={\n                        <Switch\n                          checked={approvel}\n                          onChange={() => setApprovel(approvel)}\n                        />\n                      }\n                    />\n                    <Typography>\n                      Round Entries (Round [up/down] to nearnest\n                      <TextField\n                        margin=\"dense\"\n                        variant=\"standard\"\n                        type=\"text\"\n                        size=\"small\"\n                        placeholder=\"0.00\"\n                        sx={{\n                          maxWidth: \"5rem\",\n                        }}\n                      />\n                      fraction of the hour\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"role\"\n                    label=\"Role\"\n                    onChange={(e) => setRole(e.target.value)}\n                    id=\"role\"\n                    autoComplete=\"new-password\"\n                  >\n                    {!loading ? (\n                      roles.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"time_zone\"\n                    label=\"Time Zone\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"time_zone\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"group\"\n                    label=\"Group\"\n                    type=\"text\"\n                    onChange={(e) => setGroup(e.target.value)}\n                    id=\"group\"\n                    autoComplete=\"new-password\"\n                  >\n                    {!loading2 ? (\n                      groups.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"job_title\"\n                    label=\"Job Title\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"job_title\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                   <NumberFormat\n                      customInput={TextField}\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"bar_no\"\n                      label=\"Bar #\"\n                      onChange={(e) => onChange(e)}\n                      id=\"bar_no\"\n                      autoComplete=\"new-password\"\n                      format=\"######\"\n                      type=\"tel\"\n                    />\n                </Grid>\n              </Grid>\n              <Box mt={4} mb={2}>\n                <Divider />\n                <Typography mt={2} component=\"h3\" color=\"primary\" variant=\"h5\">\n                  Contact Info\n                </Typography>\n              </Box>\n\n              <Grid\n                container\n                spacing={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\" },\n                }}\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"street\"\n                    label=\"Street\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"street\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"suite\"\n                    label=\"Suite\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"suite\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"city\"\n                    label=\"City\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"city\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"state\"\n                    label=\"State\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"state\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"#####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"zip\"\n                      label=\"Zip\"\n                      type=\"tel\"\n                      onChange={(e) => onChange(e)}\n                      id=\"zip\"\n                      autoComplete=\"new-password\"\n                    />\n                </Grid>\n                <Grid item lg={3}> \n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"ext\"\n                      label=\"+4\"\n                      type=\"tel\"\n                      onChange={(e) => onChange(e)}\n                      id=\"ext\"\n                      autoComplete=\"new-password\"\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"p_email\"\n                    label=\"Personal Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"p_email\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <Box mt={1} ml={1}>\n                    <Button variant=\"contained\" color=\"primary\">\n                      Reset Password\n                    </Button>\n                  </Box>\n                </Grid>\n                <Grid item lg={3}>\n                  \n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                       size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"mobile\"\n                      label=\"Mobile #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"mobile\"\n                      autoComplete=\"new-password\"\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                       size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"home\"\n                      label=\"Home #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"home\"\n                      autoComplete=\"new-password\"\n                    />\n                </Grid>\n                <Grid item lg={3}>\n                  <NumberFormat\n                      customInput={TextField}\n                      format=\"### ### ####\"\n                      size=\"small\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"work\"\n                      label=\"Work #\"\n                      type=\"phone\"\n                      onChange={(e) => onChange(e)}\n                      id=\"work\"\n                      autoComplete=\"new-password\"\n                    />\n                </Grid>\n                <Grid item lg={3}>\n              \n                  <NumberFormat\n                    customInput={TextField}\n                    format=\"####\"\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"phone_ext\"\n                    label=\"Extesion\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"phone_ext\"\n                    autoComplete=\"new-password\"\n                    />\n                </Grid>\n              </Grid>\n              <Grid item lg={12}>\n                <Box\n                  sx={{\n                    \"& .MuiButton-root\": { m: 1, mr:5 },\n                    float: \"right\",\n                    color:\"white\"\n                  }}\n                >\n                  <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    type=\"submit\"\n                    sx={{ color: \"white\" }}\n                    \n                  >\n                    Activate\n                  </Button>\n                  \n                  <Button variant=\"contained\" color=\"warning\"sx={{color:\"#fff\"}}>\n                    Deactivate\n                  </Button>\n                  <Button variant=\"contained\" color=\"error\" sx={{color:\"#fff\"}}>\n                    Delete\n                  </Button>\n                </Box>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n            </DialogActions>\n          </Dialog>\n        </Stack>\n\n        <TableContainer>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  <Typography color=\"white\">First Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Role</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Group</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Login</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Status</Typography>\n                </TableCell>\n                \n                <TableCell>\n                  <Switch\n                    color=\"success\"\n                    value={isActive}\n                    onChange={() => setIsActive()}\n                  />\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {!loading ? showUsers() : <Typography>Loading ...</Typography>}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default User;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  Table,\n  Paper,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Stack,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst ManageUserGroup = () => {\n  const [filter, setFilter] = useState(\"\");\n  const [searchItem, setSearchItem] = useState(\"\")\n\n  const handleChange = (event) => {\n    setFilter(event.target.value);\n  };\n  const [group, setGroup] = useState([]);\n  const [usersData, setUsersData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingUser, setLoadingUser] = useState(true);\n  const [status, setStatus] = useState(\"\")\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchUserData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        // setLoading(false);\n        setStatus(res.statusText);\n        setUsersData(res.data);\n        setLoadingUser(false);\n        console.log(usersData)\n\n      })\n      .catch((err) => {\n        setLoadingUser(false);\n      });\n  };\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/user/auth/groups/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setGroup(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n    FetchUserData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/user/auth/groups/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/user/auth/groups/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const showGroup = () => {\n    if (group.length === 0) {\n      return <p> No data found...</p>;\n    } else {\n      return group.map((data) => (\n        <Box mt={1}>\n          <List>\n            <ListItem disablePadding>\n              <ListItemText>{data.name}</ListItemText>\n              <Button\n                variant=\"contained\"\n                value={data.id}\n                onClick={() => handleDelete(data.id)}\n                sx={{\n                  borderRadius: \"0.5rem\",\n                  float: \"right\",\n                }}\n              >\n                <ClearIcon />\n              </Button>\n            </ListItem>\n          </List>\n        </Box>\n      ));\n    }\n  };\n  const showUser = () => {\n    if (usersData.length === 0) {\n      return <p>No data found...</p>;\n    } else\n      return usersData.filter((val)=>{\n        if (searchItem === \"\"){\n          return val\n        } else if((filter === \"group\") && (val.group.toLowerCase().includes(searchItem.toLowerCase()))) {\n          return val\n        }else if((filter === \"role\") &&(val.role.toLowerCase().includes(searchItem.toLowerCase()))){\n          return val\n        }\n        else if((filter === \"name\") &&(val.l_name.toLowerCase().includes(searchItem.toLowerCase()))){\n          return val\n        }\n        else if((filter === \"name\") &&(val.f_name.toLowerCase().includes(searchItem.toLowerCase()))){\n          return val\n        }\n      }).map((data) => \n          <TableRow>\n            <TableCell>{data.f_name}</TableCell>\n            <TableCell>{data.l_name} </TableCell>\n            <TableCell>{data.role}</TableCell>\n            <TableCell>{data.group}</TableCell>\n          </TableRow>\n  );\n    \n  };\n  return (\n    <Fragment>\n      <Grid container spacing={3}>\n        <Grid item lg={12}>\n          <Grid container spacing={3} direction=\"row\">\n            <Grid item lg={3}>\n              <Typography variant=\"h5\" component=\"h5\" m={1} color=\"primary\">\n                Manage Group\n              </Typography>\n            </Grid>\n            <Grid item lg={9}>\n              <Stack direction=\"row\" sx={{ float: \"right\" }}>\n                <Typography m={2} component=\"span\" color=\"primary\">\n                  Filter & Sort By\n                </Typography>\n                <FormControl sx={{ width: \"10rem\", height: \"2.5rem\" }}>\n                  <InputLabel id=\"demo-simple-select-label\" color=\"primary\">\n                    Custom Sort\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={filter}\n                    label=\"Age\"\n                    onChange={handleChange}\n                  >\n                    <MenuItem value=\"name\">By Name</MenuItem>\n                    <MenuItem value=\"role\">By Role</MenuItem>\n                    <MenuItem value=\"group\">By Group</MenuItem>\n                  </Select>\n                </FormControl>\n                <Search sx={{ width: \"20rem\", height: \"2.5rem\", m: 1 }}>\n                  <SearchIconWrapper>\n                    <SearchIcon />\n                  </SearchIconWrapper>\n                  <StyledInputBase\n                    placeholder=\"Search…\"\n                    inputProps={{ \"aria-label\": \"search\" }}\n                    onChange ={e => setSearchItem(e.target.value)}\n                  />\n                </Search>\n              </Stack>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3} component={Paper} p={3} elevation={3}>\n          <Typography\n            variant=\"h5\"\n            component=\"h5\"\n            color=\"primary\"\n            align=\"center\"\n          >\n            Groups\n          </Typography>\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            fullWidth\n            sx={{\n              borderRadius: \"0.5rem\",\n            }}\n          >\n            + New Group\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New Group\"}</DialogTitle>\n            <DialogContent>\n              <TextField\n                required\n                fullWidth\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"name\"\n                label=\"Group Name\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n              <Button type=\"submit\" autoFocus>\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {!loading ? showGroup() : <Typography>Loading ...</Typography>}\n        </Grid>\n        <Grid item lg={9}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow bgColor=\"#796ef0\">\n                  <TableCell>\n                    <Typography color=\"white\">First Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Last Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Role</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Group</Typography>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>{!loadingUser ? showUser() : <>Loading.. </>}</TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item lg={12}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"success\" sx={{ color: \"white\" }}>\n              Done\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageUserGroup;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport {\n\tTable,\n\tTableCell,\n\tTableContainer,\n\tTableHead,\n\tTableRow,\n\tTableBody,\n\tButton,\n\tList,\n\tGrid,\n\tBox,\n\tTypography,\n\tListItem,\n\tListItemText,\n\tIconButton,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogTitle,\n\tTextField,\n\tPaper,\n} from \"@mui/material\";\nimport RectangleIcon from \"@mui/icons-material/Rectangle\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n\tgetPermissions,\n\treset,\n\tupdateIsView,\n\tupdateIsEdit,\n\tupdateIsCreate,\n\tupdateIsDelete,\n\tupdateIsContacts,\n\tupdateIsTeam,\n\tupdateIsOffice,\n\tupdateIsRegion,\n\tupdateIsAll,\n} from \"../../redux/features/permissionSlice\";\nimport { useToggle } from \"../../context/useToggle\";\n\nconst ManageRole = () => {\n\tconst dispatch = useDispatch();\n\tconst [allValue, setAllValue] = useToggle(false);\n\n\tconst { user } = useSelector((state) => state.auth);\n\tconst { updateData, setUpdateData } = useState([]);\n\tconst { permissions, isLoading, isError, message } = useSelector(\n\t\t(state) => state.permissions,\n\t);\n\n\tconst [roles, setRoles] = useState([]);\n\tconst [role, setRole] = useState(null);\n\tconst [loading, setLoading] = useState(true);\n\tconst [error, setError] = useState(\"\");\n\tconst [status, setStatus] = useState(\"\");\n\n\tconst [formData, setFormData] = useState({\n\t\tname: \"\",\n\t});\n\n\tconst { name } = formData;\n\n\tconst onChange = (e) =>\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n\n\tconst [open, setOpen] = useState(false);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\tconst FetchData = () => {\n\t\taxios\n\t\t\t.get(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, CONFIG)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetStatus(res.statusText);\n\t\t\t\tsetRoles(res.data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetError(err.message);\n\t\t\t});\n\t};\n\tuseEffect(() => {\n\t\tFetchData();\n\t}, []);\n\tconst handleDelete = (id) => {\n\t\taxios\n\t\t\t.delete(`${process.env.REACT_APP_API_URL}/user/auth/roles/${id}/`, CONFIG)\n\t\t\t.then((res) => {\n\t\t\t\tFetchData();\n\t\t\t\treturn (\n\t\t\t\t\t<ActionAlerts\n\t\t\t\t\t\tvalue={{ status: res.statusText, message: \"Success\" }}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t});\n\t};\n\tconst selectRole = (id) => {\n\t\tsetRole(id);\n\t\tdispatch(getPermissions(id));\n\t};\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst body = JSON.stringify({ name });\n\t\taxios\n\n\t\t\t.post(`${process.env.REACT_APP_API_URL}/user/auth/roles/`, body, CONFIG)\n\t\t\t.then((res) => {\n\t\t\t\tFetchData();\n\t\t\t\treturn (\n\t\t\t\t\t<ActionAlerts\n\t\t\t\t\t\tvalue={{ status: res.statusText, message: \"Success\" }}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tFetchData();\n\t\t\t\treturn (\n\t\t\t\t\t<ActionAlerts\n\t\t\t\t\t\tvalue={{ status: err.statusText, message: \"Success\" }}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t});\n\t};\n\tconst onClickChange = (id, value, position, permission) => {\n\t\tconst buttons = [\n\t\t\tpermission.is_view,\n\t\t\tpermission.is_edit,\n\t\t\tpermission.is_create,\n\t\t\tpermission.is_delete,\n\t\t\tpermission.is_contacts,\n\t\t\tpermission.is_team,\n\t\t\tpermission.is_office,\n\t\t\tpermission.is_region,\n\t\t];\n\t\tbuttons[position] = value === 1 ? true : false;\n\t\tconst is_view = buttons[0];\n\t\tconst is_edit = buttons[1];\n\t\tconst is_create = buttons[2];\n\t\tconst is_delete = buttons[3];\n\t\tconst is_contacts = buttons[4];\n\t\tconst is_team = buttons[5];\n\t\tconst is_office = buttons[6];\n\t\tconst is_region = buttons[7];\n\t\tconst body = JSON.stringify({\n\t\t\tis_view,\n\t\t\tis_edit,\n\t\t\tis_create,\n\t\t\tis_delete,\n\t\t\tis_contacts,\n\t\t\tis_team,\n\t\t\tis_office,\n\t\t\tis_region,\n\t\t});\n\t\taxios\n\t\t\t.put(\n\t\t\t\t`${process.env.REACT_APP_API_URL}/user/auth/permissions/${id}/`,\n\t\t\t\tbody,\n\t\t\t\tCONFIG,\n\t\t\t)\n\t\t\t.then((res) => {\n\t\t\t\tdispatch(getPermissions(id));\n\t\t\t})\n\t\t\t.catch((err) => {});\n\t};\n\tconst clickAllValue = (id) => {\n\t\tsetAllValue(allValue);\n\t\tdispatch(\n\t\t\tupdateIsAll({\n\t\t\t\tid: id,\n\t\t\t\tvalue: allValue,\n\t\t\t}),\n\t\t);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Grid container spacing={2}>\n\t\t\t\t<Grid item lg={12}></Grid>\n\t\t\t\t<Grid item lg={2} component={Paper} elevation={5}>\n\t\t\t\t\t<Box p={2}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tonClick={handleClickOpen}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tborderRadius: \"0.5rem\",\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t+ New Role\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\tcomponent='form'\n\t\t\t\t\t\t\tValidate\n\t\t\t\t\t\t\tonSubmit={(e) => handleSubmit(e)}\n\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\n\t\t\t\t\t\t\taria-describedby='alert-dialog-description'>\n\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>\n\t\t\t\t\t\t\t\t{\"Add New Role\"}\n\t\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\tlabel='Role Name'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\t\t\tid='name'\n\t\t\t\t\t\t\t\t\tautoComplete='name'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t<Button onClick={handleClose}>Close</Button>\n\t\t\t\t\t\t\t\t<Button type='submit' autoFocus>\n\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\troles.map((data, index) => (\n\t\t\t\t\t\t\t\t<Box key={index}>\n\t\t\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t\t\t<ListItem disablePadding>\n\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.id === role\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? { backgroundColor: \"#796ef0\", color: \"white\" }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => selectRole(data.id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{data.name}\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={data.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleDelete(data.id)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"0.5rem\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfloat: \"right\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ClearIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Typography>Loading ...</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item lg={10}>\n\t\t\t\t\t<TableContainer sx={{ overflowX: \"auto\" }}>\n\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\"fontSize\": \"1rem\",\n\t\t\t\t\t\t\t\t\"&MuiTableCell\": {\n\t\t\t\t\t\t\t\t\tborder: \"solid 2px black\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t\t<TableRow bgColor='#796ef0'>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Function</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>View </Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Edit</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Create</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Delete</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Contacts</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Team</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Office</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>Region</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Typography color='white'>All</Typography>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t{role !== null && permissions.permissions.length > 0 ? (\n\t\t\t\t\t\t\t\t\tpermissions.permissions.map((permission, index) => (\n\t\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>{permission.name}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch(updateIsView(permission.id));\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermission.is_view\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch(updateIsEdit(permission.id));\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermission.is_edit\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch(updateIsCreate(permission.id));\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermission.is_create\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch(updateIsDelete(permission.id));\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermission.is_delete\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\n\t\t\t\t\t\t\t\t\t\t\t{permission.name === \"Contact\" ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch(updateIsContacts(permission.id));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermission.is_contacts\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch(updateIsTeam(permission.id));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermission.is_team\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch(updateIsOffice(permission.id));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermission.is_office\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch(updateIsRegion(permission.id));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpermission.is_region\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => clickAllValue(permission.id)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tallValue\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#4BB543\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#4BB545\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"backgroundColor\": \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label='toggle'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RectangleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>please selete a role</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</TableContainer>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Fragment>\n\t);\n};\n\nexport default ManageRole;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport CreateUser from \"./CreateUser\";\nimport ManageUser from \"./ManageUser\";\nimport User from \"./User\"\nimport ManageUserGroup from \"./ManageUserGroup\";\n// import UserRole from \"./UserRole\";\nimport ManageRole from \"./ManageRole\"\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <ManageUser/>\n      {/* <Tabs>\n        <div label=\"Manage Users\">\n          <ManageUser />\n        </div>\n\n        <div label=\"User Group\">\n          <ManageUserGroup />\n        </div>\n        <div label=\"User Role\">\n          <ManageRole />\n        </div>\n      </Tabs> */}\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst TimeList = () => {\n  const [timeData, setTimeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTimeData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <Box>\n        <LinkButton to=\"/ledgers\" sx={{ float: \"right\" }}>\n          Ledger Dashboard\n        </LinkButton>\n        <Box p={3}>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Ledger Dashbaord\n          </LinkButton>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Add Time\n          </LinkButton>\n          <LinkButton to=\"/ledger-list\" sx={{ float: \"right\" }}>\n            Ledger List\n          </LinkButton>\n          <LinkButton to=\"/ledger-documents\" sx={{ float: \"right\" }}>\n            Documents\n          </LinkButton>\n        </Box>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Add</TableCell>\n\n                <TableCell>Matter #</TableCell>\n                <TableCell>Matter Name</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Billable Time</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell>Category</TableCell>\n                <TableCell>Activity</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n              ? null\n              : timeData?.map((data) => {\n                  return (\n                    <TableBody id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n\n                      <TableCell>{data.conatact}</TableCell>\n                      <TableCell>{data.date}</TableCell>\n                      <TableCell>{data.time}</TableCell>\n                      <TableCell>{data.rate}</TableCell>\n                      <TableCell>{data.category}</TableCell>\n                      <TableCell>{data.sub_category}</TableCell>\n                    </TableBody>\n                  );\n                })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TimeList;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Switch, FormControlLabel } from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Search = () => {\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [searchData, setSearchData] = useState({\n    state: \"\",\n    city: \"\",\n    practice_area: \"\",\n    law_school: \"\",\n\n    undergrad_study: \"\",\n    lamguages: \"\",\n    admitted_state: \"\",\n    relocate: false,\n  });\n\n  const {\n    state,\n    city,\n    practice_area,\n    law_school,\n\n    undergrad_study,\n    lamguages,\n    admitted_state,\n    relocate,\n  } = searchData;\n\n  const onChange = (e) =>\n    setSearchData({ ...searchData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"number\"\n              min=\"0\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Longest tenure (months / years)\"\n              id=\"longest_tenure\"\n              name=\"longest_tenure\"\n              value={longestTenure}\n              type=\"text\"\n              onValueChange={(e) => setLongestTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Average tenure (months / years)\"\n              value={averageTenure}\n              id=\"average_tenure\"\n              name=\"average_tenure\"\n              type=\"text\"\n              onValueChange={(e) => setAverageTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time at Current Company (months / years)\"\n              id=\"current_tenure\"\n              name=\"current_tenure\"\n              value={currentTenure}\n              type=\"text\"\n              onValueChange={(e) => setCurrentTenure(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"admitted_state\"\n              label=\"admitted_state\"\n              type=\"text\"\n              value={admitted_state}\n              onChange={(e) => onChange(e)}\n              id=\"admitted_state\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={gradYear}\n              onValueChange={(e) => setGradYear(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"undergrad_study\"\n              label=\"undergrad_study\"\n              step=\"0.01\"\n              type=\"text\"\n              value={undergrad_study}\n              onChange={(e) => onChange(e)}\n              id=\"undergrad_study\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"practice_area\"\n              label=\"practice_area\"\n              type=\"text\"\n              value={practice_area}\n              onChange={(e) => onChange(e)}\n              id=\"practice_area\"\n              disabled\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance Date\"\n              id=\"bar_admit_date\"\n              name=\"bar_admit_date\"\n              value={barDate}\n              onValueChange={(e) => setBarDate(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"lamguages\"\n              label=\"lamguages\"\n              type=\"text\"\n              value={lamguages}\n              onChange={(e) => onChange(e)}\n              id=\"lamguages\"\n            />\n            {/* <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Apply\n            </Button> */}\n            <Box m={3}>\n              <LinkButton to=\"/job-result\" sx={{ float: \"right\" }}>\n                Apply\n              </LinkButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Search;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\n// import axios from \"axios\";\n// import { CONFIG } from \"../../api/MatterApi\";\n// import { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Result = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(\"\");\n  // const [status, setStatus] = useState(\"\");\n  //   const FetchData = () => {\n  //     axios\n  //       .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n  //       .then((res) => {\n  //         setLoading(false);\n  //         setStatus(res.statusText);\n  //         setActivityData(res.data);\n  //       })\n  //       .catch((err) => {\n  //         setLoading(false);\n  //         setStatus(err.statusText);\n  //       });\n  //   };\n  //   useEffect(() => {\n  //     FetchData();\n  //   }, []);\n  return (\n    <Fragment>\n      <Box>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Rate</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Name</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">City</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">State</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Active</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Grage Year</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practice Area</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Relocation</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practicing</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading ? (\n              <TableBody>\n                <TableRow>\n                  <TableCell>74%</TableCell>\n                  <TableCell>Smith, John</TableCell>\n                  <TableCell>San Diego</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2000</TableCell>\n                  <TableCell>Criminal</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>22y - 03M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>72%</TableCell>\n                  <TableCell>Cassidy, Butch</TableCell>\n                  <TableCell>Los Angeles</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>2021</TableCell>\n                  <TableCell>Transctional</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>0y - 02M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>50%</TableCell>\n                  <TableCell>Short, Mart</TableCell>\n                  <TableCell>Sacramento</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2013</TableCell>\n                  <TableCell>Civil</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>06y - 11M</TableCell>\n                </TableRow>\n              </TableBody>\n            ) : (\n              activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })\n            )} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Result;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  FormControlLabel,\n  FormGroup,\n  Checkbox,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Saved = () => {\n  const [pickTime, setPickTime] = useState(new Date(\"2021-12-01T21:00:00\"));\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [jobData, setJobData] = useState({\n    name: \"\",\n    state: \"\",\n    city: \"\",\n    email: \"\",\n    mobile: \"\",\n    home: \"\",\n    law_school: \"\",\n    grad_year: \"\",\n    bar_adm_year: \"\",\n    practice_area: \"\",\n    mail_add: \"\",\n    relocate: false,\n    date: \"\",\n    time: \"\",\n    link: \"\",\n    notes: \"\",\n    file: \"\",\n  });\n\n  const {\n    name,\n    state,\n    city,\n    email,\n    mobile,\n    home,\n    law_school,\n    grad_year,\n    bar_adm_year,\n    practice_area,\n    mail_add,\n    relocate,\n    date,\n    time,\n    link,\n    notes,\n    file,\n  } = jobData;\n\n  const onChange = (e) =>\n    setJobData({ ...jobData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <FormGroup aria-label=\"position\" row>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Save\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Contacted\"\n                labelPlacement=\"start\"\n              />\n              <Typography component=\"label\" m={1}>\n                Interested :\n              </Typography>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Yes\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"No\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Interviewed\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Accept\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Reject\"\n                labelPlacement=\"start\"\n              />\n              <Box ml={3}>\n                <Typography component=\"h4\" color=\"success\" variant=\"h5\">\n                  Overall Score: 74%\n                </Typography>\n              </Box>\n            </FormGroup>\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"name\"\n              label=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(e) => onChange(e)}\n              id=\"name\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email\"\n              label=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              id=\"email\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobile}\n              onValueChange={(value) => onChange(value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={home}\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={grad_year}\n              onValueChange={(value) => onChange(value)}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance\"\n              id=\"bar_adm_year\"\n              name=\"bar_adm_year\"\n              value={bar_adm_year}\n              type=\"text\"\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"mail_add\"\n              label=\"mail_add\"\n              type=\"text\"\n              value={mail_add}\n              onChange={(e) => onChange(e)}\n              id=\"mail_add\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xs={4}>\n                <Box m={1}>\n                  <Typography component=\"lable\"> Writing Sample </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <TimePicker\n                    label=\"Pick Time\"\n                    name=\"picktime\"\n                    id=\"picktime\"\n                    value={pickTime}\n                    onChange={(e) => {\n                      setPickTime(e);\n                    }}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    inputFormat=\"yyyy-MM-dd\"\n                    mask=\"____-__-__\"\n                    label=\"Pick Date\"\n                    value={pickDate}\n                    name=\"pickdate\"\n                    id=\"pickdate\"\n                    onChange={(e) => setPickDate(e)}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n\n                <TextField\n                  size=\"small\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"link\"\n                  type=\"link\"\n                  defaultValue=\"2021-12-01\"\n                  value={link}\n                  onChange={(e) => onChange(e)}\n                  id=\"link\"\n                />\n              </Grid>\n              <Grid item xs={8}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={8}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"notes\"\n                  type=\"text\"\n                  value=\"Notes ...\"\n                  id=\"notes\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Saved;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport Search from \"./Search\";\nimport Result from \"./Result\";\nimport Saved from \"./Saved\";\nconst index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Search\">\n          <Search />\n        </div>\n        <div label=\"Result\">\n          <Result />\n        </div>\n        <div label=\"Saved\">\n          <Saved />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default index;\n","/** @format */\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nimport { Provider } from \"react-redux\";\n\nimport store, { persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport Layout from \"./hocs/Layout\";\n\nimport PrivateRoutes from \"./utils/PrivateRoute\";\n\nimport { UserProvider } from \"./context/User\";\n\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"./hocs/Theme\";\n\nimport Home from \"./containers/Home\";\n\n// Authentication links\nimport Login from \"./containers/Auth/Login\";\nimport Signup from \"./containers/Auth/Signup\";\n\nimport Profile from \"./components/Profile/Profile\";\nimport Company from \"./components/Profile/Company\";\n\nimport Matter from \"./components/Matter\";\n\nimport Matters from \"./containers/Matters/Matters\";\nimport MatterDetail from \"./components/Matter/MatterDetail\";\nimport NewMatter from \"./components/Matter/NewMatter\";\n\nimport Invoice from \"./components/Invoice\";\n\nimport CreateInvoice from \"./components/Invoice/CreateInvoice\";\n\nimport Payment from \"./components/Invoice/Payment\";\nimport ManageCategory from \"./components/Category/ManageCategory\";\n\nimport User from \"./components/User\";\n\nimport Time from \"./components/Ledger/Time\";\nimport TimeList from \"./components/Ledger/TimeList\";\n\nimport Ledger from \"./components/Ledger\";\n\nimport LedgerTImeList from \"./components/Ledger/LedgerTImeList\";\nimport LedgerActivity from \"./components/Ledger/LedgerActivity\";\n\nimport Tasks from \"./components/Tasks\";\nimport CreateTask from \"./components/Tasks/CreateTask\";\nimport ViewTasks from \"./components/Tasks/ViewTasks\";\nimport LedgerDoc from \"./components/Ledger/LedgerDoc\";\n\nimport Employee from \"./components/Employee\";\nimport Templates from \"./components/Template/Templates\";\n\nimport Contact from \"./components/Contact/Contact\";\nimport UserRole from \"./components/User/UserRole\";\nimport ManageRole from \"./components/User/ManageRole\";\nimport ManageUserGroup from \"./components/User/ManageUserGroup\";\n\nconst App = () => {\n  const alertOptions = {\n    timeout: 3000,\n    position: \"top center\",\n  };\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <UserProvider>\n          <ThemeProvider theme={theme}>\n            <AlertProvider template={AlertTemplate} {...alertOptions}>\n              <Router>\n                <Layout>\n                  <Switch>\n                    {/* loging regierter routes */}\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/signup\" component={Signup} />\n\n                    {/* private route after login  */}\n\n                    <PrivateRoutes exact path=\"/\" component={Home} />\n                    <PrivateRoutes path=\"/profile\" component={Profile} />\n                    <PrivateRoutes path=\"/company-detail\" component={Company} />\n\n                    <PrivateRoutes\n                      path=\"/matter-dashboard\"\n                      component={Matter}\n                    />\n                    <PrivateRoutes path=\"/matters\" component={Matters} />\n                    <PrivateRoutes\n                      path=\"/matter-detail\"\n                      component={MatterDetail}\n                    />\n                    <PrivateRoutes\n                      path=\"/create-matter\"\n                      component={NewMatter}\n                    />\n\n                    <PrivateRoutes path=\"/invoices\" component={Invoice} />\n                    <PrivateRoutes\n                      path=\"/create-invoice\" \n                      component={CreateInvoice}\n                    />\n                    <PrivateRoutes path=\"/recive-invoice\" component={Payment} />\n\n                    {/* <PrivateRoutes path=\"/create-user\" component={CreateUser} /> */}\n                    <PrivateRoutes path=\"/users\" component={User} />\n                    <PrivateRoutes path=\"/user-roles\" component={ManageRole} />\n                    <PrivateRoutes\n                      path=\"/user-groups\"\n                      component={ManageUserGroup}\n                    />\n\n                    <PrivateRoutes\n                      path=\"/manage-categories\"\n                      component={ManageCategory}\n                    />\n                    <PrivateRoutes\n                      path=\"/ledger-documents\"\n                      component={LedgerDoc}\n                    />\n                    <PrivateRoutes path=\"/time\" component={Time} />\n                    <PrivateRoutes path=\"/time-list\" component={TimeList} />\n                    <PrivateRoutes path=\"/ledgers\" component={Ledger} />\n                    <PrivateRoutes\n                      path=\"/ledger-list\"\n                      component={LedgerTImeList}\n                    />\n                    <PrivateRoutes\n                      path=\"/activity-list\"\n                      component={LedgerActivity}\n                    />\n\n                    <PrivateRoutes path=\"/tasks\" component={Tasks} />\n                    <PrivateRoutes path=\"/create-task\" component={CreateTask} />\n                    <PrivateRoutes path=\"/view-tasks\" component={ViewTasks} />\n\n                    <PrivateRoutes\n                      path=\"/employee-search\"\n                      component={Employee}\n                    />\n\n                    <PrivateRoutes path=\"/templates\" component={Templates} />\n                    <PrivateRoutes path=\"/contact\" component={Contact} />\n                  </Switch>\n                </Layout>\n              </Router>\n            </AlertProvider>\n          </ThemeProvider>\n        </UserProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { Box } from \"@mui/material\";\n// import NumberFormat from \"react-number-format\";\n\nexport const Appointments = () => {\n  const options = {\n    chart: {\n      type: \"bar\",\n      height: 500,\n    },\n    series: [\n      {\n        data: [\n          {\n            x: \"Zoom\",\n            y: 150,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Phone\",\n            y: 250,\n            fillColor: \"#546E7A\",\n            strokeColor: \"#546E7A\",\n          },\n          {\n            x: \"In Person\",\n            y: 500,\n            fillColor: \"#f48024\",\n            strokeColor: \"#f48024\",\n          },\n          {\n            x: \"Met\",\n            y: 300,\n            fillColor: \"#13d8aa\",\n            strokeColor: \"#13d8aa\",\n          },\n          {\n            x: \"Rescheduled\",\n            y: 125,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Canceled\",\n            y: 30,\n            fillColor: \"#A5978B\",\n            strokeColor: \"#A5978B\",\n          },\n        ],\n      },\n    ],\n\n    options: {\n      plotOptions: {\n        bar: {\n          barHeight: \"50%\",\n          borderRadius: 4,\n\n          horizontal: true,\n          dataLabels: {\n            position: \"bottom\",\n          },\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      title: {\n        text: \"Appointments\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n    },\n    xaxis: {\n      style: {\n        fontSize: \"20px\",\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={options.options}\n          series={options.series}\n          height=\"300\"\n          type=\"bar\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\nexport const Marketing = () => {\n  const config = {\n    series: [\n      {\n        name: \"Google\",\n        data: [10, 51, 35, 41, 29, 62, 99, 41, 18],\n      },\n      {\n        name: \"Youtube\",\n        data: [10, 80, 35, 41, 99, 62, 79, 21, 68],\n      },\n      {\n        name: \"Website\",\n        data: [60, 21, 45, 41, 89, 62, 59, 71, 98],\n      },\n    ],\n    options: {\n      chart: {\n        height: 250,\n        toolbar: {\n          show: false,\n        },\n      },\n\n      legend: {\n        position: \"top\",\n        horizontalAlign: \"right\",\n        onItemHover: {\n          highlightDataSeries: true,\n        },\n        labels: {\n          colors: \"#dddddd\",\n          useSeriesColors: true,\n        },\n      },\n\n      dataLabels: {\n        enabled: false,\n      },\n\n      stroke: {\n        curve: \"smooth\",\n        width: 2,\n      },\n\n      title: {\n        text: \"Marketing\",\n        align: \"left\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      xaxis: {\n        categories: [\n          \"31/01\",\n          \"01/02\",\n          \"02/03\",\n          \"03/04\",\n          \"31/05\",\n          \"04/06\",\n          \"06/07\",\n          \"02/08\",\n          \"09/09\",\n        ],\n        style: {\n          fontSize: \"20px\",\n        },\n      },\n\n      yaxis: {},\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={config.options}\n        series={config.series}\n        height=\"250\"\n        type=\"line\"\n      />\n    </Fragment>\n  );\n};\nexport const Calls = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 300,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Calls\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Inbound\", \"Outbound\", \"Sales\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const Email = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total Emails\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function(w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Email\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Send\", \"Open\", \"Delete\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function(seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueInActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueInCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 460;\n      case \"weekly\":\n        return 3254;\n      case \"monthly\":\n        return 32564;\n      case \"quarterly\":\n        return 130256;\n      case \"yearly\":\n        return 521024;\n      case \"range\":\n        return 1500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue In\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueInCards);\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueOutActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueOutCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 35;\n      case \"weekly\":\n        return 240;\n      case \"monthly\":\n        return 4520;\n      case \"quarterly\":\n        return 18080;\n      case \"yearly\":\n        return 72320;\n      case \"range\":\n        return 500;\n    }\n  };\n  return (\n    <Grid container>\n      <Grid item lg={12}>\n        <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n          Revenue out\n        </Typography>\n        <Typography\n          variant=\"h3\"\n          mt={3}\n          component=\"h4\"\n          sx={{ fontSize: \"2.2rem\" }}\n        >\n          <NumberFormat\n            value={amount()}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix=\"$\"\n          />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueOutCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { newCustomerActive } from \"../../../../redux/features/sidebarSlice\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const NewCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 2;\n      case \"weekly\":\n        return 23;\n      case \"monthly\":\n        return 69;\n      case \"quarterly\":\n        return 200;\n      case \"yearly\":\n        return 610;\n      case \"range\":\n        return 10;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              New Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 23 : 69}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={23}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={69}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={15}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={50}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={200}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(newCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </IconButton>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(NewCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Button,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { lostCustomerActive } from \"../../../../redux/features/sidebarSlice\";\n\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const LostCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 0;\n      case \"weekly\":\n        return 0;\n      case \"monthly\":\n        return 3;\n      case \"quarterly\":\n        return 6;\n      case \"yearly\":\n        return 15;\n      case \"range\":\n        return 3;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item lg={6}>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              Lost Customers\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={2}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={isWeekly ? 0 : 3}\n                displayType={\"text\"}\n                thousandSeparator={true}\n              />\n            </Typography>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <ul style={{ listStyleType: \"none\" }}>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Today:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Week:</span>\n                  <NumberFormat\n                    value={0}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>This Month:</span>\n                  <NumberFormat\n                    value={3}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Week:</span>\n                  <NumberFormat\n                    value={1}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Month:</span>\n                  <NumberFormat\n                    value={2}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                  <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                  <NumberFormat\n                    value={6}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </li>\n              <li>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField size=\"small\" {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField size=\"small\" {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              </li>\n            </ul>\n          </Grid>\n          {/* <Grid lg={1}>\n                <Button\n                  component={IconButton}\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(lostCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </Button>\n              </Grid> */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(LostCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport { Circle } from \"@mui/icons-material\";\nimport MAP_STYLE from \"../../../utils/style.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapboxWorker from \"mapbox-gl/dist/mapbox-gl-csp-worker\";\nmapboxgl.workerClass = MapboxWorker;\n\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\";\n\nconst Map = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 38.7577,\n    longitude: -95.4376,\n    zoom: 3,\n  });\n\n  return (\n    <Fragment>\n      <ReactMapGL\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle={MAP_STYLE}\n        onViewportChange={setViewport}\n        mapboxApiAccessToken={\n          \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\"\n        }\n        style={{ zIndex: 200 }}\n      >\n        <Marker\n          latitude={40.7128}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={47.6062}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={41.8781}\n          longitude={-87.6298}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n      </ReactMapGL>\n    </Fragment>\n  );\n};\n\nexport default Map;\n","/** @format */\n\nimport {\n  Paper,\n  Box,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  TableCell,\n} from \"@mui/material\";\nimport React, { Fragment } from \"react\";\n\nconst NewAccounts = () => {\n  return (\n    <Fragment>\n      <Box p={1}>\n        <Typography color=\"blue\">New Accounts</Typography>\n        <TableContainer>\n          <Table fullWidth>\n            <TableHead color=\"blue\">\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"blue\">Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"blue\">City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Typography>Username</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>Phone#</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>City/State</Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewAccounts;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Box, Grid, Typography } from \"@mui/material\";\n\nimport NumberFormat from \"react-number-format\";\n\nconst EmpOversite = () => {\n  return (\n    <Fragment>\n      <Typography color=\"blue\" sx={{ fontSize: \"1.1rem\" }}>\n        Employee Oversite\n      </Typography>\n      <Typography variant=\"h3\" component=\"h3\" sx={{ fontSize: \"1.8rem\" }}>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.1rem\" }}>\n        Employees logged in\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"purple\" }}> Total ticket issued:</span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"seagreen\" }}>Trouble ticket Resolved: </span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n    </Fragment>\n  );\n};\n\nexport default EmpOversite;\n","/** @format */\n\nimport React from \"react\";\n\nimport {\n  IconButton,\n  Typography,\n  Card,\n  CardContent,\n  CardActions,\n} from \"@mui/material\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { Appointments, Calls, Marketing, Email } from \"../Charts\";\n\nimport RevenueInCards from \"../Cards/RevenueIn\";\nimport RevenueOutCards from \"../Cards/RevenueOut\";\nimport NewCustomerCards from \"../Cards/NewCustomer\";\nimport LostCustomerCards from \"../Cards/LostCustomer\";\n\nimport Map from \"../Map\";\n\nimport NewAccounts from \"../NewAccounts\";\nimport EmpOversite from \"../EmpOversite\";\n\nconst widgetNames = {\n  a: <RevenueInCards />,\n  b: <RevenueOutCards />,\n  c: <NewCustomerCards />,\n  d: <LostCustomerCards />,\n  e: <NewAccounts />,\n  f: <Map />,\n  g: <EmpOversite />,\n  h: <Calls />,\n  i: <Appointments />,\n  j: <Marketing />,\n  k: <Email />,\n};\n\nexport default function Widget({ id, onRemoveItem }) {\n  return (\n    <Card\n      sx={{\n        width: \"100%\",\n        height: \"100%\",\n        paddingTop: \"0.5rem\",\n        padding: \"1rem\",\n      }}\n    >\n      <CardActions>\n        <IconButton\n          aria-label=\"delete\"\n          onClick={() => onRemoveItem(id)}\n          sx={{ position: \"fixed\", right: \"16px\" }}\n        >\n          <CloseIcon fontSize=\"small\" />\n        </IconButton>\n      </CardActions>\n      {widgetNames[id]}\n    </Card>\n  );\n}\n"],"sourceRoot":""}