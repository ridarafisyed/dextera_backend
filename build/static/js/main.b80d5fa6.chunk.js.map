{"version":3,"sources":["components/Tabs/tabs.module.css","asserts/login_light.png","asserts/signup_light.png","reducers/profile.js","reducers/errors.js","reducers/messages.js","reducers/auth.js","reducers/data.js","redux/features/sidebarSlice.js","reducers/index.js","actions/types.js","store.js","actions/messages.js","actions/auth.js","context/useToggle.jsx","styles/styles.jsx","components/Navbars/Navbar.jsx","actions/data.js","components/Chat/Chat.jsx","components/Dashboard/Calender.jsx","components/Tasks/ViewTasks.jsx","components/Favorite/Favorites.jsx","components/Navbars/NavbarSec.jsx","components/Sidebar/TestingSidebar.jsx","components/Sidebar/Sidebar.jsx","components/Footer/Footer.jsx","hocs/Layout.js","utils/PrivateRoute.js","context/User/reducer.js","context/User/index.js","hocs/Theme.js","components/Dashboard/Admin/Charts.jsx","components/Dashboard/Admin/Cards/RevenueIn.jsx","components/Dashboard/Admin/Cards/RevenueOut.jsx","components/Dashboard/Admin/Cards/NewCustomer.jsx","components/Dashboard/Admin/Cards/LostCustomer.jsx","components/Dashboard/Admin/Map.jsx","components/Dashboard/Admin/NewAccounts.jsx","components/Dashboard/Admin/EmpOversite.jsx","components/Dashboard/Admin/DashBoard.jsx","components/Tabs/Tabs.jsx","components/Invoice/CreateInvoice.jsx","components/Invoice/Payment.jsx","components/Invoice/Filters.jsx","components/Invoice/InvoiceList.jsx","components/Invoice/index.jsx","api/MatterApi.js","utils/ActionAlerts.js","components/Matter/MatterList.jsx","components/Matter/Cards.jsx","components/Matter/Calendar.jsx","components/Matter/Filters.jsx","components/Matter/MatterCards.jsx","components/Matter/MatterListLong.jsx","components/Matter/NewMatter.jsx","components/Matter/MatterDetail.jsx","components/Matter/index.jsx","components/Ledger/LedgerActivity.jsx","components/Ledger/Fillters.jsx","components/Ledger/LedgerCards.jsx","components/Ledger/LedgerTImeList.jsx","components/Ledger/LedgerDashbard.jsx","components/Ledger/LedgerDoc.jsx","components/Ledger/Time.jsx","components/Ledger/index.jsx","components/Category/SubCategory.jsx","components/Category/Category.jsx","components/Category/Classification.jsx","components/Category/ManageCategory.jsx","components/Contact/Contact.jsx","components/Profile/Profile.js","components/Tasks/CreateTask.jsx","components/Tasks/index.jsx","components/Dashboard/UserRoles/AdminDashboard.jsx","components/Dashboard/ProgressBar.jsx","components/Dashboard/Tasks.jsx","components/Dashboard/Cards.jsx","components/Dashboard/Client/DashBoard.jsx","components/Template/Templates.jsx","components/Dashboard/UserRoles/ClientDashboard.jsx","components/Dashboard/Lawyer/Chart.jsx","components/Dashboard/Lawyer/DashBoard.jsx","components/Dashboard/UserRoles/LawyerDashboard.jsx","components/Dashboard/Firm/Charts.jsx","components/Dashboard/Firm/DashBoard.jsx","components/Dashboard/UserRoles/FirmDashboard.jsx","containers/Home.js","containers/Auth/Login.js","containers/Auth/Signup.js","components/Profile/Company.jsx","containers/Matters/Matters.jsx","components/User/ManageUser.jsx","components/User/ManageUserGroup.jsx","components/User/RoleFuncions.jsx","components/User/UserRole.jsx","components/User/index.jsx","components/Ledger/TimeList.jsx","components/Employee/Search.jsx","components/Employee/Result.jsx","components/Employee/Saved.jsx","components/Employee/index.jsx","App.jsx","index.js","asserts/logo_white copy.png"],"names":["module","exports","tabs","current","content","__webpack_require__","p","initialState","profile","msg","status","token","localStorage","getItem","isAuthenticated","isLoading","user","isWeekly","sidebarSlice","createSlice","name","manageUser","manageRole","manageGroup","revenueIn","revenueOut","newCustomer","lostCustomer","newAccount","appointment","marketing","empOversite","emails","calls","map","display","reducers","isDisplay","state","manageRoleActive","manageUserActive","manageGroupActive","revenueInActive","revenueOutActive","newCustomerActive","lostCustomerActive","newAccountActive","appointmentActive","marketingActive","empOversiteActive","emailsActive","callsActive","mapActive","actions","combineReducers","auth","arguments","length","undefined","action","type","Object","objectSpread","payload","setItem","removeItem","errors","messages","data","sidebar","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","persistor","persistStore","returnErrors","logout","dispatch","getState","axios","post","concat","process","tokenConfig","then","res","catch","err","response","config","headers","Content-Type","useToggle","_useState","useState","_useState2","slicedToArray","isToggled","setIsToggled","useCallback","SideBarBtn","styled","Button","_ref","theme","fontSize","textTransform","color","textAlign","width","height","margin","borderColor","padding","&:hover","backgroundColor","palette","primary","main","&:visited","SecNavbar","_ref2","boxShadow","position","FooterBar","_ref3","bottom","left","alignContent","FooterLink","Link","_ref4","fontFamily","fontWeight","textDecoration","marginTop","FooterButton","_ref5","marginX","paddingX","LinkButton","_ref6","borderRadius","cursor","Search","_ref7","marginRight","spacing","marginLeft","SearchIconWrapper","_ref8","pointerEvents","alignItems","justifyContent","StyledInputBase","InputBase","_ref9","& .MuiInputBase-input","defineProperty","paddingLeft","transition","transitions","create","breakpoints","up","MainSearch","_ref10","MainSearchIconWrapper","_ref12","StyledMainInputBase","_ref13","connect","updateIsWeekly","Intl","DateTimeFormat","resolvedOptions","timeZone","_useState3","Date","_useState4","currentTime","_useState5","_useState6","dateValue","setDateValue","_useToggle","_useToggle2","_useState7","_useState8","settingAcnchorEl","_useState9","Boolean","_useState10","redirect","_React$useState","React","_React$useState2","anchorEl","_React$useState3","_React$useState4","checked","setChecked","handleChange","event","target","react_default","a","createElement","react","Box","sx","flexGrow","component","AppBar","border","Toolbar","Typography","noWrap","xs","sm","react_router_dom","to","src","Logo","alt","style","Search_default","placeholder","inputProps","aria-label","md","variant","FormControl","InputLabel","id","Select","size","labelId","value","label","onChange","e","MenuItem","LocalizationProvider","dateAdapter","AdapterDateFns","DateRangePicker","startText","endText","newValue","renderInput","startProps","endProps","TextField","mx","react_number_format_es","displayType","thousandSeparator","prefix","ml","mr","toLocaleTimeString","hour","minute","hour12","Switch","defaultChecked","transform","react_router","ChatHistory","Chip","avatar","Avatar","float","Chatting","Chat_ChatHistory","& .MuiTextField-root","m","endIcon","Send_default","Calender","setValue","tasks","Paper","Grid","container","item","lg","LocalizationProvider_LocalizationProvider","StaticDatePicker","shouldDisableDate","isWeekend","handleOnChange","params","task","ViewTasks","Divider","my","Favorites","List","ListItem","disablePadding","ListItemButton","ListItemIcon","Star","ListItemText","href","openFav","setOpenFav","handleCloseFav","openCal","setOpenCal","handleCloseCal","openChat","setOpenChat","handleCloseChat","useHistory","username","is_firm","is_lawyer","is_client","localuser","setLocalUser","useEffect","_useState11","_useState12","setRedirect","_useState13","_useState14","setSettingAcnchorEl","_useState15","_useState16","settingAcnchorEl2","setSettingAcnchorEl2","open","openSetting2","openSetting","handleClose2","handleClick","currentTarget","handleClose","IconButton","onClick","anchorOrigin","vertical","horizontal","Message","Dialog","Validate","onClose","aria-labelledby","aria-describedby","right","DialogTitle","DialogContent","Chat","DialogActions","pathname","EmailRounded","CalendarToday","maxWidth","fullWidth","Dashboard_Calender","aria-controls","aria-expanded","aria-haspopup","CheckBox","Menu","MenuListProps","TransitionComponent","Fade","Favorite_Favorites","autoFocus","NotificationAdd","Person","Settings","Controls","px","AddCircle","Receipt","FileCopy","MoneyOff","esm_Task","Work","AssignmentTurnedIn","Marketing","useSelector","useDispatch","Mail","HumanResources","Group","RevenueControls","AccountControls","EmployeeOversite","disabled","Phone","accordionData","tiles","TestingSidebar_Controls","TestingSidebar_HumanResources","TestingSidebar_RevenueControls","TestingSidebar_AccountControls","TestingSidebar_Marketing","TestingSidebar_EmployeeOversite","TestingSidebar","accordions","updateAccordions","mt","react_beautiful_dnd_esm","onDragEnd","result","destination","items","Array","from","_items$splice","splice","source","index","reorderedItem","droppableId","provided","assign","className","droppableProps","ref","innerRef","draggableId","Accordion","draggableProps","dragHandleProps","AccordionSummary","expandIcon","ExpandMore_default","align","AccordionDetails","Stack","elevation","overflowY","Sidebar_TestingSidebar","Footer","setOpen","children","sidebarToggle","useTheme","drawerOpen","setDrawerOpen","openPopover","descriptionElementRef","useRef","descriptionElement","focus","contianer","rowSpacing","columnSpacing","Navbars_NavbarSec","Navbars_Navbar","direction","wrap","components_Sidebar_Sidebar","top","paddingY","class","components_Footer_Footer","Fab","zIndex","esm_Chat","Popover","transformOrigin","rest","objectWithoutProperties","active","UserContext","createContext","UserProvider","_React$useReducer","useReducer","_React$useReducer2","Provider","createTheme","mode","error","warning","success","contrastThreshold","tonalOffset","typography","htmlFontSize","LineChart2","options","chart","series","x","y","fillColor","strokeColor","plotOptions","bar","barHeight","dataLabels","enabled","title","text","xaxis","react_apexcharts_min_default","LineChart","toolbar","show","legend","horizontalAlign","onItemHover","highlightDataSeries","labels","colors","useSeriesColors","stroke","curve","categories","yaxis","RadialBarChart","radialBar","lable","total","formatter","w","floating","onItemClick","toggleDataSeries","seriesName","opts","globals","seriesIndex","RadialBarChart2","Card","element","CardContent","gutterBottom","amount","listStyleType","mapboxgl","workerClass","MapboxWorker","Map","latitude","longitude","zoom","viewport","setViewport","esm","mapStyle","MAP_STYLE","onViewportChange","mapboxApiAccessToken","offsetLeft","offsetTop","Circle","NewAccounts","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","EmpOversite","DashBoard","react_grid_layout_default","cols","rowHeight","data-grid","h","RevenueIn","RevenueOut","NewCustomer","LostCustomer","Admin_NewAccounts","Admin_Map","Admin_EmpOversite","Charts_RadialBarChart","Charts_LineChart2","Charts_LineChart","Charts_RadialBarChart2","Tabs","props","activeTab","setActiveTab","styles","tab","startIcon","MoreVert","newActiveTab","preventDefault","one","CreateInvoice","approvel","setApprovel","matter","contact","billable","date_range","create_date","due_date","template","invoice_no","discount","submit","invoiceData","setInvoiceData","dateRange","setDateRange","onSubmit","autoComplete","FormControlLabel","control","Checkbox","varient","DateRangePicker_DateRangePicker","calendars","InputLabelProps","shrink","PaymentPlan","payment_no","due","late_fee","total_due","payment","posted","method","paymentData","mb","paddingInline","InvoicePayment","tax","interest","time","hard","soft","Payment","isPlan","setIsPlan","payment_type","date","retainer","menu","bank_account","payment_method","RadioGroup","row","defaultValue","Radio","Payment_PaymentPlan","Payment_InvoicePayment","Filters","invoiceToggle","setInvoiceToggle","_useToggle3","_useToggle4","paymentToggle","setPaymentToggle","_useToggle5","_useToggle6","paid","setPaid","age","setAge","& .MuiFormControl-root","DialogContentText","Invoice_CreateInvoice","Invoice_Payment","styles_Search","styles_SearchIconWrapper","styles_StyledInputBase","InvoiceList","Invoice_Filters","Index","Invoice_InvoiceList","CONFIG","Accept","ActionAlerts","Alert","severity","TotalDays","date1","date2","dt1","dt2","Math","floor","UTC","getFullYear","getMonth","getDate","GetDate","MatterList","setTasks","setStatus","setLoading","redTask","setRedTask","greenTask","setGreenTask","yellowTask","setYellowTask","myTask","setMyTask","get","statusText","FormGroup","Cards","minWidth","Calendar","Box_Box","MatterCards","bgcolor","MatterListLong","setMatters","console","log","NewMatter","mask","openDate","setOpenDate","whenDate","setWhenDate","closeDate","setCloseDate","totalDays","setTotalDays","matter_name","matter_type","matter_source","matter_status","assign_to","assign_by","billing_rate","alerts","jurisdiction","status_limitaion","opposing_counsel","where","involved","witnesses","narrative","matterData","setMatterData","days","open_date","close_date","when","total_days","body","JSON","stringify","ActionAlerts_ActionAlerts","message","min","step","DatePicker","inputFormat","multiline","rows","Save_default","MatterTask","components","Activities","MatterDetail","MatterDetail_Activities","MatterDetail_MatterTask","MatterDetail_Cards","Matters","Matter_Filters","Matter_MatterCards","Matter_MatterListLong","MatterDashboard","Matter_MatterList","Matter_Calendar","Matter_Cards","components_Tabs_Tabs","Matter_MatterDashboard","Matter_Matters","Matter_NewMatter","Matter_MatterDetail","LedgerActivity","setActivityData","bgColor","Fillters","billedby","setBilledby","filter","setFilter","LedgerCards","f","decimalScale","fixedDecimalScale","LedgerTImeList","setLedgerData","LegderDashbard","Ledger_LedgerCards","Ledger_Fillters","Ledger_LedgerTImeList","LedgerDoc","minHeight","Time","pickDate","setPickDate","timeToggle","setTimeToggle","setBillable","setTime","category","sub_category","unit","qty","rate","file","detail","bill_by","note","timeData","setTimeData","labelPlacement","FormLabel","format","customInput","onValueChange","LedgerDashbard","Ledger_LedgerActivity","Ledger_LedgerDoc","Ledger_Time","SubCategory","subCategory","setSubCategory","loading","formData","setFormData","FetchData","handleSubmit","required","delete","Clear_default","Category","setCategory","setError","Classification","classification","setClassification","ManageCategory","components_Category_Category","Category_SubCategory","Category_Classification","Contact","_React$createElement","_React$createElement2","_React$createElement3","_React$createElement4","clientNo","setClientNo","dob","setDob","ssn","setSsn","mobileNo","setMobileNo","homeNo","setHomeNo","officeNo","setOfficeNo","faxNo","setFaxNo","otherNo","setOtherNo","_useState17","_useState18","zip","setZip","_useState19","_useState20","plus4","setPlus4","_useState21","_useState22","zip2","setZip2","_useState23","_useState24","plus42","setPlus42","_useState25","company_name","website","ger_email","billing_email","street","suite","city","f_name","l_name","email_1","email_2","email_3","street2","suite2","city2","state2","office","team","member","relation","_useState26","contactData","setContactData","persist","thousandsGroupStyle","autoWidth","gradYear","setGradYear","barDate","setBarDate","underGradYear","setUnderGradYear","phoneNo","setPhoneNo","barNo","setBarNo","practiceTime","setPracticeTime","longestTenure","setLongestTenure","averageTenure","setAverageTenure","currentTenure","setCurrentTenure","email","mobile","phone","language","locate","search_active","law_school","grad_year","bar_admit_date","undergrad_school","undergrad_area","undergrad_year","bar_no","admitted_practice","practice_time","longest_tenure","average_tenure","current_tenure","past_bar_companies_no","primary_area","TabContext","patch","borderBottom","TabList","Tab","TabPanel","KeyboardArrowRight_default","CreateTask","dueDate","setDueDate","bill","setBill","isPrivate","setIsPrivate","setFile","matter_id","matter_contact","filename","taskData","setTaskData","& .MuiSelect-root","due_at","is_billable","is_private","Tasks_ViewTasks","Tasks_CreateTask","Invoice","Matter","Ledger","Category_ManageCategory","components_Contact_Contact","components_Profile_Profile","Tasks","other","role","hidden","a11yProps","AdminDashboard","wordEntered","setWordEntered","handleChangeSearch","Admin_DashBoard","noValidate","Close_default","renderTabs","Tabs_Tabs","icon","iconPosition","esm_Close","AdminDashboard_TabPanel","ProgressBar","progress","paddingRight","LinearProgress","randomDate","start","end","getDateTime","getTime","random","toLocaleDateString","getHours","getMinutes","Task","LawyerCards","Fragment","postfix","FirmCards","CustomerCards","Cards_CustomerCards","Dashboard_Tasks","Dashboard_ProgressBar","Templates","ClientDashboard","Client_DashBoard","Template_Templates","PieChart","pie","donut","val","dropShadow","Chart2","startAngle","endAngle","track","background","hollow","fill","gradient","shade","gradientToColors","stops","BarChart","stacked","tooltip","opacity","offsetX","Cards_LawyerCards","Chart_PieChart","Chart_Chart2","Chart_BarChart","LawyerDashboard","Lawyer_DashBoard","Chart","BarChart2","columnWidth","distributed","BarChart3","textAnchor","opt","dataPointIndex","Cards_FirmCards","Charts_Chart2","Charts_Chart","Charts_BarChart","Charts_BarChart2","Charts_BarChart3","FirmDashboard","Firm_DashBoard","UserRoles_AdminDashboard","UserRoles_FirmDashboard","UserRoles_LawyerDashboard","UserRoles_ClientDashboard","dashboardRedirect","login","password","LoginSuccess","backgroundImage","BackgroundImage","backgroundRepeat","t","grey","backgroundSize","backgroundPosition","square","flexDirection","LockOutlined_default","minLength","register","accountCreated","setAccountCreated","isFirm","setIsFirm","first_name","last_name","re_password","Company","m_name","c_email","time_zone","group","job_title","ext","home","work_no","phone_ext","userData","setUserData","p_email","& .MuiButton-root","ManageUser","isActive","setIsActive","roles","setRoles","setRole","setGroup","groups","setGroups","loading2","setLoading2","rate_type","select","ManageUserGroup","setLoadingUser","RoleFuncions","overflowX","UserRole","User_RoleFuncions","User_ManageUser","User_ManageUserGroup","User_UserRole","TimeList","practice_area","undergrad_study","lamguages","admitted_state","relocate","searchData","setSearchData","Result","Saved","pickTime","setPickTime","bar_adm_year","mail_add","link","notes","jobData","setJobData","TimePicker","Employee_Search","Employee_Result","Employee_Saved","App","es","integration_react","User_UserProvider","ThemeProvider","react_alert","AlertTemplate","timeout","Layout","path","Login","Signup","PrivateRoute","exact","Home","Profile","User","Employee","ReactDOM","render","StrictMode","CssBaseline","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b80d5fa6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"tabs_tabs__2iP2q\",\"current\":\"tabs_current__UH0Eq\",\"content\":\"tabs_content__Vh0J0\"};","module.exports = __webpack_public_path__ + \"static/media/login_light.a12d3677.png\";","module.exports = __webpack_public_path__ + \"static/media/signup_light.181ee8a6.png\";","/** @format */\n\nimport { GET_PROFILE } from \"../actions/types\";\n\nconst initialState = {\n  profile: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROFILE:\n      return {\n        ...state,\n        profile: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {\n  msg: {},\n  status: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { CREATE_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CREATE_MESSAGE:\n      return (state = action.payload);\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload,\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport {\n  GET_IS_WEEKLY,\n  MONTLY_REVENUE,\n  WEEKLY_REVENUE,\n} from \"../actions/types\";\n\nconst initialState = {\n  isWeekly: \"daily\",\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_IS_WEEKLY:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case MONTLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n    case WEEKLY_REVENUE:\n      return {\n        ...state,\n        isWeekly: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  manageUser: true,\n  manageRole: true,\n  manageGroup: true,\n  revenueIn: true,\n  revenueOut: true,\n  newCustomer: true,\n  lostCustomer: true,\n  newAccount: true,\n  appointment: true,\n  marketing: true,\n  empOversite: true,\n  emails: true,\n  calls: true,\n  map: true,\n  display: true,\n};\n\nconst sidebarSlice = createSlice({\n  name: \"sidebar\",\n  initialState,\n  reducers: {\n    isDisplay: (state) => {\n      state.display = !state.display;\n    },\n\n    manageRoleActive: (state) => {\n      state.manageRole = !state.manageRole;\n    },\n    manageUserActive: (state) => {\n      state.manageUser = !state.manageUser;\n    },\n    manageGroupActive: (state) => {\n      state.manageGroup = !state.manageGroup;\n    },\n    revenueInActive: (state) => {\n      state.revenueIn = !state.revenueIn;\n    },\n    revenueOutActive: (state) => {\n      state.revenueOut = !state.revenueOut;\n    },\n    newCustomerActive: (state) => {\n      state.newCustomer = !state.newCustomer;\n    },\n    lostCustomerActive: (state) => {\n      state.lostCustomer = !state.lostCustomer;\n    },\n    newAccountActive: (state) => {\n      state.newAccount = !state.newAccount;\n    },\n    appointmentActive: (state) => {\n      state.appointment = !state.appointment;\n    },\n    marketingActive: (state) => {\n      state.marketing = !state.marketing;\n    },\n    empOversiteActive: (state) => {\n      state.empOversite = !state.empOversite;\n    },\n    emailsActive: (state) => {\n      state.emails = !state.emails;\n    },\n    callsActive: (state) => {\n      state.calls = !state.calls;\n    },\n    mapActive: (state) => {\n      state.map = !state.map;\n    },\n  },\n});\n\nexport const {\n  isDisplay,\n  manageRoleActive,\n  manageGroupActive,\n  manageUserActive,\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  lostCustomerActive,\n  newAccountActive,\n  appointmentActive,\n  marketingActive,\n  empOversiteActive,\n  emailsActive,\n  callsActive,\n  mapActive,\n} = sidebarSlice.actions;\nexport default sidebarSlice.reducer;\n","/** @format */\n\nimport { combineReducers } from \"redux\";\n// import leads from \"./leads\";\nimport profile from \"./profile\";\nimport errors from \"./errors\";\nimport messages from \"./messages\";\nimport auth from \"./auth\";\nimport data from \"./data\";\nimport sidebar from \"../redux/features/sidebarSlice\";\n\nexport default combineReducers({\n  auth,\n  profile,\n  errors,\n  messages,\n  data,\n  sidebar,\n});\n","/** @format */\n\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const DELETE_PROFILE = \"DELETE_PROFILE\";\nexport const ADD_PROFILE = \"ADD_PROFILE\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const CLEAR_PROFILES = \"CLEAR_PROFILES\";\nexport const MONTLY_REVENUE = \"GET_MONTLY_REVENUE\";\nexport const WEEKLY_REVENUE = \"GET_WEEKLY_REVENUE\";\nexport const GET_IS_WEEKLY = \"GET_IS_WEEKLY\";\nexport const UPDATE_IS_WEEKLY = \"UPDATE_IS_WEEKLY\";\n\nexport const CREATE_MEMBER_SUCCESS = \"CREATE_MEMBER_SUCCESS\";\nexport const CREATE_MEMBER_FAIL = \"CREATE_MEMBER_FAIL\";\n\nexport const GET_MEMBER_SUCCESS = \"GET_MEMBER_SUCCESS\";\nexport const GET_MEMBER_FAIL = \"GET_MEMBER_FAIL\";\n\nexport const GET_TIMEZONE_SUCCESS = \"GET_TIMEZONE_SUCCESS\";\nexport const GET_TIMEZONE_FAIL = \"GET_TIMEZONE_FAIL\";\nexport const GET_CURRENT_TIME_SCUSSESS = \"GET_CURRENT_TIME_SCUSSESS\";\nexport const GET_CURRENT_TIME_FAIL = \"GET_CURRENT_TIME_FAIL\";\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\n// export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\n// export const SIGNUP_FAIL = 'SIGNUP_FAIL';\n// export const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\n// export const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\n// export const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\n// export const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\n// export const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\n// export const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\n// export const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\n// export const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\n// export const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\n// export const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\n// export const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\n// export const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\n// export const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\n// export const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\n// export const LOGOUT = 'LOGOUT';\n\n// export const PROFILE_CREATED_SUCCESS = 'PROFILE_CREATED_SUCCESS';\n// export const PROFILE_CREATED_FAIL = 'PROFILE_CREATED_FAIL';\n\n// export const PROFILE_LOADED_SUCCESS = 'PROFILE_LOADED_SUCCESS';\n// export const PROFILE_LOADED_FAIL = 'PROFILE_LOADED_FAIL';\n\n// export const PROFILE_UPDATE_SUCCESS = 'PROFILE_UPDATE_SUCCESS';\n// export const PROFILE_UPDATE_FAIL = 'PROFILE_UPDATE_FAIL';\n","/** @format */\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./reducers\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({ reducer: persistedReducer });\n\nexport const persistor = persistStore(store);\n\nexport default store;\n","/** @format */\n\nimport { CREATE_MESSAGE, GET_ERRORS } from \"./types\";\n\n// CREATE MESSAGE\nexport const createMessage = (msg) => {\n  return {\n    type: CREATE_MESSAGE,\n    payload: msg,\n  };\n};\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status },\n  };\n};\n","/** @format */\n\nimport axios from \"axios\";\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from \"./types\";\nimport { createMessage, returnErrors } from \"./messages\";\n\n// CHECK TOKEN & LOAD USER\nexport const loadUser = () => (dispatch, getState) => {\n  // User Loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get(\n      `${process.env.REACT_APP_API_URL}/user/auth/user`,\n      tokenConfig(getState),\n    )\n    .then((res) => {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_ERROR,\n      });\n    });\n};\n\n// LOGIN USER\nexport const login = (username, email, password) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ username, password });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/user/auth/login`, body, config)\n    .then((res) => {\n      dispatch(createMessage({ LoginSuccess: \"Login Successful\" }));\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n      dispatch({});\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n    });\n};\n\n// REGISTER USER\nexport const register =\n  ({ username, email, password }) =>\n  (dispatch) => {\n    // Headers\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    // Request Body\n    const body = JSON.stringify({ username, email, password });\n\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/user/auth/register`, body, config)\n      .then((res) => {\n        dispatch({\n          type: REGISTER_SUCCESS,\n          payload: res.data,\n        });\n      })\n      .catch((err) => {\n        dispatch(returnErrors(err.response.data, err.response.status));\n        dispatch({\n          type: REGISTER_FAIL,\n        });\n      });\n  };\n\n// LOGOUT USER\nexport const logout = () => (dispatch, getState) => {\n  axios\n    .post(\n      `${process.env.REACT_APP_API_URL}/user/auth/logout`,\n      null,\n      tokenConfig(getState),\n    )\n    .then((res) => {\n      dispatch({ type: \"CLEAR_LEADS\" });\n      dispatch({\n        type: LOGOUT_SUCCESS,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n    });\n};\n\n// Setup config with token - helper function\nexport const tokenConfig = (getState) => {\n  // Get token from state\n  const token = getState().auth.token;\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // If token, add to headers config\n  if (token) {\n    config.headers[\"Authorization\"] = `Token ${token}`;\n  }\n\n  return config;\n};\n","/** @format */\n\nimport { useState, useCallback } from \"react\";\n\nexport const useToggle = (initialState) => {\n  const [isToggled, setIsToggled] = useState(initialState);\n\n  // put [setIsToggled] into the useCallback's dependencies array\n  // this value never changes so the callback is not going to be ever re-created\n  const toggle = useCallback(\n    () => setIsToggled((state) => !state),\n    [setIsToggled],\n  );\n\n  return [isToggled, toggle];\n};\n","/** @format */\n\n// import * as React from 'react';\nimport { styled } from \"@mui/material/styles\";\nimport { Link } from \"react-router-dom\";\nimport { Button, InputBase } from \"@mui/material\";\n\nexport const SideBarBtn = styled(Button)(({ theme }) => ({\n  fontSize: \"0.6em\",\n  textTransform: \"none\",\n  // color: theme.palette.primary.main,\n  color: \"#eee\",\n  textAlign: \"center\",\n  width: \"8em\",\n  height: \"8em\",\n  margin: \"0.7em\",\n  borderColor: \"#eee\",\n  padding: \"1em\",\n  \"&:hover\": {\n    backgroundColor: \"white\",\n    color: theme.palette.primary.main,\n  },\n  \"&:visited\": {\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport const SecNavbar = styled(\"nav\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  color: \"#eee\",\n  position: \"reletive\",\n  padding: \"0\",\n  margin: \"0\",\n  height: \"3.5rem\",\n  width: \"100%\",\n}));\n\nexport const FooterBar = styled(\"footer\")(({ theme }) => ({\n  boxShadow: \"none\",\n  backgroundColor: theme.palette.primary.main,\n  color: \"#eee\",\n  position: \"fixed\",\n  bottom: \"0\",\n  left: \"0\",\n\n  margin: \"0\",\n  height: \"2.5rem\",\n  textAlign: \"center\",\n  alignContent: \"center\",\n  width: \"100%\",\n}));\n\nexport const FooterLink = styled(Link)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  fontSize: \"1rem\",\n  textTransform: \"uppercase\",\n  fontWeight: 500,\n  textDecoration: \"none\",\n  marginTop: \"0.7rem\",\n  padding: \" 2rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\nexport const FooterButton = styled(Button)(({ theme }) => ({\n  color: \"#eee\",\n  fontFamily: \"Roboto\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  fontSize: \"1rem\",\n  fontWeight: 500,\n  marginX: \"2rem\",\n  paddingX: \"3rem\",\n  \"&:visited\": {\n    color: \"#eee\",\n  },\n}));\n\nexport const LinkButton = styled(Link)(({ theme }) => ({\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  textDecoration: \"none\",\n  margin: \"0.7em\",\n  backgroundColor: theme.palette.primary.main,\n  borderColor: \"#2979ff\",\n  color: \"white\",\n  padding: \"0.65rem 1.2rem\",\n  borderRadius: \"0.5rem\",\n  \"&:hover\": {\n    backgroundColor: \"#1c54b2\",\n    cursor: \"pointer\",\n    color: \"white\",\n  },\n}));\n\nexport const Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#ddd\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"40%\",\n}));\n\nexport const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\nexport const MainSearch = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: \"1.5rem\",\n  backgroundColor: \"#eee\",\n  \"&:hover\": {\n    backgroundColor: \"#eee\",\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(3),\n    width: \"auto\",\n  },\n}));\n\nexport const MainSearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nexport const StyledMainInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport NumberFormat from \"react-number-format\";\nimport { useToggle } from \"../../context/useToggle\";\n\n// styling imports\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  ListSubheader,\n  TextField,\n} from \"@mui/material\";\nimport {\n  MainSearch,\n  MainSearchIconWrapper,\n  StyledMainInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport Logo from \"../../asserts/logo_white copy.png\";\nimport { updateIsWeekly } from \"../../actions/data\";\n\nconst Navbar = ({\n  logout,\n  isAuthenticated,\n  user,\n  updateIsWeekly,\n  isWeekly,\n}) => {\n  let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const [today, setToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [dateValue, setDateValue] = useState([null, null]);\n\n  const timeFormater = () => {\n    if (checked) {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      });\n    } else {\n      return currentTime.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: false,\n      });\n    }\n  };\n  const [isChecked, setIsChecked] = useToggle(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n  const openSetting = Boolean(settingAcnchorEl);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleOnChage = (e) => {\n    updateIsWeekly(e.target.value);\n  };\n\n  const logout_user = () => {\n    logout();\n    setRedirect(true);\n  };\n\n  const guestLinks = () => (\n    <Fragment>\n      <Button component={Link} color=\"inherit\" to=\"/login\">\n        Login{\" \"}\n      </Button>\n      <Button component={Link} color=\"inherit\" to=\"/signup\">\n        Sign Up\n      </Button>\n    </Fragment>\n  );\n\n  const authLinks = () => (\n    <Fragment>\n      <Typography variant=\"h5\" component=\"h5\">\n        <Typography\n          component=\"span\"\n          variant=\"h5\"\n          color=\"primary\"\n          style={{ marginRight: \"0.5rem\" }}\n        >\n          Expected Balance :\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">\n              Expected Balance\n            </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={isWeekly}\n              label=\"Expected Balance\"\n              onChange={handleOnChage}\n            >\n              <MenuItem value=\"daily\">Daily</MenuItem>\n              <MenuItem value=\"weekly\">Weekly</MenuItem>\n              <MenuItem value=\"monthly\">Monthly</MenuItem>\n              <MenuItem value=\"quarterly\">Quarterly</MenuItem>\n              <MenuItem value=\"yearly\">Yearly</MenuItem>\n\n              <MenuItem value=\"range\">Custom Range</MenuItem>\n              {isWeekly === \"range\" ? (\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Start Date\"\n                    endText=\"End Date\"\n                    value={dateValue}\n                    onChange={(newValue) => {\n                      setDateValue(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <Fragment>\n                        <TextField {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField {...endProps} />\n                      </Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n              ) : null}\n            </Select>\n          </FormControl>\n        </Typography>\n        <NumberFormat\n          value={isWeekly ? 3254 : 32564}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix=\"$\"\n        />\n      </Typography>\n\n      <Typography variant=\"h5\" component=\"h5\" ml={1} mr={1}>\n        {\" \"}\n        |{\" \"}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h5\">\n        {timeFormater()}\n        <Switch\n          size=\"small\"\n          defaultChecked\n          checked={checked}\n          onChange={handleChange}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n          sx={{ transform: \"rotate(90deg)\" }}\n        />\n      </Typography>\n    </Fragment>\n  );\n  return (\n    <Fragment>\n      <Box sx={{ flexGrow: 1, backgroundColor: \"white\" }} component=\"nav\">\n        <AppBar position=\"static\" color=\"transparent\" sx={{ border: \"none\" }}>\n          <Toolbar>\n            <Typography\n              noWrap\n              component=\"div\"\n              sx={{ display: { xs: \"none\", sm: \"block\" } }}\n            >\n              <Link to=\"/\">\n                <img\n                  src={Logo}\n                  alt=\"logo\"\n                  style={{ height: \"2rem\", width: \"auto\" }}\n                />\n              </Link>\n            </Typography>\n            <MainSearch>\n              <MainSearchIconWrapper>\n                <SearchIcon />\n              </MainSearchIconWrapper>\n              <StyledMainInputBase\n                placeholder=\"Search…\"\n                inputProps={{ \"aria-label\": \"search\" }}\n              />\n            </MainSearch>\n            <Box sx={{ flexGrow: 1 }} />\n            <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\n              {isAuthenticated ? authLinks() : guestLinks()}\n            </Box>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps, { logout, updateIsWeekly })(Navbar);\n","/** @format */\n\n/** @format */ // import axios from \"axios\";\n\nimport { GET_IS_WEEKLY, MONTLY_REVENUE, WEEKLY_REVENUE } from \"./types\";\n// GET LEADS\nexport const updateIsWeekly = (data) => (dispatch) => {\n  if (data) {\n    dispatch({\n      type: WEEKLY_REVENUE,\n      payload: data,\n    });\n  } else {\n    dispatch({\n      type: MONTLY_REVENUE,\n    });\n  }\n};\n\nexport const getIsWeekly = () => (dispatch) =>\n  dispatch({\n    type: GET_IS_WEEKLY,\n    // payload: this.state,\n  });\n","/** @format */\n\nimport { Box, Typography, Button, TextField, Chip } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport React, { Fragment } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\n\nconst ChatHistory = () => {\n  return (\n    <Typography>\n      <Box\n        p={2}\n        sx={{\n          border: \"1px solid lightgray\",\n          borderRadius: \"1rem\",\n        }}\n      >\n        <Chip\n          label=\"Hi\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          size=\"large\"\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip label=\"Hello\" variant=\"outlined\" avatar={<Avatar>M</Avatar>} />\n        <br />\n        <Chip\n          label=\"Message by M\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"Message by D\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n        <Chip\n          label=\"this is just a ui design\"\n          variant=\"outlined\"\n          avatar={<Avatar>M</Avatar>}\n          sx={{ marginTop: \"1rem\" }}\n        />\n        <br />\n        <Chip\n          label=\"the chat feature is not working at backend\"\n          variant=\"outlined\"\n          avatar={<Avatar>D</Avatar>}\n          sx={{\n            float: \"right\",\n            marginTop: \"1rem\",\n          }}\n        />\n        <br />\n\n        <br />\n      </Box>\n    </Typography>\n  );\n};\n\nconst Chatting = () => {\n  return (\n    <Fragment>\n      <ChatHistory />\n      <br />\n      <Box\n        component=\"form\"\n        sx={{\n          //   border: \"1px solid lightgray\",\n          //   borderRadius: \"1rem\",\n          \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n        }}\n      >\n        <TextField type=\"text\" size=\"small\" variant=\"outlined\" />\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          endIcon={<SendIcon />}\n          type=\"submit\"\n          sx={{\n            m: 1,\n          }}\n        >\n          Send\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Chatting;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport isWeekend from \"date-fns/isWeekend\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport StaticDatePicker from \"@mui/lab/StaticDatePicker\";\nimport { TextField, Box, Paper, Grid } from \"@mui/material\";\n\nconst Calender = () => {\n  const [value, setValue] = useState(new Date());\n  const [tasks, setTasks] = useState([]);\n\n  const handleOnChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <Box component={Paper} m={2}>\n      <Grid container>\n        {\" \"}\n        <Grid item lg={6} xs={12}>\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <StaticDatePicker\n              value={value}\n              shouldDisableDate={isWeekend}\n              onChange={(e) => {\n                handleOnChange(e);\n              }}\n              renderInput={(params) => <TextField {...params} />}\n            />\n          </LocalizationProvider>\n        </Grid>{\" \"}\n        <Grid item lg={6} xs={12}>\n          {tasks.length !== 0 ? (\n            tasks.map((task) => (\n              <li>\n                {task.id} - {task.name}\n              </li>\n            ))\n          ) : (\n            <h4> No record found</h4>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Calender;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Menu, MenuItem, Divider } from \"@mui/material\";\n\nconst ViewTasks = () => {\n  return (\n    <Fragment>\n      <MenuItem>Profile</MenuItem>\n      <MenuItem>Account</MenuItem>\n      <MenuItem>Setting</MenuItem>\n      <Divider sx={{ my: 0.5 }} />\n      <MenuItem>Logout</MenuItem>\n    </Fragment>\n  );\n};\n\nexport default ViewTasks;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nimport { Star } from \"@mui/icons-material\";\n\nconst Favorites = () => {\n  return (\n    <div>\n      <List>\n        <ListItem disablePadding>\n          <ListItemButton>\n            <ListItemIcon>\n              <Star sx={{ color: \"orange\" }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Favorite 1\" />\n          </ListItemButton>\n        </ListItem>\n        <ListItem disablePadding>\n          <ListItemButton component=\"a\" href=\"#simple-list\">\n            <ListItemIcon>\n              <Star sx={{ color: \"orange\" }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Favorite 2\" />\n          </ListItemButton>\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default Favorites;\n","/** @format */\n/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport Chatting from \"../Chat/Chat\";\n\n// styling imports\nimport {\n  Box,\n  Toolbar,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  Fade,\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { SecNavbar } from \"../../styles/styles\";\n\nimport {\n  Message,\n  EmailRounded,\n  CalendarToday,\n  CheckBox,\n  Person,\n  NotificationAdd,\n  Settings,\n  Star,\n  StarBorder,\n} from \"@mui/icons-material/\";\nimport { useToggle } from \"../../context/useToggle\";\nimport Calender from \"../Dashboard/Calender\";\nimport ViewTasks from \"../Tasks/ViewTasks\";\nimport Favorites from \"../Favorite/Favorites\";\nimport serverTime from \"../../utils/ServerTime\";\n\nconst NavbarSec = ({ logout, isAuthenticated, user }) => {\n  const [openFav, setOpenFav] = useState(false);\n\n  const handleClickOpenFav = () => {\n    setOpenFav(true);\n  };\n\n  const handleCloseFav = () => {\n    setOpenFav(false);\n  };\n  const [openTask, setOpenTask] = useState(false);\n\n  const handleClickOpenTask = () => {\n    setOpenTask(true);\n  };\n\n  const handleCloseTask = () => {\n    setOpenTask(false);\n  };\n\n  const [openCal, setOpenCal] = useState(false);\n\n  const handleClickOpenCal = () => {\n    setOpenCal(true);\n  };\n\n  const handleCloseCal = () => {\n    setOpenCal(false);\n  };\n\n  const [openChat, setOpenChat] = useState(false);\n\n  const handleClickOpenChat = () => {\n    setOpenChat(true);\n  };\n\n  const handleCloseChat = () => {\n    setOpenChat(false);\n  };\n\n  const history = useHistory();\n  const [isLogout, setIsLogout] = useToggle(false);\n  const today = new Date();\n  const time = today.toLocaleTimeString();\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n  const [redirect, setRedirect] = useState(false);\n\n  const [settingAcnchorEl, setSettingAcnchorEl] = useState(null);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [settingAcnchorEl2, setSettingAcnchorEl2] = useState(null);\n\n  const [anchorEl2, setAnchorEl2] = React.useState(null);\n\n  const logout_user = () => {\n    logout();\n    setRedirect(true);\n  };\n\n  const open = Boolean(anchorEl);\n  const open2 = Boolean(anchorEl);\n\n  const userRoleChecker = () => {\n    switch (user.username) {\n      case \"admin\":\n        return \"Admin\";\n      case \"firm\":\n        return \"Firm\";\n      case \"lawyer\":\n        return \"Lawyer\";\n      default:\n        return \"Client\";\n    }\n  };\n\n  const openSetting2 = Boolean(settingAcnchorEl2);\n\n  const handleClick2 = (event) => {\n    setSettingAcnchorEl2(event.currentTarget);\n  };\n  const openSetting = Boolean(settingAcnchorEl);\n  const handleClose2 = () => {\n    setSettingAcnchorEl2(null);\n  };\n\n  const handleClick = (event) => {\n    setSettingAcnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setSettingAcnchorEl(null);\n  };\n\n  return (\n    <Fragment>\n      <SecNavbar>\n        <Toolbar>\n          <Box component=\"div\" sx={{ flexGrow: 1 }}>\n            <IconButton\n              size=\"large\"\n              onClick={handleClickOpenChat}\n              sx={{\n                fontSize: \"2rem\",\n                color: \"#eee\",\n                \"&:hover\": {\n                  color: \"#fff\",\n                  backgroundColor: \"#7a4ebf\",\n                },\n              }}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n            >\n              <Message />\n            </IconButton>\n            <Dialog\n              Validate\n              open={openChat}\n              onClose={handleCloseChat}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n              sx={{\n                position: \"absolute\",\n                right: \"20px\",\n                bottom: \"150px\",\n              }}\n            >\n              <DialogTitle id=\"alert-dialog-title\">\n                {\"Chatting Application\"}\n              </DialogTitle>\n              <DialogContent>\n                <Chatting />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleCloseChat}>Close</Button>\n              </DialogActions>\n            </Dialog>\n\n            <IconButton\n              size=\"large\"\n              component={Link}\n              sx={{\n                fontSize: \"2rem\",\n                color: \"white\",\n                \"&:hover\": {\n                  color: \"white\",\n                  backgroundColor: \"#7a4ebf\",\n                },\n              }}\n              to={{\n                pathname:\n                  \"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=someone@gmail.com\",\n              }}\n              target=\"_blank\"\n            >\n              <EmailRounded />\n            </IconButton>\n\n            <IconButton\n              size=\"large\"\n              onClick={handleClickOpenCal}\n              sx={{\n                fontSize: \"2rem\",\n                color: \"white\",\n                \"&:hover\": {\n                  color: \"white\",\n                  backgroundColor: \"#7a4ebf\",\n                },\n              }}\n            >\n              <CalendarToday />\n            </IconButton>\n            <Dialog\n              Validate\n              open={openCal}\n              maxWidth=\"lg\"\n              fullWidth\n              onClose={handleCloseCal}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n              sx={{\n                position: \"absolute\",\n                right: \"20px\",\n                bottom: \"150px\",\n              }}\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Calender\"}</DialogTitle>\n              <DialogContent>\n                <Calender />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleCloseCal}>Close</Button>\n              </DialogActions>\n            </Dialog>\n            <IconButton\n              aria-label=\"more\"\n              id=\"long-button\"\n              aria-controls=\"long-menu\"\n              aria-expanded={openSetting2 ? \"true\" : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleClick2}\n              sx={{\n                fontSize: \"2rem\",\n                color: \"white\",\n                \"&:hover\": {\n                  color: \"white\",\n                  backgroundColor: \"#7a4ebf\",\n                },\n              }}\n            >\n              <CheckBox />\n            </IconButton>\n            <Menu\n              id=\"fade-menu\"\n              MenuListProps={{\n                \"aria-labelledby\": \"fade-button\",\n              }}\n              anchorEl={settingAcnchorEl2}\n              open={openSetting2}\n              onClose={handleClose2}\n              TransitionComponent={Fade}\n            >\n              <MenuItem onClick={handleClose2}>\n                Task 1: This is task one\n              </MenuItem>\n              <MenuItem onClick={handleClose2}>\n                Task 2: This is task two\n              </MenuItem>\n              <MenuItem onClick={handleClose2}>\n                Task 3: This is task three\n              </MenuItem>\n              <Divider sx={{ my: 0.5 }} />\n              <MenuItem onClick={handleClose2}>\n                Task 4: This is task four\n              </MenuItem>\n            </Menu>\n            <IconButton\n              aria-label=\"more\"\n              id=\"long-button\"\n              aria-controls=\"long-menu\"\n              aria-expanded={openSetting2 ? \"true\" : undefined}\n              aria-haspopup=\"true\"\n              onClick={handleClickOpenFav}\n              sx={{\n                fontSize: \"2rem\",\n                color: \"white\",\n                \"&:hover\": {\n                  color: \"white\",\n                  backgroundColor: \"#7a4ebf\",\n                },\n              }}\n            >\n              <Star />\n            </IconButton>\n            <Dialog\n              open={openFav}\n              onClose={handleCloseFav}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n              <DialogContent>\n                <Favorites />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleCloseFav} autoFocus>\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Box>\n          <NotificationAdd mr={2} />\n          <Typography component=\"h5\" variant=\"h6\" ml={2} mr={2}>\n            |\n          </Typography>\n\n          <Button\n            color=\"inherit\"\n            aria-controls=\"basic-menu\"\n            aria-haspopup=\"true\"\n            aria-expanded={open ? \"true\" : undefined}\n            onClick={handleClick}\n          >\n            <Person /> {localuser.username} - ({localuser.username} )\n          </Button>\n          <Button color=\"inherit\" onClick={logout_user}>\n            Logout\n          </Button>\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleClose}\n            MenuListProps={{\n              \"aria-labelledby\": \"basic-button\",\n            }}\n          >\n            <MenuItem component={Link} to=\"/profile\">\n              Profile\n            </MenuItem>\n            {/* <MenuItem component={Link} to=''>My account</MenuItem> */}\n          </Menu>\n          <IconButton\n            aria-label=\"more\"\n            id=\"long-button\"\n            aria-controls=\"long-menu\"\n            aria-expanded={openSetting ? \"true\" : undefined}\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n            sx={{\n              color: \"white\",\n            }}\n          >\n            <Settings />\n          </IconButton>\n          <Menu\n            id=\"fade-menu\"\n            MenuListProps={{\n              \"aria-labelledby\": \"fade-button\",\n            }}\n            anchorEl={settingAcnchorEl}\n            open={openSetting}\n            onClose={handleClose}\n            TransitionComponent={Fade}\n          >\n            <MenuItem onClick={handleClose}>Profile</MenuItem>\n            <MenuItem onClick={handleClose}>Account</MenuItem>\n            <MenuItem onClick={handleClose}>Setting</MenuItem>\n            <Divider sx={{ my: 0.5 }} />\n            <MenuItem onClick={handleClose}>Logout</MenuItem>\n          </Menu>\n        </Toolbar>\n      </SecNavbar>\n\n      {redirect ? <Redirect to=\"/\" /> : <Fragment></Fragment>}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps, { logout })(NavbarSec);\n","/** @format */\n\nimport React, { useState, Fragment } from \"react\";\nimport {\n  Box,\n  Accordion,\n  AccordionSummary,\n  Typography,\n  AccordionDetails,\n  Grid,\n} from \"@mui/material\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport {\n  Task,\n  MoneyOff,\n  FileCopy,\n  Receipt,\n  AssignmentTurnedIn,\n  Mail,\n  Phone,\n  Group,\n  AddCircle,\n  Work,\n  Person,\n} from \"@mui/icons-material\";\n\nimport { SideBarBtn } from \"../../styles/styles\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  manageRoleActive,\n  manageGroupActive,\n  revenueInActive,\n  revenueOutActive,\n  newCustomerActive,\n  manageUserActive,\n  lostCustomerActive,\n  newAccountActive,\n  marketingActive,\n  appointmentActive,\n  empOversiteActive,\n  emailsActive,\n  mapActive,\n  callsActive,\n} from \"../../redux/features/sidebarSlice\";\n\nimport \"./style.css\";\n\nconst Controls = () => {\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/\">\n              <Grid item>\n                <AddCircle fontSize=\"medium\" />\n              </Grid>\n              <Grid item>DashBoard</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/invoices\">\n              <Grid item>\n                <Receipt fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Invoices</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/manage-categories\">\n              <Grid item>\n                <FileCopy fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Categories</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/ledgers\">\n              <Grid item>\n                <MoneyOff fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Ledger</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/create-task\">\n              <Grid item>\n                <Task fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Task</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/employee-search\">\n              <Grid item>\n                <Work fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Search</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/matter-dashboard\">\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Matters</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\">\n          <Grid>\n            <Box component={Link} to=\"/contact\">\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Contact</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\nconst Marketing = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(marketingActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.marketing ? { color: \"gray\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Marketing</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(emailsActive())}>\n          <Grid>\n            <Box sx={sidebar.emails ? { color: \"gray\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Email</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst HumanResources = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(manageUserActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.manageUser ? { color: \"gray\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <Person fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage User</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(manageRoleActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.manageRole ? { color: \"gray\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Role</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(manageGroupActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.manageGroup ? { color: \"gray\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Manage Group</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst RevenueControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueInActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueIn ? { color: \"gray\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue In</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(revenueOutActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.revenueOut ? { color: \"gray\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Revenue Out</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst AccountControls = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.newCustomer ? { color: \"gray\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Customers</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(lostCustomerActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.lostCustomer ? { color: \"gray\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Lost Customer</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(newAccountActive())}\n        >\n          <Grid>\n            <Box\n              sx={sidebar.newAccount ? { color: \"gray\" } : { color: \"#796ef0\" }}\n            >\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>New Accounts</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(mapActive())}>\n          <Grid>\n            <Box sx={sidebar.map ? { color: \"gray\" } : { color: \"#796ef0\" }}>\n              <Grid item>\n                <AssignmentTurnedIn fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Trouble Ticket Map</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\nconst EmployeeOversite = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <Box px={3}>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(empOversiteActive())}\n        >\n          <Grid>\n            <Box disabled={sidebar.empOversite}>\n              <Grid item>\n                <Group fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Employee Oversite</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn variant=\"outlined\" onClick={() => dispatch(callsActive())}>\n          <Grid>\n            <Box disabled={sidebar.calls}>\n              <Grid item>\n                <Phone fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Calls</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n        <SideBarBtn\n          variant=\"outlined\"\n          onClick={() => dispatch(appointmentActive())}\n        >\n          <Grid>\n            <Box\n              sx={\n                sidebar.appointment ? { color: \"gray\" } : { color: \"#796ef0\" }\n              }\n            >\n              <Grid item>\n                <Mail fontSize=\"medium\" />\n              </Grid>\n              <Grid item>Appointments</Grid>\n            </Box>\n          </Grid>\n        </SideBarBtn>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const accordionData = [\n  {\n    name: \"Controls\",\n    id: \"controls\",\n    tiles: <Controls />,\n  },\n\n  {\n    name: \"Human Resources\",\n    id: \"human_resource\",\n    tiles: <HumanResources />,\n  },\n  {\n    name: \"Revenue\",\n    id: \"revenue\",\n    tiles: <RevenueControls />,\n  },\n  {\n    name: \"Customers\",\n    id: \"customers\",\n    tiles: <AccountControls />,\n  },\n  {\n    name: \"Marketing\",\n    id: \"marketing\",\n    tiles: <Marketing />,\n  },\n  {\n    name: \"Employee Oversite\",\n    id: \"empOversite\",\n    tiles: <EmployeeOversite />,\n  },\n];\n\nconst TestingSidebar = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n\n  const [accordions, updateAccordions] = useState(accordionData);\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n\n    const items = Array.from(accordions);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    updateAccordions(items);\n  }\n\n  return (\n    <Fragment>\n      <Box mt={5}>\n        <DragDropContext onDragEnd={handleOnDragEnd}>\n          <Droppable droppableId=\"accordions\">\n            {(provided) => (\n              <Box\n                className=\"accordions\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {accordions.map((item, index) => {\n                  return (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <Accordion\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          <AccordionSummary\n                            expandIcon={<ExpandMoreIcon color=\"primary\" />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                          >\n                            <Typography\n                              align=\"center\"\n                              color=\"primary\"\n                              sx={{\n                                textTransform: \"uppercase\",\n                                paddingLeft: \"1rem\",\n                              }}\n                            >\n                              {item.name}\n                            </Typography>\n                          </AccordionSummary>\n                          <AccordionDetails>{item.tiles}</AccordionDetails>\n                        </Accordion>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </Box>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TestingSidebar;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  Box,\n  Paper,\n  Link,\n  Grid,\n  Container,\n  Stack,\n} from \"@mui/material\";\n\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\n\nimport { useToggle } from \"../../context/useToggle\";\nimport AdminSidebar from \"./AdminSidebar\";\nimport LawyerSidebar from \"./LawyerSidebar\";\nimport FirmSidebar from \"./FirmSidebar\";\nimport CustomerSidebar from \"./CutomerSidebar\";\nimport \"./style.css\";\nimport TestingSidebar from \"./TestingSidebar\";\n\nconst Sidebar = ({ user }) => {\n  const [controlToggle, setControlToggle] = useToggle(true);\n\n  const [localuser, setLocalUser] = useState({\n    username: \"Admin\",\n    is_firm: false,\n    is_lawyer: true,\n    is_client: false,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const SidebarRedirect = () => {\n    switch (user.username) {\n      case \"admin\":\n        return <AdminSidebar />;\n      case \"firm\":\n        return <FirmSidebar />;\n      case \"lawyer\":\n        return <LawyerSidebar />;\n      default:\n        return <CustomerSidebar />;\n    }\n  };\n\n  // const [state, dispatch] = useContext(UserContext);\n  return (\n    <Fragment>\n      <Paper component={Stack} elevation={3} spacing={1}>\n        <Box\n          sx={{\n            height: \"calc(83vh - 40px)\",\n            overflowY: \"scroll\",\n          }}\n        >\n          {/* {SidebarRedirect()} */}\n          <TestingSidebar />\n        </Box>\n        <Box p={2}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"error\"\n            style={{\n              padding: \"1rem\",\n              \"&:hover\": {\n                color: \"#fff\",\n              },\n            }}\n          >\n            Report\n          </Button>\n        </Box>\n      </Paper>\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Sidebar);\n\n// export default Sidebar;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  BottomNavigation,\n  BottomNavigationAction,\n  Link,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@mui/material\";\nimport { FooterBar, FooterLink, FooterButton } from \"../../styles/styles\";\nimport Favorites from \"../Favorite/Favorites\";\n\nconst Footer = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <FooterBar>\n          <FooterLink to={\"/ledgers\"}>Accounting</FooterLink> |\n          <FooterLink to={\"/\"}> Calendar</FooterLink> |\n          <FooterLink to={\"/\"}>Contacts</FooterLink> |\n          <FooterButton\n            sx={{\n              color: \"#eee\",\n              textTransform: \"uppercase\",\n              textDecoration: \"none\",\n              \"&:visited\": {\n                color: \"#eee\",\n              },\n            }}\n            variant=\"text\"\n            onClick={handleClickOpen}\n          >\n            Favorites\n          </FooterButton>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Favorites\"}</DialogTitle>\n            <DialogContent>\n              <Favorites />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} autoFocus>\n                Close\n              </Button>\n            </DialogActions>\n          </Dialog>\n          |<FooterLink to={\"/matters\"}>Matters</FooterLink> |\n          <FooterLink to={\"/tasks\"}>Tasks</FooterLink> |\n          <FooterLink to={\"/\"}>Workflow</FooterLink>\n        </FooterBar>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Footer;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport Navbar from \"../components/Navbars/Navbar\";\nimport NavbarSec from \"../components/Navbars/NavbarSec\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport { connect } from \"react-redux\";\nimport Chatting from \"../components/Chat/Chat\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { isDisplay } from \"../redux/features/sidebarSlice\";\n\nimport { Paper, Fab, Popover } from \"@mui/material\";\nimport { Grid, Box, Button } from \"@mui/material\";\n\nimport { Chat } from \"@mui/icons-material\";\n\nimport Footer from \"../components/Footer/Footer\";\n\nconst InnerLayout = ({ isAuthenticated, children }) => {\n  const theme = useTheme();\n\n  const sidebarToggle = useSelector((state) => state.sidebar.display);\n  const dispatch = useDispatch();\n\n  const [drawerOpen, setDrawerOpen] = React.useState(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setDrawerOpen(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setDrawerOpen(null);\n  };\n\n  const openPopover = Boolean(drawerOpen);\n  const id = openPopover ? \"simple-popover\" : undefined;\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (drawerOpen) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [drawerOpen]);\n\n  return (\n    <Paper style={{ margin: \"0\" }}>\n      <Grid contianer rowSpacing={2} columnSpacing={2}>\n        <Grid item lg={12} md={12}>\n          {isAuthenticated ? (\n            <Fragment>\n              <NavbarSec />\n            </Fragment>\n          ) : (\n            <Navbar />\n          )}\n        </Grid>\n\n        {isAuthenticated ? (\n          <Fragment>\n            <Grid item lg={12}>\n              <Navbar />\n            </Grid>\n            <Grid container direction=\"row\" wrap=\"nowrap\">\n              {sidebarToggle ? (\n                <Fragment>\n                  <Grid item lg={2} xs={12} m={3}>\n                    <Sidebar />\n                  </Grid>\n                  <Grid item lg={10} xs={12} p={1}>\n                    <Box>\n                      <Button\n                        onClick={() => dispatch(isDisplay())}\n                        p={5}\n                        sx={{\n                          left: \"-8rem\",\n                          top: \"2rem\",\n                          paddingY: \"2rem\",\n                        }}\n                      >\n                        {sidebarToggle ? (\n                          <i\n                            class=\"fas fa-angle-double-left\"\n                            style={{ padding: \"0.5rem\" }}\n                          ></i>\n                        ) : (\n                          <i\n                            class=\"fas fa-angle-double-right\"\n                            style={{ padding: \"0.5rem\" }}\n                          ></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <Grid item lg={12} xs={12} p={1}>\n                    <Box>\n                      <Button\n                        p={5}\n                        sx={{ paddingY: \"2rem\" }}\n                        onClick={() => dispatch(isDisplay())}\n                      >\n                        {sidebarToggle ? (\n                          <i\n                            class=\"fas fa-angle-double-left\"\n                            style={{ padding: \"0.5rem\" }}\n                          ></i>\n                        ) : (\n                          <i\n                            class=\"fas fa-angle-double-right\"\n                            style={{ padding: \"0.5rem\" }}\n                          ></i>\n                        )}\n                      </Button>\n                    </Box>\n                    {children}\n                  </Grid>\n                </Fragment>\n              )}\n            </Grid>\n            <Grid item lg={12}>\n              <Footer />\n            </Grid>\n          </Fragment>\n        ) : (\n          <Grid item lg={12} xs={12}>\n            {children}\n          </Grid>\n        )}\n        <Fab\n          size=\"large\"\n          onClick={handlePopoverOpen}\n          style={{\n            borderRadius: \"50%\",\n            backgroundColor: \"#eee\",\n            position: \"fixed\",\n            bottom: \"16px\",\n            right: \"16px\",\n            color: \"#461594\",\n            zIndex: \"200\",\n            \"&:hover\": {\n              color: \"#7a4ebf\",\n            },\n          }}\n          aria-label=\"chat\"\n        >\n          <Chat />\n        </Fab>\n        <Popover\n          open={openPopover}\n          anchorEl={drawerOpen}\n          onClose={handlePopoverClose}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          sx={{ margin: \"-2rem\" }}\n        >\n          <Chatting />\n        </Popover>\n      </Grid>\n    </Paper>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps)(InnerLayout);\n","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nconst PrivateRoutes = ({ isAuthenticated, children, ...rest}) => {\n    \n\n    return (\n        <Route {...rest}>\n            {isAuthenticated ? children: <Redirect to=\"/login\"/>}\n        </Route>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(PrivateRoutes);","/** @format */\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'toggle_button':\n      return {\n        ...state,\n        active: !state.active,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initialState = {\n  active: false,\n};\n","/** @format */\n\nimport React from 'react';\nimport { reducer, initialState } from './reducer';\n\nexport const UserContext = React.createContext({\n  state: initialState,\n  dispatch: () => null,\n});\n\nexport const UserProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <UserContext.Provider value={[state, dispatch]}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","/** @format */\n\n// import styled from \"styled-components\";\nimport { createTheme } from \"@mui/material/styles\";\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    mode: \"light\",\n    primary: {\n      main: \"#796ef0\", //blueish purple\n    },\n    // secondary: {\n    //   main: \"\",\n    // },\n    error: {\n      main: \"#e85355\", //red\n    },\n    warning: {\n      main: \"#fd9905\", // orange\n    },\n    success: {\n      main: \"#28c570\", //green\n    },\n\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n  typography: {\n    htmlFontSize: 14,\n    fontSize: 12,\n    color: \"#333\",\n  },\n});\n\nexport default theme;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { Box } from \"@mui/material\";\n// import NumberFormat from \"react-number-format\";\n\nexport const LineChart2 = () => {\n  const options = {\n    chart: {\n      type: \"bar\",\n      height: 500,\n    },\n    series: [\n      {\n        data: [\n          {\n            x: \"Zoom\",\n            y: 150,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Phone\",\n            y: 250,\n            fillColor: \"#546E7A\",\n            strokeColor: \"#546E7A\",\n          },\n          {\n            x: \"In Person\",\n            y: 500,\n            fillColor: \"#f48024\",\n            strokeColor: \"#f48024\",\n          },\n          {\n            x: \"Met\",\n            y: 300,\n            fillColor: \"#13d8aa\",\n            strokeColor: \"#13d8aa\",\n          },\n          {\n            x: \"Rescheduled\",\n            y: 125,\n            fillColor: \"#33b2df\",\n            strokeColor: \"#33b2df\",\n          },\n          {\n            x: \"Canceled\",\n            y: 30,\n            fillColor: \"#A5978B\",\n            strokeColor: \"#A5978B\",\n          },\n        ],\n      },\n    ],\n\n    options: {\n      plotOptions: {\n        bar: {\n          barHeight: \"50%\",\n          borderRadius: 4,\n\n          horizontal: true,\n          dataLabels: {\n            position: \"bottom\",\n          },\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      title: {\n        text: \"Appointments\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n    },\n    xaxis: {\n      style: {\n        fontSize: \"20px\",\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={options.options}\n          series={options.series}\n          height=\"300\"\n          type=\"bar\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\nexport const LineChart = () => {\n  const config = {\n    series: [\n      {\n        name: \"Google\",\n        data: [10, 51, 35, 41, 29, 62, 99, 41, 18],\n      },\n      {\n        name: \"Youtube\",\n        data: [10, 80, 35, 41, 99, 62, 79, 21, 68],\n      },\n      {\n        name: \"Website\",\n        data: [60, 21, 45, 41, 89, 62, 59, 71, 98],\n      },\n    ],\n    options: {\n      chart: {\n        height: 250,\n        toolbar: {\n          show: false,\n        },\n      },\n\n      legend: {\n        position: \"top\",\n        horizontalAlign: \"right\",\n        onItemHover: {\n          highlightDataSeries: true,\n        },\n        labels: {\n          colors: \"#dddddd\",\n          useSeriesColors: true,\n        },\n      },\n\n      dataLabels: {\n        enabled: false,\n      },\n\n      stroke: {\n        curve: \"smooth\",\n        width: 2,\n      },\n\n      title: {\n        text: \"Marketing\",\n        align: \"left\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      xaxis: {\n        categories: [\n          \"31/01\",\n          \"01/02\",\n          \"02/03\",\n          \"03/04\",\n          \"31/05\",\n          \"04/06\",\n          \"06/07\",\n          \"02/08\",\n          \"09/09\",\n        ],\n        style: {\n          fontSize: \"20px\",\n        },\n      },\n\n      yaxis: {},\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={config.options}\n          series={config.series}\n          height=\"250\"\n          type=\"line\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\nexport const RadialBarChart = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 300,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function (w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Calls\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Inbound\", \"Outbound\", \"Sales\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport const RadialBarChart2 = () => {\n  const state = {\n    series: [73, 83, 93],\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              show: true,\n              lable: \"Total Emails\",\n            },\n            value: {\n              show: true,\n            },\n            total: {\n              show: true,\n              formatter: function (w) {\n                return 249;\n              },\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Email\",\n        style: {\n          fontSize: \"22px\",\n          fontWeight: \"none\",\n          color: \"blue\",\n        },\n      },\n      colors: [\"#0000FF\", \"#E91E63\", \"#FFAE42\"],\n      labels: [\"Send\", \"Open\", \"Delete\"],\n      legend: {\n        show: true,\n        floating: true,\n        fontSize: \"auto\",\n        position: \"left\",\n\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <Box>\n        <ReactApexChart\n          options={state.options}\n          series={state.series}\n          type=\"radialBar\"\n          height=\"200\"\n        />\n      </Box>\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueInActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueInCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 460;\n      case \"weekly\":\n        return 3254;\n      case \"monthly\":\n        return 32564;\n      case \"quarterly\":\n        return 130256;\n      case \"yearly\":\n        return 521024;\n      case \"range\":\n        return 1500;\n    }\n  };\n  return (\n    <Card element={Paper} elevation={3} sx={{ height: \"15rem\" }}>\n      <Grid container>\n        {/* <Grid lg={12}>\n          <IconButton\n            aria-label=\"delete\"\n            onClick={() => dispatch(revenueInActive())}\n          >\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        </Grid> */}\n        <Grid item lg={12}>\n          <CardContent>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              Revenue In\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={3}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={amount()}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                prefix=\"$\"\n              />\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueInCards);\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { revenueOutActive } from \"../../../../redux/features/sidebarSlice\";\n\nexport const RevenueOutCards = ({ isWeekly }) => {\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 35;\n      case \"weekly\":\n        return 240;\n      case \"monthly\":\n        return 4520;\n      case \"quarterly\":\n        return 18080;\n      case \"yearly\":\n        return 72320;\n      case \"range\":\n        return 500;\n    }\n  };\n  return (\n    <Card element={Paper} elevation={3} sx={{ height: \"15rem\" }}>\n      <Grid container>\n        {/* <Grid lg={12}>\n          <Box display=\"flex\" flexGrow={1}>\n            <IconButton\n              aria-label=\"delete\"\n              onClick={() => dispatch(revenueOutActive())}\n            >\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </Box>\n        </Grid> */}\n        <Grid item lg={12}>\n          <CardContent>\n            <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n              Revenue out\n            </Typography>\n            <Typography\n              variant=\"h3\"\n              mt={3}\n              component=\"h4\"\n              sx={{ fontSize: \"2.2rem\" }}\n            >\n              <NumberFormat\n                value={amount()}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                prefix=\"$\"\n              />\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(RevenueOutCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { newCustomerActive } from \"../../../../redux/features/sidebarSlice\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const NewCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 2;\n      case \"weekly\":\n        return 23;\n      case \"monthly\":\n        return 69;\n      case \"quarterly\":\n        return 200;\n      case \"yearly\":\n        return 610;\n      case \"range\":\n        return 10;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Card element={Paper} elevation={3} sx={{ height: \"15rem\" }}>\n          <CardContent>\n            <Grid container>\n              <Grid item lg={6}>\n                <Typography\n                  sx={{ fontSize: \"1.3rem\" }}\n                  color=\"blue\"\n                  gutterBottom\n                >\n                  New Customers\n                </Typography>\n                <Typography\n                  variant=\"h3\"\n                  mt={2}\n                  component=\"h4\"\n                  sx={{ fontSize: \"2.2rem\" }}\n                >\n                  <NumberFormat\n                    value={isWeekly ? 23 : 69}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </Grid>\n              <Grid item lg={6} xs={12}>\n                <ul style={{ listStyleType: \"none\" }}>\n                  <li>\n                    <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                      <span style={{ color: \"blue\" }}>Today:</span>\n                      <NumberFormat\n                        value={2}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                      />\n                    </Typography>\n                  </li>\n                  <li>\n                    <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                      <span style={{ color: \"blue\" }}>This Week:</span>\n                      <NumberFormat\n                        value={23}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                      />\n                    </Typography>\n                  </li>\n                  <li>\n                    <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                      <span style={{ color: \"blue\" }}>This Month:</span>\n                      <NumberFormat\n                        value={69}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                      />\n                    </Typography>\n                  </li>\n                  <li>\n                    <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                      <span style={{ color: \"blue\" }}>Last Week:</span>\n                      <NumberFormat\n                        value={15}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                      />\n                    </Typography>\n                  </li>\n                  <li>\n                    <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                      <span style={{ color: \"blue\" }}>Last Month:</span>\n                      <NumberFormat\n                        value={50}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                      />\n                    </Typography>\n                  </li>\n                  <li>\n                    <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                      <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                      <NumberFormat\n                        value={200}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                      />\n                    </Typography>\n                  </li>\n                  <li>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                      <DateRangePicker\n                        startText=\"Start Date\"\n                        endText=\"End Date\"\n                        value={dateValue}\n                        onChange={(newValue) => {\n                          setDateValue(newValue);\n                        }}\n                        renderInput={(startProps, endProps) => (\n                          <Fragment>\n                            <TextField size=\"small\" {...startProps} />\n                            <Box sx={{ mx: 2 }}> to </Box>\n                            <TextField size=\"small\" {...endProps} />\n                          </Fragment>\n                        )}\n                      />\n                    </LocalizationProvider>\n                  </li>\n                </ul>\n              </Grid>\n              {/* <Grid lg={1}>\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(newCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </IconButton>\n              </Grid> */}\n            </Grid>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(NewCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Button,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { lostCustomerActive } from \"../../../../redux/features/sidebarSlice\";\n\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\n\nexport const LostCustomerCards = ({ isWeekly }) => {\n  const [dateValue, setDateValue] = useState([null, null]);\n  const dispatch = useDispatch();\n  const amount = () => {\n    switch (isWeekly) {\n      case \"daily\":\n        return 0;\n      case \"weekly\":\n        return 0;\n      case \"monthly\":\n        return 3;\n      case \"quarterly\":\n        return 6;\n      case \"yearly\":\n        return 15;\n      case \"range\":\n        return 3;\n    }\n  };\n  const [option, setOption] = useState(\"\");\n  return (\n    <Grid container>\n      <Grid item>\n        <Card element={Paper} elevation={3} sx={{ height: \"15rem\" }}>\n          <CardContent>\n            <Grid container>\n              <Grid item lg={6}>\n                <Typography\n                  sx={{ fontSize: \"1.3rem\" }}\n                  color=\"blue\"\n                  gutterBottom\n                >\n                  Lost Customers\n                </Typography>\n                <Typography\n                  variant=\"h3\"\n                  mt={2}\n                  component=\"h4\"\n                  sx={{ fontSize: \"2.2rem\" }}\n                >\n                  <NumberFormat\n                    value={isWeekly ? 0 : 3}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                  />\n                </Typography>\n              </Grid>\n              <Grid item lg={6} xs={12}>\n                <ul style={{ listStyleType: \"none\" }}>\n                  <li>\n                    <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                      <span style={{ color: \"blue\" }}>Today:</span>\n                      <NumberFormat\n                        value={0}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                      />\n                    </Typography>\n                  </li>\n                  <li>\n                    <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                      <span style={{ color: \"blue\" }}>This Week:</span>\n                      <NumberFormat\n                        value={0}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                      />\n                    </Typography>\n                  </li>\n                  <li>\n                    <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                      <span style={{ color: \"blue\" }}>This Month:</span>\n                      <NumberFormat\n                        value={3}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                      />\n                    </Typography>\n                  </li>\n                  <li>\n                    <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                      <span style={{ color: \"blue\" }}>Last Week:</span>\n                      <NumberFormat\n                        value={1}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                      />\n                    </Typography>\n                  </li>\n                  <li>\n                    <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                      <span style={{ color: \"blue\" }}>Last Month:</span>\n                      <NumberFormat\n                        value={2}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                      />\n                    </Typography>\n                  </li>\n                  <li>\n                    <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                      <span style={{ color: \"blue\" }}>Last Quarter:</span>\n                      <NumberFormat\n                        value={6}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                      />\n                    </Typography>\n                  </li>\n                  <li>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                      <DateRangePicker\n                        startText=\"Start Date\"\n                        endText=\"End Date\"\n                        value={dateValue}\n                        onChange={(newValue) => {\n                          setDateValue(newValue);\n                        }}\n                        renderInput={(startProps, endProps) => (\n                          <Fragment>\n                            <TextField size=\"small\" {...startProps} />\n                            <Box sx={{ mx: 2 }}> to </Box>\n                            <TextField size=\"small\" {...endProps} />\n                          </Fragment>\n                        )}\n                      />\n                    </LocalizationProvider>\n                  </li>\n                </ul>\n              </Grid>\n              {/* <Grid lg={1}>\n                <Button\n                  component={IconButton}\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(lostCustomerActive())}\n                >\n                  <CloseIcon fontSize=\"small\" />\n                </Button>\n              </Grid> */}\n            </Grid>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isWeekly: state.data.isWeekly,\n});\n\nexport default connect(mapStateToProps)(LostCustomerCards);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport { Circle } from \"@mui/icons-material\";\nimport MAP_STYLE from \"../../../utils/style.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapboxWorker from \"mapbox-gl/dist/mapbox-gl-csp-worker\";\nmapboxgl.workerClass = MapboxWorker;\n\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\";\n\nconst Map = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 38.7577,\n    longitude: -95.4376,\n    zoom: 3,\n  });\n\n  return (\n    <Fragment>\n      <ReactMapGL\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle={MAP_STYLE}\n        onViewportChange={setViewport}\n        mapboxApiAccessToken={\n          \"pk.eyJ1IjoicmlkYXJhZmlzeWVkIiwiYSI6ImNreTkydGE2bzAyZTQydnA0dWF1Y2xrdWQifQ.BA1u_ZGDHrpvj0WVuypIIQ\"\n        }\n      >\n        <Marker\n          latitude={40.7128}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={47.6062}\n          longitude={-74.006}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n        <Marker\n          latitude={41.8781}\n          longitude={-87.6298}\n          offsetLeft={-20}\n          offsetTop={-10}\n        >\n          <Circle style={{ color: \"#461594\" }} />\n        </Marker>\n      </ReactMapGL>\n    </Fragment>\n  );\n};\n\nexport default Map;\n","/** @format */\n\nimport {\n  Paper,\n  Box,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  TableCell,\n} from \"@mui/material\";\nimport React, { Fragment } from \"react\";\n\nconst NewAccounts = () => {\n  return (\n    <Fragment>\n      <Paper elevation={2} style={{ marginTop: \"1rem\" }}>\n        <Box p={1}>\n          <Typography color=\"blue\">New Accounts</Typography>\n          <TableContainer>\n            <Table fullWidth>\n              <TableHead color=\"blue\">\n                <TableRow>\n                  <TableCell>\n                    <Typography color=\"blue\">Username</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"blue\">Email</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"blue\">Phone#</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"blue\">City/State</Typography>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell>\n                    <Typography>Username</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography>Email</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography>Phone#</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography>City/State</Typography>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Typography>Username</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography>Email</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography>Phone#</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography>City/State</Typography>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Typography>Username</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography>Email</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography>Phone#</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography>City/State</Typography>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Typography>Username</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography>Email</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography>Phone#</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography>City/State</Typography>\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default NewAccounts;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Box, Grid, Typography } from \"@mui/material\";\n\nimport NumberFormat from \"react-number-format\";\n\nconst EmpOversite = () => {\n  return (\n    <Fragment>\n      <Typography color=\"blue\" sx={{ fontSize: \"1.1rem\" }}>\n        Employee Oversite\n      </Typography>\n      <Typography variant=\"h3\" component=\"h3\" sx={{ fontSize: \"1.8rem\" }}>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.1rem\" }}>\n        Employees logged in\n      </Typography>\n\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"purple\" }}> Total ticket issued:</span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n      <Typography component=\"h4\" sx={{ fontSize: \"1.2rem\" }}>\n        <span style={{ color: \"seagreen\" }}>Trouble ticket Resolved: </span>\n        <NumberFormat\n          value={3498}\n          displayType={\"text\"}\n          thousandSeparator={true}\n        />\n      </Typography>\n    </Fragment>\n  );\n};\n\nexport default EmpOversite;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\n// import axios from 'axios';\n\nimport { Switch, Box, FormControlLabel } from \"@mui/material\";\nimport {\n  LineChart,\n  LineChart2,\n  RadialBarChart,\n  RadialBarChart2,\n} from \"./Charts\";\n\nimport RevenueInCards from \"./Cards/RevenueIn\";\nimport RevenueOutCards from \"./Cards/RevenueOut\";\nimport NewCustomerCards from \"./Cards/NewCustomer\";\nimport LostCustomerCards from \"./Cards/LostCustomer\";\n\nimport Map from \"./Map\";\n\nimport NewAccounts from \"./NewAccounts\";\nimport EmpOversite from \"./EmpOversite\";\nimport { useToggle } from \"../../../context/useToggle\";\nimport GridLayout from \"react-grid-layout\";\nimport { Responsive as ResponsiveGridLayout } from \"react-grid-layout\";\nimport { useSelector } from \"react-redux\";\n\nconst DashBoard = () => {\n  const sidebar = useSelector((state) => state.sidebar);\n  // const { height, width } = useWindowDimensions();\n\n  // const items = [\n  //   { id: 1, component: <RevenueInCards />, x: 0, y: 0, w: 2, h: 4 },\n  //   { id: 2, component: <RevenueOutCards />, x: 2, y: 0, w: 2, h: 4 },\n  //   { id: 3, component: <NewCustomerCards />, x: 4, y: 0, w: 4, h: 4 },\n  //   { id: 4, component: <LostCustomerCards />, x: 8, y: 0, w: 4, h: 4 },\n  //   // second row\n  //   { id: 6, component: <NewAccounts />, x: 0, y: 4, w: 7, h: 7 },\n  //   { id: 7, component: <Map />, x: 7, y: 4, w: 5, h: 7 },\n  //   // // third row\n  //   { id: 8, component: <EmpOversite />, x: 0, y: 20, w: 2, h: 5 },\n  //   { id: 9, component: <RadialBarChart />, x: 3, y: 20, w: 2, h: 5 },\n  //   { id: 10, component: <LineChart2 />, x: 6, y: 20, w: 4, h: 5 }, // // four row\n  //   //\n  //   { id: 11, component: <LineChart />, x: 0, y: 40, w: 8, h: 5 },\n  //   { id: 12, component: <RadialBarChart2 />, x: 8, y: 40, w: 4, h: 5 },\n  // ];\n\n  return (\n    <Fragment>\n      <GridLayout cols={12} rowHeight={50} width={1200}>\n        <div\n          key=\"1\"\n          data-grid={{ x: 0, y: 0, w: 2, h: 4 }}\n          style={sidebar.revenueIn ? { display: \"block\" } : { display: \"none\" }}\n        >\n          <RevenueInCards />\n        </div>\n        <div\n          key=\"2\"\n          data-grid={{ x: 2, y: 0, w: 2, h: 4 }}\n          style={\n            sidebar.revenueOut ? { display: \"block\" } : { display: \"none\" }\n          }\n        >\n          <RevenueOutCards />\n        </div>\n        <div\n          key=\"3\"\n          data-grid={{ x: 4, y: 0, w: 4, h: 4 }}\n          style={\n            sidebar.newCustomer ? { display: \"block\" } : { display: \"none\" }\n          }\n        >\n          <NewCustomerCards />\n        </div>\n        <div\n          key=\"4\"\n          data-grid={{ x: 8, y: 0, w: 4, h: 4 }}\n          style={\n            sidebar.lostCustomer ? { display: \"block\" } : { display: \"none\" }\n          }\n        >\n          <LostCustomerCards />\n        </div>\n        <div\n          key=\"5\"\n          data-grid={{ x: 0, y: 4, w: 7, h: 7 }}\n          style={\n            sidebar.newAccount ? { display: \"block\" } : { display: \"none\" }\n          }\n        >\n          <NewAccounts />\n        </div>\n        <div\n          key=\"6\"\n          data-grid={{ x: 7, y: 4, w: 5, h: 7 }}\n          style={sidebar.map ? { display: \"block\" } : { display: \"none\" }}\n        >\n          <Map />\n        </div>\n        <div\n          key=\"7\"\n          data-grid={{ x: 0, y: 20, w: 2, h: 5 }}\n          style={\n            sidebar.empOversite ? { display: \"block\" } : { display: \"none\" }\n          }\n        >\n          <EmpOversite />\n        </div>\n        <div\n          key=\"8\"\n          data-grid={{ x: 3, y: 20, w: 2, h: 5 }}\n          style={sidebar.calls ? { display: \"block\" } : { display: \"none\" }}\n        >\n          <RadialBarChart />\n        </div>\n        <div\n          key=\"9\"\n          data-grid={{ x: 6, y: 20, w: 4, h: 5 }}\n          style={\n            sidebar.appointment ? { display: \"block\" } : { display: \"none\" }\n          }\n        >\n          <LineChart2 />\n        </div>\n        <div\n          key=\"10\"\n          data-grid={{ x: 0, y: 40, w: 8, h: 5 }}\n          style={sidebar.marketing ? { display: \"block\" } : { display: \"none\" }}\n        >\n          <LineChart />\n        </div>\n        <div\n          key=\"11\"\n          data-grid={{ x: 8, y: 40, w: 4, h: 5 }}\n          style={sidebar.emails ? { display: \"block\" } : { display: \"none\" }}\n        >\n          <RadialBarChart2 />\n        </div>\n      </GridLayout>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\nimport { Button, Stack, IconButton } from \"@mui/material\";\nimport styles from \"./tabs.module.css\";\n\nconst Tabs = ({ children }) => {\n  const [activeTab, setActiveTab] = useState(children[0].props.label);\n  const handleClick = (e, newActiveTab) => {\n    e.preventDefault();\n    setActiveTab(newActiveTab);\n  };\n  return (\n    <Fragment>\n      <Stack direction=\"row\" spacing={1}>\n        <ul className={styles.tabs}>\n          {children.map((tab) => (\n            <li\n              className={tab.props.label === activeTab ? styles.current : \"\"}\n              key={tab.props.label}\n            >\n              <Button\n                variant=\"text\"\n                size=\"small\"\n                startIcon={<MoreVert />}\n                onClick={(e) => handleClick(e, tab.props.label)}\n              >\n                {tab.props.label}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      </Stack>\n\n      {children.map((one) =>\n        one.props.label === activeTab ? (\n          <div className={styles.content} key={one.props.label}>\n            {one.props.children}\n          </div>\n        ) : (\n          \"\"\n        ),\n      )}\n    </Fragment>\n  );\n};\n\nexport default Tabs;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  Grid,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  FormControlLabel,\n  Switch,\n  Button,\n  Stack,\n} from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst CreateInvoice = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    matter: \"\",\n    contact: \"\",\n    billable: false,\n    date_range: \"\",\n    create_date: \"\",\n    due_date: \"\",\n    template: \"\",\n    invoice_no: \"\",\n    discount: \"\",\n    submit: false,\n  });\n\n  // const {\n  //   matter,\n  //   contact,\n  //   billable,\n  //   date_range,\n  //   create_date,\n  //   due_date,\n  //   template,\n  //   invoice_no,\n  //   discount,\n  //   submit,\n  // } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  const [invoice, setInvoice] = useState(null);\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoice`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  const [dateRange, setDateRange] = React.useState([null, null]);\n  return (\n    <Fragment>\n      {/* <Typography component=\"h3\" variant=\"h4\">\n        Create New Invoice\n      </Typography>\n      <Box p={3}>\n        <LinkButton to=\"/invoices\" sx={{ float: \"right\" }}>\n          Invoice Dashboard\n        </LinkButton>\n      </Box> */}\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Grid\n          spacing={3}\n          container\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"Matter\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n              autoComplete=\"matter\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"Contact\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              autoComplete=\"contact\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <FormControlLabel\n              sx={{ fontSize: \"12px\", marginLeft: \"1rem\" }}\n              control={\n                <Checkbox\n                  name=\"billable\"\n                  value=\"billable\"\n                  onChange={(e) => onChange(e)}\n                  id=\"billable\"\n                />\n              }\n              label=\"Unbillable\"\n            />\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Stack direction=\"row\">\n              <Typography varient=\"caption\" sx={{ marginTop: \"0.7rem\" }}>\n                Range:\n              </Typography>\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DateRangePicker\n                  calendars={1}\n                  value={dateRange}\n                  onChange={(newValue) => {\n                    setDateRange(newValue);\n                  }}\n                  renderInput={(startProps, endProps) => (\n                    <Fragment>\n                      <TextField size=\"small\" {...startProps} />\n                      <Box sx={{ mx: 2 }}> to </Box>\n                      <TextField size=\"small\" {...endProps} />\n                    </Fragment>\n                  )}\n                />\n              </LocalizationProvider>\n            </Stack>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          spacing={3}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"create_date\"\n              label=\"Create Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              id=\"due_date\"\n              label=\"Due Date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"template\"\n              label=\"Template\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"template\"\n              autoComplete=\"template\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"invoice_no\"\n              label=\"Invoice #\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"invoice_no\"\n              autoComplete=\"invoice_no\"\n            />\n          </Grid>\n          <Grid item lg={2} xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"discount\"\n              label=\"Discount\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"discount\"\n              autoComplete=\"discount\"\n            />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <FormControlLabel\n              label=\"Submit For Approvel\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n            />\n          </Grid>\n        </Grid>\n\n        <Grid item lg={12} mt={2}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell>Sub-Category</TableCell>\n                  <TableCell>Description</TableCell>\n                  <TableCell>Date</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Rate</TableCell>\n                  <TableCell>Sub</TableCell>\n                  <TableCell>Tax</TableCell>\n                  <TableCell>int</TableCell>\n                  <TableCell>Disc.</TableCell>\n                  <TableCell>Total</TableCell>\n                  <TableCell>Biller</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Checkbox />\n                  </TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n                {/* {invoice?.map((invoice) => (\n                  <TableRow id={invoice.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n\n                    <TableCell>{invoice.sub_cat}</TableCell>\n                    <TableCell>{invoice.discription}</TableCell>\n                    <TableCell>{invoice.date}</TableCell>\n                    <TableCell>{invoice.hours}</TableCell>\n                    <TableCell>{invoice.rate}</TableCell>\n                    <TableCell>{invoice.sub}</TableCell>\n                    <TableCell>{invoice.tax}</TableCell>\n                    <TableCell>{invoice.int}</TableCell>\n                    <TableCell>{invoice.dics}</TableCell>\n                    <TableCell>{invoice.total}</TableCell>\n                    <TableCell>{invoice.biller}</TableCell>\n                  </TableRow>\n                ))} */}\n              </TableHead>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item mt={3} direction=\"row\">\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Notes\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"Accept Online Payment\"\n              />\n            }\n            label=\"Accept Online Payment\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Accept Payments for Less\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (Compound / Simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Terms and Conditions\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add interest (compund/ simple)\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Use Trust Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Add all unpaid invoices\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"use Operating Balance\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"billable\"\n                value=\"billable\"\n                onChange={(e) => onChange(e)}\n                id=\"billable\"\n              />\n            }\n            label=\"Send Reminders Every\"\n          />\n          <TextField size=\"small\" sx={{ width: \"5rem\" }} />\n          <Typography\n            varient=\"caption\"\n            component=\"span\"\n            sx={{ marginLeft: \"0.5rem \" }}\n          >\n            day(s)/week(s)\n          </Typography>\n\n          {/* <Button\n            variant=\"contained\"\n            sx={{ float: \"right\" }}\n            endIcon={<SaveIcon />}\n          >\n            Send\n          </Button> */}\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateInvoice;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Grid,\n  Box,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormControl,\n  Checkbox,\n  Typography,\n  TextField,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  MenuItem,\n  InputLabel,\n  Select,\n  Button,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { useToggle } from \"../../context/useToggle\";\n\nconst PaymentPlan = () => {\n  const [paymentData, setPaymentData] = useState({\n    payment_no: \"File# - 001\",\n    due: \"2020/07/01\",\n    amount: \"$ 750.00\",\n    late_fee: \"$22.00\",\n    total_due: \"$ 775.00\",\n    payment: \"$775.00\",\n    posted: \"$2020/07/05\",\n    method: \"Check\",\n  });\n\n  return (\n    <Fragment>\n      <Grid container mt={3} mb={3}>\n        <Grid item lg={4}>\n          <Typography>Start Balance:</Typography>\n          <Typography>Start Date:</Typography>\n          <Typography>Interest Rate:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Amout:</Typography>\n          <Typography>Payment Date:</Typography>\n          <Typography>No Payments:</Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Typography>Payment Remaining:</Typography>\n          <Typography>Last Payment:</Typography>\n          <Typography>Last Payment $:</Typography>\n        </Grid>\n      </Grid>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Payment #</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Amout</TableCell>\n            <TableCell>Late Fee</TableCell>\n            <TableCell>Total Due</TableCell>\n            <TableCell>Payment</TableCell>\n            <TableCell>Posted</TableCell>\n            <TableCell>Method</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{paymentData.payment_no}</TableCell>\n          <TableCell>{paymentData.due}</TableCell>\n          <TableCell>{paymentData.amount} </TableCell>\n          <TableCell>{paymentData.late_fee}</TableCell>\n          <TableCell>{paymentData.total_due}</TableCell>\n          <TableCell>{paymentData.payment}</TableCell>\n          <TableCell>{paymentData.posted}</TableCell>\n          <TableCell>{paymentData.method}</TableCell>\n        </TableBody>\n      </Table>\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Close\n      </Button>\n      <Grid container>\n        <Grid item lg={6}>\n          <Typography>Post agreement Balance:</Typography>\n        </Grid>\n        <Grid item lg={6}>\n          <Typography>Start Date:</Typography>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst InvoicePayment = () => {\n  const [invoiceData, setInvoiceData] = useState({\n    invoice_no: \"i-2106-0004542\",\n    due: \"2020/07/01\",\n    tax: \"$ 15.00\",\n    interest: \"$2.35\",\n    time: \"$ 1,234.50\",\n    hard: \"$457.00\",\n    soft: \"$45.00\",\n    total: \"$ 1,753.85\",\n  });\n\n  return (\n    <Fragment>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Invoice</TableCell>\n            <TableCell>Due</TableCell>\n            <TableCell>Tax</TableCell>\n            <TableCell>Interest</TableCell>\n            <TableCell>Time</TableCell>\n            <TableCell>Hard</TableCell>\n            <TableCell>Soft</TableCell>\n            <TableCell>Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableCell>\n            <Checkbox />\n          </TableCell>\n          <TableCell>{invoiceData.invoice_no}</TableCell>\n          <TableCell>{invoiceData.due}</TableCell>\n          <TableCell>{invoiceData.tax} </TableCell>\n          <TableCell>{invoiceData.interest}</TableCell>\n          <TableCell>{invoiceData.time}</TableCell>\n          <TableCell>{invoiceData.hard}</TableCell>\n          <TableCell>{invoiceData.soft}</TableCell>\n          <TableCell>{invoiceData.total}</TableCell>\n        </TableBody>\n      </Table>{\" \"}\n      <Button\n        variant=\"contained\"\n        sx={{\n          float: \"right\",\n          borderRadius: \"0.5rem\",\n          paddingInline: \"2rem\",\n          marginTop: \"2rem\",\n        }}\n      >\n        Pay\n      </Button>{\" \"}\n    </Fragment>\n  );\n};\n\nconst Payment = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [isPlan, setIsPlan] = useToggle(false);\n  const [invoiceData, setInvoiceData] = useState({\n    payment_type: \"\",\n    date: \"\",\n    retainer: \"\",\n    payment: \"\",\n    date_range: \"\",\n    menu: \"\",\n    bank_account: \"\",\n    payment_method: \"\",\n  });\n\n  const {\n    payment_type,\n    date,\n    retainer,\n    payment,\n    date_range,\n    menu,\n    bank_account,\n    payment_method,\n  } = invoiceData;\n  const onChange = (e) =>\n    setInvoiceData({ ...invoiceData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{\n              \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n            }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"payment_type\"\n                defaultValue=\"cash\"\n                name=\"payment_type\"\n                onChange={(e) => onChange(e)}\n                id=\"payment_type\"\n                autoComplete=\"payment_type\"\n              >\n                <FormControlLabel\n                  value=\"cash\"\n                  control={<Radio />}\n                  label=\"Cash\"\n                />\n                <FormControlLabel value=\"cc\" control={<Radio />} label=\"CC\" />\n                <FormControlLabel\n                  value=\"wire\"\n                  control={<Radio />}\n                  label=\"Wire\"\n                />\n                <FormControlLabel\n                  value=\"check\"\n                  control={<Radio />}\n                  label=\"Check\"\n                />\n              </RadioGroup>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              id=\"date\"\n              label=\"date\"\n              type=\"date\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <FormControlLabel\n              value=\"retainer\"\n              control={<Checkbox />}\n              label=\"Retainer\"\n            />\n            <FormControlLabel\n              value=\"payment\"\n              control={<Checkbox />}\n              label=\"Payment\"\n            />\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n              <DateRangePicker\n                calendars={1}\n                value={dateRange}\n                onChange={(newValue) => {\n                  setDateRange(newValue);\n                }}\n                renderInput={(startProps, endProps) => (\n                  <Fragment>\n                    <TextField size=\"small\" {...startProps} />\n                    <Box sx={{ mx: 2 }}> to </Box>\n                    <TextField size=\"small\" {...endProps} />\n                  </Fragment>\n                )}\n              />\n            </LocalizationProvider> */}\n            <FormControl sx={{ width: \"12rem\" }}>\n              <InputLabel id=\"demo-simple-select-label\">Date Range</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={date_range}\n                label=\"Age\"\n                onChange={(e) => onChange(e)}\n              >\n                <MenuItem value={10}>Ten</MenuItem>\n                <MenuItem value={20}>Twenty</MenuItem>\n                <MenuItem value={30}>Thirty</MenuItem>\n              </Select>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"menu\"\n              label=\"menu\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"menu\"\n              autoComplete=\"menu\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bank_account\"\n              label=\"bank_account\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"bank_account\"\n              autoComplete=\"bank_account\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"payment_method\"\n              label=\"payment_method\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"payment_method\"\n              autoComplete=\"payment_method\"\n            />\n            <FormControl component=\"fieldset\">\n              <RadioGroup\n                row\n                aria-label=\"isPlan\"\n                defaultValue={isPlan}\n                name=\"isPlan\"\n                onChange={(e) => setIsPlan(e)}\n                id=\"isPlan\"\n                autoComplete=\"isPlan\"\n              >\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Invoice Payment\"\n                />\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Payment Plan\"\n                />\n              </RadioGroup>\n            </FormControl>\n          </Box>\n        </Grid>\n        <Grid item lg={12}>\n          <TableContainer>\n            {isPlan ? <PaymentPlan /> : <InvoicePayment />}\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Payment;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  FormControlLabel,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  Button,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport { styled } from \"@mui/material/styles\";\n\nimport { useToggle } from \"../../context/useToggle\";\nimport CreateInvoice from \"./CreateInvoice\";\nimport Payment from \"./Payment\";\n\nconst Filters = () => {\n  const [invoiceToggle, setInvoiceToggle] = useToggle(false);\n  const [paymentToggle, setPaymentToggle] = useToggle(false);\n  const [paid, setPaid] = useToggle(false);\n\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid\n          spacing={2}\n          item\n          lg={12}\n          direction=\"Row\"\n          sx={{\n            \"& .MuiTextField-root\": { m: 1 },\n            \"& .MuiFormControl-root\": { m: 1, width: \"10rem\" },\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            onClick={() => setInvoiceToggle(invoiceToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Create Invoice\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={invoiceToggle}\n            onClose={() => setInvoiceToggle(invoiceToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {\"Create Invoice\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <CreateInvoice />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <Button\n            variant=\"contained\"\n            onClick={() => setPaymentToggle(paymentToggle)}\n            sx={{ margin: \"0.5rem\" }}\n          >\n            Receive Money\n          </Button>\n          <Dialog\n            fullWidth=\"lg\"\n            maxWidth=\"lg\"\n            open={paymentToggle}\n            onClose={() => setPaymentToggle(paymentToggle)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Receive Money\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <Payment />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>\n          <FormControlLabel\n            label=\" Paid/ Unpaid\"\n            control={<Switch checked={paid} onChange={() => setPaid(paid)} />}\n          />\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Invoice</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Bill Date</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">All Times</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <Typography\n            component=\"span\"\n            variant=\"caption\"\n            sx={{ width: \"8rem\", m: 2, fontSize: \"1.2rem\" }}\n          >\n            Status:\n          </Typography>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Any </InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Dropd-own</InputLabel>\n            <Select\n              size=\"small\"\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n} from \"@mui/material\";\nimport Filters from \"./Filters\";\n\nconst InvoiceList = () => {\n  const [invoice, setInvoice] = useState(null);\n\n  // useEffect(() => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //     },\n  //   };\n  //   const res = axios.get(\n  //     `${process.env.REACT_APP_API_URL}/api/invoices`,\n  //     config,\n  //   );\n  //   setInvoice(res.data);\n  // }, []);\n\n  return (\n    <Fragment>\n      <Filters />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Invoice</TableCell>\n              <TableCell>Created</TableCell>\n              <TableCell>Due</TableCell>\n              <TableCell>Tax</TableCell>\n              <TableCell>Interest</TableCell>\n              <TableCell>Discount</TableCell>\n              <TableCell>Total</TableCell>\n              <TableCell>Balance</TableCell>\n              <TableCell>Last Payment</TableCell>\n              <TableCell>Approval Date</TableCell>\n              <TableCell>Approval by</TableCell>\n              <TableCell>Created by</TableCell>\n            </TableRow>\n            {/* {invoice?.map((invoice) => (\n              <TableRow id={invoice.id}>\n                <TableCell>\n                  <Checkbox />\n                </TableCell>\n                <TableCell>{invoice.id}</TableCell>\n                <TableCell>{invoice.created}</TableCell>\n                <TableCell>{invoice.due}</TableCell>\n                <TableCell>{invoice.tax}</TableCell>\n                <TableCell>{invoice.interest}</TableCell>\n                <TableCell>{invoice.discount}</TableCell>\n                <TableCell>{invoice.total}</TableCell>\n                <TableCell>{invoice.balance}</TableCell>\n                <TableCell>{invoice.last_payment}</TableCell>\n                <TableCell>{invoice.approvel_date}</TableCell>\n                <TableCell>{invoice.approvel.by}</TableCell>\n                <TableCell>{invoice.created_by}</TableCell>\n              </TableRow>\n            ))} */}\n          </TableHead>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default InvoiceList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport InvoiceList from \"./InvoiceList\";\nimport Payment from \"./Payment\";\nimport CreateInvoice from \"./CreateInvoice\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <InvoiceList />\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\n// import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport const CONFIG = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nexport const CreateMatter = (\n  contact,\n  matter_name,\n  matter_type,\n  matter_source,\n  matter_status,\n  assign_to,\n  assign_by,\n  billing_rate,\n  alerts,\n  open_date,\n  close_date,\n  total_days,\n  jurisdiction,\n  status_limitaion,\n  opposing_counsel,\n  where,\n  when,\n  involved,\n  witnesses,\n  narrative,\n) => {\n  let status = \"\";\n  const body = JSON.stringify({\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n    open_date,\n    close_date,\n    total_days,\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    when,\n    involved,\n    witnesses,\n    narrative,\n  });\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n    .then((res) => {\n      status = res.statusText;\n    })\n    .catch((err) => {\n      status = err.message;\n    });\n\n  return status;\n};\n\nexport const retrive_matter = () => {};\n","/** @format */\n\nimport React from \"react\";\nimport { Alert } from \"@mui/material\";\n\nexport const ActionAlerts = (status) => {\n  return <Alert severity=\"error\">{status}</Alert>;\n};\n\nexport const TotalDays = (date1, date2) => {\n  let dt1 = new Date(date1);\n  let dt2 = new Date(date2);\n  return Math.floor(\n    (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) -\n      Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) /\n      (1000 * 60 * 60 * 24),\n  );\n};\n\nexport const GetDate = (date) => {\n  let newDate =\n    date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n  return newDate;\n};\n\nexport const GetTime = (time) => {\n  let newTime =\n    time.getHours() + \":\" + time.getMinutes() + \":\" + time.getSeconds();\n  return newTime;\n};\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  Typography,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Box,\n  containerClasses,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\n\nconst MatterList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const [redTask, setRedTask] = useState(false);\n  const [greenTask, setGreenTask] = useState(false);\n  const [yellowTask, setYellowTask] = useState(false);\n  const [myTask, setMyTask] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/tasks/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTasks(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Box component={Paper} p={2}>\n      <FormGroup aria-label=\"position\" row>\n        <FormControlLabel\n          control={\n            <Checkbox value={myTask} onChange={() => setMyTask(!myTask)} />\n          }\n          label=\"My Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox value={redTask} onChange={() => setRedTask(!redTask)} />\n          }\n          label=\"Red Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={greenTask}\n              onChange={() => setGreenTask(!greenTask)}\n            />\n          }\n          label=\"Green Tasks\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              value={yellowTask}\n              onChange={() => setYellowTask(!yellowTask)}\n            />\n          }\n          label=\"Yellow Tasks\"\n        />\n      </FormGroup>\n      <Typography component=\"h3\">All Matters Task's List</Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assign To</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : tasks?.map((data) => {\n                  return (\n                    <TableRow id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        {data.task_nature === \"urgent\" ? (\n                          <CircleIcon color=\"error\" />\n                        ) : (\n                          <CircleIcon color=\"success\" />\n                        )}\n                      </TableCell>\n                      <TableCell>{data.matter}</TableCell>\n                      <TableCell>\n                        {data.last_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>\n                        {data.next_action ? data.next_action : \"-\"}\n                      </TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default MatterList;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, CardContent, Typography } from \"@mui/material\";\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Tasks cleared Last day\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Goal Today\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Personal Best\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 160 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 12 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Company Record\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                0\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Link, Typography, List, ListItem, Paper } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nconst Calendar = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography variant=\"h6\" component=\"h7\">\n          My Calendar at a Glance\n        </Typography>\n        <List>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Start motion for trail</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n          <ListItem>\n            Modnay - 08:00am - <Link to=\"\"> Call Client</Link>\n          </ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Calendar;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Select,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  Typography,\n} from \"@mui/material\";\n\nconst Filters = () => {\n  // const [user, setUser] = useState(\"Any user\");\n  const [age, setAge] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item>\n          <Typography>Assign To</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Organized By</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography>Status</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Typography color=\"white\">-</Typography>\n          <FormControl sx={{ m: 1, minWidth: 150 }}>\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\n              Any User\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={age}\n              label=\"Age\"\n              onChange={handleChange}\n              // defaultValue={30}\n            >\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Filters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Card, Button, Typography } from \"@mui/material\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst MatterCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2} mt={1.5}>\n        <Grid item lg={9}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"error.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Urgent\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"warning.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Concern\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"success.main\",\n                  color: \"white\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      Start\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card\n                sx={{\n                  minWidth: 175,\n                  borderRadius: \"1rem\",\n                  bgcolor: \"white\",\n                  color: \"black\",\n                }}\n              >\n                <Grid container p={2}>\n                  <Grid item lg={8}>\n                    <Typography\n                      component=\"span\"\n                      sx={{ fontSize: 14 }}\n                      gutterBottom\n                    >\n                      New\n                    </Typography>\n                  </Grid>\n                  <Grid item lg={4} sx={{ textAlign: \"right\" }}>\n                    <Typography variant=\"h5\" component=\"h6\">\n                      0\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3}>\n          <Button\n            variant=\"outlined\"\n            sx={{\n              minWidth: 100,\n              height: 40,\n              borderRadius: \"0.5rem\",\n              bgcolor: \"white\",\n              color: \"black\",\n            }}\n          >\n            Import\n          </Button>\n          <LinkButton to=\"/create-matter\"> + New </LinkButton>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterCards;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Checkbox,\n  TableBody,\n} from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\nimport { GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst MatterListLong = () => {\n  const [matters, setMatters] = useState([]);\n\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/new-matter/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setMatters(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Matter Tasks</TableCell>\n              <TableCell>Matter Name</TableCell>\n              <TableCell>Matter Contact</TableCell>\n              <TableCell>Matter Type</TableCell>\n              <TableCell>Bill Rate</TableCell>\n              <TableCell>Last Action</TableCell>\n              <TableCell>Next Action</TableCell>\n              <TableCell>Assigned to</TableCell>\n              <TableCell>Billable</TableCell>\n              <TableCell>Open Invoice</TableCell>\n              <TableCell>Trust Account</TableCell>\n              <TableCell>Last Payment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {loading\n              ? null\n              : matters?.map((data, index) => {\n                  return (\n                    <TableRow id={index}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>\n                        <CircleIcon color=\"error\" />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n                      <TableCell>{data.contact}</TableCell>\n                      <TableCell>{data.matter_type}</TableCell>\n                      <TableCell>{data.billing_rate}</TableCell>\n                      <TableCell>{data.open_date}</TableCell>\n                      <TableCell>{data.close_date}</TableCell>\n                      <TableCell>{data.assign_to}</TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 100)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {\" \"}\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <NumberFormat\n                          value={Math.floor(Math.random() * 1000)}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          decimalScale={2}\n                          fixedDecimalScale={true}\n                          prefix=\"$\"\n                        />{\" \"}\n                        - {data.close_date}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default MatterListLong;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Button, Typography } from \"@mui/material\";\nimport SaveIcon from \"@mui/icons-material/Save\";\n\nimport { LocalizationProvider, DateRangePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nimport { CreateMatter, CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, TotalDays, GetDate } from \"../../utils/ActionAlerts\";\n\nconst NewMatter = () => {\n  // const matter_number = Math.floor(Math.random() * 10000000);\n  const mask = \"____-__-__\";\n  const matter_number = 23568;\n  const [openDate, setOpenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [whenDate, setWhenDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [closeDate, setCloseDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [totalDays, setTotalDays] = useState(0);\n  const [matterData, setMatterData] = useState({\n    contact: 0,\n    matter_name: \"\",\n    matter_type: \"\",\n    matter_source: \"\",\n    matter_status: \"\",\n    assign_to: 0,\n    assign_by: 0,\n    billing_rate: 0,\n    alerts: \"\",\n\n    jurisdiction: \"\",\n    status_limitaion: null,\n    opposing_counsel: \"\",\n    where: \"\",\n    involved: \"\",\n    witnesses: \"\",\n    narrative: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    matter_type,\n    matter_source,\n    matter_status,\n    assign_to,\n    assign_by,\n    billing_rate,\n    alerts,\n\n    jurisdiction,\n    status_limitaion,\n    opposing_counsel,\n    where,\n    involved,\n    witnesses,\n    narrative,\n  } = matterData;\n\n  const onChange = (e) =>\n    setMatterData({ ...matterData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let open_date = GetDate(openDate);\n    let close_date = GetDate(closeDate);\n    let when = GetDate(whenDate);\n    let total_days = totalDays;\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      matter_type,\n      matter_source,\n      matter_status,\n      assign_to,\n      assign_by,\n      billing_rate,\n      alerts,\n      open_date,\n      close_date,\n      total_days,\n      jurisdiction,\n      status_limitaion,\n      opposing_counsel,\n      where,\n      when,\n      involved,\n      witnesses,\n      narrative,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-matter/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  useEffect(() => {\n    let days = TotalDays(openDate, closeDate);\n    setTotalDays(days);\n  }, [openDate, closeDate]);\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Matter\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item lg={8}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"contact\"\n              label=\"contact\"\n              type=\"number\"\n              min=\"0\"\n              value={contact}\n              onChange={(e) => onChange(e)}\n              id=\"contact\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_number\"\n              label=\"matter_number\"\n              type=\"text\"\n              value={matter_number}\n              // onChange={(e) => onChange(e)}\n              id=\"matter_number\"\n              disabled\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_name\"\n              label=\"matter_name\"\n              type=\"text\"\n              value={matter_name}\n              onChange={(e) => onChange(e)}\n              id=\"matter_name\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"alerts\"\n              label=\"alerts\"\n              type=\"text\"\n              value={alerts}\n              onChange={(e) => onChange(e)}\n              id=\"alerts\"\n              autoComplete=\"alerts\"\n              sx={{\n                width: \"97%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_type\"\n              label=\"matter_type\"\n              type=\"text\"\n              value={matter_type}\n              onChange={(e) => onChange(e)}\n              id=\"matter_type\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_source\"\n              label=\"matter_source\"\n              type=\"text\"\n              value={matter_source}\n              onChange={(e) => onChange(e)}\n              id=\"matter_source\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_status\"\n              label=\"matter_status\"\n              type=\"text\"\n              value={matter_status}\n              onChange={(e) => onChange(e)}\n              id=\"matter_status\"\n              sx={{\n                width: \"48%\",\n              }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"assign_to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              sx={{\n                width: \"47%\",\n              }}\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_rate\"\n              label=\"billing_rate\"\n              step=\"0.01\"\n              type=\"number\"\n              value={billing_rate}\n              onChange={(e) => onChange(e)}\n              id=\"billing_rate\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Open Date\"\n                value={openDate}\n                name=\"open\"\n                id=\"open\"\n                onChange={(e) => setOpenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"Close Date\"\n                value={closeDate}\n                name=\"closed\"\n                id=\"closed\"\n                onChange={(e) => setCloseDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"total_days\"\n              label=\"total_days\"\n              type=\"number\"\n              value={totalDays}\n              onChange={(e) => setTotalDays(TotalDays(openDate, closeDate))}\n              id=\"total_days\"\n              disabled\n            />\n          </Grid>\n\n          <Grid item lg={4}>\n            <br />\n            <Typography component=\"h5\" variant=\"h6\">\n              Legal Concerns\n            </Typography>\n            <br />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"jurisdiction\"\n              label=\"jurisdiction\"\n              type=\"text\"\n              value={jurisdiction}\n              onChange={(e) => onChange(e)}\n              id=\"jurisdiction\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"status_limitaion\"\n              label=\"status_limitaion\"\n              type=\"text\"\n              value={status_limitaion}\n              onChange={(e) => onChange(e)}\n              id=\"status_limitaion\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"opposing_counsel\"\n              label=\"opposing_counsel\"\n              type=\"text\"\n              value={opposing_counsel}\n              onChange={(e) => onChange(e)}\n              id=\"opposing_counsel\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <Typography component=\"h5\" variant=\"h6\" sx={{ fontSize: \"1rem\" }}>\n              Event Detail\n            </Typography>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"where\"\n              label=\"where\"\n              type=\"text\"\n              value={where}\n              onChange={(e) => onChange(e)}\n              id=\"where\"\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask={mask}\n                label=\"When\"\n                value={whenDate}\n                name=\"when\"\n                id=\"when\"\n                onChange={(e) => setWhenDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"involved\"\n              label=\"Who was involved\"\n              type=\"text\"\n              value={involved}\n              onChange={(e) => onChange(e)}\n              id=\"involved\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"witnesses\"\n              label=\"witnesses\"\n              type=\"text\"\n              value={witnesses}\n              onChange={(e) => onChange(e)}\n              id=\"witnesses\"\n            />\n          </Grid>\n          <Grid item lg={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              label=\"Customer Narrative of the Event\"\n              multiline\n              type=\"text\"\n              rows={10}\n              value={narrative}\n              onChange={(e) => onChange(e)}\n              defaultValue=\"Narrative\"\n              name=\"narrative\"\n              id=\"narrative\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default NewMatter;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { styled } from \"@mui/material/styles\";\n\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  CardContent,\n  Typography,\n  Card,\n  Grid,\n  Box,\n  List,\n  ListItem,\n  Paper,\n  InputBase,\n} from \"@mui/material\";\n\nconst MatterTask = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components=\"p\">\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components=\"p\">\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components=\"p\">YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Activities = () => {\n  return (\n    <Fragment>\n      <Box component={Paper} mt={2} p={2}>\n        <Typography sx={{ fontSize: \"0.8rem\" }}>Upcoming Activity</Typography>\n        <List mt={1} sx={{ fontSize: \"0.75rem\" }}>\n          <ListItem components={Typography}>\n            Date: - Activity - Responsible Party\n          </ListItem>\n          <ListItem components={Typography}>\n            YYYY/MM/DD: - Hearing for MSC - MJJ\n          </ListItem>\n          <ListItem components={Typography}>YYYY/MM/DD: - Trail - KSK</ListItem>\n        </List>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Cards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Classification\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                % time spent\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item>\n          <Card sx={{ minWidth: 200 }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h7\" color=\"purple\">\n                Matter Completion\n              </Typography>\n              <Typography variant=\"h4\" component=\"h5\">\n                -\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst MatterDetail = () => {\n  const Search = styled(\"div\")(({ theme }) => ({\n    position: \"relative\",\n    borderRadius: \"1.5rem\",\n    backgroundColor: \"#eee\",\n    \"&:hover\": {\n      backgroundColor: \"#ddd\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"40%\",\n  }));\n\n  const SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  }));\n\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: \"inherit\",\n    \"& .MuiInputBase-input\": {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"md\")]: {\n        width: \"20ch\",\n      },\n    },\n  }));\n  // const [matters, setMatters] = useState(null);\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={12}>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n        </Grid>\n        <Grid item lg={12}>\n          <Grid container spacing={2}>\n            <Grid item mt={2} lg={7}>\n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Recent Document</TableCell>\n                      <TableCell>Version</TableCell>\n                      <TableCell>Last Open</TableCell>\n                      <TableCell>User</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>1</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>2</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>3</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>-</TableCell>\n                    </TableRow>\n                  </TableHead>\n                </Table>\n              </TableContainer>\n              <Grid container spacing={3}>\n                <Grid item>\n                  <Activities />\n                </Grid>\n                <Grid item>\n                  <MatterTask />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item mt={2} lg={5}>\n              <Cards />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MatterDetail;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport MatterList from \"./MatterList\";\nimport { Grid, Box } from \"@mui/material\";\nimport Cards from \"./Cards\";\nimport Calendar from \"./Calendar\";\nimport Filters from \"./Filters\";\nimport MatterCards from \"./MatterCards\";\nimport MatterListLong from \"./MatterListLong\";\nimport NewMatter from \"./NewMatter\";\nimport MatterDetail from \"./MatterDetail\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item lg={12}>\n            <Filters />\n          </Grid>\n          <Grid item lg={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item lg={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst MatterDashboard = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container spacing={2}>\n          <Grid item lg={7}>\n            <MatterList />\n            <Calendar />\n          </Grid>\n          <Grid item lg={5}>\n            <Cards />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashboard\">\n          <MatterDashboard />\n        </div>\n        <div label=\"Matter\">\n          <Matters />\n        </div>\n        <div label=\"New Matter\">\n          <NewMatter />\n        </div>\n        <div label=\"Smith vs. Jhon\">\n          <MatterDetail />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerActivity = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setActivityData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow bgColor=\"#796ef0\">\n              <TableCell>\n                <Typography color=\"white\">Date</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Files</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Sub-Category</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Notes</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Source</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">User</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">In/Out</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          {/* {loading\n            ? null\n            : activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })} */}\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default LedgerActivity;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  Switch,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  TextField,\n  FormControlLabel,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DateRangePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Fillters = () => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [billedby, setBilledby] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Filter By</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={filter}\n            label=\"Filter By\"\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Billed by</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={billedby}\n            label=\"Billed By\"\n            onChange={(e) => setBilledby(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl sx={{ width: \"8rem\", m: 2 }}>\n          <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n          <Select\n            size=\"small\"\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={status}\n            label=\"Age\"\n            onChange={(e) => setStatus(e.target.value)}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </FormControl>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Typography sx={{ mt: 2, mb: 1 }}> Date Range </Typography>\n          <DateRangePicker\n            calendars={1}\n            value={dateRange}\n            onChange={(newValue) => {\n              setDateRange(newValue);\n            }}\n            renderInput={(startProps, endProps) => (\n              <Fragment>\n                <TextField size=\"small\" {...startProps} />\n                <Box sx={{ mx: 2 }}> to </Box>\n                <TextField size=\"small\" {...endProps} />\n              </Fragment>\n            )}\n          />\n        </LocalizationProvider>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Fillters;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerCards = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={7}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Time Entries\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={200}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      f\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Soft Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={65000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Hard Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={5000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Cost\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={70000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Trust\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={4000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item>\n              <Card sx={{ minWidth: 160 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 12 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Total Due\n                  </Typography>\n                  <Typography variant=\"h4\" component=\"h5\">\n                    <NumberFormat\n                      value={100000}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item={5}>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>User</TableCell>\n                  <TableCell>Hours</TableCell>\n                  <TableCell>Total</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell> Jhon Johnson</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={74.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={39007.05}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Mark MacCalloff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={4.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={800.0}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Cindy Madenuff</TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={127.3}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <NumberFormat\n                      value={41372.5}\n                      displayType={\"text\"}\n                      decimalScale={2}\n                      fixedDecimalScale={true}\n                      thousandSeparator={true}\n                      prefix=\"$\"\n                    />\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerCards;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n  Button,\n} from \"@mui/material\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { LinkButton } from \"../../styles/styles\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst LedgerTImeList = () => {\n  const [ledgerData, setLedgerData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setLedgerData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  return (\n    <Fragment>\n      <Box>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Print\n        </Button>\n        <Button\n          variant=\"contained\"\n          sx={{ marginRight: \"1rem\", float: \"right\" }}\n        >\n          Export\n        </Button>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>Cateagory</TableCell>\n                <TableCell>Sub-Category</TableCell>\n                <TableCell>Detail</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Qty</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Total</TableCell>\n                <TableCell>BillBy</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n                ? null\n                : ledgerData?.map((data) => {\n                    return (\n                      <TableBody id={data.id}>\n                        <TableCell>\n                          <Checkbox />\n                        </TableCell>\n                        <TableCell>{data.category}</TableCell>\n                        <TableCell>{data.sub_category}</TableCell>\n                        <TableCell>{data.detail}</TableCell>\n                        <TableCell>{data.date}</TableCell>\n                        <TableCell>{data.qty}</TableCell>\n                        <TableCell>\n                          {data.billable ? \"Billable\" : \"Paid\"}\n                        </TableCell>\n                        <TableCell>\n                          <NumberFormat\n                            value={data.qty * 25}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix=\"$\"\n                          />\n                        </TableCell>\n                        <TableCell>{data.bill_by}</TableCell>\n                      </TableBody>\n                    );\n                  })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default LedgerTImeList;\n","/** @format */\n\nimport { Typography, Box, Grid } from \"@mui/material\";\nimport React, { Fragment } from \"react\";\nimport Fillters from \"./Fillters\";\nimport LedgerCards from \"./LedgerCards\";\nimport LedgerTimeList from \"./LedgerTImeList\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LegderDashbard = () => {\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <Box>\n          <LedgerCards />\n          <Fillters />\n          <LedgerTimeList />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LegderDashbard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box, Typography, Paper, TextField } from \"@mui/material\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst LedgerDoc = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={1}>\n        <Grid item lg={4} sx={{}}>\n          <Box\n            sx={{\n              width: \"80%\",\n              minHeight: \"25rem\",\n              padding: \"5rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            MS Word Document On Pleading or Non Pleading Paper\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Box\n            sx={{\n              padding: \"5rem 2rem 5rem 2rem\",\n              minHeight: \"25rem\",\n              width: \"80%\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Space for 2nd Document to be opend if user wants it\n          </Box>\n        </Grid>\n        <Grid item lg={4}>\n          <Grid container>\n            <Grid item lg={12}>\n              <Box component={Paper} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n                <Typography mt={2}>Related Document</Typography>\n              </Box>\n            </Grid>\n            <Grid item lg={12}>\n              <Box component={Paper} mt={2} p={2} sx={{ borderRadius: \"1rem\" }}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={5}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"filled\"\n                  name=\"detail\"\n                  type=\"text\"\n                  value=\"Quick Notes\"\n                  id=\"detail\"\n                  sx={{ borderRadius: \"1rem\" }}\n                />\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default LedgerDoc;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  RadioGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Radio,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\n\nconst Time = () => {\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [timeToggle, setTimeToggle] = useToggle(true);\n  const [billable, setBillable] = useToggle(false);\n\n  // const [bill, setBill] = useToggle(false);\n  const [time, setTime] = useState(\"\");\n  const [timeData, setTimeData] = useState({\n    contact: 0,\n    matter_name: 0,\n    category: \"\",\n    sub_category: \"\",\n    // time: \"\",\n    hard: false,\n    soft: false,\n    unit: 0,\n    qty: 0,\n    rate: 0,\n    file: \"\",\n    detail: \"\",\n    bill_by: 0,\n    note: \"\",\n  });\n\n  const {\n    contact,\n    matter_name,\n    category,\n    sub_category,\n    hard,\n    soft,\n    unit,\n    // time,\n    qty,\n    rate,\n    file,\n    detail,\n    bill_by,\n\n    note,\n  } = timeData;\n  const onChange = (e) =>\n    setTimeData({ ...timeData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    let date = GetDate(pickDate);\n\n    const body = JSON.stringify({\n      contact,\n      matter_name,\n      category,\n      sub_category,\n      hard,\n      soft,\n      unit,\n      qty,\n      rate,\n      time,\n      date,\n      detail,\n      bill_by,\n      billable,\n      note,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/add-time/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box component=\"form\" Validate onSubmit={(e) => onSubmit(e)}>\n        <Typography component=\"h3\" variant=\"h4\">\n          Time\n        </Typography>\n        <Grid\n          container\n          spacing={2}\n          mt={2}\n          sx={{\n            \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n          }}\n        >\n          <Grid item xs={12}>\n            <Grid container p={3}>\n              <Grid item xs={6}>\n                <FormControlLabel\n                  size=\"large\"\n                  label=\"Time\"\n                  labelPlacement=\"start\"\n                  control={\n                    <Switch\n                      size=\"large\"\n                      checked={timeToggle}\n                      onChange={(e) => setTimeToggle(e)}\n                    />\n                  }\n                />\n                {timeToggle ? null : (\n                  <Box>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">Expense</FormLabel>\n                      <RadioGroup\n                        row\n                        aria-label=\"expense\"\n                        defaultValue=\"\"\n                        name=\"expense\"\n                        id=\"expense\"\n                      >\n                        <FormControlLabel\n                          value=\"hard\"\n                          control={<Radio />}\n                          label=\"Hard\"\n                        />\n                        <FormControlLabel\n                          value=\"soft\"\n                          control={<Radio />}\n                          label=\"Soft\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  </Box>\n                )}\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"matter\"\n                  label=\"matter\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"matter\"\n                  autoComplete=\"matter\"\n                  disabled\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"contact\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                  disabled\n                />\n              </Grid>\n            </Grid>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"category\"\n              label=\"category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"category\"\n              autoComplete=\"category\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"sub_category\"\n              label=\"sub_category\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"sub_category\"\n              autoComplete=\"sub_category\"\n            />\n            {timeToggle ? (\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"rate\"\n                label=\"rate\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"rate\"\n                autoComplete=\"rate\"\n              />\n            ) : (\n              <Fragment>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"unit\"\n                  label=\"unit\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"unit\"\n                  autoComplete=\"unit\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"qty\"\n                  label=\"Qty\"\n                  type=\"number\"\n                  onChange={(e) => onChange(e)}\n                  id=\"qty\"\n                  autoComplete=\"qty\"\n                />\n                <Box m={1}>\n                  <Typography component=\"lable\"> Receipt(s) </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n              </Fragment>\n            )}\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"HH:MM\"\n              mask={[\"H\", \"H\", \"M\", \"M\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time\"\n              name=\"time\"\n              id=\"time\"\n              value={time}\n              type=\"text\"\n              onValueChange={(e) => setTime(e.value)}\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Date\"\n                value={pickDate}\n                name=\"pickdate\"\n                id=\"pickdate\"\n                onChange={(e) => setPickDate(e)}\n                renderInput={(params) => <TextField size=\"small\" {...params} />}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"detail\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n              autoComplete=\"detail\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bill_by\"\n              label=\"bill_by\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bill_by\"\n              autoComplete=\"bill_by\"\n            />\n            <FormControlLabel\n              size=\"large\"\n              label=\"Billable\"\n              labelPlacement=\"start\"\n              control={\n                <Switch\n                  size=\"large\"\n                  checked={billable}\n                  onChange={() => setBillable(billable)}\n                />\n              }\n            />\n            <br />\n          </Grid>\n        </Grid>\n        <Grid container>\n          <Grid item lg={12}>\n            <TextField\n              fullWidth\n              multiline\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"note\"\n              rows={4}\n              // label=\"note\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              placeholder=\"Private / internal notes\"\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ float: \"right\" }}\n          endIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Time;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport LedgerActivity from \"./LedgerActivity\";\nimport LegderDashbard from \"./LedgerDashbard\";\nimport LedgerDoc from \"./LedgerDoc\";\nimport LedgerTImeList from \"./LedgerTImeList\";\nimport Time from \"./Time\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Ledger\">\n          <LegderDashbard />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Documents\">\n          <LedgerDoc />\n        </div>\n        <div label=\"Time\">\n          <Time />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst SubCategory = () => {\n  const [subCategory, setSubCategory] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/sub-category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setSubCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/sub-category/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n      })\n      .catch((err) => setStatus(err.statusText));\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/sub-category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n      })\n      .catch((err) => {\n        FetchData();\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Sub-Category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Sub-Category\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Sub-Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? (\n        subCategory.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default SubCategory;\n","/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst catHandler = (id) => {\n  console.log(id);\n};\n\nconst Category = () => {\n  const [category, setCategory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/category/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setCategory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/category/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/category/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New category\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Add New Category\"}</DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Category Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* {!loading ? (\n        category?.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )} */}\n    </Fragment>\n  );\n};\n\nexport default Category;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Classification = () => {\n  const [classification, setClassification] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/classification/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setClassification(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/classification/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        setStatus(res.statusText);\n        return <ActionAlerts value={{ status: status }} />;\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/api/classification/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return <ActionAlerts value={{ status: res.statusText }} />;\n      })\n      .catch((err) => {\n        FetchData();\n        return <ActionAlerts value={{ status: err.statusText }} />;\n      });\n  };\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        fullWidth\n        sx={{\n          borderRadius: \"0.5rem\",\n        }}\n      >\n        + New Classification\n      </Button>\n      <Dialog\n        component=\"form\"\n        Validate\n        onSubmit={(e) => handleSubmit(e)}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Add New Classification\"}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            size=\"small\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"name\"\n            label=\"Classification Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => onChange(e)}\n            id=\"name\"\n            autoComplete=\"name\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n          <Button type=\"submit\" autoFocus>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {!loading ? (\n        classification.map((data) => (\n          <Box mt={1}>\n            <List>\n              <ListItem disablePadding>\n                <ListItemText>{data.name}</ListItemText>\n                <Button\n                  variant=\"contained\"\n                  value={data.id}\n                  onClick={() => handleDelete(data.id)}\n                  sx={{\n                    borderRadius: \"0.5rem\",\n                    float: \"right\",\n                  }}\n                >\n                  <ClearIcon />\n                </Button>\n              </ListItem>\n            </List>\n          </Box>\n        ))\n      ) : (\n        <Typography>Loading ...</Typography>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Classification;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Typography, Grid, Button, Box } from \"@mui/material\";\n\nimport SubCategory from \"./SubCategory\";\nimport Category from \"./Category\";\nimport Classification from \"./Classification\";\n\nconst ManageCategory = () => {\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item lg={8}>\n          <Typography component=\"h3\" variant=\"h5\">\n            Manage Category, Sub-category, Classification\n          </Typography>\n        </Grid>\n        <Grid item lg={4}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"error\">\n              Delete Checked\n            </Button>\n          </Box>\n        </Grid>\n\n        <Grid item lg={12}>\n          <Grid container spacing={5} mt={1}>\n            <Grid item lg={4}>\n              <Category />\n            </Grid>\n            <Grid item lg={4}>\n              <SubCategory />\n            </Grid>\n            <Grid item lg={4}>\n              <Classification />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageCategory;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Button,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport { ActionAlerts, GetTime, GetDate } from \"../../utils/ActionAlerts\";\nimport NumberFormat from \"react-number-format\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Contact = () => {\n  const [clientNo, setClientNo] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [ssn, setSsn] = useState(\"\");\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [homeNo, setHomeNo] = useState(\"\");\n  const [officeNo, setOfficeNo] = useState(\"\");\n  const [faxNo, setFaxNo] = useState(\"\");\n  const [otherNo, setOtherNo] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [plus4, setPlus4] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [contactData, setContactData] = useState({\n    // company info\n    company_name: \"\",\n    website: \"\",\n    ger_email: \"\",\n    billing_email: \"\",\n    // address\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    note: \"\",\n    f_name: \"\",\n    l_name: \"\",\n    email_1: \"\",\n    email_2: \"\",\n    email_3: \"\",\n    // other address\n    street2: \"\",\n    suite2: \"\",\n    city2: \"\",\n    state2: \"\",\n    office: \"\",\n    team: \"\",\n    member: \"\",\n    assign_to: \"\",\n    contact: \"\",\n    relation: \"\",\n  });\n\n  const {\n    company_name,\n    website,\n    ger_email,\n    billing_email,\n    street,\n    suite,\n    city,\n    state,\n    note,\n    f_name,\n    l_name,\n    email_1,\n    email_2,\n    email_3,\n    street2,\n    suite2,\n    city2,\n    state2,\n    office,\n    team,\n    member,\n    assign_to,\n    contact,\n    relation,\n  } = contactData;\n\n  const onChange = (e) => {\n    e.persist();\n    setContactData({ ...contactData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    //   let date = GetDate(pickDate);\n    //   const body = JSON.stringify({\n    //     company_name,\n    //     website,\n    //     ger_email,\n    //     billing_email,\n    //     street,\n    //     suite,\n    //     city,\n    //     state,\n    //     zip,\n    //     plus4,\n    //     client_no,\n    //     f_name,\n    //     l_name,\n    //     dob,\n    //     ssn,\n    //     mobile_no,\n    //     home_no,\n    //     office_no,\n    //     fax_no,\n    //     other_no,\n    //     email_1,\n    //     email_2,\n    //     email_3,\n    //     street2,\n    //     suite2,\n    //     city2,\n    //     state2,\n    //     zip2,\n    //     plus42,\n    //     office,\n    //     team,\n    //     member,\n    //     assign_to,\n    //     contact,\n    //     relation,\n    //   });\n    //   axios\n    //     .post(`${process.env.REACT_APP_API_URL}/api/contact/`, body, CONFIG)\n    //     .then((res) => {\n    //       <ActionAlerts value={{ status: res.statusText, message: \"Success\" }} />;\n    //     })\n    //     .catch((err) => {\n    //       <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />;\n    //     });\n    //   console.log(body);\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container p={2}>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h5\">\n              Company info\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"company_name\"\n              label=\"Company Name\"\n              type=\"text\"\n              value={company_name}\n              onChange={(e) => onChange(e)}\n              id=\"company_name\"\n              autoComplete=\"company_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Client #\"\n              id=\"clientno\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"clientno\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={clientNo}\n              onValueChange={(e) => setClientNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"First Name\"\n              label=\"f_name\"\n              type=\"text\"\n              value={f_name}\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Last Name\"\n              label=\"l_name\"\n              type=\"text\"\n              value={l_name}\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"DOB\"\n              id=\"dob\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              name=\"dob\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={dob}\n              onValueChange={(e) => setDob(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"#### #### ##\"\n              customInput={TextField}\n              label=\"SSN\"\n              id=\"ssn\"\n              name=\"ssn\"\n              value={ssn}\n              type=\"text\"\n              onValueChange={(e) => setSsn(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobileNo}\n              onValueChange={(e) => setMobileNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={homeNo}\n              onValueChange={(e) => setHomeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Office #\"\n              id=\"offlice_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"office_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={officeNo}\n              onValueChange={(e) => setOfficeNo(e.value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Fax #\"\n              id=\"fax_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"fax_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={faxNo}\n              onValueChange={(value) => setFaxNo(value)}\n            />\n            <NumberFormat\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Other #\"\n              id=\"other_no\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"other_no\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={otherNo}\n              onValueChange={(e) => setOtherNo(e.value)}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_1\"\n              label=\"Email 1\"\n              type=\"email\"\n              value={email_1}\n              onChange={(e) => onChange(e)}\n              id=\"email_1\"\n              autoComplete=\"email_1\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_2\"\n              label=\"Email 2\"\n              type=\"email\"\n              value={email_2}\n              onChange={(e) => onChange(e)}\n              id=\"email_2\"\n              autoComplete=\"email_2\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email_3\"\n              label=\"Email 3\"\n              value={email_3}\n              type=\"email\"\n              onChange={(e) => onChange(e)}\n              id=\"email_3\"\n              autoComplete=\"email_3\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"street\"\n              type=\"text\"\n              value={street}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              value={city}\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip\"\n              label=\"zip\"\n              type=\"text\"\n              id=\"zip\"\n              type=\"text\"\n              value={zip}\n              onValueChange={(e) => setZip(e.value)}\n            />\n\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus4\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus4\"\n              type=\"text\"\n              value={plus4}\n              onValueChange={(e) => setPlus4(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              multiline\n              rows={5}\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"Notes...\"\n              label=\"note\"\n              type=\"text\"\n              value={note}\n              onChange={(e) => onChange(e)}\n              id=\"note\"\n              autoComplete=\"note\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Typography component=\"h4\" variant=\"h6\">\n              Alternate Information\n            </Typography>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"webiste\"\n              label=\"Webiste\"\n              type=\"text\"\n              value={website}\n              onChange={(e) => onChange(e)}\n              id=\"webiste\"\n              autoComplete=\"webiste\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"ger_email\"\n              label=\"General Email\"\n              type=\"text\"\n              value={ger_email}\n              onChange={(e) => onChange(e)}\n              id=\"ger_email\"\n              autoComplete=\"ger_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"billing_email\"\n              label=\"Invoice/ Billing Email\"\n              type=\"text\"\n              value={billing_email}\n              onChange={(e) => onChange(e)}\n              id=\"billing_email\"\n              autoComplete=\"billing_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"street\"\n              label=\"Street\"\n              type=\"text\"\n              value={street2}\n              onChange={(e) => onChange(e)}\n              id=\"street\"\n              autoComplete=\"street\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"suite\"\n              label=\"Suite\"\n              type=\"text\"\n              value={suite2}\n              onChange={(e) => onChange(e)}\n              id=\"suite\"\n              autoComplete=\"suite\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"City\"\n              type=\"text\"\n              value={city2}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n              autoComplete=\"city\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"State\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n              autoComplete=\"state\"\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"zip2\"\n              label=\"Zip\"\n              type=\"text\"\n              id=\"zip2\"\n              type=\"text\"\n              value={zip2}\n              onValueChange={(e) => setZip2(e.value)}\n            />\n            <NumberFormat\n              margin=\"normal\"\n              variant=\"outlined\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"####\"\n              customInput={TextField}\n              name=\"plus42\"\n              label=\"+4\"\n              type=\"text\"\n              id=\"plus42\"\n              type=\"text\"\n              value={plus42}\n              onValueChange={(e) => setPlus42(e.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Source\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"office\"\n                  label=\"Office\"\n                  type=\"text\"\n                  value={office}\n                  onChange={(e) => onChange(e)}\n                  id=\"office\"\n                  autoComplete=\"office\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"team\"\n                  label=\"Team\"\n                  type=\"text\"\n                  value={team}\n                  onChange={(e) => onChange(e)}\n                  id=\"team\"\n                  autoComplete=\"team\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"member\"\n                  label=\"Member\"\n                  type=\"text\"\n                  value={member}\n                  onChange={(e) => onChange(e)}\n                  id=\"member\"\n                  autoComplete=\"member\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Assigned To\n                </Typography>\n                <FormControl\n                  size=\"small\"\n                  sx={{ mt: 2, mb: 2, minWidth: \"14rem\" }}\n                >\n                  <InputLabel id=\"demo-simple-select-autowidth-label\">\n                    Assigned To\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-autowidth-label\"\n                    id=\"demo-simple-select-autowidth\"\n                    value={assign_to}\n                    onChange={(e) => onChange(e)}\n                    autoWidth\n                    label=\"assign_to\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>Auto Assign</em>\n                    </MenuItem>\n                    <MenuItem value={10}>Twenty</MenuItem>\n                    <MenuItem value={21}>Twenty one</MenuItem>\n                    <MenuItem value={22}>Twenty one and a half</MenuItem>\n                  </Select>\n                </FormControl>\n\n                <Button variant=\"contained\" color=\"primary\">\n                  Auto Assign\n                </Button>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography component=\"h4\" variant=\"h6\">\n                  Linked Contacts\n                </Typography>\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"contact\"\n                  label=\"Contact\"\n                  type=\"text\"\n                  value={contact}\n                  onChange={(e) => onChange(e)}\n                  id=\"contact\"\n                  autoComplete=\"contact\"\n                />\n                <TextField\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"relation\"\n                  label=\"Relation\"\n                  type=\"text\"\n                  value={relation}\n                  onChange={(e) => onChange(e)}\n                  id=\"relation\"\n                  autoComplete=\"relation\"\n                />\n              </Grid>\n            </Grid>\n            <Box sx={{ float: \"right\" }}>\n              <Button variant=\"contained\" type=\"submit\" endIcon={<SaveIcon />}>\n                Save\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Contact;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  Button,\n  TextField,\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Tab,\n  Paper,\n  Box,\n  Typography,\n  Switch,\n} from \"@mui/material\";\nimport { TabList, TabContext, TabPanel } from \"@mui/lab\";\nimport { connect } from \"react-redux\";\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport NumberFormat from \"react-number-format\";\n\n// import { update_profile } from \"../../store/actions/profile\";\n\nconst Profile = ({ profile }) => {\n  const [value, setValue] = React.useState(\"1\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [underGradYear, setUnderGradYear] = useState(\"\");\n\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [barNo, setBarNo] = useState(\"\");\n  const [practiceTime, setPracticeTime] = useState(\"\");\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [zip2, setZip2] = useState(\"\");\n  const [plus42, setPlus42] = useState(\"\");\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    mobile: 0,\n    phone: 0,\n    state: \"\",\n    city: \"\",\n    language: \"\",\n    locate: false,\n    search_active: false,\n    law_school: \"\",\n    grad_year: \"\",\n    bar_admit_date: \"\",\n    undergrad_school: \"\",\n    undergrad_area: \"\",\n    undergrad_year: \"\",\n    bar_no: 0,\n    admitted_practice: \"\",\n    practice_time: \"\",\n    longest_tenure: \"\",\n    average_tenure: \"\",\n    current_tenure: \"\",\n    past_bar_companies_no: \"\",\n    primary_area: \"\",\n  });\n  const {\n    username,\n    email,\n    mobile,\n    phone,\n    state,\n    city,\n    language,\n    locate,\n    search_active,\n    law_school,\n    grad_year,\n    bar_admit_date,\n    undergrad_school,\n    undergrad_area,\n    undergrad_year,\n    bar_no,\n    admitted_practice,\n    practice_time,\n    longest_tenure,\n    average_tenure,\n    current_tenure,\n    past_bar_companies_no,\n    primary_area,\n  } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let id = profile.id;\n    const body = JSON.stringify({\n      username,\n      email,\n      mobile,\n      phone,\n      state,\n      city,\n      language,\n      locate,\n      search_active,\n      law_school,\n      grad_year,\n      bar_admit_date,\n      undergrad_school,\n      undergrad_area,\n      undergrad_year,\n      bar_no,\n      admitted_practice,\n      practice_time,\n      longest_tenure,\n      average_tenure,\n      current_tenure,\n      past_bar_companies_no,\n      primary_area,\n    });\n    console.log(body);\n    axios\n      .patch(\n        `${process.env.REACT_APP_API_URL}/api/profile/${id}/`,\n        body,\n        CONFIG,\n      )\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Fragment>\n      {/* {profile ? ( */}\n      <Box p={5}>\n        <Paper elevation={5} sx={{ borderRadius: 3 }}>\n          <TabContext value={value} p={8}>\n            <Box component=\"form\" onSubmit={(e) => onSubmit(e)}>\n              <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                <TabList\n                  onChange={handleChange}\n                  aria-label=\"lab API tabs example\"\n                >\n                  <Tab label=\"Profile\" value=\"1\" />\n                  <Tab label=\"Education\" value=\"2\" />\n                  <Tab label=\"Work History\" value=\"3\" />\n                </TabList>\n              </Box>\n              <TabPanel value=\"1\">\n                <Grid container spacing={2}>\n                  <Grid item sx={12} xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Username\"\n                      value={username}\n                      id=\"username\"\n                      name=\"username\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.username}\n                      disabled\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Mobile #\"\n                      id=\"mobile\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"mobile\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={mobileNo}\n                      onValueChange={(e) => setMobileNo(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Phone #\"\n                      id=\"phone\"\n                      thousandsGroupStyle=\"thousand\"\n                      format=\"+1 (###) ###-####\"\n                      mask=\"_\"\n                      customInput={TextField}\n                      name=\"phone\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={phoneNo}\n                      onValueChange={(e) => setPhoneNo(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Email\"\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.email}\n                      disabled\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"State\"\n                      id=\"state\"\n                      name=\"state\"\n                      type=\"text\"\n                      value={state}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.state}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"City\"\n                      id=\"city\"\n                      name=\"city\"\n                      type=\"text\"\n                      value={city}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.city}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Language(s)\"\n                      value={language}\n                      id=\"language\"\n                      name=\"language\"\n                      type=\"text\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.language}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Willing to locate\"\n                      id=\"locate\"\n                      name=\"locate\"\n                      value={locate}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.locate}\n                    />\n                    <FormControlLabel\n                      fullWidth\n                      control={<Switch defaultChecked />}\n                      label=\"Search Type (Active/ Passiv)\"\n                      id=\"search_active\"\n                      name=\"search_active\"\n                      value={search_active}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.search_active}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      m={5}\n                      variant=\"contained\"\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"2\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"2\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <TextField\n                      margin=\"normal\"\n                      fullWidth\n                      variant=\"outlined\"\n                      label=\"Law School\"\n                      id=\"law_school\"\n                      name=\"law_school\"\n                      value={law_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.law_school}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Grad year\"\n                      id=\"grad_year\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      name=\"grad_year\"\n                      type=\"text\"\n                      thousandSeparator={true}\n                      value={gradYear}\n                      onValueChange={(e) => setGradYear(e.value)}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####/##/##\"\n                      placeholder=\"YYYY/MM/DD\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n                      customInput={TextField}\n                      label=\"Bar Admittance Date\"\n                      id=\"bar_admit_date\"\n                      name=\"bar_admit_date\"\n                      value={barDate}\n                      onValueChange={(e) => setBarDate(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrad school\"\n                      id=\"undergrad_school\"\n                      name=\"undergrad_school\"\n                      value={undergrad_school}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_school}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Undergrade area of study\"\n                      id=\"undergrad_area\"\n                      name=\"undergrad_area\"\n                      value={undergrad_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.undergrad_area}\n                    />\n\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"####\"\n                      placeholder=\"YYYY\"\n                      mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n                      customInput={TextField}\n                      label=\"Undergrade year\"\n                      id=\"undergrad_year\"\n                      name=\"undergrad_year\"\n                      value={underGradYear}\n                      type=\"text\"\n                      onValueChange={(e) => setUnderGradYear(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      format=\"#### #### ##\"\n                      customInput={TextField}\n                      label=\"Bar #\"\n                      id=\"bar_no\"\n                      name=\"bar_no\"\n                      value={barNo}\n                      type=\"text\"\n                      onValueChange={(e) => setBarNo(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Admitted practice (state & District)\"\n                      value={admitted_practice}\n                      id=\"admitted_practice\"\n                      name=\"admitted_practice\"\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.admitted_practice}\n                    />\n                    <br />\n                    <br />\n                    <Button\n                      variant=\"contained\"\n                      mb={5}\n                      sx={{\n                        float: \"right\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                      onClick={() => setValue(\"3\")}\n                      endIcon={<KeyboardArrowRightIcon />}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n              <TabPanel value=\"3\">\n                <Grid container spacing={2}>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Practive Time (months / years)\"\n                      id=\"practice_time\"\n                      name=\"practice_time\"\n                      value={practiceTime}\n                      type=\"text\"\n                      onValueChange={(e) => setPracticeTime(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Longest tenure (months / years)\"\n                      id=\"longest_tenure\"\n                      name=\"longest_tenure\"\n                      value={longestTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setLongestTenure(e.value)}\n                    />\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Average tenure (months / years)\"\n                      value={averageTenure}\n                      id=\"average_tenure\"\n                      name=\"average_tenure\"\n                      type=\"text\"\n                      onValueChange={(e) => setAverageTenure(e.value)}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <NumberFormat\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      placeholder=\"MM/YY\"\n                      mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n                      format=\"##/##\"\n                      customInput={TextField}\n                      label=\"Time at Current Company (months / years)\"\n                      id=\"current_tenure\"\n                      name=\"current_tenure\"\n                      value={currentTenure}\n                      type=\"text\"\n                      onValueChange={(e) => setCurrentTenure(e.value)}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"# of Companies Post Bar\"\n                      id=\"past_bar_companies_no\"\n                      name=\"past_bar_companies_no\"\n                      value={past_bar_companies_no}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.past_bar_companies_no}\n                    />\n                    <TextField\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      label=\"Primary areas of Law\"\n                      id=\"primary_area\"\n                      name=\"primary_area\"\n                      value={primary_area}\n                      onChange={(e) => onChange(e)}\n                      //defaultValue={profile.primary_area}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Button\n                      variant=\"contained\"\n                      type=\"submit\"\n                      sx={{\n                        float: \"right\",\n                        marginTop: \"10rem\",\n                        color: \"white\",\n                      }}\n                      color=\"success\"\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </TabPanel>\n            </Box>\n          </TabContext>\n        </Paper>\n      </Box>\n      {/* // ) : ( // <Typography>Something wend wrong!</Typography>\n      // )} */}\n    </Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  profile: state.auth.profile,\n});\n\nexport default connect(mapStateToProps)(Profile);\n","/** @format */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  TextField,\n  Switch,\n  FormControlLabel,\n  Box,\n  Grid,\n  Button,\n  Typography,\n} from \"@mui/material\";\n\nimport { LocalizationProvider, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport axios from \"axios\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport { ActionAlerts, GetDate } from \"../../utils/ActionAlerts\";\n\nconst CreateTask = () => {\n  const [dueDate, setDueDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [bill, setBill] = useToggle(true);\n  const [matterData, setMatterData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useToggle(true);\n  const [file, setFile] = useState(\"\");\n  const [taskData, setTaskData] = useState({\n    matter_id: 0,\n    matter_contact: 0,\n    matter: \"\",\n    task: \"\",\n    filename: \"\",\n    assign_to: 0,\n    detail: \"\",\n  });\n\n  const {\n    matter_id,\n    matter_contact,\n    matter,\n    task,\n    filename,\n    assign_to,\n    detail,\n  } = taskData;\n\n  const onChange = (e) =>\n    setTaskData({ ...taskData, [e.target.name]: e.target.value });\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/matter/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setMatterData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    console.log(matter_id, matter_contact, matter, task);\n    let due_at = GetDate(dueDate);\n    let is_billable = bill;\n    let is_private = isPrivate;\n\n    const body = JSON.stringify({\n      matter_id,\n      matter_contact,\n      matter,\n      task,\n      file,\n      is_billable,\n      is_private,\n      due_at,\n      assign_to,\n      detail,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/new-task/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts value={{ status: err.statusText, message: \"Failed\" }} />\n        );\n      });\n    console.log(body);\n  };\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n          \"& .MuiSelect-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create New Task\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_id\"\n              label=\"matter_id\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_id}\n              onChange={(e) => onChange(e)}\n              id=\"matter_id\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter\"\n              label=\"matter\"\n              type=\"text\"\n              min=\"0\"\n              value={matter}\n              onChange={(e) => onChange(e)}\n              id=\"matter\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"task\"\n              label=\"Task\"\n              type=\"text\"\n              value={task}\n              onChange={(e) => onChange(e)}\n              id=\"task\"\n              autoComplete=\"task\"\n            />\n            <Box ml={2} mt={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Attach File \"\n                labelPlacement=\"start\"\n                control={\n                  <input\n                    type=\"file\"\n                    name=\"filename\"\n                    id=\"file\"\n                    onChange={(e) => onChange(e)}\n                  />\n                }\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"file\"\n                label=\"please chose any file\"\n                type=\"text\"\n                min=\"0\"\n                value={filename}\n                onChange={(e) => setFile(filename)}\n                id=\"file\"\n                disabled\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"matter_contact\"\n              label=\"matter_contact\"\n              type=\"number\"\n              min=\"0\"\n              value={matter_contact}\n              onChange={(e) => onChange(e)}\n              id=\"matter_contact\"\n            />\n            <Box p={1}>\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Billable\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={bill}\n                    onChange={() => setBill(bill)}\n                  />\n                }\n              />\n              <FormControlLabel\n                fullWidth\n                size=\"large\"\n                label=\"Private\"\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    size=\"large\"\n                    checked={isPrivate}\n                    onChange={() => setIsPrivate(isPrivate)}\n                  />\n                }\n              />\n            </Box>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                inputFormat=\"yyyy-MM-dd\"\n                mask=\"____-__-__\"\n                label=\"Due Date\"\n                value={dueDate}\n                name=\"dueDate\"\n                id=\"dueDate\"\n                onChange={(e) => setDueDate(e)}\n                renderInput={(params) => (\n                  <TextField fullWidth size=\"small\" {...params} />\n                )}\n              />\n            </LocalizationProvider>\n\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"assign_to\"\n              label=\"Assign to\"\n              type=\"number\"\n              value={assign_to}\n              onChange={(e) => onChange(e)}\n              id=\"assign_to\"\n              autoComplete=\"assign_to\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              multiline\n              rows={5}\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"detail\"\n              label=\"Detail\"\n              type=\"text\"\n              value={detail}\n              onChange={(e) => onChange(e)}\n              id=\"detail\"\n            />\n\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default CreateTask;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport ViewTasks from \"./ViewTasks\";\nimport CreateTask from \"./CreateTask\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Task\">\n          <ViewTasks />\n        </div>\n        <div label=\"Create Task\">\n          <CreateTask />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport DashBoard from \"../Admin/DashBoard\";\n\nimport {\n  Box,\n  Typography,\n  Tabs,\n  Tab,\n  IconButton,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport PropTypes from \"prop-types\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { MoreVert, Close } from \"@mui/icons-material\";\n\n// components of tabs\nimport Invoice from \"../../Invoice\";\nimport Matter from \"../../Matter\";\nimport Ledger from \"../../Ledger\";\nimport Favorite from \"../../Favorite/Favorites\";\nimport Category from \"../../Category/ManageCategory\";\nimport Contact from \"../../Contact/Contact\";\nimport Profile from \"../../Profile/Profile\";\nimport Tasks from \"../../Tasks\";\n\nconst data = [\n  { name: \"invoice\", content: <Invoice /> },\n  { name: \"matter\", content: <Matter /> },\n  { name: \"ledger\", content: <Ledger /> },\n  { name: \"favorite\", content: <Favorite /> },\n  { name: \"category\", content: <Category /> },\n  { name: \"contact\", content: <Contact /> },\n  { name: \"profile\", content: <Profile /> },\n  { name: \"tasks\", content: <Tasks /> },\n];\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography component=\"span\">{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst AdminDashboard = () => {\n  const [wordEntered, setWordEntered] = useState(\"\");\n  const searchItem = () => {\n    let selectedItem = data.filter((value) => {\n      if (value.name === wordEntered) {\n        return true;\n      }\n    });\n  };\n\n  const handleChangeSearch = (e) => {\n    setWordEntered(e.target.value);\n    console.log(\" we are in handle change search\");\n    searchItem();\n  };\n  const searchTab = () => {\n    return (\n      <Box>\n        <Box\n          noValidate\n          sx={{\n            p: \"2px 4px\",\n            display: \"flex\",\n            alignItems: \"center\",\n            width: \"100%\",\n            borderRadius: \"5rem\",\n            backgroundColor: \"#dfdfdf\",\n          }}\n        >\n          <Select\n            fullWidth\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={wordEntered}\n            label=\"Search....\"\n            onChange={handleChangeSearch}\n          >\n            {data.map((item, index) => (\n              <MenuItem key={index} value={item.name}>\n                {item.name}\n              </MenuItem>\n            ))}\n          </Select>\n\n          <IconButton type=\"submit\" sx={{ p: \"10px\" }} aria-label=\"search\">\n            {wordEntered.length === 0 ? <SearchIcon /> : <CloseIcon />}\n          </IconButton>\n        </Box>\n      </Box>\n    );\n  };\n  let tabs = [\n    {\n      id: 0,\n      name: \"Dashboard\",\n      content: <DashBoard />,\n    },\n    {\n      id: 1,\n      name: \"+\",\n      content: searchTab(),\n    },\n  ];\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const renderTabs = () => {\n    return (\n      <Box sx={{ width: \"100%\" }}>\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"basic tabs example\"\n          >\n            {tabs.map((tab) =>\n              tab.id === 0 || tab.id === 1 ? (\n                <Tab\n                  icon={<MoreVert />}\n                  iconPosition=\"start\"\n                  label={tab.name}\n                  {...a11yProps(tab.id)}\n                />\n              ) : (\n                <Tab\n                  icon={<Close />}\n                  iconPosition=\"end\"\n                  label={tab.name}\n                  {...a11yProps(tab.id)}\n                />\n              ),\n            )}\n          </Tabs>\n        </Box>\n\n        {tabs.map((tab) => (\n          <TabPanel value={value} index={tab.id}>\n            {tab.content}\n          </TabPanel>\n        ))}\n      </Box>\n    );\n  };\n  useEffect(() => {\n    renderTabs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <Fragment>{renderTabs()}</Fragment>;\n};\n\nexport default AdminDashboard;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { LinearProgress, Box, Grid, Typography } from \"@mui/material\";\n\nconst ProgressBar = () => {\n  const [progress, setProgress] = useState(69);\n  return (\n    <Box paddingLeft={3} paddingRight={3}>\n      <Grid container>\n        <Grid item lg={1} xs={12}>\n          <Typography>{progress}%</Typography>\n        </Grid>\n        <Grid item lg={11} xs={12} mt={2} mb={5}>\n          <LinearProgress variant=\"determinate\" value={progress} />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ProgressBar;\n","/** @format */\n\nimport React from \"react\";\n\nimport { Typography, Box, Paper, Grid } from \"@mui/material\";\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from \"@mui/material\";\n\nconst randomDate = (start, end) => {\n  const getDateTime = new Date(\n    start.getTime() + Math.random() * (end.getTime() - start.getTime()),\n  );\n  const date = getDateTime.toLocaleDateString();\n  const hour = getDateTime.getHours();\n  const min = getDateTime.getMinutes();\n\n  return date + \" \" + hour + \":\" + min;\n};\n\nconst Task = () => {\n  return (\n    <Grid container>\n      <Grid item lg={12} xs={12}>\n        <Typography component=\"h5\" variant=\"h6\" color=\"primary\">\n          My Tasks\n        </Typography>\n        <TableContainer component={Paper}>\n          <Table size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    ID\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Date\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Subject\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"p\">\n                    Detail\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow bgColor=\"#e85355\">\n                <TableCell>\n                  <Typography variant=\"caption\">123452</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Submit Document X</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display first 3 links\n                  </Typography>{\" \"}\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#fd9905\">\n                <TableCell>\n                  <Typography variant=\"caption\">113457</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Y</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display more details\n                  </Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"#28c570\">\n                <TableCell>\n                  <Typography variant=\"caption\">113455</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document Z</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Note in popup</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow bgColor=\"white\">\n                <TableCell>\n                  <Typography variant=\"caption\">113458</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    {randomDate(new Date(2012, 0, 1), new Date())}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">Document XY</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"caption\">\n                    Display First 3 links\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Task;\n","/** @format */\n\nimport React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nexport const AdminCards = () => {\n  return (\n    <>\n      <Grid container spacing={1}>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={2} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Typography sx={{ fontSize: \"1.3rem\" }} color=\"blue\" gutterBottom>\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5} xs={12}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    New Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={4} xs={12}>\n          <Card element={Paper} elevation={3} sx={{ height: \"12rem\" }}>\n            <CardContent>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    sx={{ fontSize: \"1.3rem\" }}\n                    color=\"blue\"\n                    gutterBottom\n                  >\n                    Lost Customers\n                  </Typography>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Week:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Month:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: \"0.8rem\" }}>\n                        <span style={{ color: \"blue\" }}>Last Quater:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport const LawyerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Projected Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={230} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Annual Trending Billable Hours\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat value={768} displayType={\"text\"} postfix=\"hr\" />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const FirmCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={3} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                mt={3}\n                component=\"h4\"\n                sx={{ fontSize: \"2.2rem\" }}\n              >\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={6} xs={12}>\n          <Card sx={{ height: \"10rem\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Lost Customers\n              </Typography>\n              <Grid container>\n                <Grid item lg={5}>\n                  <Typography\n                    variant=\"h3\"\n                    mt={2}\n                    component=\"h4\"\n                    sx={{ fontSize: \"2.2rem\" }}\n                  >\n                    <NumberFormat\n                      value={3425}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />\n                  </Typography>\n                </Grid>\n                <Grid item lg={7} xs={12}>\n                  <ul>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>Today:</span>\n                        <NumberFormat\n                          value={123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Week:</span>\n                        <NumberFormat\n                          value={1123}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                    <li>\n                      <Typography variant=\"caption\" sx={{ fontSize: 10 }}>\n                        <span style={{ color: \"primary\" }}>This Month:</span>\n                        <NumberFormat\n                          value={3012}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </Typography>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport const CustomerCards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={2}>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Balance\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"0.8rem\", fontWeight: \"bold\" }}\n                color=\"primary\"\n                gutterBottom\n              >\n                Payment Due\n              </Typography>\n              <Typography sx={{ fontSize: 26 }}>\n                <NumberFormat\n                  value={12345}\n                  displayType={\"text\"}\n                  prefix=\"$\"\n                  thousandSeparator={\",\"}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nconst Cards = () => {\n  return (\n    <>\n      <Grid container m={2} spacing={1}>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue In\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={23345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                Revenue out\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={13345}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix=\"$\"\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Card>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: \"1.3rem\" }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                New Matters\n              </Typography>\n              <Typography variant=\"h3\" component=\"h4\">\n                <NumberFormat\n                  value={3425}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                />\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Cards;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n// import axios from 'axios';\n\nimport { Grid } from \"@mui/material\";\n\nimport Calender from \"../Calender\";\nimport ProgressBar from \"../ProgressBar\";\n\nimport Tasks from \"../Tasks\";\nimport { CustomerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={3}>\n        <Grid item lg={2} xs={12}>\n          <CustomerCards />\n        </Grid>\n        <Grid item lg={4} xs={12}>\n          <Calender />\n        </Grid>\n        <Grid item p={2} lg={6} xs={12}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={12} xs={12}>\n          <ProgressBar />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Button, Grid, Box, List, ListItem, ListItemText } from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst Templates = () => {\n  return (\n    <Fragment>\n      <Grid container mt={1} spacing={1}>\n        <Grid item xs={12} m={2}>\n          <Button variant=\"contained\" size=\"small\">\n            Merge Fields.XLS\n          </Button>\n          <Box sx={{ float: \"right\" }}>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Doc\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New PDF\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              New Email\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Edit\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Save\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              sx={{ marginLeft: \"1rem\" }}\n            >\n              Close\n            </Button>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Word Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Report Money</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - Report Time</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Report Billed hours</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              PDF Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>P001 - Write of Execution</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P002 - Memo of Cost</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>P003 - Settlement Letter</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              height: \"80%\",\n              width: \"80%\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            <Button variant=\"contained\" fullWidth>\n              Email Template\n            </Button>\n            <Box mt={2}>\n              <Search style={{ width: \"100%\" }}>\n                <SearchIconWrapper>\n                  <SearchIcon />\n                </SearchIconWrapper>\n                <StyledInputBase\n                  placeholder=\"Search…\"\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </Search>\n            </Box>\n            <Box mt={1}>\n              <List>\n                <ListItem>\n                  <ListItemText>001 - Invoice Email</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>002 - New Client</ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>003 - Firing Client</ListItemText>\n                </ListItem>\n              </List>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box\n            sx={{\n              padding: \"15rem 2rem 5rem 2rem\",\n              backgroundColor: \"darkGray\",\n              borderRadius: \"2rem\",\n            }}\n          >\n            Templates can be opened here to edit them. user can add/ remove\n            merge fields directly to the document or PDF\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Templates;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Client/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst ClientDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default ClientDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const PieChart = () => {\n  const state = {\n    series: [86, 14],\n    options: {\n      chart: {\n        height: 500,\n        type: \"pie\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"65%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val + \"%\";\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Prodcutive v. Non-Productive Time\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n        horizontalAlign: \"center\",\n      },\n      colors: [\"#738df5\", \"#eaa3ff\"],\n      labels: [\"Non Productive\", \"Productive\"],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"pie\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            background: \"#aaa\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shade: \"gark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\", \"pink\"],\n        stops: [0, 3],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"user 1\",\n        data: [44, 55, 41, 37, 22, 43, 21],\n      },\n      {\n        name: \"user 2\",\n        data: [53, 32, 33, 52, 13, 43, 32],\n      },\n      {\n        name: \"User 3\",\n        data: [12, 17, 11, 9, 15, 11, 20],\n      },\n      {\n        name: \"User 4\",\n        data: [9, 7, 5, 8, 6, 9, 4],\n      },\n    ],\n    options: {\n      chart: {\n        type: \"bar\",\n        height: 350,\n        stacked: true,\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        borderRadius: 8,\n        colors: [\"#fff\"],\n      },\n\n      title: {\n        text: \"% Indicating User Ranking\",\n      },\n      xaxis: {\n        categories: [\n          \"Word per Min\",\n          \"Matter Completed\",\n          \"Revenue Generated\",\n          \"Articals Submitted\",\n          \"New Client\",\n          \"New Matter\",\n        ],\n        labels: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: undefined,\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return val + \"K\";\n          },\n        },\n      },\n      fill: {\n        opacity: 1,\n      },\n      color: [\"#738df5\", \"#eaa3ff\", \"#738df5\", \"#eaa3ff\"],\n      legend: {\n        show: false,\n        position: \"top\",\n        horizontalAlign: \"left\",\n        offsetX: 40,\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Grid } from \"@mui/material\";\nimport Calender from \"../Calender\";\nimport Tasks from \"../Tasks\";\nimport { Chart2, PieChart, BarChart } from \"./Chart\";\nimport { LawyerCards } from \"../Cards\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={2}>\n          <LawyerCards />\n        </Grid>\n        <Grid item lg={4}>\n          <PieChart />\n        </Grid>\n        <Grid item lg={6}>\n          <Tasks />\n        </Grid>\n        <Grid item lg={4}>\n          <Chart2 />\n        </Grid>\n        <Grid item lg={8}>\n          <BarChart />\n        </Grid>\n        <Grid item>\n          <Calender />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Lawyer/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst LawyerDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default LawyerDashboard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport const Chart = () => {\n  const state = {\n    series: [110, 110, 19, 80],\n    options: {\n      chart: {\n        height: 500,\n        type: \"donut\",\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: \"55%\",\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n              return val;\n            },\n          },\n        },\n      },\n      title: {\n        text: \"Matter by Type\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      colors: [\"#03a5fc\", \"#fcd200\", \"#fca400\", \"#003f5c\"],\n      labels: [\n        \"Business Contacts\",\n        \"Criminal Defence\",\n        \"Personal Injury\",\n        \"Family Law\",\n      ],\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"bottom\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"donut\"\n      />\n    </Fragment>\n  );\n};\n\nexport const Chart2 = () => {\n  const state = {\n    series: [65],\n\n    options: {\n      chart: {\n        height: 250,\n        type: \"radialBar\",\n      },\n      labels: [\"Progress\"],\n      plotOptions: {\n        radialBar: {\n          startAngle: -90,\n          endAngle: 90,\n          track: {\n            // background: \"#333\",\n            startAngle: -90,\n            endAngle: 90,\n          },\n          hollow: {\n            margin: 15,\n            size: \"70%\",\n          },\n        },\n      },\n      title: {\n        text: \"% of Completed Task\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n    },\n    fill: {\n      type: \"solid\",\n      gradient: {\n        shade: \"dark\",\n        type: \"horizontal\",\n        gradientToColors: [\"#87D4F9\"],\n        stops: [0, 100],\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"radialBar\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart = () => {\n  const state = {\n    series: [\n      {\n        name: \"Profit\",\n        data: [640, 505, 210, 108, 760, 410, 440, 140, 660, 320],\n      },\n      {\n        name: \"Loss\",\n        data: [530, 302, 420, 220, 290, 800, 160, 490, 708, 110],\n      },\n    ],\n\n    options: {\n      colors: [\"#e85355\", \"#28c570\"],\n      chart: {\n        height: 100,\n        type: \"bar\",\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n        },\n      },\n      dataLabels: {\n        enabled: false,\n        formatter: function (val) {\n          return \"$\" + val;\n        },\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return \"$ \" + val + \"\";\n          },\n        },\n      },\n\n      xaxis: {\n        categories: [\n          \"Jan\",\n          \"Feb\",\n          \"Mar\",\n          \"Apr\",\n          \"May\",\n          \"Jun\",\n          \"July\",\n          \"Aug\",\n          \"Sep\",\n          \"Oct\",\n        ],\n      },\n\n      legend: {\n        show: true,\n        dropShadow: false,\n        position: \"right\",\n        labels: {\n          useSeriesColors: true,\n        },\n        onItemClick: {\n          toggleDataSeries: true,\n        },\n        formatter: function (seriesName, opts) {\n          return (\n            seriesName +\n            \":  <NumberFormat value={\" +\n            opts.w.globals.series[opts.seriesIndex] +\n            \"} displayType={'text'} thousandSeparator={true}/>\"\n          );\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart2 = () => {\n  const state = {\n    series: [\n      {\n        data: [19, 57, 78, 40, 95, 25],\n      },\n    ],\n\n    options: {\n      chart: {\n        height: 350,\n        type: \"bar\",\n      },\n      colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n      plotOptions: {\n        bar: {\n          columnWidth: \"45%\",\n          distributed: true,\n        },\n      },\n      dataLabels: {\n        enabled: true,\n        formatter: function (val) {\n          return val + \"%\";\n        },\n      },\n      legend: {\n        show: false,\n      },\n      title: {\n        text: \"% of Task Completed by User\",\n        color: \"#796ef0\",\n        fontSize: \"auto\",\n      },\n      xaxis: {\n        categories: [\n          \"M. Jones\",\n          \"R. Smith\",\n          \"T.Sweeney\",\n          \"S. Booker\",\n          \"A. Knighter\",\n          \"J. King\",\n        ],\n        labels: {\n          style: {\n            // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n            fontSize: \"12px\",\n          },\n        },\n\n        legend: {\n          show: false,\n          dropShadow: false,\n          position: \"right\",\n          labels: {\n            useSeriesColors: true,\n          },\n          onItemClick: {\n            toggleDataSeries: true,\n          },\n          formatter: function (seriesName, opts) {\n            return (\n              seriesName +\n              \":  <NumberFormat value={\" +\n              opts.w.globals.series[opts.seriesIndex] +\n              \"} displayType={'text'} thousandSeparator={true}/>\"\n            );\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n\nexport const BarChart3 = () => {\n  const state = {\n    // colors: [\"#e85355\", \"#fd9905\", \"#28c570\"],\n    options: {\n      series: [\n        {\n          data: [750, 280, 500, 720],\n        },\n      ],\n      chart: {\n        type: \"bar\",\n        height: 380,\n      },\n      plotOptions: {\n        bar: {\n          barHeight: \"100%\",\n          borderRadius: 8,\n          distributed: true,\n          horizontal: true,\n          dataLabels: {\n            position: \"top\",\n          },\n        },\n      },\n      //       light blue,  yellow, orange, dark blue,\n      colors: [\"#fcd200\", \"#fca400\", \"#003f5c\", \"#03a5fc\"],\n      dataLabels: {\n        enabled: false,\n        textAnchor: \"start\",\n        style: {\n          colors: [\"#fff\"],\n        },\n        formatter: function (val, opt) {\n          return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val;\n        },\n        offsetX: 0,\n        dropShadow: {\n          enabled: true,\n        },\n      },\n      stroke: {\n        width: 1,\n        colors: [\"#fff\"],\n      },\n      xaxis: {\n        categories: [\n          \"Criminal Defense\",\n          \"Personal Injury\",\n          \"Family Law\",\n          \"Business Contract\",\n        ],\n      },\n      yaxis: {\n        labels: {\n          show: true,\n        },\n      },\n      title: {\n        text: \"Revenue By Mater Type\",\n        align: \"center\",\n        floating: true,\n      },\n\n      tooltip: {\n        theme: \"light\",\n        x: {\n          show: false,\n        },\n        y: {\n          formatter: function (val, opt) {\n            return (\n              opt.w.globals.labels[opt.dataPointIndex] + \": $ \" + val + \" k\"\n            );\n          },\n        },\n      },\n    },\n  };\n  return (\n    <Fragment>\n      <ReactApexChart\n        options={state.options}\n        series={state.options.series}\n        type=\"bar\"\n        height=\"250\"\n      />\n    </Fragment>\n  );\n};\n","/** @format */\n\nimport React, { Fragment } from \"react\";\n\nimport { Paper, Grid, Box } from \"@mui/material\";\n\nimport Tasks from \"../Tasks\";\nimport { FirmCards } from \"../Cards\";\n\nimport { Chart, Chart2, BarChart, BarChart2, BarChart3 } from \"./Charts\";\n\nconst DashBoard = () => {\n  return (\n    <Fragment>\n      {/*main dashboard section for display  */}\n      <Box component={Paper} elevation={3} mt={4}>\n        <Grid container spacing={2}>\n          <Grid item lg={8} xs={12}>\n            <FirmCards />\n            <Grid container>\n              <Grid item lg={5} xs={12}>\n                <Chart2 />\n              </Grid>\n              <Grid item lg={7} xs={12}>\n                <Tasks />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <Chart />\n          </Grid>\n          <Grid item lg={12} xs={12}>\n            <BarChart />\n          </Grid>\n          <Grid item lg={6} xs={6}>\n            <BarChart2 />\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <BarChart3 />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default DashBoard;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport DashBoard from \"../Firm/DashBoard\";\nimport InvoiceList from \"../../Invoice/InvoiceList\";\nimport LedgerActivity from \"../../Ledger/LedgerActivity\";\nimport Profile from \"../../Profile/Profile\";\nimport Templates from \"../../Template/Templates\";\nimport Tabs from \"../../Tabs/Tabs\";\n\nconst FirmDashboard = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Dashbaord\">\n          <DashBoard />\n        </div>\n        <div label=\"Invoice\">\n          <InvoiceList />\n        </div>\n        <div label=\"Documents\">\n          <Templates />\n        </div>\n        <div label=\"Activity\">\n          <LedgerActivity />\n        </div>\n        <div label=\"Profile\">\n          <Profile />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default FirmDashboard;\n","/** @format */\n\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport AdminDashboard from \"../components/Dashboard/UserRoles/AdminDashboard\";\nimport ClientDashboard from \"../components/Dashboard/UserRoles/ClientDashboard\";\nimport LawyerDashboard from \"../components/Dashboard/UserRoles/LawyerDashboard\";\nimport FirmDashboard from \"../components/Dashboard/UserRoles/FirmDashboard\";\n\nconst Dashboard = ({ user }) => {\n  // checker type of user\n  const [localuser, setLocalUser] = useState({\n    username: \"Guest\",\n    is_firm: false,\n    is_lawyer: false,\n    is_client: true,\n  });\n\n  useEffect(() => {\n    if (user) {\n      setLocalUser({\n        username: user.username,\n        is_firm: user.is_firm,\n        is_lawyer: user.is_lawyer,\n        is_client: user.is_client,\n      });\n    }\n  }, [user]);\n\n  const dashboardRedirect = () => {\n    switch (user.username) {\n      case \"admin\":\n        return <AdminDashboard />;\n      case \"firm\":\n        return <FirmDashboard />;\n      case \"lawyer\":\n        return <LawyerDashboard />;\n      default:\n        return <ClientDashboard />;\n    }\n  };\n  return <>{dashboardRedirect()}</>;\n};\nconst mapStateToProps = (state) => ({\n  // isAuthenticated: state.auth.isAuthenticated\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/login_light.png\";\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const { username, email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    login(username, email, password);\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"87vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            {/* csrf_token */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              value={username}\n              onChange={(e) => onChange(e)}\n              autoComplete=\"new-password\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              autoComplete=\"new-password\"\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              variant=\"standard\"\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => onChange(e)}\n              id=\"password\"\n              minLength=\"6\"\n              autoComplete=\"password\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n          </Box>\n          <Grid container>\n            <Grid item xs>\n              <Link to=\"/\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../../actions/auth\";\n\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n  FormControlLabel,\n  FormLabel,\n  FormGroup,\n  Checkbox,\n  RadioGroup,\n  Radio,\n} from \"@mui/material\";\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nimport BackgroundImage from \"../../asserts/signup_light.png\";\n\nconst Signup = ({ register, isAuthenticated }) => {\n  const [accountCreated, setAccountCreated] = useState(false);\n  const [isFirm, setIsFirm] = useState(false);\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    re_password: \"\",\n  });\n\n  const { username, email, first_name, last_name, password, re_password } =\n    formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    let is_firm = isFirm;\n    let is_client = !isFirm;\n\n    if (password === re_password) {\n      register(\n        email,\n        first_name,\n        last_name,\n        username,\n        password,\n        re_password,\n        is_firm,\n        is_client,\n      );\n\n      setAccountCreated(true);\n    } else {\n      console.log(\"Password no match, Please type again!\");\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (accountCreated) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"85vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={8}\n        sx={{\n          backgroundImage: `url(${BackgroundImage})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"warning.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            Validate\n            sx={{ mt: 1 }}\n            onSubmit={(e) => onSubmit(e)}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={(e) => onChange(e)}\n                  autoComplete=\"new-password\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"first_name\"\n                  label=\"First Name\"\n                  name=\"first_name\"\n                  value={first_name}\n                  onChange={(e) => onChange(e)}\n                  autoComplete=\"new-password\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  variant=\"standard\"\n                  id=\"last_name\"\n                  label=\"Last Name\"\n                  name=\"last_name\"\n                  autoComplete=\"last_name\"\n                  value={last_name}\n                  onChange={(e) => onChange(e)}\n                  autoFocus\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={(e) => onChange(e)}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                value={password}\n                onChange={(e) => onChange(e)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"standard\"\n                name=\"re_password\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                value={re_password}\n                onChange={(e) => onChange(e)}\n                id=\"re_password\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormLabel component=\"legend\">Sign up as a </FormLabel>\n              <RadioGroup\n                row\n                value={isFirm}\n                onChange={(e) => setIsFirm(e.target.value)}\n              >\n                <FormControlLabel\n                  value={true}\n                  control={<Radio />}\n                  label=\"Firm\"\n                />\n                <FormControlLabel\n                  value={false}\n                  control={<Radio />}\n                  label=\"Individual\"\n                />\n              </RadioGroup>\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormGroup>\n                <FormControlLabel\n                  control={<Checkbox />}\n                  label=\"Agreed on Term and Contidions\"\n                />\n              </FormGroup>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Register\n            </Button>\n          </Box>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" variant=\"body2\">\n                {\"Already have an account? Sign in\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { register })(Signup);\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  Divider,\n  FormControlLabel,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { LinkButton } from \"../../styles/styles\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { useToggle } from \"../../context/useToggle\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst Company = () => {\n  const [approvel, setApprovel] = useToggle(false);\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate: 0.0,\n    role: \"\",\n    time_zone: \"\",\n    group: \"\",\n    job_title: \"\",\n    bar_no: 0,\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: 0,\n    ext: 0,\n    mobile: 0,\n    home: 0,\n    work_no: 0,\n\n    phone_ext: 0,\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    role,\n    time_zone,\n    group,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      c_email,\n      rate,\n      role,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      p_email,\n      phone_ext,\n    });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body, CONFIG)\n      .then((res) => {\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Box p={3} sx={{ float: \"right\" }}>\n        <LinkButton to=\"/users\">Manage User</LinkButton>\n        <LinkButton to=\"/user-group\">Manage Group</LinkButton>\n        <LinkButton to=\"/user-role\">Manage Role</LinkButton>\n      </Box>\n\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"15rem\" },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Typography component=\"h3\" variant=\"h4\">\n          Create User\n        </Typography>\n        <Grid container spacing={2} mt={2}>\n          <Grid item xs={12}>\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"f_name\"\n              label=\"f_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"f_name\"\n              autoComplete=\"f_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"m_name\"\n              label=\"m_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"m_name\"\n              autoComplete=\"m_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"l_name\"\n              label=\"l_name\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"l_name\"\n              autoComplete=\"l_name\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"c_email\"\n              label=\"c_email\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"c_email\"\n              autoComplete=\"c_email\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"rate\"\n              label=\"rate\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"rate\"\n              autoComplete=\"rate\"\n            />\n            <FormControlLabel\n              label=\"Round Entries (Round [up/down] to nearnest 0.00 fraction of the hour\"\n              control={\n                <Switch\n                  checked={approvel}\n                  onChange={() => setApprovel(approvel)}\n                />\n              }\n              sx={{ width: \"35rem\" }}\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"role\"\n              label=\"role\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"role\"\n              autoComplete=\"role\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"time_zone\"\n              label=\"time_zone\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"time_zone\"\n              autoComplete=\"time_zone\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"group\"\n              label=\"group\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"group\"\n              autoComplete=\"group\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"job_title\"\n              label=\"job_title\"\n              type=\"text\"\n              onChange={(e) => onChange(e)}\n              id=\"job_title\"\n              autoComplete=\"job_title\"\n            />\n            <TextField\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"bar_no\"\n              label=\"bar_no\"\n              type=\"number\"\n              onChange={(e) => onChange(e)}\n              id=\"bar_no\"\n              autoComplete=\"bar_no\"\n            />\n          </Grid>\n          <Grid item mt={2}>\n            <Divider textAlign=\"left\">\n              <Typography component=\"h3\" variant=\"h5\">\n                Contact Info\n              </Typography>\n            </Divider>\n            <Box>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"street\"\n                label=\"street\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"street\"\n                autoComplete=\"street\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"suite\"\n                label=\"suite\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"suite\"\n                autoComplete=\"suite\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"city\"\n                label=\"city\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"city\"\n                autoComplete=\"city\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"state\"\n                label=\"state\"\n                type=\"text\"\n                onChange={(e) => onChange(e)}\n                id=\"state\"\n                autoComplete=\"state\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"zip\"\n                label=\"zip\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"zip\"\n                autoComplete=\"zip\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"ext\"\n                label=\"ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"ext\"\n                autoComplete=\"ext\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"mobile\"\n                label=\"mobile\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"mobile\"\n                autoComplete=\"mobile\"\n              />\n              <Button\n                variant=\"contained\"\n                sx={{ background: \"#5cb85c\", marginTop: \"0.5rem\" }}\n              >\n                Set Password Automaticly\n              </Button>\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"home\"\n                label=\"home\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"home\"\n                autoComplete=\"home\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"work_no\"\n                label=\"work_no\"\n                type=\"phone\"\n                onChange={(e) => onChange(e)}\n                id=\"work_no\"\n                autoComplete=\"work_no\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"p_email\"\n                label=\"p_email\"\n                type=\"email\"\n                onChange={(e) => onChange(e)}\n                id=\"p_email\"\n                autoComplete=\"p_email\"\n              />\n              <TextField\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"phone_ext\"\n                label=\"phone_ext\"\n                type=\"number\"\n                onChange={(e) => onChange(e)}\n                id=\"phone_ext\"\n                autoComplete=\"phone_ext\"\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Box\n              sx={{\n                \"& .MuiButton-root\": { m: 1 },\n                float: \"right\",\n              }}\n            >\n              <Button variant=\"contained\" type=\"submit\">\n                Create Member\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Company;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport { Grid, Box } from \"@mui/material\";\nimport Filters from \"../../components/Matter/Filters\";\nimport MatterCards from \"../../components/Matter/MatterCards\";\nimport MatterListLong from \"../../components/Matter/MatterListLong\";\n\nconst Matters = () => {\n  return (\n    <Fragment>\n      <Box>\n        <Grid container>\n          <Grid item xs={12}>\n            <Filters />\n          </Grid>\n          <Grid item xs={12}>\n            <MatterCards />\n          </Grid>\n          <Grid item xs={12} mt={2}>\n            <MatterListLong />\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Matters;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Switch,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Button,\n  TextField,\n  Box,\n  Grid,\n  MenuItem,\n  Typography,\n  Divider,\n  FormControlLabel,\n  Stack,\n} from \"@mui/material\";\nimport axios from \"axios\";\n\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { CONFIG } from \"../../api/MatterApi\";\n\nimport CreateUser from \"./CreateUser\";\nimport {\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useToggle } from \"../../context/useToggle\";\n\nconst ManageUser = () => {\n  const [activityData, setActivityData] = useState([]);\n\n  const [isActive, setIsActive] = useToggle(false);\n\n  const [roles, setRoles] = useState([]);\n  const [role, setRole] = useState(\"\");\n  const [group, setGroup] = useState(\"\");\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [rateType, setRateType] = useState(\"\");\n\n  const handleChange = (event) => {\n    setRateType(event.target.value);\n  };\n\n  const [approvel, setApprovel] = useToggle(false);\n\n  const [userData, setUserData] = useState({\n    f_name: \"\",\n    m_name: \"\",\n    l_name: \"\",\n    c_email: \"\",\n    rate_type: \"\",\n    rate: \" \",\n    time_zone: \"\",\n    job_title: \"\",\n    bar_no: \" \",\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    ext: \"\",\n    mobile: \"\",\n    home: \"\",\n    work_no: \"\",\n    p_email: \"\",\n    phone_ext: \"\",\n  });\n\n  const {\n    f_name,\n    m_name,\n    l_name,\n    c_email,\n    rate,\n    time_zone,\n    job_title,\n    bar_no,\n    street,\n    suite,\n    city,\n    state,\n    zip,\n    ext,\n    mobile,\n    home,\n    work_no,\n    p_email,\n    phone_ext,\n  } = userData;\n  const onChange = (e) =>\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({\n      f_name,\n      m_name,\n      l_name,\n      p_email,\n      role,\n      c_email,\n      rate,\n      time_zone,\n      group,\n      job_title,\n      bar_no,\n      street,\n      suite,\n      city,\n      state,\n      zip,\n      ext,\n      mobile,\n      home,\n      work_no,\n      phone_ext,\n    });\n\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/create-member/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleDelete = (id) => {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/api/create-member/${id}/`,\n        CONFIG,\n      )\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchRoleData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/role/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setRoles(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  const FetchGroupData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/group/`, CONFIG)\n      .then((res) => {\n        setLoading2(false);\n        setGroups(res.data);\n      })\n      .catch((err) => {\n        setLoading2(false);\n      });\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setActivityData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchRoleData();\n    FetchData();\n    FetchGroupData();\n  }, []);\n\n  return (\n    <Fragment>\n      <Box>\n        <Typography component=\"h4\" variant=\"h5\" color=\"primary\" mb={2}>\n          Manage Users\n        </Typography>\n        <Stack p={3} direction=\"row\" spacing={2} sx={{ float: \"right\" }}>\n          <Search sx={{ width: \"15rem\" }}>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n          <Button\n            color=\"success\"\n            onClick={handleClickOpen}\n            variant=\"contained\"\n            sx={{ color: \"white\", background: \"#28c570\" }}\n          >\n            + Add User\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth=\"true\"\n            maxWidth=\"xl\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New User\"}</DialogTitle>\n            <DialogContent>\n              <Grid\n                container\n                spacing={2}\n                mt={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\" },\n                }}\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"f_name\"\n                    label=\"First Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"f_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"m_name\"\n                    label=\"Middle Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"m_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"l_name\"\n                    label=\"Last Name\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"l_name\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"c_email\"\n                    label=\"Company Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"c_email\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"rate\"\n                    label=\"Rate $\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"rate\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={6}>\n                  <Stack direction=\"row\" spacing={2} ml={2}>\n                    <FormControlLabel\n                      sx={{ fontSize: \"2rem\" }}\n                      label=\"\"\n                      control={\n                        <Switch\n                          checked={approvel}\n                          onChange={() => setApprovel(approvel)}\n                        />\n                      }\n                    />\n                    <Typography>\n                      Round Entries (Round [up/down] to nearnest\n                      <TextField\n                        margin=\"dense\"\n                        variant=\"standard\"\n                        type=\"text\"\n                        size=\"small\"\n                        placeholder=\"0.00\"\n                        sx={{\n                          maxWidth: \"5rem\",\n                        }}\n                      />\n                      fraction of the hour\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"role\"\n                    label=\"Role\"\n                    onChange={(e) => setRole(e.target.value)}\n                    id=\"role\"\n                    autoComplete=\"new-password\"\n                  >\n                    {!loading ? (\n                      roles.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"time_zone\"\n                    label=\"Time Zone\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"time_zone\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"group\"\n                    label=\"Group\"\n                    type=\"text\"\n                    onChange={(e) => setGroup(e.target.value)}\n                    id=\"group\"\n                    autoComplete=\"new-password\"\n                  >\n                    {!loading2 ? (\n                      groups.map((data) => (\n                        <MenuItem key={data.id} value={data.name}>\n                          {data.name}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <span>Loading ...</span>\n                    )}\n                  </TextField>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"job_title\"\n                    label=\"Job Title\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"job_title\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"bar_no\"\n                    label=\"Bar #\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"bar_no\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={4} mb={2}>\n                <Divider />\n                <Typography mt={2} component=\"h3\" color=\"primary\" variant=\"h5\">\n                  Contact Info\n                </Typography>\n              </Box>\n\n              <Grid\n                container\n                spacing={2}\n                sx={{\n                  \"& .MuiTextField-root\": { m: 1, width: \"14rem\" },\n                }}\n              >\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"street\"\n                    label=\"Street\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"street\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"suite\"\n                    label=\"Suite\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"suite\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"city\"\n                    label=\"City\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"city\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"state\"\n                    label=\"State\"\n                    type=\"text\"\n                    onChange={(e) => onChange(e)}\n                    id=\"state\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"zip\"\n                    label=\"Zip\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"zip\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"ext\"\n                    label=\"+4\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"ext\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"p_email\"\n                    label=\"Personal Email\"\n                    type=\"email\"\n                    onChange={(e) => onChange(e)}\n                    id=\"p_email\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <Box mt={1} ml={1}>\n                    <Button variant=\"contained\" color=\"primary\">\n                      Reset Password\n                    </Button>\n                  </Box>\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"mobile\"\n                    label=\"Mobile #\"\n                    type=\"phone\"\n                    onChange={(e) => onChange(e)}\n                    id=\"mobile\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"home\"\n                    label=\"Home #\"\n                    type=\"phone\"\n                    onChange={(e) => onChange(e)}\n                    id=\"home\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"work_no\"\n                    label=\"Work #\"\n                    type=\"phone\"\n                    onChange={(e) => onChange(e)}\n                    id=\"work_no\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n                <Grid item lg={3}>\n                  <TextField\n                    size=\"small\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"phone_ext\"\n                    label=\"Extesion\"\n                    type=\"number\"\n                    onChange={(e) => onChange(e)}\n                    id=\"phone_ext\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n              </Grid>\n              <Grid item lg={12}>\n                <Box\n                  sx={{\n                    \"& .MuiButton-root\": { m: 1, mr: 8 },\n                    float: \"right\",\n                  }}\n                >\n                  <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    type=\"submit\"\n                    sx={{ color: \"white\" }}\n                  >\n                    Activate\n                  </Button>\n                  <Button variant=\"contained\" color=\"error\">\n                    Deactivate\n                  </Button>\n                </Box>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n            </DialogActions>\n          </Dialog>\n        </Stack>\n\n        <TableContainer>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  <Typography color=\"white\">First Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Name</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Email</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Role</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Group</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Last Login</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Status</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"white\">Deactivate</Typography>\n                </TableCell>\n                <TableCell>\n                  <Switch\n                    color=\"success\"\n                    value={isActive}\n                    onChange={() => setIsActive()}\n                  />\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {/* {loading && isActive\n                ? activityData?.map((data) => (\n                    <TableRow>\n                      <TableCell>{data.f_name}</TableCell>\n                      <TableCell>{data.l_name}</TableCell>\n                      <TableCell>{data.p_email}</TableCell>\n                      <TableCell>{data.role}</TableCell>\n                      <TableCell>{data.group}</TableCell>\n                      <TableCell>-</TableCell>\n                      <TableCell>inactive</TableCell>\n                      <TableCell>\n                        <Button\n                          variant=\"contained\"\n                          value={data.id}\n                          onClick={() => handleDelete(data.id)}\n                          sx={{\n                            borderRadius: \"0.5rem\",\n                            float: \"right\",\n                          }}\n                        >\n                          <ClearIcon />\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                : null} */}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default ManageUser;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Box,\n  List,\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  ListItem,\n  ListItemText,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Stack,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport {\n  LinkButton,\n  Search,\n  SearchIconWrapper,\n  StyledInputBase,\n} from \"../../styles/styles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\n\nconst ManageUserGroup = () => {\n  const [filter, setFilter] = useState(\"\");\n\n  const handleChange = (event) => {\n    setFilter(event.target.value);\n  };\n  const [group, setGroup] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingUser, setLoadingUser] = useState(true);\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const FetchUserData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/create-member/`, CONFIG)\n      .then((res) => {\n        setLoadingUser(false);\n\n        setUserData(res.data);\n      })\n      .catch((err) => {\n        setLoadingUser(false);\n      });\n  };\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/group/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setGroup(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n    FetchUserData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/group/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/group/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={12}>\n          <Grid container spacing={2} direction=\"row\">\n            <Grid item lg={3}>\n              <Typography variant=\"h5\" component=\"h5\" m={1} color=\"primary\">\n                Manage Group\n              </Typography>\n            </Grid>\n            <Grid item lg={9}>\n              <Stack direction=\"row\" sx={{ float: \"right\" }}>\n                <Typography m={2} component=\"span\" color=\"primary\">\n                  Filter & Sort By\n                </Typography>\n                <FormControl sx={{ width: \"10rem\", height: \"2.5rem\" }}>\n                  <InputLabel id=\"demo-simple-select-label\" color=\"primary\">\n                    Custom Sort\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={filter}\n                    label=\"Age\"\n                    onChange={handleChange}\n                  >\n                    <MenuItem value=\"name\">By Name</MenuItem>\n                    <MenuItem value=\"role\">By Role</MenuItem>\n                    <MenuItem value=\"gorup\">By Group</MenuItem>\n                  </Select>\n                </FormControl>\n                <Search sx={{ width: \"20rem\", height: \"2.5rem\", m: 1 }}>\n                  <SearchIconWrapper>\n                    <SearchIcon />\n                  </SearchIconWrapper>\n                  <StyledInputBase\n                    placeholder=\"Search…\"\n                    inputProps={{ \"aria-label\": \"search\" }}\n                  />\n                </Search>\n              </Stack>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3}>\n          <Typography\n            variant=\"h5\"\n            component=\"h5\"\n            color=\"primary\"\n            align=\"center\"\n          >\n            Groups\n          </Typography>\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            fullWidth\n            sx={{\n              borderRadius: \"0.5rem\",\n            }}\n          >\n            + New Group\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New Group\"}</DialogTitle>\n            <DialogContent>\n              <TextField\n                required\n                fullWidth\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"name\"\n                label=\"Group Name\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n              <Button type=\"submit\" autoFocus>\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {/* {!loading ? (\n            group.map((data) => (\n              <Box mt={1}>\n                <List>\n                  <ListItem disablePadding>\n                    <ListItemText>{data.name}</ListItemText>\n                    <Button\n                      variant=\"contained\"\n                      value={data.id}\n                      onClick={() => handleDelete(data.id)}\n                      sx={{\n                        borderRadius: \"0.5rem\",\n                        float: \"right\",\n                      }}\n                    >\n                      <ClearIcon />\n                    </Button>\n                  </ListItem>\n                </List>\n              </Box>\n            ))\n          ) : (\n            <Typography>Loading ...</Typography>\n          )} */}\n        </Grid>\n        <Grid item lg={9}>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow bgColor=\"#796ef0\">\n                  <TableCell>\n                    <Typography color=\"white\">First Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Last Name</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Role</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"white\">Group</Typography>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {/* {loadingUser\n                  ? null\n                  : userData?.map((data) => {\n                      return (\n                        <TableRow>\n                          <TableCell>{data.f_name}</TableCell>\n                          <TableCell>{data.l_name}</TableCell>\n                          <TableCell>{data.role}</TableCell>\n                          <TableCell>{data.group}</TableCell>\n                        </TableRow>\n                      );\n                    })} */}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item lg={12}>\n          <Box sx={{ float: \"right\" }}>\n            <Button variant=\"contained\" color=\"success\" sx={{ color: \"white\" }}>\n              Done\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ManageUserGroup;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TableBody,\n  Typography,\n  Switch,\n} from \"@mui/material\";\n\nconst RoleFuncions = ({ data }) => {\n  const functions = [\n    \"Contacts\",\n    \"Matter\",\n    \"Calendar\",\n    \"Flat Fee\",\n    \"Expenses\",\n    \"Trust\",\n    \"Task(s)\",\n    \"Invoice\",\n    \"Payments\",\n    \"Full DOB\",\n    \"Full SSN\",\n    \"Partial SSN\",\n    \"Partial DOB\",\n    \"Roles\",\n    \"Run Reports\",\n    \"Discounts\",\n    \"Bank Accounts\",\n  ];\n  return (\n    <Fragment>\n      <TableContainer sx={{ overflowX: \"auto\" }}>\n        <Table size=\"small\" sx={{ fontSize: \"1rem\" }}>\n          <TableHead>\n            <TableRow bgColor=\"#796ef0\">\n              <TableCell>\n                <Typography color=\"white\">Function</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">View </Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Edit</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Create</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Delete</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Contacts</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Team</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Office</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">Region</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography color=\"white\">All</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {functions.map((data) => (\n              <TableRow>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  {data}\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n                <TableCell sx={{ border: \" 1px solid #dcdcdc\" }}>\n                  <Switch />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Fragment>\n  );\n};\n\nexport default RoleFuncions;\n","/** @format */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  List,\n  Grid,\n  Box,\n  Typography,\n  ListItem,\n  ListItemText,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\n\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\n\nimport { CONFIG } from \"../../api/MatterApi\";\nimport RoleFuncions from \"./RoleFuncions\";\n\nconst UserRole = () => {\n  const [roles, setRoles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n  });\n\n  const { name } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/role/`, CONFIG)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setStatus(res.statusText);\n        setRoles(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  const handleDelete = (id) => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL}/api/role/${id}/`, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const body = JSON.stringify({ name });\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/role/`, body, CONFIG)\n      .then((res) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: res.statusText, message: \"Success\" }}\n          />\n        );\n      })\n      .catch((err) => {\n        FetchData();\n        return (\n          <ActionAlerts\n            value={{ status: err.statusText, message: \"Success\" }}\n          />\n        );\n      });\n  };\n  return (\n    <Fragment>\n      <Grid container spacing={2}>\n        <Grid item lg={12}></Grid>\n        <Grid item lg={2}>\n          <Button\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            fullWidth\n            sx={{\n              borderRadius: \"0.5rem\",\n            }}\n          >\n            + New Role\n          </Button>\n          <Dialog\n            component=\"form\"\n            Validate\n            onSubmit={(e) => handleSubmit(e)}\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Add New Role\"}</DialogTitle>\n            <DialogContent>\n              <TextField\n                required\n                fullWidth\n                size=\"small\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                name=\"name\"\n                label=\"Role Name\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Close</Button>\n              <Button type=\"submit\" autoFocus>\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n          {!loading ? (\n            roles.map((data) => (\n              <Box mt={1}>\n                <List>\n                  <ListItem disablePadding>\n                    <ListItemText>{data.name}</ListItemText>\n                    <Button\n                      variant=\"contained\"\n                      value={data.id}\n                      size=\"small\"\n                      onClick={() => handleDelete(data.id)}\n                      sx={{\n                        borderRadius: \"0.5rem\",\n                        float: \"right\",\n                      }}\n                    >\n                      <ClearIcon />\n                    </Button>\n                  </ListItem>\n                </List>\n              </Box>\n            ))\n          ) : (\n            <Typography>Loading ...</Typography>\n          )}\n        </Grid>\n        <Grid item lg={10}>\n          <RoleFuncions data={roles} />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default UserRole;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport CreateUser from \"./CreateUser\";\nimport ManageUser from \"./ManageUser\";\nimport ManageUserGroup from \"./ManageUserGroup\";\nimport UserRole from \"./UserRole\";\n\nconst Index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Manage Users\">\n          <ManageUser />\n        </div>\n\n        <div label=\"User Group\">\n          <ManageUserGroup />\n        </div>\n        <div label=\"User Role\">\n          <UserRole />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default Index;\n","/** @format */\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Table,\n  Grid,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../api/MatterApi\";\nimport { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst TimeList = () => {\n  const [timeData, setTimeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const FetchData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n      .then((res) => {\n        setLoading(false);\n        setStatus(res.statusText);\n        setTimeData(res.data);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setStatus(err.statusText);\n      });\n  };\n  useEffect(() => {\n    FetchData();\n  }, []);\n  return (\n    <Fragment>\n      <Box>\n        <LinkButton to=\"/ledgers\" sx={{ float: \"right\" }}>\n          Ledger Dashboard\n        </LinkButton>\n        <Box p={3}>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Ledger Dashbaord\n          </LinkButton>\n          <LinkButton to=\"/time\" sx={{ float: \"right\" }}>\n            Add Time\n          </LinkButton>\n          <LinkButton to=\"/ledger-list\" sx={{ float: \"right\" }}>\n            Ledger List\n          </LinkButton>\n          <LinkButton to=\"/ledger-documents\" sx={{ float: \"right\" }}>\n            Documents\n          </LinkButton>\n        </Box>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Add</TableCell>\n\n                <TableCell>Matter #</TableCell>\n                <TableCell>Matter Name</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Billable Time</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell>Category</TableCell>\n                <TableCell>Activity</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading\n              ? null\n              : timeData?.map((data) => {\n                  return (\n                    <TableBody id={data.id}>\n                      <TableCell>\n                        <Checkbox />\n                      </TableCell>\n                      <TableCell>{data.matter_name}</TableCell>\n\n                      <TableCell>{data.conatact}</TableCell>\n                      <TableCell>{data.date}</TableCell>\n                      <TableCell>{data.time}</TableCell>\n                      <TableCell>{data.rate}</TableCell>\n                      <TableCell>{data.category}</TableCell>\n                      <TableCell>{data.sub_category}</TableCell>\n                    </TableBody>\n                  );\n                })} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TimeList;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Box, Grid, Switch, FormControlLabel } from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Search = () => {\n  const [longestTenure, setLongestTenure] = useState(\"\");\n  const [averageTenure, setAverageTenure] = useState(\"\");\n  const [currentTenure, setCurrentTenure] = useState(\"\");\n  const [gradYear, setGradYear] = useState(\"\");\n  const [barDate, setBarDate] = useState(\"\");\n  const [searchData, setSearchData] = useState({\n    state: \"\",\n    city: \"\",\n    practice_area: \"\",\n    law_school: \"\",\n\n    undergrad_study: \"\",\n    lamguages: \"\",\n    admitted_state: \"\",\n    relocate: false,\n  });\n\n  const {\n    state,\n    city,\n    practice_area,\n    law_school,\n\n    undergrad_study,\n    lamguages,\n    admitted_state,\n    relocate,\n  } = searchData;\n\n  const onChange = (e) =>\n    setSearchData({ ...searchData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"number\"\n              min=\"0\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Longest tenure (months / years)\"\n              id=\"longest_tenure\"\n              name=\"longest_tenure\"\n              value={longestTenure}\n              type=\"text\"\n              onValueChange={(e) => setLongestTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Average tenure (months / years)\"\n              value={averageTenure}\n              id=\"average_tenure\"\n              name=\"average_tenure\"\n              type=\"text\"\n              onValueChange={(e) => setAverageTenure(e.value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              placeholder=\"MM/YY\"\n              mask={[\"M\", \"M\", \"Y\", \"Y\"]}\n              format=\"##/##\"\n              customInput={TextField}\n              label=\"Time at Current Company (months / years)\"\n              id=\"current_tenure\"\n              name=\"current_tenure\"\n              value={currentTenure}\n              type=\"text\"\n              onValueChange={(e) => setCurrentTenure(e.value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"admitted_state\"\n              label=\"admitted_state\"\n              type=\"text\"\n              value={admitted_state}\n              onChange={(e) => onChange(e)}\n              id=\"admitted_state\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={gradYear}\n              onValueChange={(e) => setGradYear(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"undergrad_study\"\n              label=\"undergrad_study\"\n              step=\"0.01\"\n              type=\"text\"\n              value={undergrad_study}\n              onChange={(e) => onChange(e)}\n              id=\"undergrad_study\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"practice_area\"\n              label=\"practice_area\"\n              type=\"text\"\n              value={practice_area}\n              onChange={(e) => onChange(e)}\n              id=\"practice_area\"\n              disabled\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance Date\"\n              id=\"bar_admit_date\"\n              name=\"bar_admit_date\"\n              value={barDate}\n              onValueChange={(e) => setBarDate(e.value)}\n            />\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"lamguages\"\n              label=\"lamguages\"\n              type=\"text\"\n              value={lamguages}\n              onChange={(e) => onChange(e)}\n              id=\"lamguages\"\n            />\n            {/* <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{ float: \"right\" }}\n              endIcon={<SaveIcon />}\n            >\n              Apply\n            </Button> */}\n            <Box m={3}>\n              <LinkButton to=\"/job-result\" sx={{ float: \"right\" }}>\n                Apply\n              </LinkButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Search;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  Typography,\n  Checkbox,\n  Box,\n} from \"@mui/material\";\n// import axios from \"axios\";\n// import { CONFIG } from \"../../api/MatterApi\";\n// import { ActionAlerts } from \"../../utils/ActionAlerts\";\nimport { LinkButton } from \"../../styles/styles\";\n\nconst Result = () => {\n  const [activityData, setActivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(\"\");\n  // const [status, setStatus] = useState(\"\");\n  //   const FetchData = () => {\n  //     axios\n  //       .get(`${process.env.REACT_APP_API_URL}/api/add-time/`, CONFIG)\n  //       .then((res) => {\n  //         setLoading(false);\n  //         setStatus(res.statusText);\n  //         setActivityData(res.data);\n  //       })\n  //       .catch((err) => {\n  //         setLoading(false);\n  //         setStatus(err.statusText);\n  //       });\n  //   };\n  //   useEffect(() => {\n  //     FetchData();\n  //   }, []);\n  return (\n    <Fragment>\n      <Box>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow bgColor=\"#796ef0\">\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Rate</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Name</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">City</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">State</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Active</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Grage Year</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practice Area</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Relocation</Typography>\n                </TableCell>\n                <TableCell>\n                  {\" \"}\n                  <Typography color=\"white\">Practicing</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {loading ? (\n              <TableBody>\n                <TableRow>\n                  <TableCell>74%</TableCell>\n                  <TableCell>Smith, John</TableCell>\n                  <TableCell>San Diego</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2000</TableCell>\n                  <TableCell>Criminal</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>22y - 03M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>72%</TableCell>\n                  <TableCell>Cassidy, Butch</TableCell>\n                  <TableCell>Los Angeles</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>2021</TableCell>\n                  <TableCell>Transctional</TableCell>\n                  <TableCell>No</TableCell>\n                  <TableCell>0y - 02M</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>50%</TableCell>\n                  <TableCell>Short, Mart</TableCell>\n                  <TableCell>Sacramento</TableCell>\n                  <TableCell>CA</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>2013</TableCell>\n                  <TableCell>Civil</TableCell>\n                  <TableCell>Yes</TableCell>\n                  <TableCell>06y - 11M</TableCell>\n                </TableRow>\n              </TableBody>\n            ) : (\n              activityData?.map((data) => {\n                return (\n                  <TableBody id={data.id}>\n                    <TableCell>\n                      <Checkbox />\n                    </TableCell>\n                    <TableCell>{data.date}</TableCell>\n                    <TableCell>x</TableCell>\n                    <TableCell>{data.category}</TableCell>\n                    <TableCell>{data.sub_category}</TableCell>\n                    <TableCell>{data.note}</TableCell>\n                    <TableCell>\n                      {data.billable ? \"email\" : \"workflow\"}\n                    </TableCell>\n                    <TableCell>{data.bill_by}</TableCell>\n                    <TableCell>{data.billable ? \"In\" : \"Out\"}</TableCell>\n                  </TableBody>\n                );\n              })\n            )} */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Result;\n","/** @format */\n\nimport React, { Fragment, useState } from \"react\";\n\nimport {\n  TextField,\n  Box,\n  Grid,\n  Switch,\n  Button,\n  Typography,\n  FormControlLabel,\n  FormGroup,\n  Checkbox,\n} from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\n\nimport { LocalizationProvider, TimePicker, DatePicker } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\nconst Saved = () => {\n  const [pickTime, setPickTime] = useState(new Date(\"2021-12-01T21:00:00\"));\n  const [pickDate, setPickDate] = useState(new Date(\"2021-12-01T21:11:54\"));\n  const [jobData, setJobData] = useState({\n    name: \"\",\n    state: \"\",\n    city: \"\",\n    email: \"\",\n    mobile: \"\",\n    home: \"\",\n    law_school: \"\",\n    grad_year: \"\",\n    bar_adm_year: \"\",\n    practice_area: \"\",\n    mail_add: \"\",\n    relocate: false,\n    date: \"\",\n    time: \"\",\n    link: \"\",\n    notes: \"\",\n    file: \"\",\n  });\n\n  const {\n    name,\n    state,\n    city,\n    email,\n    mobile,\n    home,\n    law_school,\n    grad_year,\n    bar_adm_year,\n    practice_area,\n    mail_add,\n    relocate,\n    date,\n    time,\n    link,\n    notes,\n    file,\n  } = jobData;\n\n  const onChange = (e) =>\n    setJobData({ ...jobData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <Box\n        component=\"form\"\n        Validate\n        sx={{\n          \"& .MuiTextField-root\": { m: 1 },\n        }}\n        onSubmit={(e) => onSubmit(e)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <FormGroup aria-label=\"position\" row>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Save\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Contacted\"\n                labelPlacement=\"start\"\n              />\n              <Typography component=\"label\" m={1}>\n                Interested :\n              </Typography>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Yes\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"No\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Interviewed\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Accept\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Reject\"\n                labelPlacement=\"start\"\n              />\n              <Box ml={3}>\n                <Typography component=\"h4\" color=\"success\" variant=\"h5\">\n                  Overall Score: 74%\n                </Typography>\n              </Box>\n            </FormGroup>\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"name\"\n              label=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(e) => onChange(e)}\n              id=\"name\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"city\"\n              label=\"city\"\n              type=\"text\"\n              value={city}\n              onChange={(e) => onChange(e)}\n              id=\"city\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"state\"\n              label=\"state\"\n              type=\"text\"\n              value={state}\n              onChange={(e) => onChange(e)}\n              id=\"state\"\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email\"\n              label=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n              id=\"email\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Mobile #\"\n              id=\"mobile\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"mobile\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={mobile}\n              onValueChange={(value) => onChange(value)}\n            />\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Home #\"\n              id=\"home\"\n              thousandsGroupStyle=\"thousand\"\n              format=\"+1 (###) ###-####\"\n              mask=\"_\"\n              customInput={TextField}\n              name=\"home\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={home}\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"law_school\"\n              label=\"law_school\"\n              type=\"text\"\n              value={law_school}\n              onChange={(e) => onChange(e)}\n              id=\"law_school\"\n            />\n\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              label=\"Grad year\"\n              id=\"grad_year\"\n              format=\"####\"\n              placeholder=\"YYYY\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\"]}\n              customInput={TextField}\n              name=\"grad_year\"\n              type=\"text\"\n              thousandSeparator={true}\n              value={grad_year}\n              onValueChange={(value) => onChange(value)}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <NumberFormat\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              format=\"####/##/##\"\n              placeholder=\"YYYY/MM/DD\"\n              mask={[\"Y\", \"Y\", \"Y\", \"Y\", \"M\", \"M\", \"D\", \"D\"]}\n              customInput={TextField}\n              label=\"Bar Admittance\"\n              id=\"bar_adm_year\"\n              name=\"bar_adm_year\"\n              value={bar_adm_year}\n              type=\"text\"\n              onValueChange={(value) => onChange(value)}\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"mail_add\"\n              label=\"mail_add\"\n              type=\"text\"\n              value={mail_add}\n              onChange={(e) => onChange(e)}\n              id=\"mail_add\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"relocate\"\n                  value={relocate}\n                  onChange={(e) => onChange(e)}\n                />\n              }\n              label=\"Relocate\"\n              labelPlacement=\"start\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xs={4}>\n                <Box m={1}>\n                  <Typography component=\"lable\"> Writing Sample </Typography>\n\n                  <Button variant=\"contained\" disabled>\n                    + Attach File\n                  </Button>\n                </Box>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <TimePicker\n                    label=\"Pick Time\"\n                    name=\"picktime\"\n                    id=\"picktime\"\n                    value={pickTime}\n                    onChange={(e) => {\n                      setPickTime(e);\n                    }}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    inputFormat=\"yyyy-MM-dd\"\n                    mask=\"____-__-__\"\n                    label=\"Pick Date\"\n                    value={pickDate}\n                    name=\"pickdate\"\n                    id=\"pickdate\"\n                    onChange={(e) => setPickDate(e)}\n                    renderInput={(params) => (\n                      <TextField size=\"small\" fullWidth {...params} />\n                    )}\n                  />\n                </LocalizationProvider>\n\n                <TextField\n                  size=\"small\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"link\"\n                  type=\"link\"\n                  defaultValue=\"2021-12-01\"\n                  value={link}\n                  onChange={(e) => onChange(e)}\n                  id=\"link\"\n                />\n              </Grid>\n              <Grid item xs={8}>\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={8}\n                  size=\"small\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"notes\"\n                  type=\"text\"\n                  value=\"Notes ...\"\n                  id=\"notes\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Saved;\n","/** @format */\n\nimport React, { Fragment } from \"react\";\nimport Tabs from \"../Tabs/Tabs\";\nimport Search from \"./Search\";\nimport Result from \"./Result\";\nimport Saved from \"./Saved\";\nconst index = () => {\n  return (\n    <Fragment>\n      <Tabs>\n        <div label=\"Search\">\n          <Search />\n        </div>\n        <div label=\"Result\">\n          <Result />\n        </div>\n        <div label=\"Saved\">\n          <Saved />\n        </div>\n      </Tabs>\n    </Fragment>\n  );\n};\n\nexport default index;\n","/** @format */\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nimport { Provider } from \"react-redux\";\n\nimport store, { persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport Layout from \"./hocs/Layout\";\n\nimport PrivateRoutes from \"./utils/PrivateRoute\";\n\nimport { UserProvider } from \"./context/User\";\n\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"./hocs/Theme\";\n\nimport Home from \"./containers/Home\";\n\n// Authentication links\nimport Login from \"./containers/Auth/Login\";\nimport Signup from \"./containers/Auth/Signup\";\n\nimport Profile from \"./components/Profile/Profile\";\nimport Company from \"./components/Profile/Company\";\n\nimport Matter from \"./components/Matter\";\n\nimport Matters from \"./containers/Matters/Matters\";\nimport MatterDetail from \"./components/Matter/MatterDetail\";\nimport NewMatter from \"./components/Matter/NewMatter\";\n\nimport Invoice from \"./components/Invoice\";\n\nimport CreateInvoice from \"./components/Invoice/CreateInvoice\";\n\nimport Payment from \"./components/Invoice/Payment\";\nimport ManageCategory from \"./components/Category/ManageCategory\";\n\nimport User from \"./components/User\";\n\nimport Time from \"./components/Ledger/Time\";\nimport TimeList from \"./components/Ledger/TimeList\";\n\nimport Ledger from \"./components/Ledger\";\n\nimport LedgerTImeList from \"./components/Ledger/LedgerTImeList\";\nimport LedgerActivity from \"./components/Ledger/LedgerActivity\";\n\nimport Tasks from \"./components/Tasks\";\nimport CreateTask from \"./components/Tasks/CreateTask\";\nimport ViewTasks from \"./components/Tasks/ViewTasks\";\nimport LedgerDoc from \"./components/Ledger/LedgerDoc\";\n\nimport Employee from \"./components/Employee\";\nimport Templates from \"./components/Template/Templates\";\n\nimport Contact from \"./components/Contact/Contact\";\nimport UserRole from \"./components/User/UserRole\";\nimport ManageUserGroup from \"./components/User/ManageUserGroup\";\n\nconst App = () => {\n  const alertOptions = {\n    timeout: 3000,\n    position: \"top center\",\n  };\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <UserProvider>\n          <ThemeProvider theme={theme}>\n            <AlertProvider template={AlertTemplate} {...alertOptions}>\n              <Router>\n                <Layout>\n                  <Switch>\n                    {/* loging regierter routes */}\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/signup\" component={Signup} />\n\n                    {/* private route after login  */}\n\n                    <PrivateRoutes exact path=\"/\" component={Home} />\n                    <PrivateRoutes path=\"/profile\" component={Profile} />\n                    <PrivateRoutes path=\"/company-detail\" component={Company} />\n\n                    <PrivateRoutes\n                      path=\"/matter-dashboard\"\n                      component={Matter}\n                    />\n                    <PrivateRoutes path=\"/matters\" component={Matters} />\n                    <PrivateRoutes\n                      path=\"/matter-detail\"\n                      component={MatterDetail}\n                    />\n                    <PrivateRoutes\n                      path=\"/create-matter\"\n                      component={NewMatter}\n                    />\n\n                    <PrivateRoutes path=\"/invoices\" component={Invoice} />\n                    <PrivateRoutes\n                      path=\"/create-invoice\"\n                      component={CreateInvoice}\n                    />\n                    <PrivateRoutes path=\"/recive-invoice\" component={Payment} />\n\n                    {/* <PrivateRoutes path=\"/create-user\" component={CreateUser} /> */}\n                    <PrivateRoutes path=\"/users\" component={User} />\n                    <PrivateRoutes path=\"/user-roles\" component={UserRole} />\n                    <PrivateRoutes\n                      path=\"/user-groups\"\n                      component={ManageUserGroup}\n                    />\n\n                    <PrivateRoutes\n                      path=\"/manage-categories\"\n                      component={ManageCategory}\n                    />\n                    <PrivateRoutes\n                      path=\"/ledger-documents\"\n                      component={LedgerDoc}\n                    />\n                    <PrivateRoutes path=\"/time\" component={Time} />\n                    <PrivateRoutes path=\"/time-list\" component={TimeList} />\n                    <PrivateRoutes path=\"/ledgers\" component={Ledger} />\n                    <PrivateRoutes\n                      path=\"/ledger-list\"\n                      component={LedgerTImeList}\n                    />\n                    <PrivateRoutes\n                      path=\"/activity-list\"\n                      component={LedgerActivity}\n                    />\n\n                    <PrivateRoutes path=\"/tasks\" component={Tasks} />\n                    <PrivateRoutes path=\"/create-task\" component={CreateTask} />\n                    <PrivateRoutes path=\"/view-tasks\" component={ViewTasks} />\n\n                    <PrivateRoutes\n                      path=\"/employee-search\"\n                      component={Employee}\n                    />\n\n                    <PrivateRoutes path=\"/templates\" component={Templates} />\n                    <PrivateRoutes path=\"/contact\" component={Contact} />\n                  </Switch>\n                </Layout>\n              </Router>\n            </AlertProvider>\n          </ThemeProvider>\n        </UserProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo_white copy.aa470428.png\";"],"sourceRoot":""}